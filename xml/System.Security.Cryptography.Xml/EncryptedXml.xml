<Type Name="EncryptedXml" FullName="System.Security.Cryptography.Xml.EncryptedXml">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ec42eb13e8203ea69760b7ea2cf55e209112015" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69084325" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedXml" />
  <TypeSignature Language="F#" Value="type EncryptedXml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4fae7-101">XML 暗号化を実装するためのプロセス モデルを表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-101">Represents the process model for implementing XML encryption.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-102"><xref:System.Security.Cryptography.Xml.EncryptedXml>クラスは、.NET Framework で XML 暗号化に使用されるメインクラスです。</span><span class="sxs-lookup"><span data-stu-id="4fae7-102">The <xref:System.Security.Cryptography.Xml.EncryptedXml> class is the main class used for XML encryption in the .NET Framework.</span></span> <span data-ttu-id="4fae7-103">XML 暗号化は、XML ドキュメントまたは任意のデータの全体または一部を暗号化するための、標準に準拠した相互運用可能な方法です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-103">XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data.</span></span> <span data-ttu-id="4fae7-104">.NET Framework XML 暗号化クラスは、W3C (World Wide Web コンソーシアム) [Xml 暗号化構文と処理バージョン 1.1](https://www.w3.org/TR/xmlenc-core/)仕様を実装しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-104">The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) [XML Encryption Syntax and Processing Version 1.1](https://www.w3.org/TR/xmlenc-core/) specification.</span></span>  
  
 <span data-ttu-id="4fae7-105">標準的な<xref:System.Security.Cryptography.Xml.EncryptedXml>方法で、アプリケーションまたは組織間で暗号化された XML データを共有する必要がある場合は常に、クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-105">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml> class whenever you need to share encrypted XML data between applications or organizations in a standard way.</span></span> <span data-ttu-id="4fae7-106">このクラスを使用して暗号化されたデータは、W3C 仕様の XML 暗号化用の任意の実装で復号化できます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-106">Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.</span></span>  
  
 <span data-ttu-id="4fae7-107">Xml 暗号化では、プレーンテキストの xml 要素または`<EncryptedData>`ドキュメントが要素に置き換えられます。この要素には、プレーンテキスト xml または任意のデータの暗号化 (または暗号テキスト) 表現が含まれます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-107">XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data.</span></span> <span data-ttu-id="4fae7-108">要素`<EncryptedData>`には、暗号テキストの暗号化を解除するキーを検索する場所や、プレーンテキストの暗号化に使用された暗号アルゴリズムに関する情報をオプションで含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-108">The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.</span></span>  
  
 <span data-ttu-id="4fae7-109">要素は、要素の`<EncryptedData>`値`<EncryptedData>`を復号化するキーを暗号化できる点を除いて、スタイルおよび使用法の要素に似ています。 `<EncryptedKey>`</span><span class="sxs-lookup"><span data-stu-id="4fae7-109">The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element.</span></span> <span data-ttu-id="4fae7-110">`<EncryptedKey>` 要素`<EncryptedData>`と要素には、暗号化されていないキーは含まれないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4fae7-110">Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.</span></span>  
  
 <span data-ttu-id="4fae7-111">キー情報を交換するには、次のいずれかの方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-111">Use one of the following methods to exchange key information:</span></span>  
  
-   <span data-ttu-id="4fae7-112">キー情報を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="4fae7-112">Do not include any key information.</span></span> <span data-ttu-id="4fae7-113">このオプションを選択した場合は、暗号化されたデータを交換する前に、両方のパーティがアルゴリズムとキーに同意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-113">If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.</span></span>  
  
-   <span data-ttu-id="4fae7-114">`<RetrievalMethod>`要素の Uniform Resource Identifier (URI) 属性にキーの場所を含めます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-114">Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element.</span></span> <span data-ttu-id="4fae7-115">どちらの当事者も、前もってキーの場所に同意する必要があり、この場所は秘密にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-115">Both parties must agree on the key location ahead of time and this location must be kept secret.</span></span>  
  
-   <span data-ttu-id="4fae7-116">`<KeyName>`要素内のキーにマップされる文字列名を含めます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-116">Include a string name that maps to a key in the `<KeyName>` element.</span></span> <span data-ttu-id="4fae7-117">暗号化されたデータを交換する前に、両方のパーティがキー名のマッピングに同意する必要があります。また、このマッピングは、秘密にしておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-117">Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.</span></span>  
  
-   <span data-ttu-id="4fae7-118">暗号化されたキーを`<EncryptedKey>`要素に含めます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-118">Include an encrypted key in the `<EncryptedKey>` element.</span></span> <span data-ttu-id="4fae7-119">暗号化されたデータを交換する前に、両方のパーティが暗号化キーを復号化するキーに同意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-119">Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data.</span></span> <span data-ttu-id="4fae7-120">必要に応じて、 `<EncryptedKey>`要素内のキーの暗号化を解除するキーの名前または場所を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-120">You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-121"><xref:System.Security.Cryptography.TripleDES>アルゴリズムを使用して XML ドキュメントを暗号化する単純なユーティリティクラスを作成する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-121">The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-122">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-122">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-123">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-123">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-124">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-124">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-125">この例では、暗号化された XML ドキュメントにキー名を埋め込みます。暗号化解除方法では、復号化キーが適切に検出されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-125">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-126">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-126">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-127">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-127">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-128">次のコード例は、x.509 証明書を使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-128">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="4fae7-129">この例では、対称セッションキーを作成してドキュメントを暗号化した後、x.509 証明書を使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-129">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fae7-130"><see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4fae7-131">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-131">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-132">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-132">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-133">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-133">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-134">この例では、暗号化された XML ドキュメントにキー名を埋め込みます。暗号化解除方法では、復号化キーが適切に検出されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-134">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-135">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-135">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-136">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-136">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-137">次のコード例は、x.509 証明書を使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-137">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="4fae7-138">この例では、対称セッションキーを作成してドキュメントを暗号化した後、x.509 証明書を使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-138">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fae7-139"><see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-139">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-140">これは、.NET Framework の XML 暗号化のメインクラスのパラメーターなしのコンストラクターです。</span><span class="sxs-lookup"><span data-stu-id="4fae7-140">This is the parameterless constructor for the main class for XML encryption in the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-141">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-141">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-142">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-142">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-143">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-143">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-144">この例では、暗号化された XML ドキュメントにキー名を埋め込みます。暗号化解除方法では、復号化キーが適切に検出されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-144">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-145">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-145">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-146">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-146">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-147">次のコード例は、x.509 証明書を使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-147">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="4fae7-148">この例では、対称セッションキーを作成してドキュメントを暗号化した後、x.509 証明書を使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-148">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="4fae7-149"><see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトを初期化するために使用する <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-149">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span></span></param>
        <summary><span data-ttu-id="4fae7-150">指定した XML ドキュメントを使用して、<see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-151">暗号化する XML ドキュメントを指定<xref:System.Security.Cryptography.Xml.EncryptedXml>する場合は、このコンストラクターを使用してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-151">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.</span></span> <span data-ttu-id="4fae7-152">パラメーター `document`は、後で暗号化された xml を形成する xml 要素で構成されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-152">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-153">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-153">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-154">この例では、暗号化された XML ドキュメントにキー名を埋め込みます。暗号化解除方法では、復号化キーが適切に検出されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-154">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-155">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-155">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-156">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-156">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument * System.Security.Policy.Evidence -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml (document, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="4fae7-157"><see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトを初期化するために使用する <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-157">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span></span></param>
        <param name="evidence"><span data-ttu-id="4fae7-158"><see cref="T:System.Xml.XmlDocument" /> オブジェクトに関連付けられている <see cref="T:System.Security.Policy.Evidence" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-158">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</span></span></param>
        <summary><span data-ttu-id="4fae7-159">指定した XML ドキュメントおよび証拠を使用して、<see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-160">暗号化する XML ドキュメントを指定<xref:System.Security.Cryptography.Xml.EncryptedXml>し、セキュリティ証拠を提供する場合は、このコンストラクターを使用してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-160">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence.</span></span> <span data-ttu-id="4fae7-161">パラメーター `document`は、後で暗号化された xml を形成する xml 要素で構成されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-161">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyNameMapping">
      <MemberSignature Language="C#" Value="public void AddKeyNameMapping (string keyName, object keyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyNameMapping(string keyName, object keyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyNameMapping (keyName As String, keyObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddKeyNameMapping(System::String ^ keyName, System::Object ^ keyObject);" />
      <MemberSignature Language="F#" Value="member this.AddKeyNameMapping : string * obj -&gt; unit" Usage="encryptedXml.AddKeyNameMapping (keyName, keyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="4fae7-162"><paramref name="keyObject" /> にマップする名前。</span><span class="sxs-lookup"><span data-stu-id="4fae7-162">The name to map to <paramref name="keyObject" />.</span></span></param>
        <param name="keyObject"><span data-ttu-id="4fae7-163"><paramref name="keyName" /> にマップする対称キー。</span><span class="sxs-lookup"><span data-stu-id="4fae7-163">The symmetric key to map to <paramref name="keyName" />.</span></span></param>
        <summary><span data-ttu-id="4fae7-164">キー名と対称キーまたは非対称キーとの間のマップを定義します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-164">Defines a mapping between a key name and a symmetric key or an asymmetric key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-165"><xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>メソッドを使用すると、対称キーまたは非対称キーを文字列名にマップできます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-165">The <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method allows you to map a symmetric key or an asymmetric key to a string name.</span></span> <span data-ttu-id="4fae7-166">このメソッドは、有効なキー `keyName`名`keyObject`マッピングのテーブルにパラメーターとパラメーターの値を追加します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-166">This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.</span></span>  
  
 <span data-ttu-id="4fae7-167">キー名<xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A>のマッピングテーブルをクリアするには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-167">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-168">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-168">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-169">この例では、暗号化された XML ドキュメントにキー名を埋め込みます。暗号化解除方法では、復号化キーが適切に検出されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-169">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-170"><paramref name="keyName" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-170">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-171">- または -</span><span class="sxs-lookup"><span data-stu-id="4fae7-171">-or-</span></span> 
<span data-ttu-id="4fae7-172"><paramref name="keyObject" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-172">The value of the <paramref name="keyObject" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-173"><paramref name="keyObject" /> パラメーターの値が RSA アルゴリズムまたは共通キーではありません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-173">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearKeyNameMappings">
      <MemberSignature Language="C#" Value="public void ClearKeyNameMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearKeyNameMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearKeyNameMappings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearKeyNameMappings();" />
      <MemberSignature Language="F#" Value="member this.ClearKeyNameMappings : unit -&gt; unit" Usage="encryptedXml.ClearKeyNameMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fae7-174">すべてのキー名マップをリセットします。</span><span class="sxs-lookup"><span data-stu-id="4fae7-174">Resets all key name mapping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-175">このメソッドを使用して、 <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>メソッドを使用して設定したすべてのキー名マッピングをクリアします。</span><span class="sxs-lookup"><span data-stu-id="4fae7-175">Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptData">
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DecryptData : System.Security.Cryptography.Xml.EncryptedData * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.DecryptData (encryptedData, symAlg)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.DecryptData : System.Security.Cryptography.Xml.EncryptedData * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.DecryptData (encryptedData, symAlg)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="4fae7-176">復号化するデータ。</span><span class="sxs-lookup"><span data-stu-id="4fae7-176">The data to decrypt.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="4fae7-177"><paramref name="encryptedData" /> を復号化するために使用する対称キー。</span><span class="sxs-lookup"><span data-stu-id="4fae7-177">The symmetric key used to decrypt <paramref name="encryptedData" />.</span></span></param>
        <param name="symAlg">To be added.</param>
        <summary><span data-ttu-id="4fae7-178">指定した対称アルゴリズムを使用して <see langword="&lt;EncryptedData&gt;" /> 要素を復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-178">Decrypts an <see langword="&lt;EncryptedData&gt;" /> element using the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="4fae7-179">生の復号化されたプレーン テキストを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-179">A byte array that contains the raw decrypted plain text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-180">メソッドを使用して、 <xref:System.Security.Cryptography.Xml.EncryptedData>対称キーを使用して要素を復号化します。 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A></span><span class="sxs-lookup"><span data-stu-id="4fae7-180">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.</span></span>  
  
 <span data-ttu-id="4fae7-181">メソッドは、 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>最上位`<EncryptedData>`のタグのみを復号化することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4fae7-181">Note that the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method only decrypts top-level `<EncryptedData>` tags.</span></span> <span data-ttu-id="4fae7-182">1つ`<EncryptedData>`以上のタグが暗号化されていて<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 、 `<EncryptedData>`上位のタグに含まれている場合は、メソッドを個別に呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-182">In cases where one or more `<EncryptedData>` tags have been encrypted and are contained within higher level `<EncryptedData>` tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.</span></span> <span data-ttu-id="4fae7-183">コード例<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>については、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4fae7-183">See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-184">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-184">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-185">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-185">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-186"><paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-186">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-187">または</span><span class="sxs-lookup"><span data-stu-id="4fae7-187">-or-</span></span> 
<span data-ttu-id="4fae7-188"><paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-188">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DecryptDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub DecryptDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DecryptDocument();" />
      <MemberSignature Language="F#" Value="member this.DecryptDocument : unit -&gt; unit" Usage="encryptedXml.DecryptDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fae7-189"><see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの初期化時に指定された、XML ドキュメントのすべての <see langword="&lt;EncryptedData&gt;" /> 要素を復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-189">Decrypts all <see langword="&lt;EncryptedData&gt;" /> elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-190">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>は、初期化`<EncryptedData>`中に読み込まれた XML ドキュメントのすべての要素を復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-190">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization.</span></span> <span data-ttu-id="4fae7-191">このメソッドを呼び出すと、 `<EncryptedData>`ドキュメント内のすべての要素がプレーンテキストバージョンに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-191">After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.</span></span>  
  
 <span data-ttu-id="4fae7-192">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>は、最上位レベル`<EncryptedData>`の要素のみを復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-192">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only top-level `<EncryptedData>` elements.</span></span> <span data-ttu-id="4fae7-193">スーパー暗号化されたドキュメント (複数回暗号化されたドキュメント) の暗号化を解除する必要がある場合は<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 、すべての要素の`<EncryptedData>`暗号化が解除されるまで、メソッドを繰り返し呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-193">If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method repeatedly until all the `<EncryptedData>` elements have been decrypted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fae7-194">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>は、有効な XML データのみを復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-194">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only valid XML data.</span></span> <span data-ttu-id="4fae7-195">任意のデータの暗号化を解除<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-195">To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.</span></span>  
  
 <span data-ttu-id="4fae7-196">X.509 証明書で XML 暗号化を使用するには、Microsoft Enhanced Cryptographic Provider をインストールし、x.509 証明書で拡張プロバイダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-196">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="4fae7-197">Microsoft enhanced Cryptographic provider がインストールされていないか、x.509 証明書で拡張プロバイダーが使用されてい<xref:System.Security.Cryptography.CryptographicException>ない場合、XML ドキュメントの暗号化を解除すると、"不明なエラー" を含むがスローされます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-197">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-198">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-198">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-199">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-199">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-200">次のコード例は、x.509 証明書を使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-200">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="4fae7-201">この例では、対称セッションキーを作成してドキュメントを暗号化した後、x.509 証明書を使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-201">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-202">次のコード例は、別の暗号化さ`<EncryptedData>` `<EncryptedData>`れたタグを含む高レベルのタグを復号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-202">The following code example demonstrates how to decrypt a high level `<EncryptedData>` tag that contains another encrypted `<EncryptedData>` tag.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/csharp/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-203">ドキュメントを復号化するための暗号化キーが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-203">The cryptographic key used to decrypt the document was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptEncryptedKey">
      <MemberSignature Language="C#" Value="public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptEncryptedKey(class System.Security.Cryptography.Xml.EncryptedKey encryptedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptEncryptedKey(System::Security::Cryptography::Xml::EncryptedKey ^ encryptedKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]&#xA;override this.DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]" Usage="encryptedXml.DecryptEncryptedKey encryptedKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Security.Cryptography.Xml.EncryptedKey" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="4fae7-204">取得するキーを格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-204">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</span></span></param>
        <summary><span data-ttu-id="4fae7-205"><see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 要素によって表されるキーを決定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-205">Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</span></span></summary>
        <returns><span data-ttu-id="4fae7-206">キーを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-206">A byte array that contains the key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-207">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A>は、XML ドキュメントの要素内に`<EncryptedKey>`含まれる暗号化されたキーを復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-207">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span>  
  
 <span data-ttu-id="4fae7-208">この再帰的なメソッドは、 <xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクトによって表されるキーを検索します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-208">This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="4fae7-209">オブジェクトに<xref:System.Security.Cryptography.Xml.EncryptedKey>は、その<xref:System.Security.Cryptography.Xml.KeyInfo>値を<xref:System.Security.Cryptography.Xml.EncryptedKey>指定する別のオブジェクトを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-209">Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-210"><paramref name="encryptedKey" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-210">The value of the <paramref name="encryptedKey" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-211"><paramref name="encryptedKey" /> パラメーターの値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-211">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DecryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fae7-212"><see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-212">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-213">メソッドを使用して、 `<EncryptedKey>`要素を復号化し、その要素の暗号化を解除するために使用するキーを取得します。 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A></span><span class="sxs-lookup"><span data-stu-id="4fae7-213">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method to decrypt an `<EncryptedKey>` element and retrieve the key used to decrypt that element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, symAlg)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, symAlg)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="4fae7-214">暗号化された <see langword="&lt;EncryptedKey&gt;" /> 要素を表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-214">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="4fae7-215"><paramref name="keyData" /> を復号化するために使用する対称キー。</span><span class="sxs-lookup"><span data-stu-id="4fae7-215">The symmetric key used to decrypt <paramref name="keyData" />.</span></span></param>
        <param name="symAlg">To be added.</param>
        <summary><span data-ttu-id="4fae7-216">対称アルゴリズムを使用して <see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-216">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using a symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="4fae7-217">プレーン テキストのキーを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-217">A byte array that contains the plain text key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-218">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>は、XML ドキュメントの要素内に`<EncryptedKey>`含まれる暗号化されたキーを復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-218">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="4fae7-219">このメソッドは、トリプル DES アルゴリズム`symmetricAlgorithm`または AES キーラップアルゴリズム (Rijndael とも呼ばれます) のいずれかを表すパラメーターの値を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-219">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-220"><paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-220">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-221">- または -</span><span class="sxs-lookup"><span data-stu-id="4fae7-221">-or-</span></span> 
<span data-ttu-id="4fae7-222"><paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-222">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-223"><paramref name="symmetricAlgorithm" /> 要素の値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-223">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, rsa, fOAEP)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, rsa, fOAEP)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="4fae7-224">暗号化された <see langword="&lt;EncryptedKey&gt;" /> 要素を表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-224">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span></span></param>
        <param name="rsa"><span data-ttu-id="4fae7-225"><paramref name="keyData" /> を復号化するために使用する非対称キー。</span><span class="sxs-lookup"><span data-stu-id="4fae7-225">The asymmetric key used to decrypt <paramref name="keyData" />.</span></span></param>
        <param name="useOAEP"><span data-ttu-id="4fae7-226">OAEP (Optimal Asymmetric Encryption Padding) を使用するかどうかを指定する値。</span><span class="sxs-lookup"><span data-stu-id="4fae7-226">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span></span></param>
        <param name="fOAEP">To be added.</param>
        <summary><span data-ttu-id="4fae7-227">非対称アルゴリズムを使用して <see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-227">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using an asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="4fae7-228">プレーン テキストのキーを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-228">A byte array that contains the plain text key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-229">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>は、XML ドキュメントの要素内に`<EncryptedKey>`含まれる暗号化されたキーを復号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-229">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="4fae7-230">このメソッドは、rsa pkcs # `rsa` 1 version 1.5 アルゴリズムまたは rsa pkcs # 1 type 2 アルゴリズム (OAEP padding とも呼ばれます) のいずれかを表すパラメーターの値を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-230">This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-231"><paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-231">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-232">または</span><span class="sxs-lookup"><span data-stu-id="4fae7-232">-or-</span></span> 
<span data-ttu-id="4fae7-233"><paramref name="rsa" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-233">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DocumentEvidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence DocumentEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence DocumentEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentEvidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ DocumentEvidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEvidence : System.Security.Policy.Evidence with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-234">構築する <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトの元になる <see cref="T:System.Xml.XmlDocument" /> オブジェクトの証拠を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-234">Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</span></span></summary>
        <value><span data-ttu-id="4fae7-235"><see cref="T:System.Security.Policy.Evidence" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-235">An <see cref="T:System.Security.Policy.Evidence" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-236">オブジェクトの<xref:System.Security.Cryptography.Xml.EncryptedXml>作成に使用される XML ドキュメントにセキュリティの証拠がある場合は、 <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A>プロパティに証拠を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-236">If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property.</span></span> <span data-ttu-id="4fae7-237">このプロパティを設定しない場合、関連付け<xref:System.Security.Cryptography.Xml.CipherReference>られているオブジェクトは、必要なアクセス許可セットが付与されないため、逆参照されません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-237">If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-238">XML 暗号化に使用するエンコーディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-238">Gets or sets the encoding used for XML encryption.</span></span></summary>
        <value><span data-ttu-id="4fae7-239"><see cref="T:System.Text.Encoding" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-239">An <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-240">UTF-8 エンコードは、XML 暗号化の既定のエンコードです。</span><span class="sxs-lookup"><span data-stu-id="4fae7-240">UTF-8 encoding is the default encoding for XML encryption.</span></span> <span data-ttu-id="4fae7-241">このプロパティを使用して、 <xref:System.Text.Encoding>クラスの他の種類のエンコード (utf-16 や ASCII など) を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-241">You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fae7-242">キー マップ テーブル内の指定された証明書またはキーを使用して、要素の外側の XML を暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-242">Encrypts the outer XML of an element using the specified certificate or key in the key mapping table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4fae7-243">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-243">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-244">次のコード例は、x.509 証明書を使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-244">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="4fae7-245">この例では、対称セッションキーを作成してドキュメントを暗号化した後、x.509 証明書を使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-245">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, certificate As X509Certificate2) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="4fae7-246">暗号化する XML 要素。</span><span class="sxs-lookup"><span data-stu-id="4fae7-246">The XML element to encrypt.</span></span></param>
        <param name="certificate"><span data-ttu-id="4fae7-247">暗号化に使用する X.509 証明書。</span><span class="sxs-lookup"><span data-stu-id="4fae7-247">The X.509 certificate to use for encryption.</span></span></param>
        <summary><span data-ttu-id="4fae7-248">指定した X.509 証明書を使用して、要素の外側の XML を暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-248">Encrypts the outer XML of an element using the specified X.509 certificate.</span></span></summary>
        <returns><span data-ttu-id="4fae7-249">暗号化された XML データを表す <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 要素。</span><span class="sxs-lookup"><span data-stu-id="4fae7-249">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-250"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>メソッドは、証明書を使用して要素の外部 XML を暗号化するための便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-250">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method is a convenient way to encrypt the outer XML of an element using a certificate.</span></span> <span data-ttu-id="4fae7-251">このメソッドは、XML 要素を暗号化する256ビット Advanced Encryption Standard (aes) セッションキーを生成し、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクトを使用して aes キーを暗号化して署名します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-251">This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span> <span data-ttu-id="4fae7-252">次<xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>に、メソッドは、結果の XML <xref:System.Security.Cryptography.Xml.EncryptedData>を要素として返します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-252">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.</span></span>  
  
 <span data-ttu-id="4fae7-253">暗号化をより詳細に制御する必要がある場合は、暗号化された情報`<CipherReference>`を要素に配置するか、XML 要素全体またはその内容だけを暗号化する<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>かどうかを指定して、メソッドのオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-253">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="4fae7-254">X.509 証明書で XML 暗号化を使用するには、Microsoft Enhanced Cryptographic Provider をインストールし、x.509 証明書で拡張プロバイダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-254">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="4fae7-255">Microsoft enhanced Cryptographic provider がインストールされていないか、x.509 証明書で拡張プロバイダーが使用されてい<xref:System.Security.Cryptography.CryptographicException>ない場合、XML ドキュメントの暗号化を解除すると、"不明なエラー" を含むがスローされます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-255">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-256">次のコード例は、x.509 証明書を使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-256">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="4fae7-257">この例では、対称セッションキーを作成してドキュメントを暗号化した後、x.509 証明書を使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-257">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-258"><paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-258">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-259">- または -</span><span class="sxs-lookup"><span data-stu-id="4fae7-259">-or-</span></span> 
<span data-ttu-id="4fae7-260"><paramref name="certificate" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-260">The value of the <paramref name="certificate" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4fae7-261"><paramref name="certificate" /> パラメーターの値は RSA キー アルゴリズムを表しません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-261">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, keyName As String) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::String ^ keyName);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * string -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, keyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="4fae7-262">暗号化する XML 要素。</span><span class="sxs-lookup"><span data-stu-id="4fae7-262">The XML element to encrypt.</span></span></param>
        <param name="keyName"><span data-ttu-id="4fae7-263">キー マップ テーブルにあるキー名。</span><span class="sxs-lookup"><span data-stu-id="4fae7-263">A key name that can be found in the key mapping table.</span></span></param>
        <summary><span data-ttu-id="4fae7-264">キー マップ テーブル内の指定されたキーを使用して、要素の外側の XML を暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-264">Encrypts the outer XML of an element using the specified key in the key mapping table.</span></span></summary>
        <returns><span data-ttu-id="4fae7-265">暗号化された XML データを表す <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-265">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-266">このメソッドは、キー名を使用して要素の外部 XML を暗号化するための便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-266">This method is a convenient way to encrypt the outer XML of an element using a key name.</span></span> <span data-ttu-id="4fae7-267">暗号化をより詳細に制御する必要がある場合は、暗号化された情報`<CipherReference>`を要素に配置するか、XML 要素全体またはその内容だけを暗号化する<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>かどうかを指定して、メソッドのオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-267">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="4fae7-268">サポートされているすべてのアルゴリズムの一覧については、 <xref:System.Security.Cryptography.Xml.EncryptedXml>クラスに関連付けられている定数フィールドの一覧を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4fae7-268">For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-269">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-269">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-270"><paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-270">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-271">- または -</span><span class="sxs-lookup"><span data-stu-id="4fae7-271">-or-</span></span> 
<span data-ttu-id="4fae7-272"><paramref name="keyName" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-272">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-273"><paramref name="keyName" /> パラメーターの値が、登録されているキー名のペアに一致しません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-273">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.</span></span>  
  
<span data-ttu-id="4fae7-274">- または -</span><span class="sxs-lookup"><span data-stu-id="4fae7-274">-or-</span></span> 
<span data-ttu-id="4fae7-275"><paramref name="keyName" /> パラメーターで記述されている暗号化キーはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-275">The cryptographic key described by the <paramref name="keyName" /> parameter is not supported.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptData">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fae7-276">対称アルゴリズムを使用して、XML データを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-276">Encrypts XML data using a symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4fae7-277">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-277">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-278">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-278">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-279">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-279">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-280">この例では、暗号化された XML ドキュメントにキー名を埋め込みます。暗号化解除方法では、復号化キーが適切に検出されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-280">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-281">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-281">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-282">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-282">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plaintext, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plaintext, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plainText, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plainText, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plainText, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.EncryptData (plainText, symAlg)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.EncryptData (plainText, symAlg)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="plainText" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="plaintext"><span data-ttu-id="4fae7-283">暗号化するデータ。</span><span class="sxs-lookup"><span data-stu-id="4fae7-283">The data to encrypt.</span></span></param>
        <param name="plainText">To be added.</param>
        <param name="symmetricAlgorithm"><span data-ttu-id="4fae7-284">暗号化に使用する対称アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="4fae7-284">The symmetric algorithm to use for encryption.</span></span></param>
        <param name="symAlg">To be added.</param>
        <summary><span data-ttu-id="4fae7-285">指定したバイト配列内のデータを、指定した対称アルゴリズムを使用して暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-285">Encrypts data in the specified byte array using the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="4fae7-286">暗号化されたデータのバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-286">A byte array of encrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-287">返されたバイト配列は、 `<CipherValue>`要素に配置できます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-287">The returned byte array can be placed into a `<CipherValue>` element.</span></span> <span data-ttu-id="4fae7-288">このメソッドは、 `plaintext`パラメーターで指定されたデータが XML データを格納するバイト配列であることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-288">This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-289">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-289">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-290">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-290">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-291">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-291">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-292">この例では、暗号化された XML ドキュメントにキー名を埋め込みます。暗号化解除方法では、復号化キーが適切に検出されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-292">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="4fae7-293">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-293">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-294">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-294">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-295"><paramref name="plaintext" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-295">The value of the <paramref name="plaintext" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-296">または</span><span class="sxs-lookup"><span data-stu-id="4fae7-296">-or-</span></span> 
<span data-ttu-id="4fae7-297"><paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-297">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-298">データを、指定したパラメーターを使用して暗号化できません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-298">The data could not be encrypted using the specified parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : System.Xml.XmlElement * System.Security.Cryptography.SymmetricAlgorithm * bool -&gt; byte[]" Usage="encryptedXml.EncryptData (inputElement, symAlg, content)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : System.Xml.XmlElement * System.Security.Cryptography.SymmetricAlgorithm * bool -&gt; byte[]" Usage="encryptedXml.EncryptData (inputElement, symAlg, content)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="content" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="4fae7-299">暗号化する要素またはその内容。</span><span class="sxs-lookup"><span data-stu-id="4fae7-299">The element or its contents to encrypt.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="4fae7-300">暗号化に使用する対称アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="4fae7-300">The symmetric algorithm to use for encryption.</span></span></param>
        <param name="symAlg">To be added.</param>
        <param name="content"><span data-ttu-id="4fae7-301">要素の内容のみを暗号化する場合は <see langword="true" />。要素全体を暗号化する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fae7-301"><see langword="true" /> to encrypt only the contents of the element; <see langword="false" /> to encrypt the entire element.</span></span></param>
        <summary><span data-ttu-id="4fae7-302">指定した要素またはその内容を、指定した対称アルゴリズムを使用して暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-302">Encrypts the specified element or its contents using the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="4fae7-303">暗号化されたデータを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-303">A byte array that contains the encrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-304">返されるバイト配列データは、 `<CipherValue>`要素の値です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-304">The returned byte array data is the value of the `<CipherValue>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-305">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-305">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-306">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-306">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-307"><paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-307">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-308">- または -</span><span class="sxs-lookup"><span data-stu-id="4fae7-308">-or-</span></span> 
<span data-ttu-id="4fae7-309"><paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-309">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fae7-310"><see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用するキーを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-310">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-311">メソッドを使用して、受信者が`<EncryptedData>`要素の暗号化を解除するために使用するキーを暗号化します。 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A></span><span class="sxs-lookup"><span data-stu-id="4fae7-311">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="4fae7-312">このメソッドは、暗号化された`<EncryptedKey>`キーを要素内に配置します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-312">This method places the encrypted key within an `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-313">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-313">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-314">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-314">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, symAlg)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, symAlg)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="4fae7-315">暗号化するキー。</span><span class="sxs-lookup"><span data-stu-id="4fae7-315">The key to encrypt.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="4fae7-316"><paramref name="keyData" /> を暗号化するために使用する対称キー。</span><span class="sxs-lookup"><span data-stu-id="4fae7-316">The symmetric key used to encrypt <paramref name="keyData" />.</span></span></param>
        <param name="symAlg">To be added.</param>
        <summary><span data-ttu-id="4fae7-317"><see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用する対称アルゴリズムを使用して、キーを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-317">Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="4fae7-318"><paramref name="keyData" /> パラメーターの暗号化された値を表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-318">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-319">メソッドを使用して、受信者が`<EncryptedData>`要素の暗号化を解除するために使用するキーを暗号化します。 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A></span><span class="sxs-lookup"><span data-stu-id="4fae7-319">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="4fae7-320">このメソッドは、トリプル DES アルゴリズム`symmetricAlgorithm`または AES キーラップアルゴリズム (Rijndael とも呼ばれます) のいずれかを表すパラメーターの値を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-320">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 <span data-ttu-id="4fae7-321">このメソッドでは、暗号化されたキーが`<EncryptedKey>`要素内に自動的に配置されるわけではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4fae7-321">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span> <span data-ttu-id="4fae7-322">ドキュメント内に要素を`<EncryptedKey>`手動で作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-322">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-323"><paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-323">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-324">または</span><span class="sxs-lookup"><span data-stu-id="4fae7-324">-or-</span></span> 
<span data-ttu-id="4fae7-325"><paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-325">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-326"><paramref name="symmetricAlgorithm" /> パラメーターの値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-326">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, rsa, fOAEP)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, rsa, fOAEP)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="4fae7-327">暗号化するキー。</span><span class="sxs-lookup"><span data-stu-id="4fae7-327">The key to encrypt.</span></span></param>
        <param name="rsa"><span data-ttu-id="4fae7-328"><paramref name="keyData" /> を暗号化するために使用する非対称キー。</span><span class="sxs-lookup"><span data-stu-id="4fae7-328">The asymmetric key used to encrypt <paramref name="keyData" />.</span></span></param>
        <param name="useOAEP"><span data-ttu-id="4fae7-329">OAEP (Optimal Asymmetric Encryption Padding) を使用するかどうかを指定する値。</span><span class="sxs-lookup"><span data-stu-id="4fae7-329">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span></span></param>
        <param name="fOAEP">To be added.</param>
        <summary><span data-ttu-id="4fae7-330"><see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用するキーを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-330">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="4fae7-331"><paramref name="keyData" /> パラメーターの暗号化された値を表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-331">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-332">メソッドを使用して、受信者が`<EncryptedData>`要素の暗号化を解除するために使用するキーを暗号化します。 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A></span><span class="sxs-lookup"><span data-stu-id="4fae7-332">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="4fae7-333">このメソッドは、rsa pkcs `rsa` # 1 version 1.5 アルゴリズムまたは rsa pkcs # 1 type 2 アルゴリズム (OAEP とも呼ばれます) のいずれかを表すの値を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-333">This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).</span></span>  
  
 <span data-ttu-id="4fae7-334">このメソッドでは、暗号化されたキーが`<EncryptedKey>`要素内に自動的に配置されるわけではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4fae7-334">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span> <span data-ttu-id="4fae7-335">ドキュメント内に要素を`<EncryptedKey>`手動で作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-335">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-336">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-336">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-337">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-337">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-338"><paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-338">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-339">- または -</span><span class="sxs-lookup"><span data-stu-id="4fae7-339">-or-</span></span> 
<span data-ttu-id="4fae7-340"><paramref name="rsa" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-340">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionIV">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]&#xA;override this.GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]" Usage="encryptedXml.GetDecryptionIV (encryptedData, symAlgUri)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]&#xA;override this.GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]" Usage="encryptedXml.GetDecryptionIV (encryptedData, symAlgUri)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="4fae7-341">取得する初期化ベクター (IV) を格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-341">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</span></span></param>
        <param name="symmetricAlgorithmUri"><span data-ttu-id="4fae7-342"><paramref name="encryptedData" /> 値に関連付けられている暗号アルゴリズムを記述する URI (Uniform Resource Identifier)。</span><span class="sxs-lookup"><span data-stu-id="4fae7-342">The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <paramref name="encryptedData" /> value.</span></span></param>
        <param name="symAlgUri">To be added.</param>
        <summary><span data-ttu-id="4fae7-343"><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトから復号化初期化ベクター (IV: initialization vector) を取得します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-343">Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span></span></summary>
        <returns><span data-ttu-id="4fae7-344">復号化初期化ベクター (IV) を格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-344">A byte array that contains the decryption initialization vector (IV).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-345">オブジェクトが<xref:System.Security.Cryptography.Xml.EncryptedData>指定されている場合、このメソッドは復号化初期化ベクター (IV) を取得します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-345">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV).</span></span> <span data-ttu-id="4fae7-346">既定の動作では、IV が<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>バイト配列の最初のバイトとして取得されます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-346">The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.</span></span>  
  
 <span data-ttu-id="4fae7-347">`symmetricAlgorithmUri`パラメーターでサポートされている Uniform Resource Identifier (URI) 値の一覧については、 <xref:System.Security.Cryptography.Xml.EncryptedXml>クラスに関連付けられている定数フィールドの一覧を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4fae7-347">For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-348"><paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-348">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-349"><paramref name="encryptedData" /> パラメーター値の <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> プロパティが null です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-349">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span></span>  
  
<span data-ttu-id="4fae7-350">または</span><span class="sxs-lookup"><span data-stu-id="4fae7-350">-or-</span></span> 
<span data-ttu-id="4fae7-351"><paramref name="symmetricAlgorithmUrisymAlgUri" /> パラメーターの値が、サポートされているアルゴリズムではありません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-351">The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="encryptedXml.GetDecryptionKey (encryptedData, symAlgUri)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="encryptedXml.GetDecryptionKey (encryptedData, symAlgUri)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="4fae7-352">取得する復号化キーを格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-352">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</span></span></param>
        <param name="symmetricAlgorithmUri"><span data-ttu-id="4fae7-353">取得する復号化キーのサイズ。</span><span class="sxs-lookup"><span data-stu-id="4fae7-353">The size of the decryption key to retrieve.</span></span></param>
        <param name="symAlgUri">To be added.</param>
        <summary><span data-ttu-id="4fae7-354">指定した <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトから復号化キーを取得します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-354">Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span></span></summary>
        <returns><span data-ttu-id="4fae7-355">復号化キーに関連付けられている <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-355">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-356">オブジェクトが<xref:System.Security.Cryptography.Xml.EncryptedData>指定されている場合、このメソッドはプレーンテキストデータを取得するために使用できる復号化キーを検索します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-356">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data.</span></span> <span data-ttu-id="4fae7-357">キー名が指定されている場合、メソッドは、キー名マッピングで定義されているキー名に関連付けられている対称アルゴリズムまたは非対称アルゴリズムを検索します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-357">If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping.</span></span> <span data-ttu-id="4fae7-358">それ以外の場合、取得メソッドまた<xref:System.Security.Cryptography.Xml.EncryptedKey>はオブジェクトが指定されている<xref:System.Security.Cryptography.Xml.EncryptedKey>場合、メソッドは<xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A>オブジェクトを読み込み、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-358">Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-359"><paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-359">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4fae7-360">encryptedData パラメーターの <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> プロパティが null です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-360">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span></span>  
  
<span data-ttu-id="4fae7-361">または</span><span class="sxs-lookup"><span data-stu-id="4fae7-361">-or-</span></span> 
<span data-ttu-id="4fae7-362">暗号化されたキーを、指定したパラメーターを使用して取得できません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-362">The encrypted key cannot be retrieved using the specified parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement&#xA;override this.GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement" Usage="encryptedXml.GetIdElement (document, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="4fae7-363">ID 値を持つ要素を格納している <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-363">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</span></span></param>
        <param name="idValue"><span data-ttu-id="4fae7-364">ID 値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="4fae7-364">A string that represents the ID value.</span></span></param>
        <summary><span data-ttu-id="4fae7-365">内部 URI (Uniform Resource Identifier) 参照を解決する方法を確認します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-365">Determines how to resolve internal Uniform Resource Identifier (URI) references.</span></span></summary>
        <returns><span data-ttu-id="4fae7-366">内部 URI (Uniform Resource Identifier) を解決する方法を示す ID を格納する <see cref="T:System.Xml.XmlElement" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-366">An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-367">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A>は、内部 uri (Uniform resource identifier) を解決する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-367">The <xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> method determines how to resolve internal Uniform Resource Identifiers (URIs).</span></span> <span data-ttu-id="4fae7-368">指定された値を持つ要素、または指定された値を持つ ID 属性を持つ要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-368">It looks for elements with a specified value or for elements with an ID attribute that has a specified value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-369">XML 暗号化に使用する暗号モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-369">Gets or sets the cipher mode used for XML encryption.</span></span></summary>
        <value><span data-ttu-id="4fae7-370"><see cref="T:System.Security.Cryptography.CipherMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="4fae7-370">One of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-371">暗号ブロックチェーン (CBC) モードは、XML 暗号化の既定の暗号モードです。</span><span class="sxs-lookup"><span data-stu-id="4fae7-371">Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption.</span></span> <span data-ttu-id="4fae7-372">このプロパティを使用して、暗号フィードバック (CFB) <xref:System.Security.Cryptography.CipherMode>モードなど、列挙体の他の暗号モードを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-372">You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-373">XML 暗号化に使用するパディング モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-373">Gets or sets the padding mode used for XML encryption.</span></span></summary>
        <value><span data-ttu-id="4fae7-374">暗号化に使用するパディングの種類を指定する <see cref="T:System.Security.Cryptography.PaddingMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="4fae7-374">One of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values that specifies the type of padding used for encryption.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-375">ISO-10126 埋め込みは、XML 暗号化の既定の埋め込みモードです。</span><span class="sxs-lookup"><span data-stu-id="4fae7-375">ISO-10126 padding is the default padding mode for XML encryption.</span></span> <span data-ttu-id="4fae7-376">このプロパティを使用して、ANSI x 9.23 や PKCS <xref:System.Security.Cryptography.PaddingMode> # 5 など、列挙体の他の埋め込みモードを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-376">You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-377">暗号化されたキー情報の受信者を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-377">Gets or sets the recipient of the encrypted key information.</span></span></summary>
        <value><span data-ttu-id="4fae7-378">暗号化されたキー情報の受信者。</span><span class="sxs-lookup"><span data-stu-id="4fae7-378">The recipient of the encrypted key information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-379">キー名によっ<xref:System.Security.Cryptography.Xml.EncryptedXml>て参照されるオブジェクトにアクセスするに<xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A>は、プロパティを調べます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-379">You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.</span></span>  
  
 <span data-ttu-id="4fae7-380">プロパティを使用して、 <xref:System.Security.Cryptography.Xml.EncryptedXml>暗号化解除キーを取得するために現在の受信者が復号化できる要素を識別します。 <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A></span><span class="sxs-lookup"><span data-stu-id="4fae7-380">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceData">
      <MemberSignature Language="C#" Value="public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceData(class System.Xml.XmlElement inputElement, unsigned int8[] decryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceData (inputElement As XmlElement, decryptedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceData(System::Xml::XmlElement ^ inputElement, cli::array &lt;System::Byte&gt; ^ decryptedData);" />
      <MemberSignature Language="F#" Value="member this.ReplaceData : System.Xml.XmlElement * byte[] -&gt; unit" Usage="encryptedXml.ReplaceData (inputElement, decryptedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="decryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="4fae7-381">置換する <see langword="&lt;EncryptedData&gt;" /> 要素。</span><span class="sxs-lookup"><span data-stu-id="4fae7-381">The <see langword="&lt;EncryptedData&gt;" /> element to replace.</span></span></param>
        <param name="decryptedData"><span data-ttu-id="4fae7-382"><paramref name="inputElement" /> を置き換える復号化されたデータ。</span><span class="sxs-lookup"><span data-stu-id="4fae7-382">The decrypted data to replace <paramref name="inputElement" /> with.</span></span></param>
        <summary><span data-ttu-id="4fae7-383"><see langword="&lt;EncryptedData&gt;" /> 要素を、指定した復号化されたバイト シーケンスで置き換えます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-383">Replaces an <see langword="&lt;EncryptedData&gt;" /> element with a specified decrypted sequence of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-384">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A>は、要素`<EncryptedData>`を`decryptedData`パラメーターの値に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-384">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-385">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-385">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-386">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-386">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-387"><paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-387">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-388">または</span><span class="sxs-lookup"><span data-stu-id="4fae7-388">-or-</span></span> 
<span data-ttu-id="4fae7-389"><paramref name="decryptedData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-389">The value of the <paramref name="decryptedData" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceElement">
      <MemberSignature Language="C#" Value="public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplaceElement(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReplaceElement(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, bool content);" />
      <MemberSignature Language="F#" Value="static member ReplaceElement : System.Xml.XmlElement * System.Security.Cryptography.Xml.EncryptedData * bool -&gt; unit" Usage="System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement (inputElement, encryptedData, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" />
        <Parameter Name="content" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="4fae7-390"><see langword="&lt;EncryptedData&gt;" /> 要素と置き換える要素。</span><span class="sxs-lookup"><span data-stu-id="4fae7-390">The element to replace with an <see langword="&lt;EncryptedData&gt;" /> element.</span></span></param>
        <param name="encryptedData"><span data-ttu-id="4fae7-391"><paramref name="inputElement" /> パラメーターで置き換えられる <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-391">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <paramref name="inputElement" /> parameter with.</span></span></param>
        <param name="content"><span data-ttu-id="4fae7-392">要素の内容のみを置き換える場合は <see langword="true" />。要素全体を置き換える場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fae7-392"><see langword="true" /> to replace only the contents of the element; <see langword="false" /> to replace the entire element.</span></span></param>
        <summary><span data-ttu-id="4fae7-393">指定した要素を指定した <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトで置き換えます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-393">Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-394">メソッド<xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A>は、パラメーター `inputElement`を`encryptedData`パラメーターによって指定された値に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-394">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-395">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-395">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-396">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-396">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fae7-397"><paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-397">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4fae7-398">- または -</span><span class="sxs-lookup"><span data-stu-id="4fae7-398">-or-</span></span> 
<span data-ttu-id="4fae7-399"><paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-399">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver { System::Xml::XmlResolver ^ get(); void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-400">外部 XML 参照を解決するためにドキュメント オブジェクト モデル (DOM) によって使用される <see cref="T:System.Xml.XmlResolver" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-400">Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</span></span></summary>
        <value><span data-ttu-id="4fae7-401"><see cref="T:System.Xml.XmlResolver" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fae7-401">An <see cref="T:System.Xml.XmlResolver" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-402">このプロパティには<xref:System.Xml.XmlResolver> 、エンティティ、ドキュメント型定義 (dtd)、スキーマなどの外部 XML リソースを解決するために使用されるオブジェクトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-402">This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDSigSearchDepth">
      <MemberSignature Language="C#" Value="public int XmlDSigSearchDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XmlDSigSearchDepth" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDSigSearchDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int XmlDSigSearchDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDSigSearchDepth : int with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-403">無限再帰とスタック オーバーフローが発生しないように、XML デジタル署名再帰深度を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-403">Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.</span></span> <span data-ttu-id="4fae7-404">無限再帰とスタック オーバーフローは、デジタル署名の XML に URI が含まれ、それが元の XML をポイントしている場合に発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="4fae7-404">This might happen if the digital signature XML contains the URI which then points back to the original XML.</span></span></summary>
        <value><span data-ttu-id="4fae7-405"><see cref="T:System.Int32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-405">Returns <see cref="T:System.Int32" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-406">128 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-406">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span></span> <span data-ttu-id="4fae7-407">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-407">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-408"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#kw-aes128)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-408">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> field is `http://www.w3.org/(2001/04/xmlenc#kw-aes128)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-409">128 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-409">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span></span> <span data-ttu-id="4fae7-410">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-410">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-411"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#aes128-cbc)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-411">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> field is `http://www.w3.org/(2001/04/xmlenc#aes128-cbc)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-412">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-412">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-413">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-413">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-414">192 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-414">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span></span> <span data-ttu-id="4fae7-415">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-415">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-416"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#kw-aes192)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-416">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> field is `http://www.w3.org/(2001/04/xmlenc#kw-aes192)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-417">192 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-417">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span></span> <span data-ttu-id="4fae7-418">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-418">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-419"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#aes192-cbc)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-419">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> field is `http://www.w3.org/(2001/04/xmlenc#aes192-cbc)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-420">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-420">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-421">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-421">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-422">256 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-422">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span></span> <span data-ttu-id="4fae7-423">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-423">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-424"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#kw-aes256)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-424">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> field is `http://www.w3.org/(2001/04/xmlenc#kw-aes256)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-425">256 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-425">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span></span> <span data-ttu-id="4fae7-426">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-426">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-427"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#aes256-cbc)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-427">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> field is `http://www.w3.org/(2001/04/xmlenc#aes256-cbc)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-428">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-428">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-429">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-429">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-430">DES (Digital Encryption Standard) アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-430">Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.</span></span> <span data-ttu-id="4fae7-431">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-431">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-432"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#des-cbc)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-432">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> field is `http://www.w3.org/(2001/04/xmlenc#des-cbc)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-433">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-433">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-434">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-434">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementContentUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementContentUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementContentUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementContentUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementContentUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementContentUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-435">XML 暗号化要素の内容の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-435">Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.</span></span> <span data-ttu-id="4fae7-436">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-436">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-437"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#Content)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-437">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> field is `http://www.w3.org/(2001/04/xmlenc#Content)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-438">XML 暗号化要素の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-438">Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.</span></span> <span data-ttu-id="4fae7-439">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-439">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-440"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#Element)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-440">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field is `http://www.w3.org/(2001/04/xmlenc#Element)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-441">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-441">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-442">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-442">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncEncryptedKeyUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncEncryptedKeyUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncEncryptedKeyUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-443">XML 暗号化 <see langword="&lt;EncryptedKey&gt;" /> 要素の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-443">Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <see langword="&lt;EncryptedKey&gt;" /> element.</span></span> <span data-ttu-id="4fae7-444">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-444">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-445"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#EncryptedKey)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-445">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> field is `http://www.w3.org/(2001/04/xmlenc#EncryptedKey)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncNamespaceUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncNamespaceUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-446">XML 暗号化の構文および処理の名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-446">Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.</span></span> <span data-ttu-id="4fae7-447">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-447">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-448"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-448">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> field is `http://www.w3.org/(2001/04/xmlenc#)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSA15Url">
      <MemberSignature Language="C#" Value="public const string XmlEncRSA15Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSA15Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSA15Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSA15Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSA15Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-449">RSA PKCS (Public Key Cryptography Standard) Version 1.5 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-449">Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.</span></span> <span data-ttu-id="4fae7-450">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-450">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-451"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#rsa-1_5)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-451">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> field is `http://www.w3.org/(2001/04/xmlenc#rsa-1_5)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-452">次のコード例は、非対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-452">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="4fae7-453">この例では、対称セッションキーを作成してドキュメントを暗号化した後、非対称キーを使用して、暗号化されたバージョンのセッションキーを XML ドキュメントに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="4fae7-453">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSAOAEPUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSAOAEPUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSAOAEPUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSAOAEPUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-454">RSA OAEP (Optimal Asymmetric Encryption Padding) 暗号化アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-454">Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.</span></span> <span data-ttu-id="4fae7-455">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-455">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-456"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#rsa-oaep-mgf1p)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-456">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> field is `http://www.w3.org/(2001/04/xmlenc#rsa-oaep-mgf1p)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-457">SHA-256 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-457">Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.</span></span> <span data-ttu-id="4fae7-458">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-458">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-459"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#sha256)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-459">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> field is `http://www.w3.org/(2001/04/xmlenc#sha256)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA512Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-460">SHA-512 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-460">Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.</span></span> <span data-ttu-id="4fae7-461">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-461">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-462"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#sha512)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-462">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> field is `http://www.w3.org/(2001/04/xmlenc#sha512)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESKeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESKeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESKeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-463">Triple DES キー ラップ アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-463">Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.</span></span> <span data-ttu-id="4fae7-464">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-464">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-465"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#kw-tripledes)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-465">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> field is `http://www.w3.org/(2001/04/xmlenc#kw-tripledes)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fae7-466">Triple DES アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span><span class="sxs-lookup"><span data-stu-id="4fae7-466">Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.</span></span> <span data-ttu-id="4fae7-467">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-467">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fae7-468"><xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl>フィールドの値が`http://www.w3.org/(2001/04/xmlenc#tripledes-cbc)`です。</span><span class="sxs-lookup"><span data-stu-id="4fae7-468">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> field is `http://www.w3.org/(2001/04/xmlenc#tripledes-cbc)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fae7-469">次のコード例は、対称キーを使用して XML ドキュメントを暗号化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4fae7-469">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="4fae7-470">この例では、暗号化された XML ドキュメントにキー情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4fae7-470">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
