<Type Name="EncryptedXml" FullName="System.Security.Cryptography.Xml.EncryptedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32e00d51c4658034a1c210b4b0cd1633ecc1557e" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780745" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedXml" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="02b56-101">XML 暗号化を実装するためのプロセス モデルを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="02b56-101">Represents the process model for implementing XML encryption.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-102"><xref:System.Security.Cryptography.Xml.EncryptedXml>クラスは、.NET Framework における XML の暗号化に使用するメイン クラスです。</span><span class="sxs-lookup"><span data-stu-id="02b56-102">The <xref:System.Security.Cryptography.Xml.EncryptedXml> class is the main class used for XML encryption in the .NET Framework.</span></span> <span data-ttu-id="02b56-103">XML 暗号化は、XML ドキュメントまたは任意のデータの一部またはすべてを暗号化する、標準ベースの相互運用可能な方法です。</span><span class="sxs-lookup"><span data-stu-id="02b56-103">XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data.</span></span> <span data-ttu-id="02b56-104">.NET Framework XML 暗号化クラスは、XML の暗号化があるために、World Wide Web Consortium (W3C) 仕様を実装http://www.w3.org/TR/xmlenc-core/です。</span><span class="sxs-lookup"><span data-stu-id="02b56-104">The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.</span></span>  
  
 <span data-ttu-id="02b56-105">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラスの標準的な方法でアプリケーションまたは組織の間で暗号化された XML データを共有する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="02b56-105">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml> class whenever you need to share encrypted XML data between applications or organizations in a standard way.</span></span> <span data-ttu-id="02b56-106">このクラスを使用して暗号化されたデータは、XML の暗号化は、W3C 仕様の実装によって暗号化解除できます。</span><span class="sxs-lookup"><span data-stu-id="02b56-106">Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.</span></span>  
  
 <span data-ttu-id="02b56-107">XML 暗号化では任意のプレーン テキストの XML 要素またはドキュメントで、`<EncryptedData>`要素を含む、暗号化された (または暗号テキスト) プレーン テキストの XML 表現または任意のデータ。</span><span class="sxs-lookup"><span data-stu-id="02b56-107">XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data.</span></span> <span data-ttu-id="02b56-108">`<EncryptedData>`要素では、暗号テキストを復号化キーを検索する場所についての情報を含めることができます必要に応じてされ、プレーン テキストの暗号化に使用されている暗号アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="02b56-108">The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.</span></span>  
  
 <span data-ttu-id="02b56-109">`<EncryptedKey>`要素がに似ていますが、`<EncryptedData>`内の要素のスタイルおよび使用状況、許可することの値を復号化キーを暗号化する点を除いて、`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-109">The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element.</span></span> <span data-ttu-id="02b56-110">なお、`<EncryptedKey>`要素および`<EncryptedData>`要素は暗号化されていないキーを含めることはありません。</span><span class="sxs-lookup"><span data-stu-id="02b56-110">Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.</span></span>  
  
 <span data-ttu-id="02b56-111">キー情報を交換するのにには、次のいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="02b56-111">Use one of the following methods to exchange key information:</span></span>  
  
-   <span data-ttu-id="02b56-112">キー情報を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="02b56-112">Do not include any key information.</span></span> <span data-ttu-id="02b56-113">このオプションを選択する場合は、暗号化されたデータを交換する前にアルゴリズムとキーの双方が合意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02b56-113">If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.</span></span>  
  
-   <span data-ttu-id="02b56-114">キーの場所、(Uniform Resource Identifier) の属性に含める、`<RetrievalMethod>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-114">Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element.</span></span> <span data-ttu-id="02b56-115">前もってキーの場所の双方が合意する必要があり、この場所は、秘密保持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02b56-115">Both parties must agree on the key location ahead of time and this location must be kept secret.</span></span>  
  
-   <span data-ttu-id="02b56-116">文字列名をキーにマップを追加、`<KeyName>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-116">Include a string name that maps to a key in the `<KeyName>` element.</span></span> <span data-ttu-id="02b56-117">暗号化されたデータを交換して、このマッピングは、秘密保持する必要がある前にキー名のマッピングの双方が合意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02b56-117">Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.</span></span>  
  
-   <span data-ttu-id="02b56-118">暗号化されたキーを含める、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-118">Include an encrypted key in the `<EncryptedKey>` element.</span></span> <span data-ttu-id="02b56-119">暗号化されたデータを交換する前に、暗号化されたキーを復号化キーの双方が合意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02b56-119">Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data.</span></span> <span data-ttu-id="02b56-120">名前または内のキーは復号化キーの場所を含めることができます必要に応じて、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-120">You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-121">次のコード例を使用する単純なユーティリティ クラスを作成する方法を示しています、 <xref:System.Security.Cryptography.TripleDES> XML ドキュメントを暗号化するためのアルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="02b56-121">The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-122">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-122">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-123">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-123">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-124">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-124">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-125">この例では、復号化するメソッドを使用して、適切な復号化キーを検索する暗号化された XML ドキュメントのキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="02b56-125">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-126">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-126">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-127">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-127">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-128">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-128">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="02b56-129">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-129">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-130">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02b56-131">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-131">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-132">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-132">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-133">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-133">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-134">この例では、復号化するメソッドを使用して、適切な復号化キーを検索する暗号化された XML ドキュメントのキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="02b56-134">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-135">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-135">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-136">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-136">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-137">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-137">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="02b56-138">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-138">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02b56-139">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-139">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-140">これは、.NET Framework における XML の暗号化のメイン クラスの既定のコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="02b56-140">This is the default constructor for the main class for XML encryption in the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-141">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-141">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-142">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-142">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-143">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-143">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-144">この例では、復号化するメソッドを使用して、適切な復号化キーを検索する暗号化された XML ドキュメントのキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="02b56-144">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-145">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-145">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-146">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-146">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-147">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-147">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="02b56-148">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-148">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="02b56-149">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトを初期化するために使用する <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-149">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-150">指定した XML ドキュメントを使用して、<see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-151">このコンス トラクターを使って作成、<xref:System.Security.Cryptography.Xml.EncryptedXml>オブジェクトを暗号化する XML ドキュメントを指定するとき。</span><span class="sxs-lookup"><span data-stu-id="02b56-151">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.</span></span>  <span data-ttu-id="02b56-152">`document`パラメーターは後で、暗号化された XML を形成する XML 要素で構成します。</span><span class="sxs-lookup"><span data-stu-id="02b56-152">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-153">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-153">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-154">この例では、復号化するメソッドを使用して、適切な復号化キーを検索する暗号化された XML ドキュメントのキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="02b56-154">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-155">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-155">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-156">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-156">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="02b56-157">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトを初期化するために使用する <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-157">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="02b56-158">
            <see cref="T:System.Xml.XmlDocument" /> オブジェクトに関連付けられている <see cref="T:System.Security.Policy.Evidence" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-158">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-159">指定した XML ドキュメントおよび証拠を使用して、<see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-160">このコンス トラクターを使って作成、<xref:System.Security.Cryptography.Xml.EncryptedXml>オブジェクトを暗号化し、セキュリティ証拠を提供する XML ドキュメントを指定するとき。</span><span class="sxs-lookup"><span data-stu-id="02b56-160">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence.</span></span> <span data-ttu-id="02b56-161">`document`パラメーターは後で、暗号化された XML を形成する XML 要素で構成します。</span><span class="sxs-lookup"><span data-stu-id="02b56-161">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyNameMapping">
      <MemberSignature Language="C#" Value="public void AddKeyNameMapping (string keyName, object keyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyNameMapping(string keyName, object keyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyNameMapping (keyName As String, keyObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddKeyNameMapping(System::String ^ keyName, System::Object ^ keyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="02b56-162">
            <c>keyObject</c> にマップする名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-162">The name to map to <c>keyObject</c>.</span>
          </span>
        </param>
        <param name="keyObject">
          <span data-ttu-id="02b56-163">
            <c>keyName</c> にマップする対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-163">The symmetric key to map to <c>keyName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-164">キー名と対称キーまたは非対称キーとの間のマップを定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-164">Defines a mapping between a key name and a symmetric key or an asymmetric key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-165"><xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>メソッドでは、対称キーまたは非対称キーを文字列名にマップすることができます。</span><span class="sxs-lookup"><span data-stu-id="02b56-165">The <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method allows you to map a symmetric key or an asymmetric key to a string name.</span></span> <span data-ttu-id="02b56-166">このメソッドは、の値を追加、`keyName`と`keyObject`有効なキーのテーブルへのパラメーターのマッピングの名前します。</span><span class="sxs-lookup"><span data-stu-id="02b56-166">This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.</span></span>  
  
 <span data-ttu-id="02b56-167">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A>キー名のマッピング テーブルをクリアします。</span><span class="sxs-lookup"><span data-stu-id="02b56-167">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-168">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-168">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-169">この例では、復号化するメソッドを使用して、適切な復号化キーを検索する暗号化された XML ドキュメントのキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="02b56-169">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-170">
            <paramref name="keyName" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-170">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-171">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-171">-or-</span>
          </span>
          <span data-ttu-id="02b56-172">
            <paramref name="keyObject" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-172">The value of the <paramref name="keyObject" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-173">
            <paramref name="keyObject" /> パラメーターの値が RSA アルゴリズムまたは共通キーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-173">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearKeyNameMappings">
      <MemberSignature Language="C#" Value="public void ClearKeyNameMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearKeyNameMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearKeyNameMappings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearKeyNameMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02b56-174">すべてのキー名マップをリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-174">Resets all key name mapping.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-175">このメソッドを使用して設定したすべてのキー名マッピングが消去を使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="02b56-175">Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptData">
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="02b56-176">復号化するデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-176">The data to decrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="02b56-177">指定した対称アルゴリズムを使用して <see langword="&lt;EncryptedData&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-177">Decrypts an <see langword="&lt;EncryptedData&gt;" /> element using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-178">生の復号化されたプレーン テキストを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-178">A byte array that contains the raw decrypted plain text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-179">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>を復号化、<xref:System.Security.Cryptography.Xml.EncryptedData>対称キーを使用して要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-179">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.</span></span>  
  
 <span data-ttu-id="02b56-180">なお、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>メソッドのみを復号化トップレベル <`EncryptedData`> タグです。</span><span class="sxs-lookup"><span data-stu-id="02b56-180">Note that the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method only decrypts top-level <`EncryptedData`> tags.</span></span>  <span data-ttu-id="02b56-181">場合、1 つまたは複数 <`EncryptedData`> タグが暗号化されているしより高いレベルに含まれる <`EncryptedData`> タグに呼び出すことができます、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドごとに個別にします。</span><span class="sxs-lookup"><span data-stu-id="02b56-181">In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.</span></span>  <span data-ttu-id="02b56-182">参照してください、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>コード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="02b56-182">See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-183">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-183">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-184">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-184">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-185">
            <paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-185">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-186">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-186">-or-</span>
          </span>
          <span data-ttu-id="02b56-187">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-187">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DecryptDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub DecryptDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DecryptDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02b56-188">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの初期化時に指定された、XML ドキュメントのすべての <see langword="&lt;EncryptedData&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-188">Decrypts all <see langword="&lt;EncryptedData&gt;" /> elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-189"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドには、すべてが復号化`<EncryptedData>`の初期化中に、XML ドキュメントの要素が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="02b56-189">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization.</span></span> <span data-ttu-id="02b56-190">このメソッドを呼び出した後すべて`<EncryptedData>`ドキュメント内の要素はテキスト形式のバージョンに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="02b56-190">After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.</span></span>  
  
 <span data-ttu-id="02b56-191"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドが最上位レベルのみ復号化`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-191">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only top-level `<EncryptedData>` elements.</span></span>  <span data-ttu-id="02b56-192">スーパーで暗号化されたドキュメント (複数回暗号化するドキュメント) の暗号化を解除する必要がある場合を呼び出す必要があります、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>すべてまで繰り返しメソッド、`<EncryptedData>`要素が復号化されています。</span><span class="sxs-lookup"><span data-stu-id="02b56-192">If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method repeatedly until all the `<EncryptedData>` elements have been decrypted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02b56-193"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドには、有効な XML データのみが復号化します。</span><span class="sxs-lookup"><span data-stu-id="02b56-193">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only valid XML data.</span></span> <span data-ttu-id="02b56-194">任意のデータの暗号化を解除するには、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="02b56-194">To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.</span></span>  
  
 <span data-ttu-id="02b56-195">X.509 証明書で XML の暗号化を使用するには、Microsoft Enhanced Cryptographic Provider がインストールされているが必要し、X.509 証明書は、拡張プロバイダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02b56-195">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="02b56-196">Microsoft Enhanced Cryptographic Provider がインストールされているがないか、または X.509 証明書は、拡張プロバイダーを使用しない場合、 <xref:System.Security.Cryptography.CryptographicException> "Unknown Error"の場合にスローされる XML ドキュメントを復号化します。</span><span class="sxs-lookup"><span data-stu-id="02b56-196">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-197">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-197">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-198">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-198">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-199">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-199">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="02b56-200">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-200">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-201">次のコード例では、高レベルの暗号化を解除 <`EncryptedData`> タグを含む暗号化別 <`EncryptedData`> タグです。</span><span class="sxs-lookup"><span data-stu-id="02b56-201">The following code example demonstrates how to decrypt a high level <`EncryptedData`> tag that contains another encrypted <`EncryptedData`> tag.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/csharp/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-202">ドキュメントを復号化するための暗号化キーが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-202">The cryptographic key used to decrypt the document was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptEncryptedKey">
      <MemberSignature Language="C#" Value="public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptEncryptedKey(class System.Security.Cryptography.Xml.EncryptedKey encryptedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptEncryptedKey(System::Security::Cryptography::Xml::EncryptedKey ^ encryptedKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Security.Cryptography.Xml.EncryptedKey" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="02b56-203">取得するキーを格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-203">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-204">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 要素によって表されるキーを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-204">Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-205">キーを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-205">A byte array that contains the key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-206"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A>メソッド内に含まれる暗号化キーを復号化、 `<EncryptedKey>` XML ドキュメントの要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-206">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span>  
  
 <span data-ttu-id="02b56-207">この再帰的な方法で表されるキーの検索、<xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="02b56-207">This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="02b56-208">なお、<xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクトは別に含めることができます<xref:System.Security.Cryptography.Xml.EncryptedKey>を指定するオブジェクト、<xref:System.Security.Cryptography.Xml.KeyInfo>値。</span><span class="sxs-lookup"><span data-stu-id="02b56-208">Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-209">
            <paramref name="encryptedKey" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-209">The value of the <paramref name="encryptedKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-210">
            <paramref name="encryptedKey" /> パラメーターの値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-210">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DecryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-211">
            <see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-211">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-212">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>を復号化、`<EncryptedKey>`要素とその要素を復号化に使用するキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="02b56-212">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method to decrypt an `<EncryptedKey>` element and retrieve the key used to decrypt that element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="02b56-213">暗号化された <see langword="&lt;EncryptedKey&gt;" /> 要素を表すバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-213">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="02b56-214">対称アルゴリズムを使用して <see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-214">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using a symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-215">プレーン テキストのキーを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-215">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-216"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>メソッド内に含まれる暗号化キーを復号化、 `<EncryptedKey>` XML ドキュメントの要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-216">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="02b56-217">このメソッドは、の値を受け取り、`symmetricAlgorithm`トリプル DES アルゴリズムまたは AES キー ラップ アルゴリズム (Rijndael とも呼ばれます) のいずれかを表すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="02b56-217">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-218">
            <paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-218">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-219">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-219">-or-</span>
          </span>
          <span data-ttu-id="02b56-220">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-220">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-221">
            <paramref name="symmetricAlgorithm" /> 要素の値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-221">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="02b56-222">暗号化された <see langword="&lt;EncryptedKey&gt;" /> 要素を表すバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-222">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="02b56-223">
            <c>keyData</c> を復号化するために使用する非対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-223">The asymmetric key used to decrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="useOAEP">To be added.</param>
        <param name="fOAEP">To be added.</param>
        <summary>
          <span data-ttu-id="02b56-224">非対称アルゴリズムを使用して <see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-224">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using an asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-225">プレーン テキストのキーを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-225">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-226"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>メソッド内に含まれる暗号化キーを復号化、 `<EncryptedKey>` XML ドキュメントの要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-226">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="02b56-227">このメソッドは、の値を受け取り、 `rsa` RSA PKCS #1 v1.5 アルゴリズムまたは RSA PKCS #1 タイプ 2 アルゴリズム (OAEP パディングとも呼ばれます) のいずれかを表すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="02b56-227">This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-228">
            <paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-228">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-229">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-229">-or-</span>
          </span>
          <span data-ttu-id="02b56-230">
            <paramref name="rsa" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-230">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DocumentEvidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence DocumentEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence DocumentEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentEvidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ DocumentEvidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-231">構築する <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトの元になる <see cref="T:System.Xml.XmlDocument" /> オブジェクトの証拠を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-231">Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b56-232">
            <see cref="T:System.Security.Policy.Evidence" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-232">An <see cref="T:System.Security.Policy.Evidence" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-233">XML ドキュメントを作成するために使用する場合、<xref:System.Security.Cryptography.Xml.EncryptedXml>オブジェクトには、セキュリティ証拠、証拠を追加する必要があります、<xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="02b56-233">If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property.</span></span>  <span data-ttu-id="02b56-234">このプロパティは、関連付けられているいずれかが設定されていない場合<xref:System.Security.Cryptography.Xml.CipherReference>オブジェクトが逆参照しないでこれらはで許可されていなかったため、必要なアクセス許可セット。</span><span class="sxs-lookup"><span data-stu-id="02b56-234">If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-235">XML 暗号化に使用するエンコーディングを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-235">Gets or sets the encoding used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b56-236">
            <see cref="T:System.Text.Encoding" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-236">An <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-237">XML 暗号化の既定のエンコーディングは、utf-8 エンコードします。</span><span class="sxs-lookup"><span data-stu-id="02b56-237">UTF-8 encoding is the default encoding for XML encryption.</span></span> <span data-ttu-id="02b56-238">このプロパティを使用してエンコードからの他の種類を指定することができます、 <xref:System.Text.Encoding> utf-16 や ASCII などのクラスです。</span><span class="sxs-lookup"><span data-stu-id="02b56-238">You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-239">キー マップ テーブル内の指定された証明書またはキーを使用して、要素の外側の XML を暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-239">Encrypts the outer XML of an element using the specified certificate or key in the key mapping table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02b56-240">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-240">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-241">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-241">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="02b56-242">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-242">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, certificate As X509Certificate2) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="02b56-243">暗号化する XML 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-243">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="certificate">
          <span data-ttu-id="02b56-244">暗号化に使用する X.509 証明書。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-244">The X.509 certificate to use for encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-245">指定した X.509 証明書を使用して、要素の外側の XML を暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-245">Encrypts the outer XML of an element using the specified X.509 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-246">暗号化された XML データを表す <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-246">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-247"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>メソッドは、証明書を使用して、要素の外側の XML を暗号化する便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="02b56-247">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method is a convenient way to encrypt the outer XML of an element using a certificate.</span></span> <span data-ttu-id="02b56-248">このメソッドで XML 要素を暗号化するには、256 ビット高度暗号化標準 (AES) セッション キーが生成されますとし、暗号化して AES キーを使用して、署名、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="02b56-248">This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span> <span data-ttu-id="02b56-249"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>メソッドでは、結果として得られる XML としてしを返します、<xref:System.Security.Cryptography.Xml.EncryptedData>要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-249">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.</span></span>  
  
 <span data-ttu-id="02b56-250">暗号化より詳細に制御する場合は、することが行われるのでに暗号化された情報、`<CipherReference>`要素全体の XML 要素またはその内容だけができるかどうかを指定するか、暗号化を使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="02b56-250">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="02b56-251">X.509 証明書で XML の暗号化を使用するには、Microsoft Enhanced Cryptographic Provider がインストールされているが必要し、X.509 証明書は、拡張プロバイダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="02b56-251">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="02b56-252">Microsoft Enhanced Cryptographic Provider がインストールされているがないか、または X.509 証明書は、拡張プロバイダーを使用しない場合、 <xref:System.Security.Cryptography.CryptographicException> "Unknown Error"の場合にスローされる XML ドキュメントを復号化します。</span><span class="sxs-lookup"><span data-stu-id="02b56-252">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-253">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-253">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="02b56-254">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-254">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-255">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-255">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-256">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-256">-or-</span>
          </span>
          <span data-ttu-id="02b56-257">
            <paramref name="certificate" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-257">The value of the <paramref name="certificate" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="02b56-258">
            <paramref name="certificate" /> パラメーターの値は RSA キー アルゴリズムを表しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-258">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, keyName As String) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::String ^ keyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="02b56-259">暗号化する XML 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-259">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="keyName">
          <span data-ttu-id="02b56-260">キー マップ テーブルにあるキー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-260">A key name that can be found in the key mapping table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-261">キー マップ テーブル内の指定されたキーを使用して、要素の外側の XML を暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-261">Encrypts the outer XML of an element using the specified key in the key mapping table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-262">暗号化された XML データを表す <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-262">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-263">このメソッドは、キー名を使用して、要素の外側の XML を暗号化する便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="02b56-263">This method is a convenient way to encrypt the outer XML of an element using a key name.</span></span> <span data-ttu-id="02b56-264">暗号化より詳細に制御する場合は、することが行われるのでに暗号化された情報、`<CipherReference>`要素全体の XML 要素またはその内容だけができるかどうかを指定するか、暗号化を使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="02b56-264">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="02b56-265">サポートされているすべてのアルゴリズムの一覧に関連付けられている定数のフィールドの一覧を参照して、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラスです。</span><span class="sxs-lookup"><span data-stu-id="02b56-265">For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-266">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-266">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-267">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-267">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-268">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-268">-or-</span>
          </span>
          <span data-ttu-id="02b56-269">
            <paramref name="keyName" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-269">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-270">
            <paramref name="keyName" /> パラメーターの値が、登録されているキー名のペアに一致しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-270">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.</span>
          </span>
          <span data-ttu-id="02b56-271">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-271">-or-</span>
          </span>
          <span data-ttu-id="02b56-272">
            <paramref name="keyName" /> パラメーターで記述されている暗号化キーはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-272">The cryptographic key described by the <paramref name="keyName" /> parameter is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptData">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-273">対称アルゴリズムを使用して、XML データを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-273">Encrypts XML data using a symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02b56-274">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-274">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-275">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-275">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-276">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-276">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-277">この例では、復号化するメソッドを使用して、適切な復号化キーを検索する暗号化された XML ドキュメントのキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="02b56-277">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-278">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-278">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-279">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-279">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plaintext, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plaintext, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plainText, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plainText, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plainText, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="plainText" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="plainText">To be added.</param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="02b56-280">指定したバイト配列内のデータを、指定した対称アルゴリズムを使用して暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-280">Encrypts data in the specified byte array using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-281">暗号化されたデータのバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-281">A byte array of encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-282">返されるバイト配列に配置できる、`<CipherValue>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-282">The returned byte array can be placed into a `<CipherValue>` element.</span></span> <span data-ttu-id="02b56-283">このメソッドは、データがで指定されている前提としています。、`plaintext`パラメーターは、XML データを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="02b56-283">This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-284">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-284">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-285">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-285">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-286">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-286">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-287">この例では、復号化するメソッドを使用して、適切な復号化キーを検索する暗号化された XML ドキュメントのキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="02b56-287">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="02b56-288">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-288">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-289">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-289">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-290">
            <paramref name="plaintext" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-290">The value of the <paramref name="plaintext" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-291">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-291">-or-</span>
          </span>
          <span data-ttu-id="02b56-292">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-292">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-293">データを、指定したパラメーターを使用して暗号化できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-293">The data could not be encrypted using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="content" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="02b56-294">暗号化する要素またはその内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-294">The element or its contents to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <param name="content">
          <span data-ttu-id="02b56-295">要素の内容のみを暗号化する場合は <see langword="true" />。要素全体を暗号化する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-295">
              <see langword="true" /> to encrypt only the contents of the element; <see langword="false" /> to encrypt the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-296">指定した要素またはその内容を、指定した対称アルゴリズムを使用して暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-296">Encrypts the specified element or its contents using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-297">暗号化されたデータを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-297">A byte array that contains the encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-298">返されるバイト配列のデータの値、`<CipherValue>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-298">The returned byte array data is the value of the `<CipherValue>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-299">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-299">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-300">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-300">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-301">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-301">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-302">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-302">-or-</span>
          </span>
          <span data-ttu-id="02b56-303">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-303">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-304">
            <see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用するキーを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-304">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-305">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>受信者が復号化に使用するキーを暗号化する方法、`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-305">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="02b56-306">このメソッドは、暗号化キー、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-306">This method places the encrypted key within an `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-307">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-307">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-308">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-308">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="02b56-309">暗号化するキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-309">The key to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="02b56-310">
            <see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用する対称アルゴリズムを使用して、キーを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-310">Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-311">
            <paramref name="keyData" /> パラメーターの暗号化された値を表すバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-311">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-312">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>受信者が復号化に使用するキーを暗号化する方法、`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-312">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="02b56-313">このメソッドは、の値を受け取り、`symmetricAlgorithm`トリプル DES アルゴリズムまたは AES キー ラップ アルゴリズム (Rijndael とも呼ばれます) のいずれかを表すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="02b56-313">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 <span data-ttu-id="02b56-314">このメソッドが、暗号化キーを自動的に配置していないことに注意してください、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-314">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="02b56-315">手動で作成する必要があります、`<EncryptedKey>`ドキュメント内の要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-315">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-316">
            <paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-316">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-317">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-317">-or-</span>
          </span>
          <span data-ttu-id="02b56-318">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-318">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-319">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-319">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="02b56-320">暗号化するキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-320">The key to encrypt.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="02b56-321">
            <c>keyData</c> を暗号化するために使用する非対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-321">The asymmetric key used to encrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="useOAEP">To be added.</param>
        <param name="fOAEP">To be added.</param>
        <summary>
          <span data-ttu-id="02b56-322">
            <see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用するキーを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-322">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-323">
            <paramref name="keyData" /> パラメーターの暗号化された値を表すバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-323">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-324">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>受信者が復号化に使用するキーを暗号化する方法、`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-324">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="02b56-325">このメソッドは、の値を受け入れる`rsa`RSA PKCS #1 v1.5 アルゴリズムまたは RSA PKCS #1 タイプ 2 アルゴリズム (OAEP とも呼ばれます) のいずれかを表すです。</span><span class="sxs-lookup"><span data-stu-id="02b56-325">This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).</span></span>  
  
 <span data-ttu-id="02b56-326">このメソッドが、暗号化キーを自動的に配置していないことに注意してください、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-326">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="02b56-327">手動で作成する必要があります、`<EncryptedKey>`ドキュメント内の要素。</span><span class="sxs-lookup"><span data-stu-id="02b56-327">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-328">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-328">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-329">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-329">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-330">
            <paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-330">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-331">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-331">-or-</span>
          </span>
          <span data-ttu-id="02b56-332">
            <paramref name="rsa" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-332">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionIV">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="02b56-333">取得する初期化ベクター (IV) を格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-333">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">To be added.</param>
        <param name="symAlgUri">To be added.</param>
        <summary>
          <span data-ttu-id="02b56-334">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトから復号化初期化ベクター (IV: initialization vector) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-334">Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-335">復号化初期化ベクター (IV) を格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-335">A byte array that contains the decryption initialization vector (IV).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-336">指定された、<xref:System.Security.Cryptography.Xml.EncryptedData>オブジェクト、このメソッドは、復号化初期化ベクター (IV) を取得します。</span><span class="sxs-lookup"><span data-stu-id="02b56-336">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV).</span></span> <span data-ttu-id="02b56-337">既定の動作の最初のバイトとしての IV の取得、<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>バイト配列。</span><span class="sxs-lookup"><span data-stu-id="02b56-337">The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.</span></span>  
  
 <span data-ttu-id="02b56-338">サポートされている (Uniform Resource Identifier) の値の一覧については、`symmetricAlgorithmUri`パラメーター、定数フィールドの一覧に関連付けられているを参照してください、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラスです。</span><span class="sxs-lookup"><span data-stu-id="02b56-338">For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-339">
            <paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-339">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-340">
            <paramref name="encryptedData" /> パラメーター値の <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> プロパティが null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-340">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="02b56-341">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-341">-or-</span>
          </span>
          <span data-ttu-id="02b56-342">
            <paramref name="symmetricAlgorithmUrisymAlgUri" /> パラメーターの値が、サポートされているアルゴリズムではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-342">The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="02b56-343">取得する復号化キーを格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-343">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">To be added.</param>
        <param name="symAlgUri">To be added.</param>
        <summary>
          <span data-ttu-id="02b56-344">指定した <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトから復号化キーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-344">Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-345">復号化キーに関連付けられている <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-345">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-346">指定された、<xref:System.Security.Cryptography.Xml.EncryptedData>オブジェクト、このメソッドはプレーン テキスト データを取得するために使用する暗号化解除キーを検索します。</span><span class="sxs-lookup"><span data-stu-id="02b56-346">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data.</span></span> <span data-ttu-id="02b56-347">キー名が指定されている場合、メソッドは、対称アルゴリズムまたはキー名のマッピングで定義されているキーの名前に関連付けられている非対称アルゴリズムを検索します。</span><span class="sxs-lookup"><span data-stu-id="02b56-347">If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping.</span></span> <span data-ttu-id="02b56-348">それ以外の場合、取得メソッドか、<xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクトが指定されている場合、メソッドのロード、<xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクトと呼び出し、<xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="02b56-348">Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-349">
            <paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-349">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="02b56-350">encryptedData パラメーターの <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> プロパティが null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-350">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="02b56-351">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-351">-or-</span>
          </span>
          <span data-ttu-id="02b56-352">暗号化されたキーを、指定したパラメーターを使用して取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-352">The encrypted key cannot be retrieved using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="02b56-353">ID 値を持つ要素を格納している <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-353">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</span>
          </span>
        </param>
        <param name="idValue">
          <span data-ttu-id="02b56-354">ID 値を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-354">A string that represents the ID value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-355">内部 URI (Uniform Resource Identifier) 参照を解決する方法を確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-355">Determines how to resolve internal Uniform Resource Identifier (URI) references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b56-356">内部 URI (Uniform Resource Identifier) を解決する方法を示す ID を格納する <see cref="T:System.Xml.XmlElement" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-356">An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-357"><xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A>メソッドは、内部の Uniform Resource Identifier (Uri) を解決する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="02b56-357">The <xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> method determines how to resolve internal Uniform Resource Identifiers (URIs).</span></span> <span data-ttu-id="02b56-358">値を指定して要素または指定された値を持つ ID 属性を持つ要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="02b56-358">It looks for elements with a specified value or for elements with an ID attribute that has a specified value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-359">XML 暗号化に使用する暗号モードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-359">Gets or sets the cipher mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b56-360">
            <see cref="T:System.Security.Cryptography.CipherMode" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-360">One of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-361">暗号ブロック チェーン (CBC) モードは、XML 暗号化の既定の暗号モードです。</span><span class="sxs-lookup"><span data-stu-id="02b56-361">Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption.</span></span> <span data-ttu-id="02b56-362">場合は、その他の暗号モードを指定するこのプロパティを使用することができます、<xref:System.Security.Cryptography.CipherMode>暗号フィードバック (CFB) モードなどの列挙。</span><span class="sxs-lookup"><span data-stu-id="02b56-362">You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-363">XML 暗号化に使用するパディング モードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-363">Gets or sets the padding mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b56-364">暗号化に使用するパディングの種類を指定する <see cref="T:System.Security.Cryptography.PaddingMode" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-364">One of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values that specifies the type of padding used for encryption.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-365">Iso-10126 パディングは、XML 暗号化の既定のパディング モードです。</span><span class="sxs-lookup"><span data-stu-id="02b56-365">ISO-10126 padding is the default padding mode for XML encryption.</span></span> <span data-ttu-id="02b56-366">場合は、その他のパディング モードを指定するこのプロパティを使用することができます、 <xref:System.Security.Cryptography.PaddingMode> ANSI X9.23 または PKCS #5 などの列挙。</span><span class="sxs-lookup"><span data-stu-id="02b56-366">You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-367">暗号化されたキー情報の受信者を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-367">Gets or sets the recipient of the encrypted key information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b56-368">暗号化されたキー情報の受信者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-368">The recipient of the encrypted key information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-369">アクセスすることができます、<xref:System.Security.Cryptography.Xml.EncryptedXml>確認するには、キー名によって参照されるオブジェクト、<xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="02b56-369">You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.</span></span>  
  
 <span data-ttu-id="02b56-370">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A>プロパティを識別する、<xref:System.Security.Cryptography.Xml.EncryptedXml>要素を復号化キーを取得する現在の受信者の暗号化を解除できます。</span><span class="sxs-lookup"><span data-stu-id="02b56-370">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceData">
      <MemberSignature Language="C#" Value="public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceData(class System.Xml.XmlElement inputElement, unsigned int8[] decryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceData (inputElement As XmlElement, decryptedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceData(System::Xml::XmlElement ^ inputElement, cli::array &lt;System::Byte&gt; ^ decryptedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="decryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="02b56-371">置換する <see langword="&lt;EncryptedData&gt;" /> 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-371">The <see langword="&lt;EncryptedData&gt;" /> element to replace.</span>
          </span>
        </param>
        <param name="decryptedData">
          <span data-ttu-id="02b56-372">
            <c>inputElement</c> を置き換える復号化されたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-372">The decrypted data to replace <c>inputElement</c> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-373">
            <see langword="&lt;EncryptedData&gt;" /> 要素を、指定した復号化されたバイト シーケンスで置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-373">Replaces an <see langword="&lt;EncryptedData&gt;" /> element with a specified decrypted sequence of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-374"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A>メソッド置換、`<EncryptedData>`の値を持つ要素、`decryptedData`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="02b56-374">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-375">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-375">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-376">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-376">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-377">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-377">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-378">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-378">-or-</span>
          </span>
          <span data-ttu-id="02b56-379">
            <paramref name="decryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-379">The value of the <paramref name="decryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceElement">
      <MemberSignature Language="C#" Value="public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplaceElement(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReplaceElement(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, bool content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" />
        <Parameter Name="content" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="02b56-380">
            <see langword="&lt;EncryptedData&gt;" /> 要素と置き換える要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-380">The element to replace with an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </param>
        <param name="encryptedData">
          <span data-ttu-id="02b56-381">
            <c>inputElement</c> パラメーターを置き換える <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-381">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <c>inputElement</c> parameter with.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="02b56-382">要素の内容のみを置き換える場合は <see langword="true" />。要素全体を置き換える場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-382">
              <see langword="true" /> to replace only the contents of the element; <see langword="false" /> to replace the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b56-383">指定した要素を指定した <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトで置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-383">Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-384"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A>メソッド置換、`inputElement`パラメーターで指定された値と、`encryptedData`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="02b56-384">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-385">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-385">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-386">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-386">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b56-387">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-387">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="02b56-388">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-388">-or-</span>
          </span>
          <span data-ttu-id="02b56-389">
            <paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-389">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver { System::Xml::XmlResolver ^ get(); void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-390">外部 XML 参照を解決するためにドキュメント オブジェクト モデル (DOM) によって使用される <see cref="T:System.Xml.XmlResolver" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-390">Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b56-391">
            <see cref="T:System.Xml.XmlResolver" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-391">An <see cref="T:System.Xml.XmlResolver" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-392">このプロパティが含まれています、<xref:System.Xml.XmlResolver>エンティティ、ドキュメント型定義 (Dtd) やスキーマなどの外部の XML リソースの解決に使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="02b56-392">This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDSigSearchDepth">
      <MemberSignature Language="C#" Value="public int XmlDSigSearchDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XmlDSigSearchDepth" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDSigSearchDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int XmlDSigSearchDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-393">無限再帰とスタック オーバーフローが発生しないように、XML デジタル署名再帰深度を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-393">Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.</span>
          </span>
          <span data-ttu-id="02b56-394">無限再帰とスタック オーバーフローは、デジタル署名の XML に URI が含まれ、それが元の XML をポイントしている場合に発生することがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-394">This might happen if the digital signature XML contains the URI which then points back to the original XML.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b56-395">
            <see cref="T:System.Int32" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-395">Returns <see cref="T:System.Int32" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128KeyWrapUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-396">128 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-396">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="02b56-397">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-397">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-398">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#kw-aes128"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-398">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes128".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-399">128 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-399">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="02b56-400">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-400">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-401">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url>フィールドは"http://www.w3.org/2001/04/xmlenc#aes128-cbc"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-401">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> field is "http://www.w3.org/2001/04/xmlenc#aes128-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-402">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-402">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-403">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-403">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192KeyWrapUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-404">192 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-404">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="02b56-405">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-405">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-406">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#kw-aes192"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-406">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes192".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-407">192 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-407">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="02b56-408">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-408">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-409">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url>フィールドは"http://www.w3.org/2001/04/xmlenc#aes192-cbc"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-409">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> field is "http://www.w3.org/2001/04/xmlenc#aes192-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-410">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-410">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-411">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-411">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256KeyWrapUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-412">256 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-412">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="02b56-413">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-413">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-414">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#kw-aes256"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-414">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-415">256 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-415">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="02b56-416">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-416">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-417">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url>フィールドは"http://www.w3.org/2001/04/xmlenc#aes256-cbc"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-417">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> field is "http://www.w3.org/2001/04/xmlenc#aes256-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-418">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-418">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-419">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-419">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncDESUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-420">DES (Digital Encryption Standard) アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-420">Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.</span>
          </span>
          <span data-ttu-id="02b56-421">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-421">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-422">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#des-cbc"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-422">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> field is "http://www.w3.org/2001/04/xmlenc#des-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-423">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-423">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-424">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-424">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementContentUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementContentUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementContentUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementContentUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementContentUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-425">XML 暗号化要素の内容の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-425">Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.</span>
          </span>
          <span data-ttu-id="02b56-426">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-426">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-427">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#Content"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-427">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> field is "http://www.w3.org/2001/04/xmlenc#Content".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-428">XML 暗号化要素の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-428">Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.</span>
          </span>
          <span data-ttu-id="02b56-429">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-429">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-430">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#Element"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-430">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field is "http://www.w3.org/2001/04/xmlenc#Element".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-431">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-431">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-432">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-432">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncEncryptedKeyUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncEncryptedKeyUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncEncryptedKeyUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-433">XML 暗号化 <see langword="&lt;EncryptedKey&gt;" /> 要素の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-433">Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
          <span data-ttu-id="02b56-434">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-434">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-435">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#EncryptedKey"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-435">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> field is "http://www.w3.org/2001/04/xmlenc#EncryptedKey".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncNamespaceUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-436">XML 暗号化の構文および処理の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-436">Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.</span>
          </span>
          <span data-ttu-id="02b56-437">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-437">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-438">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-438">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> field is "http://www.w3.org/2001/04/xmlenc#".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSA15Url">
      <MemberSignature Language="C#" Value="public const string XmlEncRSA15Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSA15Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSA15Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSA15Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-439">RSA PKCS (Public Key Cryptography Standard) Version 1.5 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-439">Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.</span>
          </span>
          <span data-ttu-id="02b56-440">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-440">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-441">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>フィールドは"http://www.w3.org/2001/04/xmlenc#rsa-1_5"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-441">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> field is "http://www.w3.org/2001/04/xmlenc#rsa-1_5".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-442">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-442">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="02b56-443">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して XML ドキュメントに暗号化されたバージョンのセッション キーを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="02b56-443">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSAOAEPUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSAOAEPUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSAOAEPUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSAOAEPUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-444">RSA OAEP (Optimal Asymmetric Encryption Padding) 暗号化アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-444">Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.</span>
          </span>
          <span data-ttu-id="02b56-445">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-445">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-446">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-446">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> field is "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-447">SHA-256 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-447">Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.</span>
          </span>
          <span data-ttu-id="02b56-448">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-448">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-449">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url>フィールドは"http://www.w3.org/2001/04/xmlenc#sha256"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-449">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> field is "http://www.w3.org/2001/04/xmlenc#sha256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-450">SHA-512 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-450">Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.</span>
          </span>
          <span data-ttu-id="02b56-451">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-451">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-452">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url>フィールドは"http://www.w3.org/2001/04/xmlenc#sha512"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-452">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> field is "http://www.w3.org/2001/04/xmlenc#sha512".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESKeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESKeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESKeyWrapUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-453">Triple DES キー ラップ アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-453">Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.</span>
          </span>
          <span data-ttu-id="02b56-454">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-454">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-455">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#kw-tripledes"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-455">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-tripledes".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b56-456">Triple DES アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-456">Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.</span>
          </span>
          <span data-ttu-id="02b56-457">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b56-457">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b56-458">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#tripledes-cbc"です。</span><span class="sxs-lookup"><span data-stu-id="02b56-458">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> field is "http://www.w3.org/2001/04/xmlenc#tripledes-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b56-459">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="02b56-459">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="02b56-460">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="02b56-460">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>