<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12fa30ba5677d34b848e725388607ce0d6e83ffd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69374657" /></Metadata><TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データベース テーブルに関連付けられたエンティティ クラスとしてクラスを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この属性は、クラスを、データベース テーブルまたはビューに関連付けられたエンティティ クラスとして指定するために使用します。 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]属性を<xref:System.Data.Linq.Mapping.TableAttribute>持つクラスを永続クラスとして扱います。  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]では、単一テーブルマッピングのみがサポートされます。 つまり、1つのエンティティクラスをただ1つのデータベーステーブルにマップする必要があり、同時に複数のクラスにデータベーステーブルをマップすることはできません。  
  
 属性のプロパティ<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>を使用してテーブルの名前を指定し、必要に応じてスキーマ名を使用してテーブル名を修飾することができます。 <xref:System.Data.Linq.Mapping.TableAttribute> <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>プロパティを使用して名前を指定しない場合、テーブル名はクラス名と同じであると見なされます。  
  
## <a name="schema-qualified-names"></a>スキーマ修飾名  
 必要に応じて、スキーマ名を使用してテーブル名を修飾することもできます。 既定では、 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>文字列内の最初の期間の左側のトークンは、スキーマ名と見なされます。 名前の残りの部分は、テーブル名と見なされます。 プロバイダーは、必要に応じてテーブル名を引用符で囲みます。 たとえば、SQL Server の[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]プロバイダーは、少なくとも必要な場所で角かっこが使用されていることを確認します。  
  
> [!NOTE]
>  場合によっては、SQL Server プロバイダーが自動引用符を使用できないため、属性を明示的に引用符で囲む必要があります。 次の表は、いくつかの例を示しています。  
  
|Case|例:識別子名|例:属性に文字列が必要です|それ以外の場合...|  
|----------|------------------------------|--------------------------------------------|----------------|  
|スキーマ名にピリオドが含まれています|スキーマ"A. B"<br /><br /> 一覧40U-C|"[A. B]。40U-C|最初の期間は、スキーマ名とテーブル名を分離することを前提としています。|  
|スキーマ/テーブル名がで始まる`@`|"@SomeName"|"[@SomeName]"|パラメーター名であると見なされます。|  
|スキーマはで`[`始まり、で終わります。`]`|"[Schema. Table]"|"[[Schema].[Table]]]"|引用符で囲まれていない識別子は、引用符で囲まれた識別子と同様です。|  
|テーブルはで`[`始まり、で終わります。`]`|"[テーブル]"|"[[Table]]]"|引用符で囲まれていない識別子は、引用符で囲まれた識別子と同様です。|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.Linq.Mapping.TableAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブルまたはビューの名前を取得または設定します。</summary>
        <value>既定では、値はクラスの名前と同じです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 を使用<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>して名前を指定しない場合、テーブル名はクラス名と同じであると見なされます。  
  
> [!NOTE]
>  必要に応じて、スキーマ名を使用してテーブル名を修飾することができます (たとえば、Schema3. Table5)。 既定では、 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>文字列内の最初の期間の左側のトークンはスキーマ名と見なされ、残りはテーブル名になります。  
  
 次の例では、既定のテーブル名`Customer`がに`Customers`変更されています。  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
