<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c558b22bb19a9d677a923b0838a837e6c591928b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="577b9-101">データベース テーブルに関連付けられたエンティティ クラスとしてクラスを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="577b9-101">Designates a class as an entity class that is associated with a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="577b9-102">この属性は、クラスを、データベース テーブルまたはビューに関連付けられたエンティティ クラスとして指定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="577b9-102">Use this attribute to designate a class as an entity class that is associated with a database table or view.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="577b9-103"> 使用するクラスを扱う、<xref:System.Data.Linq.Mapping.TableAttribute>属性として永続的なクラスです。</span><span class="sxs-lookup"><span data-stu-id="577b9-103"> treats classes that have the <xref:System.Data.Linq.Mapping.TableAttribute> attribute as persistent classes.</span></span>  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="577b9-104"> シングル テーブル マッピングのみをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="577b9-104"> supports only single-table mapping.</span></span> <span data-ttu-id="577b9-105">つまり、エンティティ クラスは、1 つのデータベース テーブルにマップする必要があります、同時に複数のクラスをデータベース テーブルをマップすることはできません。</span><span class="sxs-lookup"><span data-stu-id="577b9-105">That is, an entity class must be mapped to exactly one database table, and you cannot map a database table to multiple classes at the same time.</span></span>  
  
 <span data-ttu-id="577b9-106">使用することができます、<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>のプロパティ、<xref:System.Data.Linq.Mapping.TableAttribute>テーブルの名前を指定する属性し、必要に応じて、テーブル名を修飾するスキーマ名を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="577b9-106">You can use the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property of the <xref:System.Data.Linq.Mapping.TableAttribute> attribute to specify a name for the table, and you can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="577b9-107">使用して名前を指定しない場合、<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>プロパティ、テーブル名が同じクラス名であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="577b9-107">If you do not specify a name by using the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property, the table name is assumed to be the same as the class name.</span></span>  
  
## <a name="schema-qualified-names"></a><span data-ttu-id="577b9-108">スキーマ修飾名</span><span class="sxs-lookup"><span data-stu-id="577b9-108">Schema-qualified Names</span></span>  
 <span data-ttu-id="577b9-109">スキーマ名は、テーブル名を修飾するためにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="577b9-109">You can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="577b9-110">既定では、トークンの最初の期間の左側に、<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>文字列は、スキーマ名と見なされます。</span><span class="sxs-lookup"><span data-stu-id="577b9-110">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name.</span></span> <span data-ttu-id="577b9-111">名前の残りの部分は、テーブル名と見なされます。</span><span class="sxs-lookup"><span data-stu-id="577b9-111">The remainder of the name is considered to be the table name.</span></span> <span data-ttu-id="577b9-112">プロバイダーは、適切なテーブル名を引用符でいます。</span><span class="sxs-lookup"><span data-stu-id="577b9-112">The provider quotes the table name as appropriate.</span></span> <span data-ttu-id="577b9-113">たとえば、 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] for SQL Server プロバイダーは、角かっこを使用するには少なくとも必要な場所を確認します。</span><span class="sxs-lookup"><span data-stu-id="577b9-113">For example, the [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] provider for SQL Server makes sure that brackets are used at least where they are needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="577b9-114">SQL Server プロバイダーは自動的に引用符で囲むのため、場合によっては、明示的に属性を引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="577b9-114">In some cases, you must explicitly quote attributes because the SQL Server provider cannot auto-quote.</span></span> <span data-ttu-id="577b9-115">次の表では、いくつかの例を示します。</span><span class="sxs-lookup"><span data-stu-id="577b9-115">The following table shows some examples.</span></span>  
  
|<span data-ttu-id="577b9-116">Case</span><span class="sxs-lookup"><span data-stu-id="577b9-116">Case</span></span>|<span data-ttu-id="577b9-117">識別子名の例:</span><span class="sxs-lookup"><span data-stu-id="577b9-117">Example: Identifier Name</span></span>|<span data-ttu-id="577b9-118">属性の例: 文字列が必要です。</span><span class="sxs-lookup"><span data-stu-id="577b9-118">Example: Expected String in Attributes</span></span>|<span data-ttu-id="577b9-119">それ以外の場合.</span><span class="sxs-lookup"><span data-stu-id="577b9-119">Otherwise…</span></span>|  
|----------|------------------------------|--------------------------------------------|----------------|  
|<span data-ttu-id="577b9-120">スキーマ名にピリオドが含まれています</span><span class="sxs-lookup"><span data-stu-id="577b9-120">Schema name contains a period</span></span>|<span data-ttu-id="577b9-121">スキーマ:"A.B"</span><span class="sxs-lookup"><span data-stu-id="577b9-121">Schema: "A.B"</span></span><br /><br /> <span data-ttu-id="577b9-122">テーブル:"C"</span><span class="sxs-lookup"><span data-stu-id="577b9-122">Table: "C"</span></span>|<span data-ttu-id="577b9-123">"[A.B]。C"</span><span class="sxs-lookup"><span data-stu-id="577b9-123">"[A.B].C"</span></span>|<span data-ttu-id="577b9-124">最初の期間は、テーブル名からスキーマ名を分離すると見なされます。</span><span class="sxs-lookup"><span data-stu-id="577b9-124">The first period is assumed to separate the schema name from the table name.</span></span>|  
|<span data-ttu-id="577b9-125">を始まるスキーマ/テーブルの名前 `@`</span><span class="sxs-lookup"><span data-stu-id="577b9-125">Schema/Table name starts with `@`</span></span>|<span data-ttu-id="577b9-126">"@SomeName"</span><span class="sxs-lookup"><span data-stu-id="577b9-126">"@SomeName"</span></span>|<span data-ttu-id="577b9-127">"[@SomeName]"</span><span class="sxs-lookup"><span data-stu-id="577b9-127">"[@SomeName]"</span></span>|<span data-ttu-id="577b9-128">パラメーター名であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="577b9-128">Assumed to be a parameter name.</span></span>|  
|<span data-ttu-id="577b9-129">スキーマが始まる`[`で終わります `]`</span><span class="sxs-lookup"><span data-stu-id="577b9-129">Schema starts with `[` and ends with `]`</span></span>|<span data-ttu-id="577b9-130">「[と]」</span><span class="sxs-lookup"><span data-stu-id="577b9-130">"[Schema.Table]"</span></span>|<span data-ttu-id="577b9-131">"[[Schema].[Table]]]"</span><span class="sxs-lookup"><span data-stu-id="577b9-131">"[[Schema].[Table]]]"</span></span>|<span data-ttu-id="577b9-132">引用符なしの識別子では、引用符で囲まれた識別子に似ています。</span><span class="sxs-lookup"><span data-stu-id="577b9-132">The unquoted identifier resembles a quoted identifier.</span></span>|  
|<span data-ttu-id="577b9-133">表の先頭`[`で終わります `]`</span><span class="sxs-lookup"><span data-stu-id="577b9-133">Table starts with `[` and ends with `]`</span></span>|<span data-ttu-id="577b9-134">"[Table]"</span><span class="sxs-lookup"><span data-stu-id="577b9-134">"[Table]"</span></span>|<span data-ttu-id="577b9-135">"[[Table]]]"</span><span class="sxs-lookup"><span data-stu-id="577b9-135">"[[Table]]]"</span></span>|<span data-ttu-id="577b9-136">引用符なしの識別子では、引用符で囲まれた識別子に似ています。</span><span class="sxs-lookup"><span data-stu-id="577b9-136">The unquoted identifier resembles a quoted identifier.</span></span>|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="577b9-137">
            <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="577b9-137">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="577b9-138">テーブルまたはビューの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="577b9-138">Gets or sets the name of the table or view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="577b9-139">既定では、値はクラスの名前と同じです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="577b9-139">By default, the value is the same as the name of the class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="577b9-140">使用して名前を指定しない場合<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>テーブル名は、クラス名と同じであると見なされます。</span><span class="sxs-lookup"><span data-stu-id="577b9-140">If you do not specify a name by using <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, the table name is assumed to be the same as the class name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="577b9-141">スキーマ名は、テーブル名 (たとえば、Schema3.Table5) を修飾するためにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="577b9-141">You can optionally use a schema name to qualify the table name (for example, Schema3.Table5).</span></span> <span data-ttu-id="577b9-142">既定では、トークンの最初の期間の左側に、<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>文字列は、スキーマ名とテーブル名である残りの部分にあると見なされます。</span><span class="sxs-lookup"><span data-stu-id="577b9-142">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name, and the rest to be the table name.</span></span>  
  
 <span data-ttu-id="577b9-143">次の例では、既定のテーブル名で`Customer`に変更が`Customers`します。</span><span class="sxs-lookup"><span data-stu-id="577b9-143">In the following example, the default table name, `Customer`, is changed to `Customers`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>