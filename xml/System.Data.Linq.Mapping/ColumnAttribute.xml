<Type Name="ColumnAttribute" FullName="System.Data.Linq.Mapping.ColumnAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="668c680c666037bdeebebc4e824653b053772028" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36690407" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ColumnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <TypeSignature Language="F#" Value="type ColumnAttribute = class&#xA;    inherit DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bf6b6-101">Associates a class with a column in a database table.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf6b6-101">Associates a class with a column in a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-102">この属性は、データベース テーブルの列を表すエンティティ クラスのメンバーを指定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-102">Use this attribute to designate a member of an entity class to represent a column in a database table.</span></span> <span data-ttu-id="bf6b6-103">この属性を適用するには任意のフィールドまたはプロパティに`public`、 `private`、または`internal`です。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-103">You can apply this attribute to any field or property that is `public`, `private`, or `internal`.</span></span>  
  
 <span data-ttu-id="bf6b6-104">列を保存すると識別されたエンティティ クラスのメンバーだけとき[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]データベースに変更を保存します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-104">Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] saves changes to the database.</span></span>  
  
 <span data-ttu-id="bf6b6-105">コンマを使用して、属性に対して複数のプロパティを区切ります。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-105">Use commas to separate multiple properties on the attribute.</span></span>  
  
   
  
## Examples  
  
```vb  
<Table(Name:="Employees")>  _  
Public Class Employees  
    Private _LastName As String  
    ' …  
    <Column(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", _  
        CanBeNull:=false)> _  
    Public Property LastName() As String  
        Get  
            Return Me._LastName  
        End Get  
        Set  
            If ((Me._LastName = value) _  
                = false) Then  
                Me.OnPropertyChanging("LastName")  
                Me._LastName = value  
                Me.OnPropertyChanged("LastName")  
            End If  
        End Set  
    End Property  
End Class  
```  
  
```csharp  
[Table(Name="Employees")]  
public class Employees  
{  
    private string _LastName;      
    // …  
    [Column(Storage="_LastName", DbType="NVarChar(20) NOT NULL",   
        CanBeNull=false)]  
    public string LastName  
    {  
        get  
        {  
            return this._LastName;  
        }  
        set  
        {  
            if ((this._LastName != value))  
            {  
                this.OnPropertyChanging("LastName");  
                this._LastName = value;  
                this.OnPropertyChanged("LastName");  
            }  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); void set(System::Data::Linq::Mapping::AutoSync value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-108">
            <see cref="T:System.Data.Linq.Mapping.AutoSync" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-108">The <see cref="T:System.Data.Linq.Mapping.AutoSync" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public bool CanBeNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-109">Gets or sets whether a column can contain null values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-109">Gets or sets whether a column can contain null values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-110">既定値 =<see langword="true" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-110">Default = <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-111">この値を設定する場合`false`、対応する列のデータが null 以外であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-111">If you set this value to `false`, the data in the corresponding column is assumed to be non-null.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf6b6-112">このプロパティが重複している、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>利便性のためのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-112">This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience.</span></span> <span data-ttu-id="bf6b6-113"><xref:System.Data.Linq.DataContext.CreateDatabase%2A>のみ使用するメソッド、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-113">The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property.</span></span> <span data-ttu-id="bf6b6-114">このため、列の null 値を含めることができるかどうかを指定する必要があります、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティもします。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-114">For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public string DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DbType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-115">Gets or sets the type of the database column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-115">Gets or sets the type of the database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-116">TRANSACT-SQL テーブル宣言内で列を定義する正確なテキストを指定する文字列値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-116">String value that specifies the exact text that defines the column in a Transact-SQL table declaration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-117">このプロパティを使用して、TRANSACT-SQL テーブル宣言内で列を定義する正確なテキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-117">Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.</span></span> <span data-ttu-id="bf6b6-118">指定して、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティを使用する場合にのみ<xref:System.Data.Linq.DataContext.CreateDatabase%2A>データベースのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-118">Specify the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.</span></span>  
  
 <span data-ttu-id="bf6b6-119">既定値の<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>メンバーの型から推論されます。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-119">The default value of <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> is inferred from the member type.</span></span> <span data-ttu-id="bf6b6-120">詳細については、次を参照してください。 [SQL-CLR 型マッピング](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md)です。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-120">For more information, see [SQL-CLR Type Mapping](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#4)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-121">Gets or sets whether a column is a computed column in a database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-121">Gets or sets whether a column is a computed column in a database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-122">既定値 = 空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-122">Default = empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-123">使用する場合は、このプロパティを使用して<xref:System.Data.Linq.DataContext.CreateDatabase%2A>として計算された値を含む列を定義します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-123">Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.</span></span>  
  
 <span data-ttu-id="bf6b6-124">Sql として定義されている列を作成する場合など`InventoryVal AS UnitPrice * UnitsInStock`、次を使用して*式*文字列:`"UnitPrice * UnitsInStock"`です。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-124">For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `"UnitPrice * UnitsInStock"`.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="bf6b6-125"> では、計算列は主キーとしてサポートされません。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-125"> does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#5)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public bool IsDbGenerated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDbGenerated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-126">Gets or sets whether a column contains values that the database auto-generates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-126">Gets or sets whether a column contains values that the database auto-generates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-127">既定値 =<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-127">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> メンバーは、データの行が挿入され、メンバーは、後に使用後すぐに同期<xref:System.Data.Linq.DataContext.SubmitChanges%2A>が完了します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf6b6-129">列が主キーの値を保持しを指定する場合<xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A>として`true`、追加することも必要があります、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティを使用して、`IDENTITY`修飾子です。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-129">If the column holds primary key values and you designate <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#6)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public bool IsDiscriminator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDiscriminator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-131">既定値 =<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-131">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-132">ときに`true`、このプロパティは、継承階層の識別子の値を保持すると、クラスのメンバーを識別します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-132">When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.</span></span>  
  
 <span data-ttu-id="bf6b6-133">このプロパティを設定することができます`true`でない場合、最上位に属している必要があります、2 つ以上のメンバーが階層内のクラスをマップします。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-133">You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#7)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-135">既定値 =<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-135">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-136">エンティティ クラスと仮定した場合、この属性を持つには、少なくとも 1 つのメンバーを指定する必要があり、主キーまたは一意のキーに対応するテーブルまたはビューにマップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-136">Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="bf6b6-137">この画面の指示を怠る[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]に読み取り専用データベースに変更を送信すると、クラスのインスタンスを考えてみます。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-137">Failure to do this prompts [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.</span></span>  
  
 <span data-ttu-id="bf6b6-138">クラスの 1 つ以上のメンバーを指定するには、このプロパティを使用して、キーが関連付けられている列の合成と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-138">If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="bf6b6-139"> では、計算列は主キーとしてサポートされません。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-139"> does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#8)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public bool IsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVersion { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-141">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-141">Default value = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-142">バージョン番号がインクリメントし、タイムスタンプ列が関連付けられている行が更新されるたびに更新します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-142">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="bf6b6-143">(このプロパティは、通知[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]を新しいバージョンであることを表示する列を更新する必要があります以外の場合は、更新を行ったユーザーなどの情報を記録するものではありません)。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-143">(This property tells [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)</span></span>  
  
 <span data-ttu-id="bf6b6-144">次に注意してくださいとき`IsVersion`が true:</span><span class="sxs-lookup"><span data-stu-id="bf6b6-144">Note the following when `IsVersion` is true:</span></span>  
  
-   <span data-ttu-id="bf6b6-145">使用して<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>バージョン番号またはタイムスタンプ列を指定する正しい修飾子を指定します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-145">Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column.</span></span> <span data-ttu-id="bf6b6-146">指定しない場合<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>、[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]正しい修飾子を推測します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-146">If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] infers the correct modifiers.</span></span>  
  
 <span data-ttu-id="bf6b6-147">バージョン番号がインクリメントし、タイムスタンプ列が関連付けられている行が更新されるたびに更新します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-147">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="bf6b6-148">持つメンバー`IsVersion=true`データ行が更新された後にすぐに同期されます。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-148">Members with `IsVersion=true` are synchronized immediately after the data row is updated.</span></span> <span data-ttu-id="bf6b6-149">新しい値は後に表示されます<xref:System.Data.Linq.DataContext.SubmitChanges%2A>が完了するとします。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-149">The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#9)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); void set(System::Data::Linq::Mapping::UpdateCheck value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf6b6-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf6b6-151">既定値 =<see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />がない限り、<see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />は<see langword="true" />メンバーのです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-151">Default = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, unless <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> is <see langword="true" /> for a member.</span>
          </span>
          <span data-ttu-id="bf6b6-152">その他の値は<see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" />と<see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf6b6-152">Other values are <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> and <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf6b6-153">このプロパティは、次の 3 つの列挙型のいずれかの使用は、時に決定方法[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]同時実行の競合を検出します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-153">When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] detects concurrency conflicts.</span></span>  
  
 <span data-ttu-id="bf6b6-154">として設計されているメンバーがない場合`IsVersion=true`データベースの現在の状態を元のメンバーの値と比較します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-154">If no member is designed as `IsVersion=true`, original member values are compared with the current database state.</span></span>  
  
 <span data-ttu-id="bf6b6-155">次の列挙を使用できます。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-155">The following enums are available:</span></span>  
  
-   <span data-ttu-id="bf6b6-156">`Always` 常にこの列を使用して、競合を検出します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-156">`Always` Always use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="bf6b6-157">`Never` 競合検出に対してこの列を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-157">`Never` Never use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="bf6b6-158">`WhenChanged` メンバーは、アプリケーションによって変更された場合にのみ、この列を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf6b6-158">`WhenChanged` Use this column only when the member has been changed by the application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#10)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>