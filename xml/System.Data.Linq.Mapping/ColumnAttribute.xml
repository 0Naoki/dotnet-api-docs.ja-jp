<Type Name="ColumnAttribute" FullName="System.Data.Linq.Mapping.ColumnAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8a4624d9da40123e3b355e2db0ee0c58fdbaded" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48687785" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ColumnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <TypeSignature Language="F#" Value="type ColumnAttribute = class&#xA;    inherit DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="19ebc-101">データベース テーブルの列にクラスを関連付けます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="19ebc-101">Associates a class with a column in a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-102">この属性は、データベース テーブルの列を表すエンティティ クラスのメンバーを指定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-102">Use this attribute to designate a member of an entity class to represent a column in a database table.</span></span> <span data-ttu-id="19ebc-103">この属性を適用するには任意のフィールドまたはプロパティに`public`、 `private`、または`internal`します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-103">You can apply this attribute to any field or property that is `public`, `private`, or `internal`.</span></span>  
  
 <span data-ttu-id="19ebc-104">列が永続化として識別されるエンティティ クラス メンバーのみと[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]データベースへの変更を保存します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-104">Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] saves changes to the database.</span></span>  
  
 <span data-ttu-id="19ebc-105">コンマを使用して、この属性の複数のプロパティを区切ります。</span><span class="sxs-lookup"><span data-stu-id="19ebc-105">Use commas to separate multiple properties on the attribute.</span></span>  
  
   
  
## Examples  
  
```vb  
<Table(Name:="Employees")>  _  
Public Class Employees  
    Private _LastName As String  
    ' …  
    <Column(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", _  
        CanBeNull:=false)> _  
    Public Property LastName() As String  
        Get  
            Return Me._LastName  
        End Get  
        Set  
            If ((Me._LastName = value) _  
                = false) Then  
                Me.OnPropertyChanging("LastName")  
                Me._LastName = value  
                Me.OnPropertyChanged("LastName")  
            End If  
        End Set  
    End Property  
End Class  
```  
  
```csharp  
[Table(Name="Employees")]  
public class Employees  
{  
    private string _LastName;      
    // …  
    [Column(Storage="_LastName", DbType="NVarChar(20) NOT NULL",   
        CanBeNull=false)]  
    public string LastName  
    {  
        get  
        {  
            return this._LastName;  
        }  
        set  
        {  
            if ((this._LastName != value))  
            {  
                this.OnPropertyChanging("LastName");  
                this._LastName = value;  
                this.OnPropertyChanged("LastName");  
            }  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-106">
            <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); void set(System::Data::Linq::Mapping::AutoSync value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-107">
            <see cref="T:System.Data.Linq.Mapping.AutoSync" /> 列挙体を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-108">
            <see cref="T:System.Data.Linq.Mapping.AutoSync" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-108">The <see cref="T:System.Data.Linq.Mapping.AutoSync" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public bool CanBeNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-109">列が null 値を含むことができるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-109">Gets or sets whether a column can contain null values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-110">既定値は <see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-110">Default = <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-111">この値を設定する場合`false`、対応する列のデータが null 以外であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="19ebc-111">If you set this value to `false`, the data in the corresponding column is assumed to be non-null.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19ebc-112">このプロパティが重複しています、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>利便性のためのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="19ebc-112">This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience.</span></span> <span data-ttu-id="19ebc-113"><xref:System.Data.Linq.DataContext.CreateDatabase%2A>メソッドを使用してのみ、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="19ebc-113">The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property.</span></span> <span data-ttu-id="19ebc-114">このため、列が null 値を含むかどうかを指定する必要があります、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティもします。</span><span class="sxs-lookup"><span data-stu-id="19ebc-114">For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public string DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DbType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-115">データベース列の型を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-115">Gets or sets the type of the database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-116">TRANSACT-SQL テーブル宣言に列を定義する正確なテキストを指定する文字列値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-116">String value that specifies the exact text that defines the column in a Transact-SQL table declaration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-117">このプロパティを使用して、TRANSACT-SQL テーブル宣言に列を定義する正確なテキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-117">Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.</span></span> <span data-ttu-id="19ebc-118">指定、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティを使用して行う場合にのみ<xref:System.Data.Linq.DataContext.CreateDatabase%2A>データベースのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-118">Specify the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.</span></span>  
  
 <span data-ttu-id="19ebc-119">既定値<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>メンバーの種類から推論されます。</span><span class="sxs-lookup"><span data-stu-id="19ebc-119">The default value of <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> is inferred from the member type.</span></span> <span data-ttu-id="19ebc-120">詳細については、次を参照してください。 [SQL-CLR 型マッピング](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md)します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-120">For more information, see [SQL-CLR Type Mapping](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#4)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-121">列がデータベース内の計算列であるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-121">Gets or sets whether a column is a computed column in a database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-122">既定値は empty です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-122">Default = empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-123">使用する場合は、このプロパティを使用して<xref:System.Data.Linq.DataContext.CreateDatabase%2A>として計算された値を含む列の定義にします。</span><span class="sxs-lookup"><span data-stu-id="19ebc-123">Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.</span></span>  
  
 <span data-ttu-id="19ebc-124">Sql として定義されている列を作成したい場合など`InventoryVal AS UnitPrice * UnitsInStock`、次を使用して、*式*文字列:`"UnitPrice * UnitsInStock"`します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-124">For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `"UnitPrice * UnitsInStock"`.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="19ebc-125">では、計算列は主キーとしてサポートされません。</span><span class="sxs-lookup"><span data-stu-id="19ebc-125"> does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#5)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public bool IsDbGenerated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDbGenerated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-126">データベースによって自動生成される値が列に含まれるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-126">Gets or sets whether a column contains values that the database auto-generates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-127">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-127">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> メンバーは、データの行が挿入され、メンバーは、後に使用できる後すぐに同期<xref:System.Data.Linq.DataContext.SubmitChanges%2A>が完了します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19ebc-129">列が主キーの値を保持しを指定する場合<xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A>として`true`、追加することも必要があります、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティを使用して、`IDENTITY`修飾子。</span><span class="sxs-lookup"><span data-stu-id="19ebc-129">If the column holds primary key values and you designate <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#6)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public bool IsDiscriminator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDiscriminator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-130">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] 継承階層の識別子の値が列に含まれるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-131">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-131">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-132">ときに`true`、このプロパティが継承階層の識別子の値を保持すると、クラスのメンバーを識別します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-132">When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.</span></span>  
  
 <span data-ttu-id="19ebc-133">このプロパティを設定することができます`true`ない場合は、複数のメンバーは、最上位に属している必要がありますが、階層内のクラスをマップします。</span><span class="sxs-lookup"><span data-stu-id="19ebc-133">You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#7)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-134">このクラス メンバーが、テーブルの主キーの一部または全体である列を表すかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-135">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-135">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-136">エンティティ クラスと仮定すると、この属性で少なくとも 1 つのメンバーを提供する必要があり、主キーまたは一意のキーに対応するテーブルまたはビューに関連付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="19ebc-136">Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="19ebc-137">この画面の指示を怠る[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]に読み取り専用データベースの変更を送信するためのクラスのインスタンスを検討してください。</span><span class="sxs-lookup"><span data-stu-id="19ebc-137">Failure to do this prompts [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.</span></span>  
  
 <span data-ttu-id="19ebc-138">このプロパティを使用して、クラスの 1 つ以上のメンバーを指定すると、キーが関連付けられている列の複合と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="19ebc-138">If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="19ebc-139">では、計算列は主キーとしてサポートされません。</span><span class="sxs-lookup"><span data-stu-id="19ebc-139"> does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#8)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public bool IsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVersion { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-140">メンバーの列の型が、データベースのタイムスタンプまたはバージョン番号であるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-141">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-141">Default value = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-142">バージョン番号にインクリメントされ、timestamp 列が関連付けられている行が更新されるたびに更新されます。</span><span class="sxs-lookup"><span data-stu-id="19ebc-142">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="19ebc-143">(このプロパティは、通知[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]を新しいバージョンであるかを表示する列を更新する必要があります更新を行ったユーザーなどの情報を記録するものではありません。)。</span><span class="sxs-lookup"><span data-stu-id="19ebc-143">(This property tells [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)</span></span>  
  
 <span data-ttu-id="19ebc-144">次に注意するくださいと`IsVersion`が true:</span><span class="sxs-lookup"><span data-stu-id="19ebc-144">Note the following when `IsVersion` is true:</span></span>  
  
-   <span data-ttu-id="19ebc-145">使用<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>バージョン番号またはタイムスタンプ列を指定する適切な修飾子を指定します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-145">Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column.</span></span> <span data-ttu-id="19ebc-146">指定しない場合<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>、[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]正しい修飾子を推論します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-146">If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] infers the correct modifiers.</span></span>  
  
 <span data-ttu-id="19ebc-147">バージョン番号にインクリメントされ、timestamp 列が関連付けられている行が更新されるたびに更新されます。</span><span class="sxs-lookup"><span data-stu-id="19ebc-147">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="19ebc-148">持つメンバー`IsVersion=true`データ行が更新された後すぐに同期されます。</span><span class="sxs-lookup"><span data-stu-id="19ebc-148">Members with `IsVersion=true` are synchronized immediately after the data row is updated.</span></span> <span data-ttu-id="19ebc-149">新しい値が表示される<xref:System.Data.Linq.DataContext.SubmitChanges%2A>が完了するとします。</span><span class="sxs-lookup"><span data-stu-id="19ebc-149">The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#9)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); void set(System::Data::Linq::Mapping::UpdateCheck value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ebc-150">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] がオプティミスティック コンカレンシーの競合を検出する方法を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ebc-151">既定値は <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" /> です。ただし、メンバーの <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> が <see langword="true" /> の場合を除きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-151">Default = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, unless <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> is <see langword="true" /> for a member.</span>
          </span>
          <span data-ttu-id="19ebc-152">その他の値は、<see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> および <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ebc-152">Other values are <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> and <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ebc-153">このプロパティは、次の 3 つの列挙型のいずれかの使用は場合を決定する方法[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]同時実行の競合を検出します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-153">When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] detects concurrency conflicts.</span></span>  
  
 <span data-ttu-id="19ebc-154">として設計されているメンバーがない場合`IsVersion=true`、元のメンバー値が、現在のデータベースの状態と比較されます。</span><span class="sxs-lookup"><span data-stu-id="19ebc-154">If no member is designed as `IsVersion=true`, original member values are compared with the current database state.</span></span>  
  
 <span data-ttu-id="19ebc-155">次の列挙型を使用できます。</span><span class="sxs-lookup"><span data-stu-id="19ebc-155">The following enums are available:</span></span>  
  
-   <span data-ttu-id="19ebc-156">`Always` 競合検出に対してこの列が常に使用します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-156">`Always` Always use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="19ebc-157">`Never` 競合の検出は、この列を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="19ebc-157">`Never` Never use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="19ebc-158">`WhenChanged` メンバーは、アプリケーションによって変更された場合にのみ、この列を使用します。</span><span class="sxs-lookup"><span data-stu-id="19ebc-158">`WhenChanged` Use this column only when the member has been changed by the application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#10)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>