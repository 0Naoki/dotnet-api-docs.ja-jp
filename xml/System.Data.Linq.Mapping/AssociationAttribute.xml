<Type Name="AssociationAttribute" FullName="System.Data.Linq.Mapping.AssociationAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ffbc0218312f021b0f816a939133095ffee7f285" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681777" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssociationAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssociationAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.AssociationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssociationAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssociationAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <TypeSignature Language="F#" Value="type AssociationAttribute = class&#xA;    inherit DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>外部キー リレーションシップなど、データベースの関連付けを表すプロパティを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この属性を使用して、外部キーと主キー間のリレーションシップなど、データベース内のアソシエーションを表します。  
  
 次の例では、`Order`クラスが含まれています、<xref:System.Data.Linq.Mapping.AssociationAttribute>に関連付ける属性は、顧客と注文です。  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.AssociationAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.AssociationAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssociationAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.AssociationAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssociationAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.Linq.Mapping.AssociationAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteOnNull">
      <MemberSignature Language="C#" Value="public bool DeleteOnNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeleteOnNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.AssociationAttribute.DeleteOnNull" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteOnNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeleteOnNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteOnNull : bool with get, set" Usage="System.Data.Linq.Mapping.AssociationAttribute.DeleteOnNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>外部キー メンバーがすべて Null 非許容の一対一関連付けの場合、関連付けを Null に設定するとオブジェクトが削除されます。</summary>
        <value>
          <see langword="True" /> に設定すると、オブジェクトが削除されます。 既定値は <see langword="False" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRule">
      <MemberSignature Language="C#" Value="public string DeleteRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteRule" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.AssociationAttribute.DeleteRule" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteRule As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteRule { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteRule : string with get, set" Usage="System.Data.Linq.Mapping.AssociationAttribute.DeleteRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けの削除動作を取得または設定します。</summary>
        <value>動作規則を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 かどうかは null に設定、削除の動作は追加します。 たとえば、"CASCADE"は、外部キー リレーションシップに"ON DELETE CASCADE"を追加します。  
  
 次の例では、ルールでは、何も操作します。  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.AssociationAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.AssociationAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForeignKey">
      <MemberSignature Language="C#" Value="public bool IsForeignKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.AssociationAttribute.IsForeignKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsForeignKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForeignKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsForeignKey : bool with get, set" Usage="System.Data.Linq.Mapping.AssociationAttribute.IsForeignKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベースのリレーションシップを表す関連付けで、メンバーを外部キーとして取得または設定します。</summary>
        <value>既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.AssociationAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/cs/northwind.cs#3)]
 [!code-vb[System.Data.Linq.Mapping.AssociationAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/vb/northwind.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public bool IsUnique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnique" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.AssociationAttribute.IsUnique" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnique { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnique : bool with get, set" Usage="System.Data.Linq.Mapping.AssociationAttribute.IsUnique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>外部キーの一意性の制約を示す情報を取得または設定します。</summary>
        <value>既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 True の場合、このプロパティが true の 1 対 1 の関係を示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherKey">
      <MemberSignature Language="C#" Value="public string OtherKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OtherKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.AssociationAttribute.OtherKey" />
      <MemberSignature Language="VB.NET" Value="Public Property OtherKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OtherKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OtherKey : string with get, set" Usage="System.Data.Linq.Mapping.AssociationAttribute.OtherKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ターゲット エンティティ クラスの 1 つ以上のメンバーを、関連付けの他方の側のキー値として取得または設定します。</summary>
        <value>既定値は関連クラスの ID です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数のメンバーのコンマ区切りのリストを使用します。  
  
 キーが主キーまたは外部キーですがユーザー指定のカーディナリティと一致する必要はありません (0 ~ 1 の<xref:System.Data.Linq.EntityRef%601>または 0 ~ n 個の<xref:System.Data.Linq.EntitySet%601>) true と見なされます。  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.AssociationAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.AssociationAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisKey">
      <MemberSignature Language="C#" Value="public string ThisKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThisKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.AssociationAttribute.ThisKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ThisKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThisKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThisKey : string with get, set" Usage="System.Data.Linq.Mapping.AssociationAttribute.ThisKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けのこちら側のキー値を表す、このエンティティ クラスのメンバーを取得または設定します。</summary>
        <value>既定値は含まれるクラスの ID です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数のメンバーのコンマ区切りのリストを使用します。  
  
 キーが主キーまたは外部キーですがユーザー指定のカーディナリティと一致する必要はありません (0 ~ 1 の<xref:System.Data.Linq.EntityRef%601>または 0 ~ n 個の<xref:System.Data.Linq.EntitySet%601>) true と見なされます。  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.AssociationAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/cs/northwind.cs#3)]
 [!code-vb[System.Data.Linq.Mapping.AssociationAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.AssociationAttribute/vb/northwind.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>