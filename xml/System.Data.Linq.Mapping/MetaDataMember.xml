<Type Name="MetaDataMember" FullName="System.Data.Linq.Mapping.MetaDataMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cf54bae434190af590f27b011f61805bf3dbb2f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70600703" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetaDataMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaDataMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaDataMember" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaDataMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaDataMember abstract" />
  <TypeSignature Language="F#" Value="type MetaDataMember = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="36dca-101">データベース テーブルの列への、ドメイン オブジェクトのフィールドまたはプロパティのマップを表します。</span><span class="sxs-lookup"><span data-stu-id="36dca-101">Represents the mapping between a field or a property of a domain object into a column of a database table.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaDataMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaDataMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36dca-102"><see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="36dca-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Association">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAssociation Association" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Association As MetaAssociation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAssociation ^ Association { System::Data::Linq::Mapping::MetaAssociation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Association : System.Data.Linq.Mapping.MetaAssociation" Usage="System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAssociation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-103">派生クラスでオーバーライドされた場合は、このメンバーに対応する <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-103">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> that corresponds to this member.</span></span></summary>
        <value><span data-ttu-id="36dca-104">存在する場合は、対応する <see cref="T:System.Data.Linq.Mapping.MetaAssociation" />。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36dca-104">The corresponding <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> if one exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-105">このプロパティは、外部キーと主キーのリレーションシップのようなデータベースの関連付けを表します。</span><span class="sxs-lookup"><span data-stu-id="36dca-105">This property represents a database association like a foreign-key to primary-key relationship.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync" Usage="System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-106">派生クラスでオーバーライドされた場合は、挿入操作および更新操作に使用するこのメンバーの読み戻し動作が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-106">When overridden in a derived class, gets the read-back behavior for this member for insert and update operations.</span></span></summary>
        <value><span data-ttu-id="36dca-107">挿入操作と更新操作の読み取り戻る動作を示す列挙値の1つ。</span><span class="sxs-lookup"><span data-stu-id="36dca-107">One of the enumeration values that indicates the read-back behavior for insert and update operations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public abstract bool CanBeNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanBeNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-108">派生クラスでオーバーライドされた場合は、このメンバーの値を <see langword="null" /> 値に割り当てられるかどうかを示す値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-108">When overridden in a derived class, gets a value that indicates whether the value of this member can be assigned the <see langword="null" /> value.</span></span></summary>
        <value><span data-ttu-id="36dca-109">このメンバーに <see langword="true" /> 値を割り当てることができる場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36dca-109"><see langword="true" /> if this member can be assigned the <see langword="null" /> value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-110">このプロパティは、 <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>プロパティに依存しており、便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="36dca-110">This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public abstract string DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DbType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string" Usage="System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-111">派生クラスでオーバーライドされた場合は、対応するデータベース列の型が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-111">When overridden in a derived class, gets the type of the corresponding database column.</span></span></summary>
        <value><span data-ttu-id="36dca-112">データベース列の型を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="36dca-112">The type of the database column as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-113">これは、Transact-sql テーブル宣言コマンドで列を定義するために使用される正確なテキストになります。</span><span class="sxs-lookup"><span data-stu-id="36dca-113">This will be the exact text used to define the column in a Transact-SQL table declaration command.</span></span> <span data-ttu-id="36dca-114">定義されていない場合、データベースの列の型はメンバーの型から推論されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-114">If not so defined, the database column type is inferred from the member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ DeclaringType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Data.Linq.Mapping.MetaType" Usage="System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-115">派生クラスでオーバーライドされた場合は、このデータ メンバーを格納している <see cref="T:System.Data.Linq.Mapping.MetaType" /> が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-115">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> that contains this data member.</span></span></summary>
        <value><span data-ttu-id="36dca-116">現在のメンバーを格納するメタ型。</span><span class="sxs-lookup"><span data-stu-id="36dca-116">The meta-type that contains the current member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredSourceAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredSourceAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredSourceAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferredSourceAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-117">派生クラスでオーバーライドされた場合は、このメンバーの遅延ソースを取得および設定するために使用されるアクセサーが取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-117">When overridden in a derived class, gets the accessor that is used to get and set the deferred source of this member.</span></span></summary>
        <value><span data-ttu-id="36dca-118">このメンバーの遅延ソースにアクセスするために使用されるアクセサー。</span><span class="sxs-lookup"><span data-stu-id="36dca-118">The accessor used to access the deferred source for this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredValueAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredValueAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredValueAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferredValueAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-119">派生クラスでオーバーライドされた場合は、このメンバーの遅延値を、フェッチを使用せずに取得および設定するために使用されるアクセサーが取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-119">When overridden in a derived class, gets the accessor that is used to get and set the deferred value of this member (without causing fetch).</span></span></summary>
        <value><span data-ttu-id="36dca-120">このメンバーの遅延値にアクセスするために使用されるアクセサー。</span><span class="sxs-lookup"><span data-stu-id="36dca-120">The accessor used to access the deferred value for this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string" Usage="System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-121">派生クラスでオーバーライドされた場合は、計算列を定義する式が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-121">When overridden in a derived class, gets the expression that defines a computed column.</span></span></summary>
        <value><span data-ttu-id="36dca-122">計算列の式を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="36dca-122">The expression for the computed column as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssociation">
      <MemberSignature Language="C#" Value="public abstract bool IsAssociation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssociation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAssociation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAssociation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssociation : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-123">派生クラスでオーバーライドされた場合は、このメンバーによって関連付けのリレーションシップが定義されるかどうかを示す値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-123">When overridden in a derived class, gets a value that indicates whether this member defines an association relationship.</span></span></summary>
        <value><span data-ttu-id="36dca-124">このメンバーが関連付けのリレーションシップを定義する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36dca-124"><see langword="true" /> if this member defines an association relationship; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public abstract bool IsDbGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDbGenerated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-125">派生クラスでオーバーライドされた場合は、このメンバーがデータベースによって自動的に生成されるかどうかを示す値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-125">When overridden in a derived class, gets a value that indicates whether this member is automatically generated by the database.</span></span></summary>
        <value><span data-ttu-id="36dca-126"><see langword="true" />このメンバーがデータベースによって自動的に生成される場合は。それ以外<see langword="false" />の場合は。</span><span class="sxs-lookup"><span data-stu-id="36dca-126"><see langword="true" /> if this member is automatically generated by the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-127">自動的に生成されたメンバーは、対応するデータ行が挿入された直後に同期されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-127">Automatically generated members are synchronized immediately after the corresponding data row is inserted.</span></span> <span data-ttu-id="36dca-128">トリガーで生成されたキー値の挿入はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="36dca-128">Insert trigger-generated key values are not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaredBy">
      <MemberSignature Language="C#" Value="public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclaredBy(class System.Data.Linq.Mapping.MetaType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDeclaredBy (type As MetaType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDeclaredBy(System::Data::Linq::Mapping::MetaType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsDeclaredBy : System.Data.Linq.Mapping.MetaType -&gt; bool" Usage="metaDataMember.IsDeclaredBy type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Linq.Mapping.MetaType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="36dca-129">確認する型。</span><span class="sxs-lookup"><span data-stu-id="36dca-129">The type to check.</span></span></param>
        <summary><span data-ttu-id="36dca-130">派生クラスでオーバーライドされた場合は、このメンバーが、指定した型によって宣言されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="36dca-130">When overridden in a derived class, specifies whether this member is declared by the specified type.</span></span></summary>
        <returns><span data-ttu-id="36dca-131">このメンバーが、指定した型によって宣言されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36dca-131"><see langword="true" /> if this member is declared by the specified type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public abstract bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDeferred { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeferred : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-132">派生クラスでオーバーライドされた場合は、遅延ベースでこのメンバーを読み込むことが既定の動作であるかどうかを示す値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-132">When overridden in a derived class, gets a value that indicates whether the default behavior is to load this member on a deferred basis.</span></span></summary>
        <value><span data-ttu-id="36dca-133"><see langword="true" />既定で、このメンバーが遅延ベースで読み込まれる場合は。それ以外<see langword="false" />の場合は。</span><span class="sxs-lookup"><span data-stu-id="36dca-133"><see langword="true" /> if this member is loaded on a deferred basis by default; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public abstract bool IsDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDiscriminator { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-134">派生クラスでオーバーライドされた場合は、このメンバーが継承識別子を表しているかどうかを示す値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-134">When overridden in a derived class, gets a value that indicates whether this member represents the inheritance discriminator.</span></span></summary>
        <value><span data-ttu-id="36dca-135">このメンバーが継承識別子を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36dca-135"><see langword="true" /> if this member represents the inheritance discriminator; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-136">このプロパティには`true` 、階層内の最上位のマップされたクラスのメンバーを1つだけ指定できます。</span><span class="sxs-lookup"><span data-stu-id="36dca-136">This property can be `true` for at most one member of the topmost mapped class in a hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public abstract bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPersistent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-137">派生クラスでオーバーライドされた場合は、このメンバーが列 (または制約) にマップされているかどうかを示す値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-137">When overridden in a derived class, gets a value that indicates whether this member is mapped to a column (or constraint).</span></span></summary>
        <value><span data-ttu-id="36dca-138">このメンバーが列または制約にマップされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36dca-138"><see langword="true" /> if this member is mapped to a column (or constraint); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-139">クラスには、永続メンバーと非永続的メンバーの組み合わせを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="36dca-139">A class may have a combination of persistent and non-persistent members.</span></span> <span data-ttu-id="36dca-140">永続メンバーは、非永続メンバーがマップされていない間にマップされます。</span><span class="sxs-lookup"><span data-stu-id="36dca-140">Persistent members are mapped while non-persistent members are not mapped.</span></span> <span data-ttu-id="36dca-141">マップされたクラスには、少なくとも1つの永続メンバーが必要です。</span><span class="sxs-lookup"><span data-stu-id="36dca-141">A mapped class must have at least one persistent member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-142">派生クラスでオーバーライドされた場合は、このメンバーが型の ID の一部であるかどうかを示す値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-142">When overridden in a derived class, gets a value that indicates whether this member is part of the type's identity.</span></span></summary>
        <value><span data-ttu-id="36dca-143">このメンバーが型の ID の一部である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36dca-143"><see langword="true" /> if this member is part of the type's identity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-144">このプロパティが`true`の場合、クラスメンバーは、テーブルの一意のキーの一部である列を表します。</span><span class="sxs-lookup"><span data-stu-id="36dca-144">If this property is `true`, the class member represents a column that is part of the table's unique key.</span></span> <span data-ttu-id="36dca-145">関連付けられている列の複合キーに対して、 `true`クラスの複数のメンバーがこのプロパティをに設定できます。</span><span class="sxs-lookup"><span data-stu-id="36dca-145">More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns.</span></span> <span data-ttu-id="36dca-146">エンティティクラスの場合、少なくとも1つのメンバーがこの属性を持ち、対応するテーブルまたはビューの主キーまたは一意キーにマップされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="36dca-146">For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="36dca-147">それ以外の場合、LINQ to SQL は、データベースに変更を送信するために、クラスのインスタンスを読み取り専用と見なします。</span><span class="sxs-lookup"><span data-stu-id="36dca-147">Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.</span></span>  
  
 <span data-ttu-id="36dca-148">で<xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A>識別される列のセットは、主キーである必要はありません。</span><span class="sxs-lookup"><span data-stu-id="36dca-148">The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key.</span></span> <span data-ttu-id="36dca-149">単純に、エンティティを一意に識別するセットを表します。</span><span class="sxs-lookup"><span data-stu-id="36dca-149">They simply denote a set that uniquely identifies the entity.</span></span> <span data-ttu-id="36dca-150">一般的な選択肢としては、クラスター化インデックス列やその他の一意のキー列があります。</span><span class="sxs-lookup"><span data-stu-id="36dca-150">Common alternatives include clustering index columns or other unique key columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public abstract bool IsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsVersion { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-151">派生クラスでオーバーライドされた場合は、このメンバーが行のバージョンまたはタイムスタンプを表すかどうかを示す値が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-151">When overridden in a derived class, gets a value that indicates whether this member represents the row version or timestamp.</span></span></summary>
        <value><span data-ttu-id="36dca-152">このメンバーが行のバージョンまたはタイムスタンプを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36dca-152"><see langword="true" /> if this member represents the row version or timestamp; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-153">バージョン番号が増分され、関連付けられた行が更新されるたびにタイムスタンプ列が更新されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-153">Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo LoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo LoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LoadMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ LoadMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadMethod : System.Reflection.MethodInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-154">派生クラスでオーバーライドされた場合は、読み込み操作を行うために使用される <see cref="T:System.Data.Linq.DataContext" /> メソッドが取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-154">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.DataContext" /> method that is used to perform load operations.</span></span></summary>
        <value><span data-ttu-id="36dca-155"><see cref="T:System.Reflection.MethodInfo" /> としての load メソッド。</span><span class="sxs-lookup"><span data-stu-id="36dca-155">The load method as <see cref="T:System.Reflection.MethodInfo" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MappedName : string" Usage="System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-156">派生クラスでオーバーライドされた場合は、列 (または制約) の名前を示す文字列が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-156">When overridden in a derived class, gets the name of the column (or constraint) in the database.</span></span></summary>
        <value><span data-ttu-id="36dca-157">列または制約の名前を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="36dca-157">The name of the column (or constraint) as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-158">派生クラスでオーバーライドされた場合は、基になる <see cref="T:System.Reflection.MemberInfo" /> が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-158">When overridden in a derived class, gets the underlying <see cref="T:System.Reflection.MemberInfo" />.</span></span></summary>
        <value><span data-ttu-id="36dca-159">メンバー属性およびメタデータ情報。</span><span class="sxs-lookup"><span data-stu-id="36dca-159">The member attribute and metadata information.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor MemberAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ MemberAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-160">派生クラスでオーバーライドされた場合は、このメンバーの値を取得または設定するために使用されるアクセサーが取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-160">When overridden in a derived class, gets the accessor that is used to get or set the value of this member.</span></span></summary>
        <value><span data-ttu-id="36dca-161">アクセサー。</span><span class="sxs-lookup"><span data-stu-id="36dca-161">The accessor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-162">派生クラスでオーバーライドされた場合は、<see cref="T:System.Reflection.MemberInfo" /> 名と同じであるメンバー名が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-162">When overridden in a derived class, gets the name of the member, which is the same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span></span></summary>
        <value><span data-ttu-id="36dca-163">名前。名前と<see cref="T:System.Reflection.MemberInfo" />同じです。</span><span class="sxs-lookup"><span data-stu-id="36dca-163">The name, which is the same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public abstract int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-164">派生クラスでオーバーライドされた場合は、クエリ結果の既定のレイアウト内のこのメンバーの位置を表す序数が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-164">When overridden in a derived class, gets the ordinal position of this member in the default layout of query results.</span></span></summary>
        <value><span data-ttu-id="36dca-165">位置を表す序数。</span><span class="sxs-lookup"><span data-stu-id="36dca-165">The ordinal position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor StorageAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ StorageAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-166">派生クラスでオーバーライドされた場合は、このメンバーのストレージ値を取得または設定するために使用されるアクセサーが取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-166">When overridden in a derived class, gets the accessor that is used to get or set the storage value of this member.</span></span></summary>
        <value><span data-ttu-id="36dca-167">このメンバーのストレージ値のアクセサー。</span><span class="sxs-lookup"><span data-stu-id="36dca-167">The accessor for the storage value of this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo StorageMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo StorageMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ StorageMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageMember : System.Reflection.MemberInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-168">派生クラスでオーバーライドされた場合は、このメンバーのデータを格納するメンバーが取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-168">When overridden in a derived class, gets the member that stores the data for this member.</span></span></summary>
        <value><span data-ttu-id="36dca-169">ストレージ メンバー。</span><span class="sxs-lookup"><span data-stu-id="36dca-169">The storage member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-170">派生クラスでオーバーライドされた場合は、このメンバーの型が取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-170">When overridden in a derived class, gets the type of this member.</span></span></summary>
        <value><span data-ttu-id="36dca-171">現在のメンバーの型。</span><span class="sxs-lookup"><span data-stu-id="36dca-171">The type of the current member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck" Usage="System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36dca-172">派生クラスでオーバーライドされた場合は、このメンバーのオプティミスティック コンカレンシー チェック ポリシーが取得されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-172">When overridden in a derived class, gets the optimistic concurrency check policy for this member.</span></span></summary>
        <value><span data-ttu-id="36dca-173">このメンバーのオプティミスティック同時実行制御チェックポリシーを示す列挙値の1つ。</span><span class="sxs-lookup"><span data-stu-id="36dca-173">One of the enumeration values that indicates the optimistic concurrency check policy for this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36dca-174">クラスにバージョンメンバー (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A>に設定) がない場合、元のメンバー値を現在のデータベースの状態と比較する`true`ことによって検出が実行されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-174">If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.</span></span>  
  
 <span data-ttu-id="36dca-175">プロパティ<xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A>は、オプティミスティック同時実行制御で LINQ to SQL が競合検出を実装する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="36dca-175">The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.</span></span> <span data-ttu-id="36dca-176">このプロパティがまたは<xref:System.Data.Linq.Mapping.UpdateCheck.Always> <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged>に設定されているメンバーのみが競合の検出時に考慮されます。</span><span class="sxs-lookup"><span data-stu-id="36dca-176">Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
