<Namespace Name="System.Text">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30736136" /></Metadata><Docs>
    <summary><span data-ttu-id="56b55-101"><see cref="N:System.Text" /> 名前空間には、ASCII および Unicode 文字エンコーディングを表すクラスが含まれます。バイトのブロック間で文字ブロックを変換するための抽象型基本クラス、<see cref="T:System.String" /> の中間インスタンスを作成せずに <see cref="T:System.String" /> オブジェクトを操作および書式設定するヘルパー クラスです。</span><span class="sxs-lookup"><span data-stu-id="56b55-101">The <see cref="N:System.Text" /> namespace contains classes that represent ASCII and Unicode character encodings; abstract base classes for converting blocks of characters to and from blocks of bytes; and a helper class that manipulates and formats <see cref="T:System.String" /> objects without creating intermediate instances of <see cref="T:System.String" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b55-102">エンコーディング クラスは主に、異なるエンコードまたはコード ページと Unicode エンコーディング変換するものです。</span><span class="sxs-lookup"><span data-stu-id="56b55-102">The encoding classes are primarily intended to convert between different encodings or code pages and a Unicode encoding.</span></span> <span data-ttu-id="56b55-103"><xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> .NET Framework で内部的に使用されます (utf-16) エンコーディングと<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>は多くの場合に使用するエンコーディング文字データを格納するマシンとのカルチャでの移植性を確保します。</span><span class="sxs-lookup"><span data-stu-id="56b55-103"><xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> (UTF-16) encoding is used internally by the .NET Framework, and <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding is often used for storing character data to ensure portability across machines and cultures.</span></span>  
  
 <span data-ttu-id="56b55-104">派生したクラス<xref:System.Text.Encoding>(バイト単位) のシーケンスにエンコードできない文字または文字をデコードできないバイトを処理する方法を決定する、フォールバック ストラテジを選択できます。</span><span class="sxs-lookup"><span data-stu-id="56b55-104">The classes derived from <xref:System.Text.Encoding> enable you to choose a fallback strategy, which determines how characters that cannot be encoded into a sequence of bytes, or bytes that cannot be decoded into characters, are handled.</span></span> <span data-ttu-id="56b55-105">次のいずれかを選択できます。</span><span class="sxs-lookup"><span data-stu-id="56b55-105">You can choose one of the following:</span></span>  
  
-   <span data-ttu-id="56b55-106">例外フォールバックします。</span><span class="sxs-lookup"><span data-stu-id="56b55-106">Exception fallback.</span></span> <span data-ttu-id="56b55-107">いずれかを使用してデータのエラーに例外をスローすることができます、`throwonerror`またはを使用して一部のクラス コンス トラクターで使用できるフラグ、<xref:System.Text.EncoderExceptionFallback>と<xref:System.Text.DecoderExceptionFallback>クラス。</span><span class="sxs-lookup"><span data-stu-id="56b55-107">You can choose to throw exceptions on data errors either by using a `throwonerror` flag that is available in some class constructors or by using the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="56b55-108">データ ストリームの整合性に関する懸念がある場合は、例外のスローことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="56b55-108">If you are concerned about the integrity of the data stream, throwing on an exception is recommended.</span></span>  
  
-   <span data-ttu-id="56b55-109">置換フォールバックします。</span><span class="sxs-lookup"><span data-stu-id="56b55-109">Replacement fallback.</span></span> <span data-ttu-id="56b55-110">使用することができます、<xref:System.Text.EncoderFallback>と<xref:System.Text.DecoderFallback>に文字を通知なしに変更するためのクラス"でしょうか。"や、Unicode replacement character (U+FFFD) にします。</span><span class="sxs-lookup"><span data-stu-id="56b55-110">You can use the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes to silently change a character to "?" or to the Unicode replacement character (U+FFFD).</span></span>  
  
-   <span data-ttu-id="56b55-111">最適フォールバックはします。</span><span class="sxs-lookup"><span data-stu-id="56b55-111">Best-fit fallback.</span></span> <span data-ttu-id="56b55-112">このオプションは、別のエンコード内の文字を 1 つのエンコーディングで文字をマップします。</span><span class="sxs-lookup"><span data-stu-id="56b55-112">This option maps a character in one encoding to a character in another encoding.</span></span> <span data-ttu-id="56b55-113">最適フォールバックはデータが失われると、混乱が生じるために、推奨されません多くの場合と、単純な"?"文字を置換します。</span><span class="sxs-lookup"><span data-stu-id="56b55-113">Best fit fallback is often not recommended because it can cause data loss and confusion, and is slower than simple "?" character replacements.</span></span> <span data-ttu-id="56b55-114">ただし、ANSI コード ページの最適動作は既定値です。</span><span class="sxs-lookup"><span data-stu-id="56b55-114">However, for ANSI code pages the best-fit behavior is the default.</span></span>  
  
 <span data-ttu-id="56b55-115"><xref:System.Text.StringBuilder>クラスが 1 つの文字列に対して広範な操作を実行する操作に設計されています。</span><span class="sxs-lookup"><span data-stu-id="56b55-115">The <xref:System.Text.StringBuilder> class is designed for operations that perform extensive manipulations on a single string.</span></span> <span data-ttu-id="56b55-116">異なり、<xref:System.String>クラス、<xref:System.Text.StringBuilder>クラスは、変更、連結または文字列を削除するときのパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="56b55-116">Unlike the <xref:System.String> class, the <xref:System.Text.StringBuilder> class is mutable and provides better performance when concatenating or deleting strings.</span></span>  
  
 <span data-ttu-id="56b55-117">詳細については<xref:System.Text?displayProperty=nameWithType>を参照してください[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)します。</span><span class="sxs-lookup"><span data-stu-id="56b55-117">For more information about <xref:System.Text?displayProperty=nameWithType>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>
