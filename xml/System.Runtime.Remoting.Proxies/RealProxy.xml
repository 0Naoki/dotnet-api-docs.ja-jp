<Type Name="RealProxy" FullName="System.Runtime.Remoting.Proxies.RealProxy">
  <TypeSignature Language="C#" Value="public abstract class RealProxy" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit RealProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Proxies.RealProxy" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RealProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RealProxy abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d16b2-101">プロキシの基本機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-101">Provides base functionality for proxies.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-102"><xref:System.Runtime.Remoting.Proxies.RealProxy>クラスは、`abstract`基底クラスのプロキシの派生元である必要があります。</span><span class="sxs-lookup"><span data-stu-id="d16b2-102">The <xref:System.Runtime.Remoting.Proxies.RealProxy> class is the `abstract` base class from which proxies must derive.</span></span>  
  
 <span data-ttu-id="d16b2-103">あらゆる種類のリモート処理境界を越えてオブジェクトを使用するクライアントは、透過プロキシを使用して、オブジェクトは実際にします。</span><span class="sxs-lookup"><span data-stu-id="d16b2-103">A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.</span></span> <span data-ttu-id="d16b2-104">透過プロキシは、クライアントの領域に、実際のオブジェクトが格納されている奥行を提供します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-104">The transparent proxy provides the illusion that the actual object resides in the client's space.</span></span> <span data-ttu-id="d16b2-105">これで、リモート処理インフラストラクチャを使用して実際のオブジェクトへの呼び出しを転送することによって、これを実現します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-105">It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</span></span>  
  
 <span data-ttu-id="d16b2-106">透過的なプロキシ型のマネージ ランタイム クラスのインスタンスによって自体は<xref:System.Runtime.Remoting.Proxies.RealProxy>します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-106">The transparent proxy is itself housed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>.</span></span> <span data-ttu-id="d16b2-107"><xref:System.Runtime.Remoting.Proxies.RealProxy>透過プロキシから、操作を転送するために必要な機能の一部を実装します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-107">The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality that is needed to forward the operations from the transparent proxy.</span></span> <span data-ttu-id="d16b2-108">プロキシ オブジェクトがガベージ コレクション、フィールドおよびメソッドのサポートなどのマネージ オブジェクトに関連付けられたセマンティクスを継承し、新しいクラスを形成する拡張できることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d16b2-108">Note that a proxy object inherits the associated semantics of managed objects such as garbage collection, support for fields and methods, and can be extended to form new classes.</span></span> <span data-ttu-id="d16b2-109">プロキシがデュアル性質: その機能は、リモート オブジェクト (透過プロキシ) と同じクラスのオブジェクトであり、マネージ オブジェクト自体です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-109">The proxy has a dual nature: it acts as an object of the same class as the remote object (transparent proxy), and it is a managed object itself.</span></span>  
  
 <span data-ttu-id="d16b2-110">プロキシ オブジェクトには関係なく使用できます、<xref:System.AppDomain>です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-110">A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d16b2-111">このクラスは、リンク確認要求し、クラス レベルの継承確認要求を使用します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-111">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="d16b2-112">A<xref:System.Security.SecurityException>直前の呼び出し元または派生クラスのいずれかに、インフラストラクチャのアクセス許可があるない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-112">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission.</span></span> <span data-ttu-id="d16b2-113">セキュリティ要求の詳細については、「[リンク確認要求](~/docs/framework/misc/link-demands.md)と[継承確認要求](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-113">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 [!code-cpp[ChannelServices_SyncDispatchMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ChannelServices_SyncDispatchMessage/CPP/channelservices_syncdispatchmessage_client.cpp#1)]
 [!code-csharp[ChannelServices_SyncDispatchMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ChannelServices_SyncDispatchMessage/CS/channelservices_syncdispatchmessage_client.cs#1)]
 [!code-vb[ChannelServices_SyncDispatchMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ChannelServices_SyncDispatchMessage/VB/channelservices_syncdispatchmessage_client.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-114">インフラストラクチャ コードを操作します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-114">For operating with infrastructure code.</span></span> <span data-ttu-id="d16b2-115">要求値:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="d16b2-115">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission Value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="d16b2-116">継承する場合<see cref="T:System.Runtime.Remoting.Proxies.RealProxy" />、オーバーライドする必要があります、<see cref="M:System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d16b2-116">When you inherit from <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" />, you must override the <see cref="M:System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)" /> method.</span></span></para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d16b2-117"><see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RealProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RealProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d16b2-118">
          <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> クラスの新しいインスタンスを既定値で初期化します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#12](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#12)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#12](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#12)]
 [!code-vb[CustomProxy_Attribute_RealProxy#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RealProxy (Type classToProxy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type classToProxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (classToProxy As Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RealProxy(Type ^ classToProxy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classToProxy" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="classToProxy"><span data-ttu-id="d16b2-119">プロキシの作成対象のリモート オブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d16b2-119">The <see cref="T:System.Type" /> of the remote object for which to create a proxy.</span></span></param>
        <summary><span data-ttu-id="d16b2-120">指定した <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> のリモート オブジェクトを表す、<see cref="T:System.Type" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-120">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> class that represents a remote object of the specified <see cref="T:System.Type" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-121">現在のメソッドを作成、透過的なプロキシを経由でアクセスできる、<xref:System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d16b2-121">The current method creates a transparent proxy, which can be accessed through the <xref:System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy%2A> method.</span></span>  
  
 <span data-ttu-id="d16b2-122">あらゆる種類のリモート処理境界を越えてオブジェクトを使用するクライアントは、透過プロキシを使用して、オブジェクトは実際にします。</span><span class="sxs-lookup"><span data-stu-id="d16b2-122">A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.</span></span> <span data-ttu-id="d16b2-123">透過プロキシは、クライアントの領域に、実際のオブジェクトが格納されているという印象を示します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-123">The transparent proxy gives the impression that the actual object resides in the client's space.</span></span> <span data-ttu-id="d16b2-124">これで、リモート処理インフラストラクチャを使用して実際のオブジェクトへの呼び出しを転送することによって、これを実現します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-124">It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</span></span>  
  
 <span data-ttu-id="d16b2-125">透過プロキシはマネージ ランタイム クラスのインスタンスが格納されています<xref:System.Runtime.Remoting.Proxies.RealProxy>です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-125">The transparent proxy is housed by an instance of a managed runtime class <xref:System.Runtime.Remoting.Proxies.RealProxy>.</span></span> <span data-ttu-id="d16b2-126"><xref:System.Runtime.Remoting.Proxies.RealProxy>透過プロキシから、操作を転送するために必要な機能の一部を実装します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-126">The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality that is needed to forward the operations from the transparent proxy.</span></span> <span data-ttu-id="d16b2-127">プロキシ オブジェクトがガベージ コレクションのフィールドおよびメソッドのサポートなどのマネージ オブジェクトに関連付けられたセマンティクスを継承し、新しいクラスを形成する拡張できることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d16b2-127">Note that a proxy object inherits the associated semantics of managed objects such as garbage collection and support for fields and methods, and can be extended to form new classes.</span></span> <span data-ttu-id="d16b2-128">プロキシがデュアル性質: これは、リモート オブジェクト (透過プロキシ) と同じクラスのオブジェクトとして機能し、マネージ オブジェクト自体は、します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-128">The proxy has a dual nature: it acts as an object of the same class as the remote object (transparent proxy), and is a managed object itself.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#10)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#10)]
 [!code-vb[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d16b2-129"><paramref name="classToProxy" /> がインターフェイスではなく、<see cref="T:System.MarshalByRefObject" /> からも派生していません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-129"><paramref name="classToProxy" /> is not an interface, and is not derived from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RealProxy (Type classToProxy, IntPtr stub, object stubData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type classToProxy, native int stub, object stubData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type,System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (classToProxy As Type, stub As IntPtr, stubData As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RealProxy(Type ^ classToProxy, IntPtr stub, System::Object ^ stubData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classToProxy" Type="System.Type" />
        <Parameter Name="stub" Type="System.IntPtr" />
        <Parameter Name="stubData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="classToProxy"><span data-ttu-id="d16b2-130">プロキシの作成対象のリモート オブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d16b2-130">The <see cref="T:System.Type" /> of the remote object for which to create a proxy.</span></span></param>
        <param name="stub"><span data-ttu-id="d16b2-131">新しいプロキシ インスタンスに関連付けるスタブ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-131">A stub to associate with the new proxy instance.</span></span></param>
        <param name="stubData"><span data-ttu-id="d16b2-132">指定したスタブと新しいプロキシ インスタンスに設定するスタブ データ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-132">The stub data to set for the specified stub and the new proxy instance.</span></span></param>
        <summary><span data-ttu-id="d16b2-133"><see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-133">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-134">スタブ データは、受信メソッド呼び出しを行うには何を決定するカスタムのプロキシ ユーザーによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-134">The stub data is used by custom proxy users to decide what to do with an incoming method call.</span></span> <span data-ttu-id="d16b2-135">たとえば、スタブ データには、ローカル、呼び出しを実行するかどうかを決定するを使用またはリモート処理インフラストラクチャを介して送信できます、サーバーのコンテキストに関する情報があります。</span><span class="sxs-lookup"><span data-stu-id="d16b2-135">For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d16b2-136"><paramref name="classToProxy" /> がインターフェイスではなく、<see cref="T:System.MarshalByRefObject" /> からも派生していません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-136"><paramref name="classToProxy" /> is not an interface, and is not derived from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-137">アンマネージ コードを呼び出す。</span><span class="sxs-lookup"><span data-stu-id="d16b2-137">For calling unmanaged code.</span></span> <span data-ttu-id="d16b2-138"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="d16b2-138">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AttachServer">
      <MemberSignature Language="C#" Value="protected void AttachServer (MarshalByRefObject s);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AttachServer(class System.MarshalByRefObject s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AttachServer (s As MarshalByRefObject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AttachServer(MarshalByRefObject ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d16b2-139">現在のプロキシ インスタンスが表す <see cref="T:System.MarshalByRefObject" />。</span><span class="sxs-lookup"><span data-stu-id="d16b2-139">The <see cref="T:System.MarshalByRefObject" /> that the current proxy instance represents.</span></span></param>
        <summary><span data-ttu-id="d16b2-140">現在のプロキシ インスタンスを、指定したリモート <see cref="T:System.MarshalByRefObject" /> に結び付けます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-140">Attaches the current proxy instance to the specified remote <see cref="T:System.MarshalByRefObject" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d16b2-141">即時呼び出し元には、UnmanagedCode アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-141">The immediate caller does not have UnmanagedCode permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-142">アンマネージ コードを呼び出す必要なアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d16b2-142">For the ability to call unmanaged code.</span></span> <span data-ttu-id="d16b2-143">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />です。アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d16b2-143">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateObjRef">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjRef CreateObjRef(class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjRef (requestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjRef ^ CreateObjRef(Type ^ requestedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestedType"><span data-ttu-id="d16b2-144"><see cref="T:System.Runtime.Remoting.ObjRef" /> の作成対象のオブジェクト型。</span><span class="sxs-lookup"><span data-stu-id="d16b2-144">The object type that an <see cref="T:System.Runtime.Remoting.ObjRef" /> is created for.</span></span></param>
        <summary><span data-ttu-id="d16b2-145">指定したオブジェクト型の <see cref="T:System.Runtime.Remoting.ObjRef" /> を作成し、リモート処理インフラストラクチャでクライアント側でアクティブ化されるオブジェクトとして登録します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-145">Creates an <see cref="T:System.Runtime.Remoting.ObjRef" /> for the specified object type, and registers it with the remoting infrastructure as a client-activated object.</span></span></summary>
        <returns><span data-ttu-id="d16b2-146">指定した型に作成された <see cref="T:System.Runtime.Remoting.ObjRef" /> の新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d16b2-146">A new instance of <see cref="T:System.Runtime.Remoting.ObjRef" /> that is created for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#6](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#6)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#6](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#6)]
 [!code-vb[CustomProxy_Attribute_RealProxy#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="DetachServer">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject DetachServer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject DetachServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.DetachServer" />
      <MemberSignature Language="VB.NET" Value="Protected Function DetachServer () As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ DetachServer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d16b2-147">現在のプロキシ インスタンスが表すリモート サーバー オブジェクトから、現在のプロキシ インスタンスを分離します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-147">Detaches the current proxy instance from the remote server object that it represents.</span></span></summary>
        <returns><span data-ttu-id="d16b2-148">分離されたサーバー オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d16b2-148">The detached server object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d16b2-149">即時呼び出し元には、UnmanagedCode アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-149">The immediate caller does not have UnmanagedCode permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-150">アンマネージ コードを呼び出す必要なアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d16b2-150">For the ability to call unmanaged code.</span></span> <span data-ttu-id="d16b2-151">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />です。アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d16b2-151">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCOMIUnknown">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetCOMIUnknown (bool fIsMarshalled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetCOMIUnknown(bool fIsMarshalled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCOMIUnknown (fIsMarshalled As Boolean) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetCOMIUnknown(bool fIsMarshalled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fIsMarshalled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fIsMarshalled">
          <span data-ttu-id="d16b2-152">リモートの場所へのマーシャリングに対してオブジェクト参照が要求された場合は、<see langword="true" /> です。現在のプロセスにおけるアンマネージ オブジェクトとの、COM 経由の通信に対してオブジェクト参照が要求された場合は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-152"><see langword="true" /> if the object reference is requested for marshaling to a remote location; <see langword="false" /> if the object reference is requested for communication with unmanaged objects in the current process through COM.</span></span></param>
        <summary><span data-ttu-id="d16b2-153">現在のプロキシ インスタンスが表すオブジェクトへのアンマネージ参照を要求します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-153">Requests an unmanaged reference to the object represented by the current proxy instance.</span></span></summary>
        <returns><span data-ttu-id="d16b2-154">現在のプロセスにおけるアンマネージ オブジェクトとの、COM 経由の通信に対してオブジェクト参照が要求された場合は、 [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) へのポインターです。リモートの場所へのマーシャリングに対してオブジェクト参照が要求された場合は、キャッシュされたまたは新しく生成された <see langword="IUnknown" /> COM インターフェイスへのポインターです。</span><span class="sxs-lookup"><span data-stu-id="d16b2-154">A pointer to a [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) if the object reference is requested for communication with unmanaged objects in the current process through COM, or a pointer to a cached or newly generated <see langword="IUnknown" /> COM interface if the object reference is requested for marshaling to a remote location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-155">マーシャ リングで、プロキシが要求されている場合、`IUnknown`インターフェイスの現在のプロキシ インスタンスによって表されるオブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-155">If the proxy is requested for marshaling, then an `IUnknown` interface for the object represented by the current proxy instance is returned.</span></span> <span data-ttu-id="d16b2-156">場合、`IUnknown`によって以前にキャッシュされた、<xref:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown%2A>メソッドをそのインスタンスが返されます。 それ以外の場合、新しいインスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-156">If an `IUnknown` was previously cached by the <xref:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown%2A> method, then that instance is returned; otherwise, a new instance is returned.</span></span>  
  
 <span data-ttu-id="d16b2-157">マーシャ リングではなく、現在のプロセスで、アンマネージ オブジェクトとの通信にプロキシが要求されている場合、 [COM 呼び出し可能ラッパー](~/docs/framework/interop/com-callable-wrapper.md) (CCW)、COM、を介しての通信、現在のプロセスで使用できるが返されます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-157">If the proxy is requested not for marshaling but for communication with unmanaged objects in the current process, then a [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW), which can be used in the current process for communication through COM, is returned.</span></span>  
  
   
  
## Examples  
 [!code-cpp[RealProxy_Sample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RealProxy_Sample/CPP/realproxy_sample.cpp#2)]
 [!code-csharp[RealProxy_Sample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RealProxy_Sample/CS/realproxy_sample.cs#2)]
 [!code-vb[RealProxy_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RealProxy_Sample/VB/realproxy_sample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d16b2-158">透過プロキシのシリアル化先の <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="d16b2-158">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> into which the transparent proxy is serialized.</span></span></param>
        <param name="context"><span data-ttu-id="d16b2-159">シリアル化元とシリアル化先。</span><span class="sxs-lookup"><span data-stu-id="d16b2-159">The source and destination of the serialization.</span></span></param>
        <summary><span data-ttu-id="d16b2-160"><see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> の現在のインスタンスが表すオブジェクトの透過プロキシを、指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-160">Adds the transparent proxy of the object represented by the current instance of <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> to the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#7](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#7)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#7](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#7)]
 [!code-vb[CustomProxy_Attribute_RealProxy#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d16b2-161"><paramref name="info" /> パラメーターまたは <paramref name="context" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-161">The <paramref name="info" /> or <paramref name="context" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d16b2-162">直前の呼び出し元に、SerializationFormatter アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-162">The immediate caller does not have SerializationFormatter permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-163">シリアル化サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-163">For providing serialization services.</span></span> <span data-ttu-id="d16b2-164">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />です。アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="d16b2-164">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetProxiedType">
      <MemberSignature Language="C#" Value="public Type GetProxiedType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetProxiedType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxiedType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetProxiedType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d16b2-165"><see cref="T:System.Type" /> の現在のインスタンスが表すオブジェクトの <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-165">Returns the <see cref="T:System.Type" /> of the object that the current instance of <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> represents.</span></span></summary>
        <returns><span data-ttu-id="d16b2-166"><see cref="T:System.Type" /> の現在のインスタンスが表すオブジェクトの <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" />。</span><span class="sxs-lookup"><span data-stu-id="d16b2-166">The <see cref="T:System.Type" /> of the object that the current instance of <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> represents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#10)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#10)]
 [!code-vb[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStubData">
      <MemberSignature Language="C#" Value="public static object GetStubData (System.Runtime.Remoting.Proxies.RealProxy rp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetStubData(class System.Runtime.Remoting.Proxies.RealProxy rp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStubData (rp As RealProxy) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetStubData(System::Runtime::Remoting::Proxies::RealProxy ^ rp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
      </Parameters>
      <Docs>
        <param name="rp"><span data-ttu-id="d16b2-167">スタブ データが要求される対象のプロキシ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-167">The proxy for which stub data is requested.</span></span></param>
        <summary><span data-ttu-id="d16b2-168">指定したプロキシ用に格納されたスタブ データを取得します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-168">Retrieves stub data that is stored for the specified proxy.</span></span></summary>
        <returns><span data-ttu-id="d16b2-169">指定したプロキシのスタブ データ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-169">Stub data for the specified proxy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-170">スタブ データは、受信メソッド呼び出しを行うには何を決定するカスタムのプロキシ ユーザーによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-170">The stub data is used by custom proxy users to decide what to do with an incoming method call.</span></span> <span data-ttu-id="d16b2-171">たとえば、スタブ データには、ローカル、呼び出しを実行するかどうかを決定するを使用またはリモート処理インフラストラクチャを介して送信できます、サーバーのコンテキストに関する情報があります。</span><span class="sxs-lookup"><span data-stu-id="d16b2-171">For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#9](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#9)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#9](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#9)]
 [!code-vb[CustomProxy_Attribute_RealProxy#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d16b2-172">即時呼び出し元には、UnmanagedCode アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-172">The immediate caller does not have UnmanagedCode permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-173">アンマネージ コードを呼び出す必要なアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d16b2-173">For the ability to call unmanaged code.</span></span> <span data-ttu-id="d16b2-174">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />です。アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d16b2-174">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetTransparentProxy">
      <MemberSignature Language="C#" Value="public virtual object GetTransparentProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetTransparentProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTransparentProxy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetTransparentProxy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d16b2-175"><see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> の現在のインスタンスの透過プロキシを返します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-175">Returns the transparent proxy for the current instance of <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" />.</span></span></summary>
        <returns><span data-ttu-id="d16b2-176">現在のプロキシ インスタンスの透過プロキシ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-176">The transparent proxy for the current proxy instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#8](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#8)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#8](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#8)]
 [!code-vb[CustomProxy_Attribute_RealProxy#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnwrappedServer">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject GetUnwrappedServer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject GetUnwrappedServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUnwrappedServer () As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ GetUnwrappedServer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d16b2-177">現在のプロキシ インスタンスが表すサーバー オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-177">Returns the server object that is represented by the current proxy instance.</span></span></summary>
        <returns><span data-ttu-id="d16b2-178">現在のプロキシ インスタンスが表すサーバー オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d16b2-178">The server object that is represented by the current proxy instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-179"><xref:System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer%2A>メソッドは、外部に関連するシナリオで使用<xref:System.Runtime.Remoting.Contexts.Context>同じ<xref:System.AppDomain>です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-179">The <xref:System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer%2A> method is used in scenarios involving an external <xref:System.Runtime.Remoting.Contexts.Context> in the same <xref:System.AppDomain>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d16b2-180">即時呼び出し元には、UnmanagedCode アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-180">The immediate caller does not have UnmanagedCode permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-181">アンマネージ コードを呼び出す必要なアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d16b2-181">For the ability to call unmanaged code.</span></span> <span data-ttu-id="d16b2-182">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />です。アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d16b2-182">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InitializeServerObject">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Activation.IConstructionReturnMessage InitializeServerObject (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.Activation.IConstructionReturnMessage InitializeServerObject(class System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeServerObject (ctorMsg As IConstructionCallMessage) As IConstructionReturnMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Activation::IConstructionReturnMessage ^ InitializeServerObject(System::Runtime::Remoting::Activation::IConstructionCallMessage ^ ctorMsg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Activation.IConstructionReturnMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
      </Parameters>
      <Docs>
        <param name="ctorMsg"><span data-ttu-id="d16b2-183">現在の <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> で表されるリモート オブジェクトの新しいインスタンスのコンストラクター パラメーターを格納している構築呼び出しメッセージ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-183">A construction call message that contains the constructor parameters for the new instance of the remote object that is represented by the current <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" />.</span></span> <span data-ttu-id="d16b2-184"><see langword="null" /> の場合があります。</span><span class="sxs-lookup"><span data-stu-id="d16b2-184">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d16b2-185">指定した <see cref="T:System.Type" /> を使用して、<see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> の現在のインスタンスが表すリモート オブジェクトのオブジェクト <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" /> の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-185">Initializes a new instance of the object <see cref="T:System.Type" /> of the remote object that the current instance of <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> represents with the specified <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" />.</span></span></summary>
        <returns><span data-ttu-id="d16b2-186">構築要求の結果。</span><span class="sxs-lookup"><span data-stu-id="d16b2-186">The result of the construction request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-187">場合、`ctorMsg`パラメーターは`null`、続いて、<xref:System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject%2A>メソッドは、現在で表されるリモート オブジェクトの新しいインスタンスを既定のコンス トラクターを呼び出します<xref:System.Runtime.Remoting.Proxies.RealProxy>です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-187">If the `ctorMsg` parameter is `null`, then the <xref:System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject%2A> method calls the default constructor for the new instance of the remote object that is represented by the current <xref:System.Runtime.Remoting.Proxies.RealProxy>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#5)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#5)]
 [!code-vb[CustomProxy_Attribute_RealProxy#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d16b2-188">即時呼び出し元には、UnmanagedCode アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-188">The immediate caller does not have UnmanagedCode permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-189">アンマネージ コードを呼び出す必要なアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d16b2-189">For the ability to call unmanaged code.</span></span> <span data-ttu-id="d16b2-190">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />です。アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d16b2-190">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Remoting.Messaging.IMessage Invoke (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage Invoke(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Invoke (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Remoting::Messaging::IMessage ^ Invoke(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="d16b2-191">メソッドの呼び出しに関する情報の <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> を格納している <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="d16b2-191">A <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that contains a <see cref="T:System.Collections.IDictionary" /> of information about the method call.</span></span></param>
        <summary><span data-ttu-id="d16b2-192">派生クラスでオーバーライドされた場合は、提供された <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> で指定されたメソッドを、現在のインスタンスが表すリモート オブジェクトで呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-192">When overridden in a derived class, invokes the method that is specified in the provided <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> on the remote object that is represented by the current instance.</span></span></summary>
        <returns><span data-ttu-id="d16b2-193">呼び出されたメソッドが返すメッセージで、<see langword="out" /> パラメーターまたは <see langword="ref" /> パラメーターのどちらかと戻り値を格納しているメッセージ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-193">The message returned by the invoked method, containing the return value and any <see langword="out" /> or <see langword="ref" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-194">ときに補助されている透過的なプロキシ、<xref:System.Runtime.Remoting.Proxies.RealProxy>はへの呼び出しを代行させるために呼び出されると、<xref:System.Runtime.Remoting.Proxies.RealProxy.Invoke%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d16b2-194">When the transparent proxy that is backed by the <xref:System.Runtime.Remoting.Proxies.RealProxy> is called, it delegates the calls to the <xref:System.Runtime.Remoting.Proxies.RealProxy.Invoke%2A> method.</span></span> <span data-ttu-id="d16b2-195"><xref:System.Runtime.Remoting.Proxies.RealProxy.Invoke%2A>メソッド内のメッセージの変換、`msg`にパラメーター、 <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>、し、リモート オブジェクトの現在のインスタンスで表される送信<xref:System.Runtime.Remoting.Proxies.RealProxy>です。</span><span class="sxs-lookup"><span data-stu-id="d16b2-195">The <xref:System.Runtime.Remoting.Proxies.RealProxy.Invoke%2A> method transforms the message in the `msg` parameter into a <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>, and sends it to the remote object that is represented by the current instance of <xref:System.Runtime.Remoting.Proxies.RealProxy>.</span></span>  
  
 <span data-ttu-id="d16b2-196"><xref:System.Runtime.Remoting.Messaging.IMessage>パラメーターを通じてディクショナリを提供する、<xref:System.Runtime.Remoting.Messaging.IMessage.Properties%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d16b2-196">The <xref:System.Runtime.Remoting.Messaging.IMessage> parameter provides a dictionary through the <xref:System.Runtime.Remoting.Messaging.IMessage.Properties%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d16b2-197">ディクショナリには、呼び出されたメソッドの名前とそのパラメーターなど、メソッド呼び出しに関する情報の名前/値ペアが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d16b2-197">The dictionary contains name/value pairs of information about the method call, such as the name of the method called and its parameters.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#4)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#4)]
 [!code-vb[CustomProxy_Attribute_RealProxy#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCOMIUnknown">
      <MemberSignature Language="C#" Value="public virtual void SetCOMIUnknown (IntPtr i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCOMIUnknown(native int i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCOMIUnknown (i As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCOMIUnknown(IntPtr i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="d16b2-198">現在のプロキシ インスタンスが表すオブジェクトの <see langword="IUnknown" /> インターフェイスへのポインター。</span><span class="sxs-lookup"><span data-stu-id="d16b2-198">A pointer to the <see langword="IUnknown" /> interface for the object that is represented by the current proxy instance.</span></span></param>
        <summary><span data-ttu-id="d16b2-199">現在のインスタンスが表すオブジェクトのアンマネージ プロキシを格納します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-199">Stores an unmanaged proxy of the object that is represented by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-200">アンマネージ プロキシは、COM を通じて共通言語ランタイムとの通信を試みると、ランタイムは、管理されていないプロキシによって表されるリモート オブジェクトを解決します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-200">When an unmanaged proxy attempts to communicate with the common language runtime through COM, the runtime resolves the remote object that is represented by the unmanaged proxy.</span></span> <span data-ttu-id="d16b2-201">リモート オブジェクトが管理は、共通言語環境でも存在する場合は、分散 COM 経由と通信するのではなくで、現在のプロセスに、オブジェクトが送信されます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-201">If the remote object is managed and also resides in a common language environment, then instead of communicating with it through distributed COM, the object is sent to the current process.</span></span>  
  
 <span data-ttu-id="d16b2-202">リモート オブジェクトを派生していない場合<xref:System.MarshalByRefObject>がシリアル化され、現在の場所にコピーし、します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-202">If the remote object is not derived from <xref:System.MarshalByRefObject>, then it is serialized and copied to the current location.</span></span> <span data-ttu-id="d16b2-203">派生される場合<xref:System.MarshalByRefObject>透過プロキシを返します、および、リモート処理インフラストラクチャは、アンマネージのプロキシをキャッシュ (、`IUnknown`インターフェイス) 将来使用するため、透過的なプロキシにします。</span><span class="sxs-lookup"><span data-stu-id="d16b2-203">If it is derived from <xref:System.MarshalByRefObject>, then it returns a transparent proxy, and the remoting infrastructure caches the unmanaged proxy (the `IUnknown` interface) in the transparent proxy for future use.</span></span>  
  
   
  
## Examples  
 [!code-cpp[RealProxy_Sample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RealProxy_Sample/CPP/realproxy_sample.cpp#3)]
 [!code-csharp[RealProxy_Sample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RealProxy_Sample/CS/realproxy_sample.cs#3)]
 [!code-vb[RealProxy_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RealProxy_Sample/VB/realproxy_sample.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStubData">
      <MemberSignature Language="C#" Value="public static void SetStubData (System.Runtime.Remoting.Proxies.RealProxy rp, object stubData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStubData(class System.Runtime.Remoting.Proxies.RealProxy rp, object stubData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetStubData (rp As RealProxy, stubData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetStubData(System::Runtime::Remoting::Proxies::RealProxy ^ rp, System::Object ^ stubData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
        <Parameter Name="stubData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rp"><span data-ttu-id="d16b2-204">スタブ データを設定する対象のプロキシ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-204">The proxy for which to set stub data.</span></span></param>
        <param name="stubData"><span data-ttu-id="d16b2-205">新しいスタブ データ。</span><span class="sxs-lookup"><span data-stu-id="d16b2-205">The new stub data.</span></span></param>
        <summary><span data-ttu-id="d16b2-206">指定したプロキシのスタブ データを設定します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-206">Sets the stub data for the specified proxy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-207">スタブ データは、受信メソッド呼び出しを行うには何を決定するカスタムのプロキシ ユーザーによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="d16b2-207">The stub data is used by custom proxy users to decide what to do with an incoming method call.</span></span> <span data-ttu-id="d16b2-208">たとえば、スタブ データには、ローカル、呼び出しを実行するかどうかを決定するを使用またはリモート処理インフラストラクチャを介して送信できます、サーバーのコンテキストに関する情報があります。</span><span class="sxs-lookup"><span data-stu-id="d16b2-208">For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#3)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#3)]
 [!code-vb[CustomProxy_Attribute_RealProxy#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d16b2-209">即時呼び出し元には、UnmanagedCode アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d16b2-209">The immediate caller does not have UnmanagedCode permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d16b2-210">アンマネージ コードを呼び出す必要なアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d16b2-210">For the ability to call unmanaged code.</span></span> <span data-ttu-id="d16b2-211">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />です。アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d16b2-211">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SupportsInterface">
      <MemberSignature Language="C#" Value="public virtual IntPtr SupportsInterface (ref Guid iid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int SupportsInterface(valuetype System.Guid&amp; iid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SupportsInterface (ByRef iid As Guid) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr SupportsInterface(Guid % iid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iid" Type="System.Guid&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="iid"><span data-ttu-id="d16b2-212">要求されたインターフェイスへの参照。</span><span class="sxs-lookup"><span data-stu-id="d16b2-212">A reference to the requested interface.</span></span></param>
        <summary><span data-ttu-id="d16b2-213">指定した ID を使用して COM インターフェイスを要求します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-213">Requests a COM interface with the specified ID.</span></span></summary>
        <returns><span data-ttu-id="d16b2-214">要求されたインターフェイスへのポインター。</span><span class="sxs-lookup"><span data-stu-id="d16b2-214">A pointer to the requested interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d16b2-215"><xref:System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface%2A>メソッドにより、現在プロキシ インスタンスを現在のインスタンスを表すサーバー オブジェクトのための他の COM インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-215">The <xref:System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface%2A> method allows the current proxy instance to implement additional COM interfaces on behalf of the server object that the current instance represents.</span></span> <span data-ttu-id="d16b2-216">現在のメソッドは、要求されたインターフェイスを生成し、ポインターを返します。</span><span class="sxs-lookup"><span data-stu-id="d16b2-216">The current method generates the requested interface and returns a pointer to it.</span></span> <span data-ttu-id="d16b2-217">このメソッドによって生成できる COM インターフェイスの種類は、現在のプロキシ インスタンスが表すサーバー オブジェクトの種類に依存さらにプロキシの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="d16b2-217">The types of COM interfaces that can be generated by this method depend on the proxy type, which in turn might depend on the type of the server object that the current proxy instance represents.</span></span>  
  
 <span data-ttu-id="d16b2-218">詳細については、「<xref:System.Runtime.Remoting.Proxies.ProxyAttribute>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d16b2-218">For more information, see <xref:System.Runtime.Remoting.Proxies.ProxyAttribute>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[RealProxy_Sample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RealProxy_Sample/CPP/realproxy_sample.cpp#1)]
 [!code-csharp[RealProxy_Sample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RealProxy_Sample/CS/realproxy_sample.cs#1)]
 [!code-vb[RealProxy_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RealProxy_Sample/VB/realproxy_sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>