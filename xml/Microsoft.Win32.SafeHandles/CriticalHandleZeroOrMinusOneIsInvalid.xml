<Type Name="CriticalHandleZeroOrMinusOneIsInvalid" FullName="Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
  <TypeSignature Language="C#" Value="public abstract class CriticalHandleZeroOrMinusOneIsInvalid : System.Runtime.InteropServices.CriticalHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CriticalHandleZeroOrMinusOneIsInvalid extends System.Runtime.InteropServices.CriticalHandle" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CriticalHandleZeroOrMinusOneIsInvalid&#xA;Inherits CriticalHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class CriticalHandleZeroOrMinusOneIsInvalid abstract : System::Runtime::InteropServices::CriticalHandle" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.CriticalHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b3c59-101">値 0 または -1 が無効なハンドルである Win32 クリティカル ハンドルの実装の基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="b3c59-101">Provides a base class for Win32 critical handle implementations in which the value of either 0 or -1 indicates an invalid handle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3c59-102">このクラスは <xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=nameWithType> クラスから派生したクラスです。</span><span class="sxs-lookup"><span data-stu-id="b3c59-102">This class derives from the <xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="b3c59-103">これには、無効なハンドルの形式について説明します。</span><span class="sxs-lookup"><span data-stu-id="b3c59-103">It describes the format of an invalid handle.</span></span> <span data-ttu-id="b3c59-104">たとえば、いくつかのハンドルは、0 を使用して他のユーザーに対し、無効なハンドル値として-1 を使用します。</span><span class="sxs-lookup"><span data-stu-id="b3c59-104">For example, some handles use -1 as an invalid handle value, while others use 0.</span></span> <span data-ttu-id="b3c59-105">さらに派生 (ファイルやレジストリなどの処理) に対して、このクラスのことができます、さらなる特化します。</span><span class="sxs-lookup"><span data-stu-id="b3c59-105">Further derivations of this class (for example, file or registry handles) can specialize this further.</span></span>  
  
 <span data-ttu-id="b3c59-106">使用して、<xref:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid>マネージ ラッパーのクラスがない既存のアンマネージ リソースをラップする必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="b3c59-106">Use the <xref:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid> class when you need to wrap an unmanaged resource that does not have an existing managed wrapper.</span></span>  
  
 <span data-ttu-id="b3c59-107">この型は、<xref:System.IDisposable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="b3c59-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="b3c59-108">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3c59-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="b3c59-109">型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="b3c59-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="b3c59-110">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="b3c59-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="b3c59-111">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="b3c59-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3c59-112">参照してください、 <xref:System.Runtime.InteropServices.CriticalHandle> critical ハンドルのセキュリティとスレッドの安全性に関する重要な情報のクラスです。</span><span class="sxs-lookup"><span data-stu-id="b3c59-112">See the <xref:System.Runtime.InteropServices.CriticalHandle> class for important information on critical handle security and thread safety.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b3c59-113">継承時の完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="b3c59-113">for full trust for inheritors.</span></span> <span data-ttu-id="b3c59-114">このメンバーは、部分的に信頼されたコードでは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b3c59-114">This member cannot be inherited by partially trusted code.</span></span></permission>
    <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="b3c59-115">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="b3c59-115">requires full trust for the immediate caller.</span></span> <span data-ttu-id="b3c59-116">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3c59-116">This member cannot be used by partially trusted or transparent code.</span></span></permission>
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CriticalHandleZeroOrMinusOneIsInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CriticalHandleZeroOrMinusOneIsInvalid();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3c59-117"><see cref="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b3c59-117">Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b3c59-118">継承時の完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="b3c59-118">for full trust for inheritors.</span></span> <span data-ttu-id="b3c59-119">このメンバーは、部分的に信頼されたコードでは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b3c59-119">This member cannot be inherited by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="b3c59-120">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="b3c59-120">requires full trust for the immediate caller.</span></span> <span data-ttu-id="b3c59-121">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3c59-121">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
        <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3c59-122">ハンドルが無効かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b3c59-122">Gets a value that indicates whether the handle is invalid.</span></span></summary>
        <value>
          <span data-ttu-id="b3c59-123">ハンドルが無効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3c59-123"><see langword="true" /> if the handle is not valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3c59-124">共通言語ランタイムでは、このプロパティを使用して、重大な終了処理が必要かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b3c59-124">The common language runtime uses this property to determine whether critical finalization is required.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
        <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
        <altmember cref="P:System.Runtime.InteropServices.CriticalHandle.IsInvalid" />
      </Docs>
    </Member>
  </Members>
</Type>