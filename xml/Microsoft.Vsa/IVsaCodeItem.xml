<Type Name="IVsaCodeItem" FullName="Microsoft.Vsa.IVsaCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77ff688e28e7f70d70b9a98d3b23d3fb27c73f18" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53446136" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaCodeItem : Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaCodeItem implements class Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaCodeItem&#xA;Implements IVsaItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaCodeItem : Microsoft::Vsa::IVsaItem" />
  <TypeSignature Language="F#" Value="type IVsaCodeItem = interface&#xA;    interface IVsaItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Vsa.IVsaItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE7-7eea-4ee5-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>スクリプト エンジンでコンパイルするコード項目を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
指定したコード項目は、クラス、モジュール、またはその他のソース テキストに含めることができます。

アクセス許可を IVsaCodeItem インターフェイスのメンバーを呼び出すために必要はありません。

スクリプト エンジンは、コード項目を追加するには、このインターフェイスを実装します。

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventSource">
      <MemberSignature Language="C#" Value="public void AddEventSource (string eventSourceName, string eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventSource(string eventSourceName, string eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AddEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventSource (eventSourceName As String, eventSourceType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventSource(System::String ^ eventSourceName, System::String ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="abstract member AddEventSource : string * string -&gt; unit" Usage="iVsaCodeItem.AddEventSource (eventSourceName, eventSourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="eventSourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">イベント ソースのプログラム的な名前。</param>
        <param name="eventSourceType">イベント ソースの型名。</param>
        <summary>イベント ソースをコード項目に追加します。 コード項目はイベント ソースを使用し、ホストで実装された IVsaSite.GetEventSourceInstance メソッドを呼び出して、イベントを指定したイベント ソースにフックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
スクリプト エンジンでは、AddEventSource メソッドによって提供される情報を使用して、名前付きのイベント ソースにイベントをフックします。 ホストによって実装された IVsaSite.GetEventSourceInstance メソッドを呼び出すことによって、イベント ソースを取得します。 AddEventSource メソッドは、ホストから提供されたオブジェクトによって発生したイベントを処理するクラスを作成します。

> [!NOTE]
> JScript .NET スクリプト エンジンでは、このメソッドをサポートしません。 場合は、JScript .NET エンジンはイベントをフックする必要があります、グローバル項目を使用してこれを行う必要があります。 イベント ソース、JScript .NET エンジン AppGlobal 項目の種類を使用してなく。 詳細については、VsaItemType を参照してください。


コード項目内でイベント ソース オブジェクトは、名前でアクセスできるし、アクセスするには、オブジェクトに対してイベント ハンドラーを記述することができます。 イベント ソースの種類では、アンマネージ ホストで実装するイベント ソースを容易にする型のオブジェクトではなく文字列としてを渡されます。

コンパイラでは、eventSourceType パラメーターを使用して、型によって提供されるメソッドにバインドします。 使用後で、スクリプト エンジンは、型のオブジェクトのインスタンスを要求する IVsaSite.GetEventSourceInstance メソッドを呼び出すとします。

スクリプト エンジンのイベントをフックするためのメカニズムの詳細については、IVsaSite.GetEventSourceInstance メソッドを参照してください。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSourceText">
      <MemberSignature Language="C#" Value="public void AppendSourceText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSourceText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AppendSourceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSourceText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSourceText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AppendSourceText : string -&gt; unit" Usage="iVsaCodeItem.AppendSourceText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">コード項目に追加するテキスト。</param>
        <summary>指定したテキストをコード 項目の末尾に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
追加するソース テキストが検証を対象外です。 このため、エラー、存在する場合は画面 IVsaEngine.Compile メソッドに次の呼び出しで。

追加するソース テキストは、1 つの文字列として提供されます。 文字列必要がある書式設定はすべて、自分で指定する必要があります。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOM">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeObject CodeDOM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeObject CodeDOM" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDOM As CodeObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeObject ^ CodeDOM { System::CodeDom::CodeObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDOM : System.CodeDom.CodeObject" Usage="Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コード項目で表現される CodeDOM (Code Document Object Model) を取得します。</summary>
        <value>コード項目の CodeDOM です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
CodeDOM プロパティはご利用いただけませんまで IVsaEngine.Compile メソッドを呼び出した後、通常、スクリプト エンジンのコンパイル手順の一部として生成されます。 VSA の実装によっては、明示的なコンパイル手順を必要としない CodeDOM を動的に提供できる場合がありますが、ホストは、この動作に依存できません。 JScript .NET スクリプト エンジンなど、一部のスクリプト エンジンは、この動作をサポートしていません。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventSource">
      <MemberSignature Language="C#" Value="public void RemoveEventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventSource(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.RemoveEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventSource (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventSource : string -&gt; unit" Usage="iVsaCodeItem.RemoveEventSource eventSourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">削除するイベント ソースのプログラム的な名前。</param>
        <summary>指定したイベント ソースをコード項目から削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
イベント ソースの削除は、基になるイベント ハンドラーはソース テキストから削除されません。 はなく、イベントを発生させるイベント ハンドラーに通知できなくします。 そのため、イベント ソースを削除しても、基になる関数のままに、ソース コードでコンパイラ エラーが表示されます。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceText">
      <MemberSignature Language="C#" Value="public string SourceText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceText : string with get, set" Usage="Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したコード項目のテキストを設定または取得します。自動生成されたコードがある場合は、これも含めます。</summary>
        <value>コード項目のソース テキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
このプロパティを設定すると、テキストの検証は対象外です。 このため、エラー、存在する場合は画面 IVsaEngine.Compile メソッドに次の呼び出しで。

SourceText プロパティは、改行などの書式指定文字を含む 1 つの大きな文字列内のソース テキストを返しますを返します。

このプロパティのエンジンを取得するには、必要があります閉じることができません。 エンジンのこのプロパティを設定する必要があります閉じられていないと、エンジンが実行されていない必要があります。

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>