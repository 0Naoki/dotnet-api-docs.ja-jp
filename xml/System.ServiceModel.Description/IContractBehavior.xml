<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IContractBehavior.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ba32fc4bef58ce5d5920ae1da79dc2ca1b1b4020.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba32fc4bef58ce5d5920ae1da79dc2ca1b1b4020</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.</source>
          <target state="translated">サービスまたはクライアント アプリケーションでコントラクトのランタイム動作を拡張するために使用できるメソッドを実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> interface to modify, examine, or extend some aspect of contract-wide execution at the application level.</source>
          <target state="translated">コントラクト全体にわたる実行の一部の側面を、アプリケーション レベルで変更、確認、または拡張するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> インターフェイスを実装します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Unlike <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects, <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> オブジェクトは、<ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> オブジェクトおよび <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> オブジェクトとは異なり、アプリケーション構成ファイルを使用してランタイムに追加することはできません。プログラムによって、または属性を使用することによってのみ追加できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For more information about choosing between service, endpoint, and contract behaviors, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">サービス、エンドポイント、およびコントラクトの動作の選択の詳細については、次を参照してください。<bpt id="p1">[</bpt>を構成すると、ランタイムのビヘイビアーの使用を拡張する<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with custom data to support the behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> メソッドを使用して、動作をサポートするためのカスタム データをバインディング要素に提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a client application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> メソッドを使用して、クライアント アプリケーションでコントラクトを変更または確認したり、コントラクトに拡張機能を挿入したりできます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a service application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> メソッドを使用して、サービス アプリケーションでコントラクトを変更または確認したり、コントラクトに拡張機能を挿入したりできます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to ensure that a contract can support a particular feature.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> メソッドを使用して、コントラクトが特定の機能をサポートしていることを確認します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> オブジェクトは、これらのメソッドをどれでも使用できますが、通常は、重要なメソッドは 1 つだけです。この場合、使用されないメソッドは、値なしで戻ることができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> as parameters.</source>
          <target state="translated">すべての <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> メソッドは <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> および <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> をパラメーターとして渡します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>These parameters are for examination; if you modify the objects the execution behavior is undefined.</source>
          <target state="translated">これらのパラメーターは、検査に使用されます。これらのオブジェクトを変更した場合、実行の動作は未定義になります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types can be used on either the service or the client, or both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 型は、サービス、クライアント、またはその両方で使用できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To perform a customization task on the service, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime, which occurs when the <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">サービスでカスタマイズ タスクを実行するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> メソッドが <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> オブジェクトで呼び出されるときに行われるサービス ランタイムの構築の前に、<ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> オブジェクトを <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> プロパティに追加しておく必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>There are two ways to do this.</source>
          <target state="translated">これには、2 つの方法があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The first method is to programmatically add the custom contract behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">1 つは、<ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> メソッドが <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> オブジェクトで呼び出される前に、プログラムを使用して、<ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> プロパティにコントラクトのカスタム動作を追加する方法です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.</source>
          <target state="translated">この場合、動作は、エンドポイント上でそのコントラクトを使用して送信されるすべてのメッセージに適用されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The behavior is applied to all contracts of the same type.</source>
          <target state="translated">動作は、同じ種類のすべてのコントラクトに適用されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.</source>
          <target state="translated">たとえば、プログラムを使用して同じ種類のコントラクトを複数のエンドポイントに追加した場合、同じコントラクト オブジェクトを参照するすべてのエンドポイントで動作が変更されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The second method is to create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> and apply that to:</source>
          <target state="translated">もう 1 つは、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> を実装するカスタム属性を作成し、それを次のものに適用する方法です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A contract interface.</source>
          <target state="translated">コントラクト インターフェイス。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all contracts of that type in any endpoint.</source>
          <target state="translated">この場合、動作は任意のエンドポイント内の該当の型のすべてのコントラクトに適用されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A service class.</source>
          <target state="translated">サービス クラス。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all endpoints regardless of contract.</source>
          <target state="translated">この場合、動作はコントラクトとは関係なくすべてのエンドポイントに適用されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A callback class.</source>
          <target state="translated">コールバック クラス。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to the duplex client's endpoint.</source>
          <target state="translated">この場合、動作は双方向クライアントのエンドポイントに適用されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The behavior of the second approach varies slightly if the custom attribute also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">カスタム属性が <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType&gt;</ph> を同時に実装している場合、2 番目の方法の動作は少し異なります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is as follows:</source>
          <target state="translated">この場合、動作は次のようになります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A contract interface.</source>
          <target state="translated">コントラクト インターフェイス。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all contracts of that type in any endpoint and <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> ignores the value of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">この場合、動作は任意のエンドポイント内の該当の型のすべてのコントラクトに適用されます。<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> は、<ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> プロパティの値を無視します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A service class.</source>
          <target state="translated">サービス クラス。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied only to endpoints the contract of which is the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">この場合、動作はコントラクトが <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> プロパティの値であるエンドポイントにのみ適用されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A callback class.</source>
          <target state="translated">コールバック クラス。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to the duplex client's endpoint and <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> ignores the value of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">この場合、動作は双方向クライアントのエンドポイントに適用されます。<ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> は、<ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> プロパティの値を無視します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To perform the customization task on the client for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the client runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">想定されているカスタマイズ タスクをクライアントで実行するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> が呼び出されるときに行われるクライアント ランタイムの構築の前に、<ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> オブジェクトを <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> プロパティに追加しておく必要があります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>There are two ways to do this:</source>
          <target state="translated">これには、2 つの方法があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Programmatically add the custom contract behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> が呼び出される前に、プログラムを使用して、<ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> プロパティにコントラクトのカスタム動作を追加します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Create a custom attribute that also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> を同時に実装するカスタム属性を作成します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For more information on programmatically adding <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types to either the client or service application, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">プログラムで追加する方法の詳細について<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>クライアントまたはサービスのいずれかのアプリケーションの種類を参照してください<bpt id="p1">[</bpt>を構成して、ランタイムのビヘイビアーの使用を拡張する<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">次のコード例は、カスタムの <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> 実装が "シングルトン" 動作を提供する <ph id="ph2">`ObjectProviderBehavior`</ph> を呼び出したことを前提としています。これは、常に同じサービス インスタンスを返し、リサイクルはしません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">インスタンス プロバイダーのカスタマイズを挿入するために、例では、<ph id="ph1">`SingletonBehaviorAttribute`</ph> を実装するカスタム属性 (<ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>) を実装してカスタム サービス インスタンス プロバイダーを挿入する方法を示しています。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">また、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph> も実装します。これは、その使用を <ph id="ph2">`ISampleService`</ph> コントラクトにバインドします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The contract description to modify.</source>
          <target state="translated">変更するコントラクトの説明。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The endpoint to modify.</source>
          <target state="translated">変更するエンドポイント。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The objects that binding elements require to support the behavior.</source>
          <target state="translated">動作をサポートするためにバインド要素が要求するオブジェクト。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Configures any binding elements to support the contract behavior.</source>
          <target state="translated">任意のバインド要素を、コントラクトの動作をサポートするように構成します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the contract behavior.</source>
          <target state="translated">コントラクトの動作をサポートするために必要な追加のオブジェクトをバインディング要素に提供するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">このメソッドは、指定されたサービス コントラクトを使用するエンドポイントごとに 1 回呼び出されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The contract description for which the extension is intended.</source>
          <target state="translated">拡張対象のコントラクトの説明。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The endpoint.</source>
          <target state="translated">エンドポイント。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The client runtime.</source>
          <target state="translated">クライアント ランタイム。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implements a modification or extension of the client across a contract.</source>
          <target state="translated">コントラクト全体にわたってクライアントの変更または拡張を実装します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation.</source>
          <target state="translated">すべてのメッセージまたは特定の 1 つの操作について、クライアント ランタイムを表示または変更したり、クライアント ランタイムにカスタム拡張機能を追加したりするには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
          <target state="translated">クライアントのランタイム オブジェクトで実行できるカスタマイズの詳細については、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> および <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> を参照してください。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method can throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a service application.</source>
          <target state="translated">動作をサービス アプリケーションでのみ使用する場合は、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> メソッドで <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> 例外をスローさせることができます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">このメソッドは、指定されたサービス コントラクトを使用するエンドポイントごとに 1 回呼び出されます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and that returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> property.</source>
          <target state="translated">説明 (各方向に 1 つずつ) では同じ名前の操作が 2 つ存在する場合がありますので注意してください。このため、双方向コントラクトで操作の反復が必要な場合は、エンドポイント <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> と、<ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> プロパティによって返されるエンドポイント間で、メッセージの方向を関連付ける必要があります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">既に他の動作によって一部の操作が追加されているか、ランタイムから削除されている可能性があるので、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> プロパティにある <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> オブジェクトと同じ数の操作が説明に存在するという保証はありません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">次のコード例は、カスタムの <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> 実装が "シングルトン" 動作を提供する <ph id="ph2">`ObjectProviderBehavior`</ph> を呼び出したことを前提としています。これは、常に同じサービス インスタンスを返し、リサイクルはしません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">インスタンス プロバイダーのカスタマイズを挿入するために、例では、<ph id="ph1">`SingletonBehaviorAttribute`</ph> を実装するカスタム属性 (<ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>) を実装してカスタム サービス インスタンス プロバイダーを挿入する方法を示しています。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">また、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph> も実装します。これは、その使用を <ph id="ph2">`ISampleService`</ph> コントラクトにバインドします。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The contract description to be modified.</source>
          <target state="translated">変更するコントラクトの説明。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">コントラクトを公開するエンドポイント。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The dispatch runtime that controls service execution.</source>
          <target state="translated">サービス実行を制御するディスパッチ ランタイム。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Implements a modification or extension of the client across a contract.</source>
          <target state="translated">コントラクト全体にわたってクライアントの変更または拡張を実装します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract.</source>
          <target state="translated">特定のコントラクト内のすべてのメッセージまたはそのコントラクト内の特定の 1 つの操作について、サービス ランタイムを表示または変更したり、サービス ランタイムにカスタム拡張機能を追加したりするには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> を実装します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>For details about what customizations you can perform in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</source>
          <target state="translated">サービス アプリケーションで実行できるカスタマイズの詳細については、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> および <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> を参照してください。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method can throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
          <target state="translated">動作をクライアント アプリケーションでのみ使用する場合は、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> メソッドによって <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> 例外をスローすることができます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">このメソッドは、指定されたサービス コントラクトを使用するエンドポイントごとに 1 回呼び出されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and that returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> property.</source>
          <target state="translated">説明 (各方向に 1 つずつ) では同じ名前の操作が 2 つ存在する場合がありますので注意してください。このため、双方向コントラクトで操作の反復が必要な場合は、エンドポイント <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> と、<ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> プロパティによって返されるエンドポイント間で、メッセージの方向を関連付ける必要があります。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">また、既に他の動作によって一部の操作が追加されるか、ランタイムから削除されている可能性があるので、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> プロパティにある <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> オブジェクトと同じ数の操作が説明に存在するという保証はありません。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">次のコード例は、カスタムの <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> 実装が "シングルトン" 動作を提供する <ph id="ph2">`ObjectProviderBehavior`</ph> を呼び出したことを前提としています。これは、常に同じサービス インスタンスを返し、リサイクルはしません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">インスタンス プロバイダーのカスタマイズを挿入するために、例では、<ph id="ph1">`SingletonBehaviorAttribute`</ph> を実装するカスタム属性 (<ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>) を実装してカスタム サービス インスタンス プロバイダーを挿入する方法を示しています。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">また、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph> も実装します。これは、その使用を <ph id="ph2">`ISampleService`</ph> コントラクトにバインドします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The contract to validate.</source>
          <target state="translated">検証対象のコントラクト。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint to validate.</source>
          <target state="translated">検証対象のエンドポイント。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement to confirm that the contract and endpoint can support the contract behavior.</source>
          <target state="translated">コントラクトおよびエンドポイントがコントラクトの動作をサポートしていることを確認するために実装します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to confirm that the contract description is sufficient to support the custom contract behavior.</source>
          <target state="translated">コントラクトの説明がコントラクトのカスタム動作をサポートするための要件を満たしていることを確認するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implementations can inspect the description and either throw or return no value.</source>
          <target state="translated">実装では、説明を検査して値をスローするかまたは値を返さないようにすることができます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">このメソッドは、指定されたサービス コントラクトを使用するエンドポイントごとに 1 回呼び出されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>