<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOperationBehavior.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac574831950d68699028d231a79bc457aa397ed7984.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74831950d68699028d231a79bc457aa397ed7984</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</source>
          <target state="translated">サービスまたはクライアント アプリケーションで操作のランタイム動作を拡張するために使用できるメソッドを実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> interface to modify, examine, or extend some aspect of operation-wide execution at the application level for either client or service applications.</source>
          <target state="translated">クライアントまたはサービス アプリケーションのいずれかで、操作全体にわたる実行の一部の側面をアプリケーション レベルで変更、確認、または拡張するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> インターフェイスを実装します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to pass custom data at runtime to enable bindings to support custom behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> メソッドを使用して、実行時にカスタム データを渡して、バインディングがカスタム動作をサポートできるようにします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a client dispatcher in a client application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> メソッドを使用して、クライアント アプリケーションでクライアント ディスパッチャーを変更または確認したり、クライアント ディスパッチャーに拡張機能を挿入したりできます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to operation-wide execution in a service application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> メソッドを使用して、サービス アプリケーションで操作全体にわたる実行を変更または確認したり、操作全体にわたる実行に拡張機能を挿入したりできます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method to confirm that a <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> meets specific requirements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> メソッドを使用して、<ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> が特定の要件を満たしていることを確認します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>This can be used to ensure that an operation has a certain configuration setting enabled, supports a particular feature and other requirements.</source>
          <target state="translated">このメソッドを使用して、操作で特定の構成設定が有効になっているかどうか、操作が特定の機能をサポートしているかどうかなどの要件を確認できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> オブジェクトは、これらのメソッドをどれでも使用できますが、通常は、重要なメソッドは 1 つだけです。この場合、使用されないメソッドは、アクションを実行せずに戻ることができます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> methods pass an <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> object as a parameter.</source>
          <target state="translated">すべての <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> メソッドは <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> オブジェクトをパラメーターとして渡します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>This parameter is for examination only; if you modify the <ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> object the execution behavior is undefined.</source>
          <target state="translated">このパラメーターは、検査にのみ使用されます。<ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> オブジェクトを変更した場合、実行の動作は未定義になります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> objects are typically used to access the various properties of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> object in a service application and the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> object in a client application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> オブジェクトは通常、サービス アプリケーションの <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> オブジェクト、および、クライアント アプリケーションの <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> オブジェクトのさまざまなプロパティにアクセスするために使用します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Typically, the developer first reviews the extensibility points to determine which customization option suits the application scenario and then implements the customization at the appropriate scope.</source>
          <target state="translated">一般に、開発者はまず機能拡張ポイントをレビューしてアプリケーション シナリオに適したカスタマイズ オプションを決定してから、そのカスタマイズを適切なスコープで実装します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>For example, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph> objects can insert customizations for all messages in an entire service and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> objects can insert customizations for all messages across a specific contract, and so on.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph> オブジェクトを使用してサービス全体のすべてのメッセージに対するカスタマイズを挿入したり、<ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> オブジェクトを使用して特定のコントラクト全体のすべてのメッセージに対するカスタマイズを挿入したりできます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>For a description of the various properties and customizations available, see <bpt id="p1">[</bpt>Extending ServiceHost and the Service Model Layer<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>.</source>
          <target state="translated">さまざまなプロパティおよび設定できるカスタマイズについては、次を参照してください。 <bpt id="p1">[</bpt>ServiceHost を拡張すると、サービス モデル レイヤー<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Once a customization has been decided upon (and the customization interface implemented if necessary) and the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> is the appropriate scope of customization, the customization must be inserted into the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime by implementing <ph id="ph3">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> and adding the operation behavior to the runtime.</source>
          <target state="translated">カスタマイズを設定して必要なカスタマイズ インターフェイスを実装し、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> が適切なスコープのカスタマイズであることを確認したら、<ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> ランタイムにカスタマイズを挿入する必要があります。これは、<ph id="ph3">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> を実装し、ランタイムに操作の動作を追加することによって行います。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>There are two ways to add the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> to the runtime:</source>
          <target state="translated">ランタイムに <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> を追加するには、2 つの方法があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Programmatically add the custom operation behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</source>
          <target state="translated">サービス ホスト (サービス アプリケーションの場合) またはチャネル ファクトリ (クライアント アプリケーションの場合) を開く前に、プログラムを使用して、<ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> プロパティに操作のカスタム動作を追加します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Add the behavior using a custom attribute.</source>
          <target state="translated">カスタム属性を使用して動作を追加します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>To perform the service customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> property prior to the construction of the service runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">想定されているサービス カスタマイズ タスクを実行するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> メソッドが <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> で呼び出されるときに行われるサービス ランタイムの構築の前に、<ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> オブジェクトを <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> プロパティに追加しておく必要があります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>To perform a client customization task, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> property before calling the <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph>.</source>
          <target state="translated">クライアント カスタマイズ タスクを実行するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> で <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> メソッドまたは <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> メソッドを呼び出す前に、<ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> オブジェクトを <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> プロパティに追加しておく必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Although the operation behavior is designed for easy access to the runtime at the scope of an individual operation, you can access the runtime at a larger scope by accessing the parent runtime object.</source>
          <target state="translated">操作の動作は、個々の操作のスコープ内のランタイムに簡単にアクセスできるように設計されていますが、親ランタイム オブジェクトにアクセスすることにより、より広いスコープのランタイムにアクセスできます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>The following code example shows an implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> that writes to the console when the inspector is invoked on an operation.</source>
          <target state="translated">インスペクターが操作で呼び出されたときにコンソールに書き込みを行う <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> の実装を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>This customization can only be attached to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> and is therefore usually inserted by an operation behavior.</source>
          <target state="translated">このカスタマイズは、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> または <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> にのみ結び付けることができるので、通常は操作の動作によって挿入されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</source>
          <target state="translated">操作の動作がパラメーター インスペクターをランタイムに結び付ける方法を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The operation being examined.</source>
          <target state="translated">検査されている操作。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Use for examination only.</source>
          <target state="translated">検査でのみ使用します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>If the operation description is modified, the results are undefined.</source>
          <target state="translated">操作の説明が変更される場合、結果は未定義です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The collection of objects that binding elements require to support the behavior.</source>
          <target state="translated">動作をサポートするためにバインド要素が要求するオブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement to pass data at runtime to bindings to support custom behavior.</source>
          <target state="translated">実行時にバインディングにデータを渡して、バインディングがカスタム動作をサポートできるようにするために実装します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the operation behavior.</source>
          <target state="translated">操作の動作をサポートするために必要な追加のオブジェクトをバインディング要素に提供するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>When binding parameters are added here, the binding can locate and process these objects when the channel listener or channel factory is created.</source>
          <target state="translated">これによってバインディング パラメーターが追加されると、チャネル リスナーまたはチャネル ファクトリが作成された場合に、バインディングがこれらのオブジェクトを検索して処理できます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Typically, you implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to pass information about the operation to a custom binding element so that it can build a supporting channel correctly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> メソッドは通常、サポートするチャネルを正しく作成できるように、カスタム バインディング要素に操作に関する情報を渡すために実装します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Return no value if no modifications are required.</source>
          <target state="translated">変更の必要がない場合は、値を返しません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>The operation being examined.</source>
          <target state="translated">検査されている操作。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>Use for examination only.</source>
          <target state="translated">検査でのみ使用します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>If the operation description is modified, the results are undefined.</source>
          <target state="translated">操作の説明が変更される場合、結果は未定義です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>The run-time object that exposes customization properties for the operation described by <bpt id="p1">&lt;c&gt;</bpt>operationDescription<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>operationDescription<ept id="p1">&lt;/c&gt;</ept> で説明されている操作のカスタマイズ プロパティを公開するランタイム オブジェクト。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>Implements a modification or extension of the client across an operation.</source>
          <target state="translated">操作全体にわたってクライアントの変更または拡張を実装します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add a custom extension to the client runtime across all messages used with a specific operation.</source>
          <target state="translated">特定の操作で使用されるすべてのメッセージについて、クライアント ランタイムを表示または変更したり、クライアント ランタイムにカスタム拡張機能を追加したりするには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
          <target state="translated">クライアントのランタイム オブジェクトで実行できるカスタマイズの詳細については、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> および <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> を参照してください。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> if the behavior is only intended for use in a service application.</source>
          <target state="translated">動作をサービス アプリケーションでのみ使用する場合は、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> メソッドで <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> をスローさせることをお勧めします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>The following code example shows an implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> that writes to the console when the inspector is invoked on an operation.</source>
          <target state="translated">インスペクターが操作で呼び出されたときにコンソールに書き込みを行う <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> の実装を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>This customization can only be attached to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> and is therefore usually inserted by an operation behavior.</source>
          <target state="translated">このカスタマイズは、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> または <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> にのみ結び付けることができるので、通常は操作の動作によって挿入されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</source>
          <target state="translated">操作の動作がパラメーター インスペクターをランタイムに結び付ける方法を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>The operation being examined.</source>
          <target state="translated">検査されている操作。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>Use for examination only.</source>
          <target state="translated">検査でのみ使用します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>If the operation description is modified, the results are undefined.</source>
          <target state="translated">操作の説明が変更される場合、結果は未定義です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>The run-time object that exposes customization properties for the operation described by <bpt id="p1">&lt;c&gt;</bpt>operationDescription<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>operationDescription<ept id="p1">&lt;/c&gt;</ept> で説明されている操作のカスタマイズ プロパティを公開するランタイム オブジェクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>Implements a modification or extension of the service across an operation.</source>
          <target state="translated">操作全体にわたってサービスの変更または拡張を実装します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to view, modify, or extend the service runtime across all messages or for a specific operation.</source>
          <target state="translated">すべてのメッセージまたは特定の操作について、サービス ランタイムを表示、変更、または拡張するには、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>For details about what customizations you can do in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">サービス アプリケーションで実行できるカスタマイズの詳細については、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph> および <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> を参照してください。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
          <target state="translated">動作をクライアント アプリケーションでのみ使用する場合は、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> メソッドで <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> 例外をスローさせることをお勧めします。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>The following code example shows an implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> that writes to the console when the inspector is invoked on an operation.</source>
          <target state="translated">インスペクターが操作で呼び出されたときにコンソールに書き込みを行う <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> の実装を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>This customization can only be attached to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> and is therefore usually inserted by an operation behavior.</source>
          <target state="translated">このカスタマイズは、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> または <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> にのみ結び付けることができるので、通常は操作の動作によって挿入されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</source>
          <target state="translated">操作の動作がパラメーター インスペクターをランタイムに結び付ける方法を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>The operation being examined.</source>
          <target state="translated">検査されている操作。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>Use for examination only.</source>
          <target state="translated">検査でのみ使用します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>If the operation description is modified, the results are undefined.</source>
          <target state="translated">操作の説明が変更される場合、結果は未定義です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>Implement to confirm that the operation meets some intended criteria.</source>
          <target state="translated">操作が指定した基準を満たしていることを確認するために実装します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method to examine the structure to confirm any set of criteria.</source>
          <target state="translated">構造を調べて基準の設定を確認するために、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>It is not necessary to perform any customizations in <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> to make use of this method.</source>
          <target state="translated">このメソッドを使用するために <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph>、または <ph id="ph2">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> でカスタマイズを行う必要はありません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>If the operation passes validation, return; otherwise, throw an exception.</source>
          <target state="translated">操作が検証にパスした場合は値を返します。それ以外の場合は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method can be use to ensure that an operation is authorized.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> メソッドを使用して、操作が許可されているかどうかを確認できます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>