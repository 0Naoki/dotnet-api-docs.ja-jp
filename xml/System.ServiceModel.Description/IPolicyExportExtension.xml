<Type Name="IPolicyExportExtension" FullName="System.ServiceModel.Description.IPolicyExportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="553e6c58d808beb4ac2d9a4f6c715b8647773b93" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69152682" /></Metadata><TypeSignature Language="C#" Value="public interface IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type IPolicyExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>カスタム バインディング ポリシー アサーションを Web サービス記述言語 (WSDL) の情報に挿入する <see cref="T:System.ServiceModel.Description.IPolicyExportExtension" /> を実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンドポイントの機能または要件に関するステートメントを、特定のエンドポイントによって公開される WSDL 情報に書き込むには、<xref:System.ServiceModel.Description.IPolicyExportExtension> オブジェクトで <xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType> インターフェイスを実装します。 一般に、バインド要素はなんらかの機能を実装する要素ですが、機能の実装は必須ではありません。 構成ファイルからポリシー エクスポーターを読み込むには、ポリシー エクスポーターの <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType> オブジェクトを返す <xref:System.ServiceModel.Channels.BindingElement> を実装する必要があります。  
  
 ポリシーエクスポーターは、ポリシーアサーションを使用して、そのカスタムバインド要件またはエンドポイント機能が存在することをクライアントに通知するために、Windows Communication Foundation (WCF) によって使用されます。  
  
 <xref:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy%2A> メソッドは、<xref:System.ServiceModel.Description.MetadataExporter> オブジェクトと <xref:System.ServiceModel.Description.PolicyConversionContext> オブジェクトを受け取ります。 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>、および <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> の各メソッドを使用して、既にさまざまなスコープでエクスポートされているポリシー アサーションのコレクションを取得します。 次に、カスタム ポリシー アサーション オブジェクトを適切なコレクションに追加します。  
  
 <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> プロパティは、エクスポートされるエンドポイントの <xref:System.ServiceModel.Description.ContractDescription> を公開します。 これにより、<xref:System.ServiceModel.Description.IPolicyExportExtension> 拡張は、エクスポートされたポリシー アサーションを正しく特定できます。 たとえば、コード内のセキュリティ属性は、セキュリティ ポリシー アサーションを追加する必要がある場所を示す <xref:System.ServiceModel.Description.ContractDescription> に動作を追加できます。  
  
 <xref:System.ServiceModel.Description.IPolicyExportExtension> のメカニズムは、WSDL のポリシー アサーションのエクスポートだけをサポートします。 カスタム WSDL 要素をエクスポートする場合は、<xref:System.ServiceModel.Description.IWsdlExportExtension> メカニズムを使用して WSDL を直接変更する必要があります。  
  
 カスタム ポリシー アサーションが WSDL 情報に関連付けられると、クライアントは、<xref:System.ServiceModel.Description.IPolicyImportExtension> オブジェクトを使用して、カスタム バインディング アサーションを検出しインポートできます。  
  
   
  
## Examples  
 <xref:System.ServiceModel.Description.IPolicyExportExtension> の <xref:System.ServiceModel.Channels.BindingElement> の実装を次のコード例に示します。 この例では、カスタム バインディグ要素が、バインディグ レベルで WSDL ファイルに結び付けられます。  
  
 [!code-csharp[CustomPolicySample#14](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#14)]
 [!code-vb[CustomPolicySample#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#14)]  
  
 前のポリシー エクスポーターをアプリケーション構成ファイルから読み込めるようにする <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType> の実装を次のコード例に示します。  
  
 [!code-csharp[CustomPolicySample#15](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#15)]
 [!code-vb[CustomPolicySample#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#15)]  
  
 カスタム ポリシー エクスポーターを読み込むホスト構成ファイルを次のコード例に示します。  
  
 [!code-xml[CustomPolicySample#3](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/app.config#3)]   
  
 WSDL ファイル内のカスタム アサーションを次のコード例に示します。  
  
 [!code-xml[CustomPolicySample#16](~/samples/snippets/common/VS_Snippets_CFX/custompolicysample/common/tempuri.org.wsdl#16)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="public void ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="iPolicyExportExtension.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter">エクスポート プロセスを変更するために使用できる <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</param>
        <param name="context">カスタム ポリシー アサーションの挿入に使用できる <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</param>
        <summary>バインディングに関するカスタム ポリシー アサーションをエクスポートするために、実装して組み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>、および <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> の各メソッドを使用して、既にさまざまなスコープでエクスポートされているポリシー アサーションのコレクションを取得します。 次に、<xref:System.ServiceModel.Description.IPolicyExportExtension> オブジェクトを適切なコレクションに追加します。  
  
   
  
## Examples  
 <xref:System.ServiceModel.Description.IPolicyExportExtension> の <xref:System.ServiceModel.Channels.BindingElement> の実装を次のコード例に示します。 この例では、カスタム バインディグ要素が、バインディグ レベルで WSDL ファイルに結び付けられます。  
  
 [!code-csharp[CustomPolicySample#14](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#14)]
 [!code-vb[CustomPolicySample#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#14)]  
  
 前のポリシー エクスポーターをアプリケーション構成ファイルから読み込めるようにする <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType> の実装を次のコード例に示します。  
  
 [!code-csharp[CustomPolicySample#15](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#15)]
 [!code-vb[CustomPolicySample#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#15)]  
  
 カスタム ポリシー エクスポーターを読み込むホスト構成ファイルを次のコード例に示します。  
  
 [!code-xml[CustomPolicySample#3](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/app.config#3)]   
  
 WSDL ファイル内のカスタム アサーションを次のコード例に示します。  
  
 [!code-xml[CustomPolicySample#16](~/samples/snippets/common/VS_Snippets_CFX/custompolicysample/common/tempuri.org.wsdl#16)]    
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
