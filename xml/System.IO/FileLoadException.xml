<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileLoadException.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d1c45f1f4812a36631e18928a1926e459484bc28.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1c45f1f4812a36631e18928a1926e459484bc28</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.FileLoadException">
          <source>The exception that is thrown when a managed assembly is found but cannot be loaded.</source>
          <target state="translated">マネージ アセンブリが見つかっても読み込むことができない場合にスローされる例外。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>Represents the error that occurs when a <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> file is found but cannot be loaded.</source>
          <target state="translated">発生したエラーを表すときに、<ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph>ファイルが見つかりましたが、読み込まれたにすることはできません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph> exception is thrown when the file fails to load because it cannot be located.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>ファイルが見つからないために、読み込みに失敗したときに例外がスローされます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>If the file is located, but cannot be loaded due to insufficient permissions, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
          <target state="translated">場合は、ファイルが見つかりましたが、権限の不足によりアンロードすることはできません、<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source><ph id="ph1">`FileLoadException`</ph> has the default HRESULT of COR_E_FILELOAD, which has the value 0x80131621, but this is not the only possible HRESULT.</source>
          <target state="translated"><ph id="ph1">`FileLoadException`</ph> 既定値の HRESULT の COR_E_FILELOAD あり 0x80131621、値を持つが、これは、可能な唯一の HRESULT ではありません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>If your code does not have <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A&gt;</ph> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths.</source>
          <target state="translated">コードがない場合<ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A&gt;</ph>権限、エラー メッセージはこの例外の場合に完全修飾パスの代わりにファイルまたはディレクトリの名前がのみ含まれている可能性があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>This exception is not included in the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, but it is thrown by some members that are.</source>
          <target state="translated">この例外に含まれていない、 <bpt id="p1">[</bpt>Windows ストア アプリ用 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept>または<bpt id="p2">[</bpt>ポータブル クラス ライブラリ<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>は、一部のメンバーによってスローされますが、します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>To catch the exception in that case, write a <ph id="ph1">`catch`</ph> statement for <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> instead.</source>
          <target state="translated">その場合は例外をキャッチして、書き込み、<ph id="ph1">`catch`</ph>の声明<ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>代わりにします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source><bpt id="p1">**</bpt>Associated Tips<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>関連するヒント<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source><bpt id="p1">**</bpt>Make sure that the file is a valid .NET Framework assembly.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ファイルが有効な .NET Framework アセンブリであることを確認してください。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>This exception is thrown if the file is not a valid .NET Framework assembly.</source>
          <target state="translated">この例外は、ファイルが有効な .NET Framework アセンブリではない場合にスローされます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source><bpt id="p1">**</bpt>Check to make sure an assembly or module was not loaded twice with two different evidences.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>アセンブリまたはモジュールが 2 つの異なる証拠を使用して 2 回読み込まれていないことを確認します。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</source>
          <target state="translated">証拠とは、セキュリティ ポリシーがアクセス許可を決定するときに使用する一連の情報 (コードにどのようなアクセス許可を付与できるかなど) のことです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>For more information, see <ph id="ph1">&lt;xref:System.EnterpriseServices.Internal.Publish.GacRemove%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph></source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.EnterpriseServices.Internal.Publish.GacRemove%2A&gt;</ph>」および「<ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source><bpt id="p1">**</bpt>If using the RegisterAssembly or UnregisterAssembly methods, check to make sure the assembly name is not longer than MAX_PATH characters.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RegisterAssembly または UnregisterAssembly メソッドを使用する場合は、アセンブリ名が MAX_PATH の文字を超えていないことを確認してを確認します。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>The assembly name's length cannot exceed MAX_PATH.</source>
          <target state="translated">アセンブリ名には MAX_PATH を超える文字数を指定できません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>For more information, see <ph id="ph1">&lt;xref:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly%2A&gt;</ph>.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;xref:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly%2A&gt;</ph> および <ph id="ph2">&lt;xref:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly%2A&gt;</ph> を参照してください。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source><bpt id="p1">**</bpt>If loading a satellite assembly, make sure the specified CultureInfo matches the file's CultureInfo.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>サテライト アセンブリを読み込む場合は、指定した CultureInfo がファイルの CultureInfo に一致を確認します。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>Satellite assemblies contain localized resources which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</source>
          <target state="translated">サテライト アセンブリには、ローカライズできない実行可能コードを含むローカライズ済みリソースや、既定のカルチャまたはニュートラル カルチャとして機能する単一カルチャ用のリソースが含まれています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileLoadException">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.IO.FileLoadException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> class, setting the <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Could not load the specified file."</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> クラスの新しいインスタンスの <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> プロパティとして、"指定したファイルを読み込むことができません。" などのエラーを説明するシステム提供のメッセージを設定して、そのインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">このメッセージには、現在のシステムのカルチャが考慮されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> property of the new instance are initialized to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph>に、新しいインスタンスのプロパティが初期化されます<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">エラーを説明する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>メッセージ<ept id="p1">&lt;/c&gt;</ept>の内容は、ユーザーが理解できる内容にします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> class with the specified error message.</source>
          <target state="translated">指定されたエラー メッセージで <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.FileLoadException.Message%2A&gt;</ph> property of the new instance using <ph id="ph2">`message`</ph>.</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.IO.FileLoadException.Message%2A&gt;</ph>プロパティの新しいインスタンスを使用して、<ph id="ph2">`message`</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> property of the new instance are initialized to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph>に、新しいインスタンスのプロパティが初期化されます<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">スローされている例外に関するシリアル化済みオブジェクト データを保持している <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先についてのコンテキスト情報を含む <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">シリアル化したデータを使用して、<ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">エラーを説明する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>メッセージ<ept id="p1">&lt;/c&gt;</ept>の内容は、ユーザーが理解できる内容にします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">現在の例外の原因となった例外。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> パラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> でない場合は、内部例外を処理する <ph id="ph2">&lt;see langword="catch" /&gt;</ph> ブロックで現在の例外が発生します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">前の例外の直接の結果としてスローされる例外については、<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティに、前の例外への参照が格納されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">`InnerException`</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">`InnerException`</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">`InnerException`</ph> プロパティは、コンストラクターに渡されたものと同じ値を返します。<ph id="ph2">`null`</ph> プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<ph id="ph3">`InnerException`</ph> を返します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IO.FileLoadException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileLoadException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部例外の参照。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.Exception)">
          <source>For more information on inner exceptions, see <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</source>
          <target state="translated">内部例外の詳細については、次を参照してください。<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">エラーを説明する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>メッセージ<ept id="p1">&lt;/c&gt;</ept>の内容は、ユーザーが理解できる内容にします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the file that was not loaded.</source>
          <target state="translated">読み込むことができなかったファイルの名前を含んでいる <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> class with a specified error message and the name of the file that could not be loaded.</source>
          <target state="translated">エラー メッセージ、および読み込むことができなかったファイルの名前を指定して、<ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.FileLoadException.Message%2A&gt;</ph> property of the new instance using <ph id="ph2">`message`</ph> and the <ph id="ph3">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> property using <ph id="ph4">`fileName`</ph>.</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.IO.FileLoadException.Message%2A&gt;</ph>プロパティの新しいインスタンスを使用して、<ph id="ph2">`message`</ph>と<ph id="ph3">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph>プロパティを使用して<ph id="ph4">`fileName`</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>にプロパティの新しいインスタンスを初期化<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> is not required to be a file stored on disk; it can be any part of a system that supports access to streams.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> ディスクに格納されているファイルである必要はありません。ストリームへのアクセスをサポートするシステムの任意の部分を指定できます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
          <source>For example, depending on the system, this class might be able to access a physical device.</source>
          <target state="translated">たとえば、システムによってこのクラス可能性がありますできる物理デバイスにアクセスします。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">エラーを説明する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>メッセージ<ept id="p1">&lt;/c&gt;</ept>の内容は、ユーザーが理解できる内容にします。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the file that was not loaded.</source>
          <target state="translated">読み込むことができなかったファイルの名前を含んでいる <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">現在の例外の原因となった例外。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> パラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> でない場合は、内部例外を処理する <ph id="ph2">&lt;see langword="catch" /&gt;</ph> ブロックで現在の例外が発生します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> class with a specified error message, the name of the file that could not be loaded, and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">エラー メッセージ、読み込むことができなかったファイルの名前、およびこの例外の原因である内部例外への参照を指定して、<ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">前の例外の直接の結果としてスローされる例外については、<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティに、前の例外への参照が格納されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>The <ph id="ph1">`InnerException`</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">`InnerException`</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">`InnerException`</ph> プロパティは、コンストラクターに渡されたものと同じ値を返します。<ph id="ph2">`null`</ph> プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<ph id="ph3">`InnerException`</ph> を返します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source><ph id="ph1">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> is not required to be a file stored on disk; it can be any part of a system that supports access to streams.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> ディスクに格納されているファイルである必要はありません。ストリームへのアクセスをサポートするシステムの任意の部分を指定できます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>For example, depending on the system, this class might be able to access a physical device.</source>
          <target state="translated">たとえば、システムによってこのクラス可能性がありますできる物理デバイスにアクセスします。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IO.FileLoadException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileLoadException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部例外の参照。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
          <source>For more information on inner exceptions, see <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</source>
          <target state="translated">内部例外の詳細については、次を参照してください。<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.IO.FileLoadException.FileName">
          <source>Gets the name of the file that causes this exception.</source>
          <target state="translated">現在の例外の原因であるファイルの名前を取得します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.FileName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.</source>
          <target state="translated">イメージが無効であるファイルの名前を含んでいる <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。現在のインスタンスのコンストラクターにファイル名が渡されなかった場合は null 参照。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.FileName">
          <source>This property returns the name of the file supplied to the constructor for the current instance, if any.</source>
          <target state="translated">このプロパティは、存在する場合に、現在のインスタンスのコンス トラクターに指定されたファイルの名前を返します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.FileName">
          <source>If the file name was not specified or is a null reference, this property returns a null reference.</source>
          <target state="translated">場合は、ファイル名が指定されていないか、null 参照には、このプロパティは null 参照を返します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.FileName">
          <source>This property is read-only.</source>
          <target state="translated">このプロパティは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.IO.FileLoadException.FusionLog">
          <source>Gets the log file that describes why an assembly load failed.</source>
          <target state="translated">アセンブリの読み込みに失敗した原因を説明するログ ファイルを取得します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.FusionLog">
          <source>A string containing errors reported by the assembly cache.</source>
          <target state="translated">アセンブリ キャッシュがレポートするエラーが含まれている文字列。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.IO.FileLoadException.FusionLog">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.FusionLog">
          <source>to provide evidence and view and modify policy.</source>
          <target state="translated">証拠とビューを提供し、ポリシーを変更します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.FusionLog">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph>.</source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">スローされている例外に関するシリアル化済みオブジェクト データを保持している <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先についてのコンテキスト情報を含む <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the file name and additional exception information.</source>
          <target state="translated">ファイル名と追加の例外情報を使用して <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> を設定します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>to provide evidence and view and modify policy.</source>
          <target state="translated">証拠とビューを提供し、ポリシーを変更します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph>.</source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.IO.FileLoadException.Message">
          <source>Gets the error message and the name of the file that caused this exception.</source>
          <target state="translated">エラー メッセージ、および例外の原因であるファイルの名前を取得します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.Message">
          <source>A string containing the error message and the name of the file that caused this exception.</source>
          <target state="translated">エラー メッセージ、および例外の原因であるファイルの名前。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>.</source>
          <target state="translated">このプロパティのオーバーライド<ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.Message">
          <source>If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message.</source>
          <target state="translated">現在の例外のコンス トラクターにメッセージが指定されていない場合、このプロパティは、システム提供のエラー メッセージを返します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.Message">
          <source>If the <ph id="ph1">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> property is not a null reference, the message includes the file name, for example, "Unable to load file a <ph id="ph2">`FileName`</ph>."</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph>プロパティが null 参照ではありません、たとえば、メッセージにファイル名が含まれています"ファイルをロードできません、 <ph id="ph2">`FileName`</ph>"。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.Message">
          <source>(a <ph id="ph1">`FileName`</ph> represents the value returned by <ph id="ph2">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph>.) If <ph id="ph3">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> is <ph id="ph4">`null`</ph>, this is indicated in the system-supplied message as "(null)".</source>
          <target state="translated">(、<ph id="ph1">`FileName`</ph>によって返される値を表す<ph id="ph2">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph>)。場合<ph id="ph3">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph>は<ph id="ph4">`null`</ph>、これは"(null)"としてシステム提供のメッセージで示されます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.Message">
          <source>The system-supplied message takes into account the current system culture.</source>
          <target state="translated">システム提供のメッセージでは、現在のシステム カルチャが考慮されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileLoadException.Message">
          <source>This property is read-only.</source>
          <target state="translated">このプロパティは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.ToString">
          <source>Returns the fully qualified name of the current exception, and possibly the error message, the name of the inner exception, and the stack trace.</source>
          <target state="translated">現在の例外の完全修飾名と、可能な場合はエラー メッセージ、内部例外の名前、スタック トレースなどを返します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.FileLoadException.ToString">
          <source>A string containing the fully qualified name of this exception, and possibly the error message, the name of the inner exception, and the stack trace, depending on which <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> constructor is used.</source>
          <target state="translated">現在の例外の完全修飾名と、使用する <ph id="ph1">&lt;see cref="T:System.IO.FileLoadException" /&gt;</ph> コンストラクターによって可能な場合は、エラー メッセージ、内部例外の名前、スタック トレースなどを含んでいる文字列。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.ToString">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.ToString">
          <source>The string representation returned by this method includes the name of the exception, the value of the <ph id="ph1">&lt;xref:System.IO.FileLoadException.Message%2A&gt;</ph> the value of the <ph id="ph2">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph> property, and the result of calling <ph id="ph3">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>.</source>
          <target state="translated">このメソッドによって返される文字列の形式が、例外の値の名前を含む、<ph id="ph1">&lt;xref:System.IO.FileLoadException.Message%2A&gt;</ph>の値、<ph id="ph2">&lt;xref:System.IO.FileLoadException.FileName%2A&gt;</ph>プロパティ、および呼び出しの結果<ph id="ph3">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileLoadException.ToString">
          <source>If any of these members is a null reference, its value is not included in the returned string.</source>
          <target state="translated">これらのメンバーのいずれかが null 参照の場合は、その値は返される文字列には含まれません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>