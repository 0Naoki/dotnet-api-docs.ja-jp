<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da2c7d187229c87236c692f12e5623e0dabc19e2" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52367040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type StringWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="03b16-101">文字列に情報を書き込む <see cref="T:System.IO.TextWriter" /> を実装します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="03b16-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span>
      </span>
      <span data-ttu-id="03b16-102">情報は、基になる <see cref="T:System.Text.StringBuilder" /> に格納されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="03b16-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-103"><xref:System.IO.StringWriter> 同期または非同期で文字列に書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="03b16-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="03b16-104">同時に文字を書き込むことができます、<xref:System.IO.StringWriter.Write%28System.Char%29>または<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>メソッドは、文字列を使用して、時間に、<xref:System.IO.StringWriter.Write%28System.String%29>または<xref:System.IO.StringWriter.WriteAsync%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="03b16-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="03b16-105">さらに、文字、文字の配列またはとのいずれかで非同期に行終端記号文字列を書き込み、<xref:System.IO.StringWriter.WriteLineAsync%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="03b16-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="03b16-106">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-107">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-107">To do this...</span></span>|<span data-ttu-id="03b16-108">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-109">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-109">Create a text file.</span></span>|[<span data-ttu-id="03b16-110">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-111">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-111">Write to a text file.</span></span>|[<span data-ttu-id="03b16-112">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-113">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-113">Read from a text file.</span></span>|[<span data-ttu-id="03b16-114">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="03b16-115">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="03b16-115">Append text to a file.</span></span>|[<span data-ttu-id="03b16-116">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="03b16-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-117">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-118">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-119">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="03b16-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-120">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="03b16-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-121">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-121">Read from a binary file.</span></span>|[<span data-ttu-id="03b16-122">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="03b16-123">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-123">Write to a binary file.</span></span>|[<span data-ttu-id="03b16-124">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-125">次のコード例は、元のテキストにセンテンスをし、段落の変換のグループからの継続的な段落の作成を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
    <related type="Article" href="~/docs/standard/io/index.md">
      <span data-ttu-id="03b16-126">ファイルおよびストリーム入出力</span>
      <span class="sxs-lookup">
        <span data-stu-id="03b16-126">File and Stream I/O</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
      <span data-ttu-id="03b16-127">方法 : ファイルからテキストを読み取る</span>
      <span class="sxs-lookup">
        <span data-stu-id="03b16-127">How to: Read Text from a File</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
      <span data-ttu-id="03b16-128">方法 : ファイルにテキストを書き込む</span>
      <span class="sxs-lookup">
        <span data-stu-id="03b16-128">How to: Write Text to a File</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="03b16-129">
            <see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-129">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03b16-130">
            <see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-130">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-131">新しい<xref:System.Text.StringBuilder>オブジェクトが自動的に作成されの新しいインスタンスに関連付けられた、<xref:System.IO.StringWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="03b16-131">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="03b16-132">新しいインスタンスを初期化はこのコンス トラクターのコントロールの書式設定が指定されていないため<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="03b16-132">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03b16-133">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-133">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-134">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-134">To do this...</span></span>|<span data-ttu-id="03b16-135">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-135">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-136">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-136">Create a text file.</span></span>|[<span data-ttu-id="03b16-137">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-137">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-138">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-138">Write to a text file.</span></span>|[<span data-ttu-id="03b16-139">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-139">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-140">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-140">Read from a text file.</span></span>|[<span data-ttu-id="03b16-141">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-141">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="03b16-142">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="03b16-142">Append text to a file.</span></span>|[<span data-ttu-id="03b16-143">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="03b16-143">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-144">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-144">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-145">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-145">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-146">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="03b16-146">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-147">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="03b16-147">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-148">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-148">Read from a binary file.</span></span>|[<span data-ttu-id="03b16-149">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-149">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="03b16-150">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-150">Write to a binary file.</span></span>|[<span data-ttu-id="03b16-151">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-151">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-152">次のコード例に示しますを使用して文字列を作成する方法、`StringWriter`クラス。</span><span class="sxs-lookup"><span data-stu-id="03b16-152">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-153">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-153">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-154">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-154">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-155">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-155">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <span data-ttu-id="03b16-156">書式を制御する <see cref="T:System.IFormatProvider" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-156">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-157">指定した書式コントロールで <see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-157">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-158">新しい<xref:System.Text.StringBuilder>オブジェクトが自動的に作成されの新しいインスタンスに関連付けられた、<xref:System.IO.StringWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="03b16-158">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="03b16-159">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-159">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-160">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-160">To do this...</span></span>|<span data-ttu-id="03b16-161">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-161">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-162">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-162">Create a text file.</span></span>|[<span data-ttu-id="03b16-163">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-163">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-164">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-164">Write to a text file.</span></span>|[<span data-ttu-id="03b16-165">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-165">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-166">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-166">Read from a text file.</span></span>|[<span data-ttu-id="03b16-167">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-167">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="03b16-168">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="03b16-168">Append text to a file.</span></span>|[<span data-ttu-id="03b16-169">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="03b16-169">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-170">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-170">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-171">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-171">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-172">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="03b16-172">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-173">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="03b16-173">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-174">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-174">Read from a binary file.</span></span>|[<span data-ttu-id="03b16-175">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-175">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="03b16-176">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-176">Write to a binary file.</span></span>|[<span data-ttu-id="03b16-177">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-177">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-178">次のコード例では、特定のカルチャで文字列を作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-178">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-179">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-179">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-180">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-180">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-181">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-181">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter sb" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="03b16-182">書き込み先の <see cref="T:System.Text.StringBuilder" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-182">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-183">指定した <see cref="T:System.Text.StringBuilder" /> に書き込む <see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-183">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-184">新しいインスタンスを初期化はこのコンス トラクターのコントロールの書式設定が指定されていないため<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="03b16-184">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03b16-185">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-185">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-186">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-186">To do this...</span></span>|<span data-ttu-id="03b16-187">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-187">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-188">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-188">Create a text file.</span></span>|[<span data-ttu-id="03b16-189">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-189">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-190">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-190">Write to a text file.</span></span>|[<span data-ttu-id="03b16-191">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-191">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-192">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-192">Read from a text file.</span></span>|[<span data-ttu-id="03b16-193">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-193">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="03b16-194">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="03b16-194">Append text to a file.</span></span>|[<span data-ttu-id="03b16-195">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="03b16-195">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-196">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-196">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-197">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-197">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-198">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="03b16-198">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-199">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="03b16-199">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-200">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-200">Read from a binary file.</span></span>|[<span data-ttu-id="03b16-201">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-201">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="03b16-202">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-202">Write to a binary file.</span></span>|[<span data-ttu-id="03b16-203">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-203">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-204">次のコード例に示しますを使用して、<xref:System.Text.StringBuilder>閉じている基になる文字列を変更するにはクラス`StringWriter`します。</span><span class="sxs-lookup"><span data-stu-id="03b16-204">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="03b16-205">
            <paramref name="sb" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-205">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-206">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-206">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-207">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-207">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-208">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-208">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder * IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter (sb, formatProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="03b16-209">書き込み先の <see cref="T:System.Text.StringBuilder" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-209">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="03b16-210">書式を制御する <see cref="T:System.IFormatProvider" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-210">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-211">指定した <see cref="T:System.Text.StringBuilder" /> に書き込み、指定した書式プロバイダーを持つ、<see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-211">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-212">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-212">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-213">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-213">To do this...</span></span>|<span data-ttu-id="03b16-214">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-214">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-215">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-215">Create a text file.</span></span>|[<span data-ttu-id="03b16-216">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-216">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-217">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-217">Write to a text file.</span></span>|[<span data-ttu-id="03b16-218">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-218">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-219">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-219">Read from a text file.</span></span>|[<span data-ttu-id="03b16-220">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-220">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="03b16-221">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="03b16-221">Append text to a file.</span></span>|[<span data-ttu-id="03b16-222">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="03b16-222">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-223">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-223">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-224">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-224">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-225">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="03b16-225">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-226">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="03b16-226">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-227">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-227">Read from a binary file.</span></span>|[<span data-ttu-id="03b16-228">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-228">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="03b16-229">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-229">Write to a binary file.</span></span>|[<span data-ttu-id="03b16-230">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-230">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="03b16-231">
            <paramref name="sb" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-231">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-232">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-232">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-233">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-233">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-234">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-234">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03b16-235">現在の <see cref="T:System.IO.StringWriter" />、および基になるストリームを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-235">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-236">ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。[方法: テキスト ファイルを書き込む](~/docs/standard/io/how-to-write-text-to-a-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="03b16-236">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="03b16-237">ファイルからテキストの読み取りの例は、次を参照してください。[方法: テキスト ファイルからの読み取り](~/docs/standard/io/how-to-read-text-from-a-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="03b16-237">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="03b16-238">読み取りと書き込みをバイナリ ファイルの例は、次を参照してください。[方法: 新しく作成されたデータ ファイルを読み書き](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="03b16-238">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="03b16-239">このメソッドは、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="03b16-239">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03b16-240">この実装の`Close`呼び出し、<xref:System.IO.StringWriter.Dispose%2A>メソッドに渡して、`true`値。</span><span class="sxs-lookup"><span data-stu-id="03b16-240">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="03b16-241">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない`Close`します。</span><span class="sxs-lookup"><span data-stu-id="03b16-241">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="03b16-242">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="03b16-242">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="03b16-243">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="03b16-243">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="03b16-244">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="03b16-244">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03b16-245">このコード例が示されている例の一部、<xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="03b16-245">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-246">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-246">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-247">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-247">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-248">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-248">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="03b16-249">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-249">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-250">
            <see cref="T:System.IO.StringWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-250">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-251">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StringWriter> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="03b16-251">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="03b16-252">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="03b16-252">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03b16-253">
              <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="03b16-253">
                <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="03b16-254">オーバーライドするときに<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />を以前の呼び出しで破棄されたオブジェクトを参照しないように注意、<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="03b16-254">When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-255">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-255">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-256">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-256">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-257">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-257">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.StringWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03b16-258">出力の書き込みに使用する <see cref="T:System.Text.Encoding" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-258">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03b16-259">出力の書き込みに使用する <see langword="Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-259">The <see langword="Encoding" /> in which the output is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-260">このプロパティは、いくつか XML のシナリオで使用されるエンコーディングを格納しているヘッダーを記述する必要があります、ために必要な`StringWriter`します。</span><span class="sxs-lookup"><span data-stu-id="03b16-260">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="03b16-261">これにより、任意で使用する XML コード`StringWriter`し、正しい XML ヘッダーを生成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-261">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="03b16-262">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-262">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-263">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-263">To do this...</span></span>|<span data-ttu-id="03b16-264">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-264">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-265">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-265">Create a text file.</span></span>|[<span data-ttu-id="03b16-266">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-266">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-267">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-267">Write to a text file.</span></span>|[<span data-ttu-id="03b16-268">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-268">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-269">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-269">Read from a text file.</span></span>|[<span data-ttu-id="03b16-270">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-270">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-271">このコード例が示されている例の一部、<xref:System.IO.StringWriter.%23ctor>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="03b16-271">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-272">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-272">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-273">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-273">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-274">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-274">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stringWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03b16-275">現在のライターのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-275">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-276">非同期のフラッシュ操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-276">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberSignature Language="F#" Value="abstract member GetStringBuilder : unit -&gt; System.Text.StringBuilder&#xA;override this.GetStringBuilder : unit -&gt; System.Text.StringBuilder" Usage="stringWriter.GetStringBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03b16-277">基になる <see cref="T:System.Text.StringBuilder" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-277">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-278">基になる <see langword="StringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-278">The underlying <see langword="StringBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-279">いずれかになります、 `StringBuilder` 、コンス トラクターに渡された、または`StringBuilder`自動的に作成されました。</span><span class="sxs-lookup"><span data-stu-id="03b16-279">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="03b16-280">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-280">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-281">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-281">To do this...</span></span>|<span data-ttu-id="03b16-282">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-282">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-283">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-283">Create a text file.</span></span>|[<span data-ttu-id="03b16-284">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-284">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-285">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-285">Write to a text file.</span></span>|[<span data-ttu-id="03b16-286">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-286">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-287">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-287">Read from a text file.</span></span>|[<span data-ttu-id="03b16-288">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-288">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-289">このコード例が示されている例の一部、<xref:System.IO.StringWriter.%23ctor>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="03b16-289">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-290">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-290">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-291">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-291">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-292">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-292">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringWriter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03b16-293">現在の <see langword="StringWriter" /> にこれまでに書き込まれた文字を格納する文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-293">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-294">現在の <see langword="StringWriter" /> に書き込まれた文字を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-294">The string containing the characters written to the current <see langword="StringWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-295">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-295">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-296">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-296">To do this...</span></span>|<span data-ttu-id="03b16-297">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-297">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-298">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-298">Create a text file.</span></span>|[<span data-ttu-id="03b16-299">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-299">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-300">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-300">Write to a text file.</span></span>|[<span data-ttu-id="03b16-301">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-301">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-302">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-302">Read from a text file.</span></span>|[<span data-ttu-id="03b16-303">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-303">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-304">このコード例が示されている例の一部、<xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="03b16-304">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-305">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-305">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-306">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-306">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-307">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-307">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="03b16-308">文字列にデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-308">Writes data to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03b16-309">書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-309">The character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-310">文字列に文字を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-310">Writes a character to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-311">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="03b16-311">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03b16-312">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-312">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-313">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-313">To do this...</span></span>|<span data-ttu-id="03b16-314">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-314">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-315">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-315">Create a text file.</span></span>|[<span data-ttu-id="03b16-316">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-316">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-317">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-317">Write to a text file.</span></span>|[<span data-ttu-id="03b16-318">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-318">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-319">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-319">Read from a text file.</span></span>|[<span data-ttu-id="03b16-320">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-320">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="03b16-321">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="03b16-321">Append text to a file.</span></span>|[<span data-ttu-id="03b16-322">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="03b16-322">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-323">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-323">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-324">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-324">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-325">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="03b16-325">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-326">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="03b16-326">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-327">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-327">Read from a binary file.</span></span>|[<span data-ttu-id="03b16-328">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-328">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="03b16-329">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-329">Write to a binary file.</span></span>|[<span data-ttu-id="03b16-330">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-330">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-331">このコード例が示されている例の一部、<xref:System.IO.StringWriter.%23ctor>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="03b16-331">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-332">ライターは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-332">The writer is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-333">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-333">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-334">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-334">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-335">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-335">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03b16-336">書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-336">The string to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-337">現在の文字列に文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-337">Writes a string to the current string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-338">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="03b16-338">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03b16-339">指定した文字列が場合`null`、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="03b16-339">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="03b16-340">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-340">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-341">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-341">To do this...</span></span>|<span data-ttu-id="03b16-342">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-342">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-343">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-343">Create a text file.</span></span>|[<span data-ttu-id="03b16-344">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-344">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-345">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-345">Write to a text file.</span></span>|[<span data-ttu-id="03b16-346">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-346">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-347">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-347">Read from a text file.</span></span>|[<span data-ttu-id="03b16-348">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-348">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="03b16-349">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="03b16-349">Append text to a file.</span></span>|[<span data-ttu-id="03b16-350">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="03b16-350">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-351">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-351">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-352">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-352">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-353">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="03b16-353">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-354">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="03b16-354">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-355">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-355">Read from a binary file.</span></span>|[<span data-ttu-id="03b16-356">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-356">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="03b16-357">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-357">Write to a binary file.</span></span>|[<span data-ttu-id="03b16-358">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-358">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-359">このコード例が示されている例の一部、<xref:System.IO.StringWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="03b16-359">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-360">ライターは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-360">The writer is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-361">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-361">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-362">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-362">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-363">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-363">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="stringWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="03b16-364">データの書き込み元の文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-364">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="03b16-365">データの読み取りを開始する、バッファー内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-365">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="03b16-366">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-366">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-367">文字列に文字配列の一部を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-367">Writes a subarray of characters to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-368">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="03b16-368">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03b16-369">このメソッドは書き込みます`count`文字のデータをこの`StringWriter`から`buffer`位置から始まる、 `index`。</span><span class="sxs-lookup"><span data-stu-id="03b16-369">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="03b16-370">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="03b16-370">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="03b16-371">目的</span><span class="sxs-lookup"><span data-stu-id="03b16-371">To do this...</span></span>|<span data-ttu-id="03b16-372">参照項目</span><span class="sxs-lookup"><span data-stu-id="03b16-372">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="03b16-373">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="03b16-373">Create a text file.</span></span>|[<span data-ttu-id="03b16-374">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-374">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-375">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-375">Write to a text file.</span></span>|[<span data-ttu-id="03b16-376">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="03b16-376">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="03b16-377">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-377">Read from a text file.</span></span>|[<span data-ttu-id="03b16-378">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="03b16-378">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="03b16-379">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="03b16-379">Append text to a file.</span></span>|[<span data-ttu-id="03b16-380">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="03b16-380">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-381">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-381">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-382">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="03b16-382">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-383">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="03b16-383">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-384">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="03b16-384">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="03b16-385">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="03b16-385">Read from a binary file.</span></span>|[<span data-ttu-id="03b16-386">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-386">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="03b16-387">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="03b16-387">Write to a binary file.</span></span>|[<span data-ttu-id="03b16-388">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="03b16-388">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="03b16-389">このコード例が示されている例の一部、<xref:System.IO.StringWriter.%23ctor>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="03b16-389">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="03b16-390">
            <paramref name="buffer" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-390">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03b16-391">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-391">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="03b16-392">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-392">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="03b16-393">
            <see langword="Length" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-393">
              <see langword="Length" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-394">ライターは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-394">The writer is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="03b16-395">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-395">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="03b16-396">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-396">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="03b16-397">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-397">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="03b16-398">文字列にデータを非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-398">Writes data to the string asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03b16-399">文字列に書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-399">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-400">文字を非同期で文字列に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-400">Writes a character to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-401">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-401">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="03b16-402">次の例を使用して文字を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="03b16-402">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-403">文字列ライターが破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-403">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="03b16-404">文字列ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-404">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03b16-405">書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-405">The string to write.</span>
          </span>
          <span data-ttu-id="03b16-406">
            <paramref name="value" /> が <see langword="null" /> の場合は、何もテキスト ストリームに書き込みません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-406">If <paramref name="value" /> is <see langword="null" />, nothing is written to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-407">現在の文字列に文字列を非同期的に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-407">Writes a string to the current string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-408">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-408">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="03b16-409">次の例を使用して文字列を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteAsync%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="03b16-409">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-410">文字列ライターが破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-410">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="03b16-411">文字列ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-411">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="03b16-412">データの書き込み元の文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-412">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="03b16-413">データの読み取りを開始する、バッファー内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-413">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="03b16-414">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-414">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-415">文字の部分配列を文字列に非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-415">Writes a subarray of characters to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-416">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-416">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="03b16-417">次の例を使用して文字を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="03b16-417">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="03b16-418">
            <paramref name="buffer" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-418">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="03b16-419">
            <paramref name="index" /> に <paramref name="count" /> を加算した値がバッファーの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-419">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03b16-420">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-420">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-421">文字列ライターが破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-421">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="03b16-422">文字列ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-422">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="03b16-423">データを非同期で文字列に書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-423">Writes data followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03b16-424">文字列に書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-424">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-425">非同期で文字列に文字を書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-425">Writes a character followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-426">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-426">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-427">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="03b16-427">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03b16-428">次の例を使用して文字を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="03b16-428">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
 [!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-429">文字列ライターが破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-429">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="03b16-430">文字列ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-430">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03b16-431">書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-431">The string to write.</span>
          </span>
          <span data-ttu-id="03b16-432">値が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-432">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-433">文字列を非同期で現在の文字列に書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-433">Writes a string followed by a line terminator asynchronously to the current string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-434">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-434">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-435">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="03b16-435">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03b16-436">次の例を使用して文字列を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteLineAsync%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="03b16-436">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
 [!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-437">文字列ライターが破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-437">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="03b16-438">文字列ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-438">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="03b16-439">データの書き込み元の文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-439">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="03b16-440">データの読み取りを開始する、バッファー内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-440">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="03b16-441">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-441">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03b16-442">文字の部分配列を文字列に非同期で書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-442">Writes a subarray of characters followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03b16-443">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-443">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03b16-444">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="03b16-444">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03b16-445">次の例を使用して文字を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="03b16-445">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
 [!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="03b16-446">
            <paramref name="buffer" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-446">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="03b16-447">
            <paramref name="index" /> に <paramref name="count" /> を加算した値がバッファーの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-447">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03b16-448">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-448">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="03b16-449">文字列ライターが破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-449">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="03b16-450">文字列ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="03b16-450">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>