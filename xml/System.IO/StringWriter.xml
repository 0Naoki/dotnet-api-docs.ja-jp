<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6d407-101">文字列に情報を書き込む <see cref="T:System.IO.TextWriter" /> を実装します。</span><span class="sxs-lookup"><span data-stu-id="6d407-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span></span> <span data-ttu-id="6d407-102">情報は、基になる <see cref="T:System.Text.StringBuilder" /> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="6d407-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-103"><xref:System.IO.StringWriter> 同期または非同期で文字列への書き込みを有効にします。</span><span class="sxs-lookup"><span data-stu-id="6d407-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="6d407-104">使用時に文字を書き込むことができます、<xref:System.IO.StringWriter.Write%28System.Char%29>または<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>メソッドは、文字列を使用して、時間の<xref:System.IO.StringWriter.Write%28System.String%29>または<xref:System.IO.StringWriter.WriteAsync%28System.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6d407-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="6d407-105">さらに、文字、文字の配列または文字列のいずれかに非同期で行終端記号を書き込むことができます、<xref:System.IO.StringWriter.WriteLineAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6d407-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="6d407-106">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-107">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-107">To do this...</span></span>|<span data-ttu-id="6d407-108">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-109">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-109">Create a text file.</span></span>|[<span data-ttu-id="6d407-110">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-111">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-111">Write to a text file.</span></span>|[<span data-ttu-id="6d407-112">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-113">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-113">Read from a text file.</span></span>|[<span data-ttu-id="6d407-114">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6d407-115">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="6d407-115">Append text to a file.</span></span>|[<span data-ttu-id="6d407-116">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="6d407-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-117">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-118">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-119">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-120">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-121">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6d407-121">Read from a binary file.</span></span>|[<span data-ttu-id="6d407-122">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6d407-123">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-123">Write to a binary file.</span></span>|[<span data-ttu-id="6d407-124">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-125">次のコード例では、元のテキストに、センテンスし、段落の変換のグループから継続的な段落の作成を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d407-126"><see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d407-126">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d407-127"><see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d407-127">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-128">新しい<xref:System.Text.StringBuilder>オブジェクトが自動的に作成されの新しいインスタンスに関連付けられている、<xref:System.IO.StringWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="6d407-128">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="6d407-129">新しいインスタンスを初期化はこのコンス トラクターのコントロールの書式設定が指定されていないため<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="6d407-129">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6d407-130">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-130">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-131">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-131">To do this...</span></span>|<span data-ttu-id="6d407-132">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-132">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-133">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-133">Create a text file.</span></span>|[<span data-ttu-id="6d407-134">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-134">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-135">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-135">Write to a text file.</span></span>|[<span data-ttu-id="6d407-136">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-136">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-137">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-137">Read from a text file.</span></span>|[<span data-ttu-id="6d407-138">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-138">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6d407-139">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="6d407-139">Append text to a file.</span></span>|[<span data-ttu-id="6d407-140">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="6d407-140">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-141">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-141">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-142">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-142">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-143">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-143">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-144">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-144">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-145">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6d407-145">Read from a binary file.</span></span>|[<span data-ttu-id="6d407-146">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-146">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6d407-147">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-147">Write to a binary file.</span></span>|[<span data-ttu-id="6d407-148">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-148">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-149">使用して文字列を構築するために次のコード例には、`StringWriter`クラスです。</span><span class="sxs-lookup"><span data-stu-id="6d407-149">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><span data-ttu-id="6d407-150">書式を制御する <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6d407-150">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="6d407-151">指定した書式コントロールで <see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d407-151">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-152">新しい<xref:System.Text.StringBuilder>オブジェクトが自動的に作成されの新しいインスタンスに関連付けられている、<xref:System.IO.StringWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="6d407-152">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="6d407-153">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-153">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-154">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-154">To do this...</span></span>|<span data-ttu-id="6d407-155">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-155">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-156">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-156">Create a text file.</span></span>|[<span data-ttu-id="6d407-157">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-157">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-158">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-158">Write to a text file.</span></span>|[<span data-ttu-id="6d407-159">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-159">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-160">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-160">Read from a text file.</span></span>|[<span data-ttu-id="6d407-161">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-161">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6d407-162">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="6d407-162">Append text to a file.</span></span>|[<span data-ttu-id="6d407-163">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="6d407-163">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-164">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-164">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-165">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-165">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-166">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-166">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-167">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-167">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-168">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6d407-168">Read from a binary file.</span></span>|[<span data-ttu-id="6d407-169">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-169">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6d407-170">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-170">Write to a binary file.</span></span>|[<span data-ttu-id="6d407-171">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-171">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-172">次のコード例では、特定のカルチャで文字列を構築する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-172">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb"><span data-ttu-id="6d407-173">書き込む <see cref="T:System.Text.StringBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6d407-173">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span></span></param>
        <summary><span data-ttu-id="6d407-174">指定した <see cref="T:System.IO.StringWriter" /> への書き込みを行う <see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d407-174">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-175">新しいインスタンスを初期化はこのコンス トラクターのコントロールの書式設定が指定されていないため<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="6d407-175">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6d407-176">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-176">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-177">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-177">To do this...</span></span>|<span data-ttu-id="6d407-178">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-178">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-179">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-179">Create a text file.</span></span>|[<span data-ttu-id="6d407-180">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-180">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-181">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-181">Write to a text file.</span></span>|[<span data-ttu-id="6d407-182">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-183">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-183">Read from a text file.</span></span>|[<span data-ttu-id="6d407-184">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-184">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6d407-185">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="6d407-185">Append text to a file.</span></span>|[<span data-ttu-id="6d407-186">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="6d407-186">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-187">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-188">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-188">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-189">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-189">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-190">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-190">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-191">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6d407-191">Read from a binary file.</span></span>|[<span data-ttu-id="6d407-192">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-192">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6d407-193">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-193">Write to a binary file.</span></span>|[<span data-ttu-id="6d407-194">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-194">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-195">次のコード例では、使用方法を示します、<xref:System.Text.StringBuilder>内、閉じられた基になる文字列を変更するクラス`StringWriter`です。</span><span class="sxs-lookup"><span data-stu-id="6d407-195">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d407-196"><paramref name="sb" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6d407-196"><paramref name="sb" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb"><span data-ttu-id="6d407-197">書き込む <see cref="T:System.Text.StringBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6d407-197">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="6d407-198">書式を制御する <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6d407-198">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="6d407-199">指定した <see cref="T:System.IO.StringWriter" /> に書き込みを行い、指定した書式プロバイダーを持つ <see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6d407-199">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-200">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-200">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-201">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-201">To do this...</span></span>|<span data-ttu-id="6d407-202">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-202">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-203">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-203">Create a text file.</span></span>|[<span data-ttu-id="6d407-204">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-204">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-205">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-205">Write to a text file.</span></span>|[<span data-ttu-id="6d407-206">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-206">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-207">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-207">Read from a text file.</span></span>|[<span data-ttu-id="6d407-208">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-208">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6d407-209">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="6d407-209">Append text to a file.</span></span>|[<span data-ttu-id="6d407-210">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="6d407-210">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-211">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-211">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-212">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-212">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-213">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-213">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-214">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-214">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-215">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6d407-215">Read from a binary file.</span></span>|[<span data-ttu-id="6d407-216">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-216">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6d407-217">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-217">Write to a binary file.</span></span>|[<span data-ttu-id="6d407-218">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-218">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d407-219"><paramref name="sb" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6d407-219"><paramref name="sb" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d407-220">現在の <see cref="T:System.IO.StringWriter" />、および基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="6d407-220">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-221">ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。[する方法: テキスト ファイルを書き込む](~/docs/standard/io/how-to-write-text-to-a-file.md)です。</span><span class="sxs-lookup"><span data-stu-id="6d407-221">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="6d407-222">ファイルからテキストの読み取りの例は、次を参照してください。[する方法: テキスト ファイルからの読み取り](~/docs/standard/io/how-to-read-text-from-a-file.md)です。</span><span class="sxs-lookup"><span data-stu-id="6d407-222">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="6d407-223">読み取りと書き込み、バイナリ ファイルの例は、次を参照してください。[する方法: 新しく作成されたデータ ファイルに読み書き](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)です。</span><span class="sxs-lookup"><span data-stu-id="6d407-223">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="6d407-224">このメソッドは、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="6d407-224">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6d407-225">この実装`Close`呼び出し、<xref:System.IO.StringWriter.Dispose%2A>メソッド、`true`値。</span><span class="sxs-lookup"><span data-stu-id="6d407-225">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="6d407-226">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません`Close`です。</span><span class="sxs-lookup"><span data-stu-id="6d407-226">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="6d407-227">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`に、ストリーム バッファーからデータがフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="6d407-227">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="6d407-228">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</span><span class="sxs-lookup"><span data-stu-id="6d407-228">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="6d407-229">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="6d407-229">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d407-230">このコード例に示されている例の一部である、<xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="6d407-230">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6d407-231">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d407-231"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6d407-232"><see cref="T:System.IO.StringWriter" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="6d407-232">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-233">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StringWriter> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="6d407-233">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="6d407-234">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6d407-234">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6d407-235"><see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="6d407-235"><see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="6d407-236">オーバーライドする場合<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />を以前の呼び出しで既に破棄されているオブジェクトを参照しないように注意、<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />です。</span><span class="sxs-lookup"><span data-stu-id="6d407-236">When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d407-237">出力の書き込みに使用する <see cref="T:System.Text.Encoding" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-237">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span></span></summary>
        <value><span data-ttu-id="6d407-238">出力の書き込みに使用する <see langword="Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="6d407-238">The <see langword="Encoding" /> in which the output is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-239">このプロパティは、一部の XML のシナリオで使用されるエンコーディングを格納している、ヘッダーを書き込む必要があります、必要に応じて、`StringWriter`です。</span><span class="sxs-lookup"><span data-stu-id="6d407-239">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="6d407-240">これにより、任意に使用する XML コード`StringWriter`し、正しい XML ヘッダーを生成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-240">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="6d407-241">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-241">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-242">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-242">To do this...</span></span>|<span data-ttu-id="6d407-243">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-243">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-244">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-244">Create a text file.</span></span>|[<span data-ttu-id="6d407-245">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-245">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-246">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-246">Write to a text file.</span></span>|[<span data-ttu-id="6d407-247">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-247">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-248">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-248">Read from a text file.</span></span>|[<span data-ttu-id="6d407-249">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-249">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-250">このコード例に示されている例の一部である、<xref:System.IO.StringWriter.%23ctor>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="6d407-250">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d407-251">現在のライターのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-251">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="6d407-252">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="6d407-252">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d407-253">基になる <see cref="T:System.Text.StringBuilder" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="6d407-253">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="6d407-254">基になる <see langword="StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="6d407-254">The underlying <see langword="StringBuilder" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-255">これは、いずれか、 `StringBuilder` 、コンス トラクターに渡された、または`StringBuilder`自動的に作成されました。</span><span class="sxs-lookup"><span data-stu-id="6d407-255">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="6d407-256">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-256">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-257">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-257">To do this...</span></span>|<span data-ttu-id="6d407-258">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-258">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-259">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-259">Create a text file.</span></span>|[<span data-ttu-id="6d407-260">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-260">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-261">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-261">Write to a text file.</span></span>|[<span data-ttu-id="6d407-262">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-262">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-263">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-263">Read from a text file.</span></span>|[<span data-ttu-id="6d407-264">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-264">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-265">このコード例に示されている例の一部である、<xref:System.IO.StringWriter.%23ctor>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="6d407-265">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d407-266">現在の <see langword="StringWriter" /> に書き込まれた文字を格納している文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="6d407-266">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span></span></summary>
        <returns><span data-ttu-id="6d407-267">現在の <see langword="StringWriter" /> に書き込まれた文字を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="6d407-267">The string containing the characters written to the current <see langword="StringWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-268">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-268">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-269">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-269">To do this...</span></span>|<span data-ttu-id="6d407-270">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-270">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-271">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-271">Create a text file.</span></span>|[<span data-ttu-id="6d407-272">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-272">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-273">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-273">Write to a text file.</span></span>|[<span data-ttu-id="6d407-274">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-274">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-275">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-275">Read from a text file.</span></span>|[<span data-ttu-id="6d407-276">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-276">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-277">このコード例に示されている例の一部である、<xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="6d407-277">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d407-278">文字列にデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-278">Writes data to the string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6d407-279">書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="6d407-279">The character to write.</span></span></param>
        <summary><span data-ttu-id="6d407-280">文字列に文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-280">Writes a character to the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-281">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="6d407-281">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6d407-282">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-282">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-283">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-283">To do this...</span></span>|<span data-ttu-id="6d407-284">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-284">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-285">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-285">Create a text file.</span></span>|[<span data-ttu-id="6d407-286">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-286">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-287">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-287">Write to a text file.</span></span>|[<span data-ttu-id="6d407-288">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-288">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-289">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-289">Read from a text file.</span></span>|[<span data-ttu-id="6d407-290">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-290">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6d407-291">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="6d407-291">Append text to a file.</span></span>|[<span data-ttu-id="6d407-292">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="6d407-292">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-293">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-293">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-294">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-294">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-295">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-295">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-296">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-296">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-297">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6d407-297">Read from a binary file.</span></span>|[<span data-ttu-id="6d407-298">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-298">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6d407-299">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-299">Write to a binary file.</span></span>|[<span data-ttu-id="6d407-300">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-300">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-301">このコード例に示されている例の一部である、<xref:System.IO.StringWriter.%23ctor>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="6d407-301">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-302">ライターは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="6d407-302">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6d407-303">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="6d407-303">The string to write.</span></span></param>
        <summary><span data-ttu-id="6d407-304">現在の文字列に文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-304">Writes a string to the current string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-305">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="6d407-305">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6d407-306">指定された文字列が場合`null`、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="6d407-306">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="6d407-307">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-307">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-308">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-308">To do this...</span></span>|<span data-ttu-id="6d407-309">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-309">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-310">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-310">Create a text file.</span></span>|[<span data-ttu-id="6d407-311">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-311">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-312">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-312">Write to a text file.</span></span>|[<span data-ttu-id="6d407-313">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-313">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-314">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-314">Read from a text file.</span></span>|[<span data-ttu-id="6d407-315">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-315">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6d407-316">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="6d407-316">Append text to a file.</span></span>|[<span data-ttu-id="6d407-317">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="6d407-317">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-318">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-318">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-319">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-319">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-320">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-320">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-321">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-321">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-322">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6d407-322">Read from a binary file.</span></span>|[<span data-ttu-id="6d407-323">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-323">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6d407-324">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-324">Write to a binary file.</span></span>|[<span data-ttu-id="6d407-325">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-325">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-326">このコード例に示されている例の一部である、<xref:System.IO.StringWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="6d407-326">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-327">ライターは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="6d407-327">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="6d407-328">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="6d407-328">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="6d407-329">データの読み取りを開始する、バッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="6d407-329">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="6d407-330">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="6d407-330">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="6d407-331">文字列に文字配列の一部を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-331">Writes a subarray of characters to the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-332">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="6d407-332">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6d407-333">このメソッドは書き込みます`count`文字のデータをこの`StringWriter`から`buffer`位置から`index`です。</span><span class="sxs-lookup"><span data-stu-id="6d407-333">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="6d407-334">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="6d407-334">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6d407-335">目的</span><span class="sxs-lookup"><span data-stu-id="6d407-335">To do this...</span></span>|<span data-ttu-id="6d407-336">参照項目</span><span class="sxs-lookup"><span data-stu-id="6d407-336">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6d407-337">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="6d407-337">Create a text file.</span></span>|[<span data-ttu-id="6d407-338">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-338">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-339">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-339">Write to a text file.</span></span>|[<span data-ttu-id="6d407-340">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="6d407-340">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6d407-341">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="6d407-341">Read from a text file.</span></span>|[<span data-ttu-id="6d407-342">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="6d407-342">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6d407-343">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="6d407-343">Append text to a file.</span></span>|[<span data-ttu-id="6d407-344">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="6d407-344">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-345">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-345">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-346">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="6d407-346">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-347">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-347">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-348">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="6d407-348">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6d407-349">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6d407-349">Read from a binary file.</span></span>|[<span data-ttu-id="6d407-350">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-350">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6d407-351">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-351">Write to a binary file.</span></span>|[<span data-ttu-id="6d407-352">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="6d407-352">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6d407-353">このコード例に示されている例の一部である、<xref:System.IO.StringWriter.%23ctor>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="6d407-353">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d407-354"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6d407-354"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6d407-355"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="6d407-355"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d407-356">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="6d407-356">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span></span> <span data-ttu-id="6d407-357"><see langword="Length" />。</span><span class="sxs-lookup"><span data-stu-id="6d407-357"><see langword="Length" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-358">ライターは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="6d407-358">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d407-359">文字列にデータを非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-359">Writes data to the string asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6d407-360">文字列に書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="6d407-360">The character to write to the string.</span></span></param>
        <summary><span data-ttu-id="6d407-361">文字を非同期で文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-361">Writes a character to the string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="6d407-362">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="6d407-362">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6d407-363">次の例を使用して文字を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6d407-363">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-364">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="6d407-364">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d407-365">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="6d407-365">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6d407-366">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="6d407-366">The string to write.</span></span> <span data-ttu-id="6d407-367"><c>value</c> が <see langword="null" /> の場合は、何もテキスト ストリームに書き込みません。</span><span class="sxs-lookup"><span data-stu-id="6d407-367">If <c>value</c> is <see langword="null" />, nothing is written to the text stream.</span></span></param>
        <summary><span data-ttu-id="6d407-368">現在の文字列に文字列を非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-368">Writes a string to the current string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="6d407-369">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="6d407-369">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6d407-370">次の例を使用して文字列を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteAsync%28System.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6d407-370">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-371">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="6d407-371">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d407-372">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="6d407-372">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="6d407-373">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="6d407-373">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="6d407-374">データの読み取りを開始する、バッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="6d407-374">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="6d407-375">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="6d407-375">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="6d407-376">文字の部分配列を文字列に非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-376">Writes a subarray of characters to the string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="6d407-377">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="6d407-377">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6d407-378">次の例を使用して文字を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6d407-378">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d407-379"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6d407-379"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d407-380"><paramref name="index" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="6d407-380">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6d407-381"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="6d407-381"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-382">文字列ライターが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="6d407-382">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d407-383">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="6d407-383">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d407-384">データを非同期で文字列に書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-384">Writes data followed by a line terminator asynchronously to the string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6d407-385">文字列に書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="6d407-385">The character to write to the string.</span></span></param>
        <summary><span data-ttu-id="6d407-386">非同期で文字列に文字を書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-386">Writes a character followed by a line terminator asynchronously to the string.</span></span></summary>
        <returns><span data-ttu-id="6d407-387">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="6d407-387">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-388">行終端記号がによって定義された、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="6d407-388">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d407-389">次の例を使用して文字を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6d407-389">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
 [!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-390">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="6d407-390">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d407-391">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="6d407-391">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6d407-392">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="6d407-392">The string to write.</span></span> <span data-ttu-id="6d407-393">値が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="6d407-393">If the value is <see langword="null" />, only a line terminator is written.</span></span></param>
        <summary><span data-ttu-id="6d407-394">文字列を非同期で現在の文字列に書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-394">Writes a string followed by a line terminator asynchronously to the current string.</span></span></summary>
        <returns><span data-ttu-id="6d407-395">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="6d407-395">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-396">行終端記号がによって定義された、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="6d407-396">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d407-397">次の例を使用して文字列を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteLineAsync%28System.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6d407-397">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
 [!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-398">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="6d407-398">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d407-399">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="6d407-399">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="6d407-400">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="6d407-400">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="6d407-401">データの読み取りを開始する、バッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="6d407-401">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="6d407-402">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="6d407-402">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="6d407-403">文字の部分配列を文字列に非同期で書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6d407-403">Writes a subarray of characters followed by a line terminator asynchronously to the string.</span></span></summary>
        <returns><span data-ttu-id="6d407-404">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="6d407-404">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d407-405">行終端記号がによって定義された、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="6d407-405">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d407-406">次の例を使用して文字を書き込む方法を示しています、<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6d407-406">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
 [!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d407-407"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6d407-407"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d407-408"><paramref name="index" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="6d407-408">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6d407-409"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="6d407-409"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6d407-410">文字列ライターが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="6d407-410">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d407-411">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="6d407-411">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>