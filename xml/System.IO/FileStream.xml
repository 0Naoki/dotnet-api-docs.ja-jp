<Type Name="FileStream" FullName="System.IO.FileStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58f5a4e086d522af21fb819b0d4270088ef151f8" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298987" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileStream" />
  <TypeSignature Language="VB.NET" Value="Public Class FileStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileStream : System::IO::Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9f985-101">同期および非同期の読み取り操作と書き込み操作をサポートするファイル用の <see cref="T:System.IO.Stream" /> を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f985-101">Provides a <see cref="T:System.IO.Stream" /> for a file, supporting both synchronous and asynchronous read and write operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-102">使用して、<xref:System.IO.FileStream>から読み取り、書き込み. を開き、ファイル システム上のファイルを閉じると、パイプ、標準入力、および標準出力を含む他のオペレーティング システムのファイルに関連するハンドルを操作するクラス。</span><span class="sxs-lookup"><span data-stu-id="9f985-102">Use the <xref:System.IO.FileStream> class to read from, write to, open, and close files on a file system, and to manipulate other file-related operating system handles, including pipes, standard input, and standard output.</span></span> <span data-ttu-id="9f985-103">使用することができます、 <xref:System.IO.FileStream.Read%2A>、 <xref:System.IO.FileStream.Write%2A>、 <xref:System.IO.Stream.CopyTo%2A>、および<xref:System.IO.FileStream.Flush%2A>同期操作を実行するメソッドまたは<xref:System.IO.FileStream.ReadAsync%2A>、 <xref:System.IO.FileStream.WriteAsync%2A>、 <xref:System.IO.Stream.CopyToAsync%2A>、および<xref:System.IO.FileStream.FlushAsync%2A>非同期操作を実行するメソッド。</span><span class="sxs-lookup"><span data-stu-id="9f985-103">You can use the <xref:System.IO.FileStream.Read%2A>, <xref:System.IO.FileStream.Write%2A>, <xref:System.IO.Stream.CopyTo%2A>, and <xref:System.IO.FileStream.Flush%2A> methods to perform synchronous operations, or the <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.FileStream.FlushAsync%2A> methods to perform asynchronous operations.</span></span> <span data-ttu-id="9f985-104">非同期のメソッドを使用すると、メイン スレッドをブロックすることがなくリソースを消費するファイルの操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-104">Use the asynchronous methods to perform resource-intensive file operations without blocking the main thread.</span></span> <span data-ttu-id="9f985-105">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="9f985-105">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="9f985-106"><xref:System.IO.FileStream> 入力バッファーとパフォーマンス向上のための出力。</span><span class="sxs-lookup"><span data-stu-id="9f985-106"><xref:System.IO.FileStream> buffers input and output for better performance.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f985-107">この型は、<xref:System.IDisposable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="9f985-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="9f985-108">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="9f985-109">型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="9f985-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="9f985-110">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="9f985-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="9f985-111">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="9f985-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="9f985-112"><xref:System.IO.FileStream.IsAsync%2A>プロパティは、ファイル ハンドルが非同期的に開かれたかどうかを検出します。</span><span class="sxs-lookup"><span data-stu-id="9f985-112">The <xref:System.IO.FileStream.IsAsync%2A> property detects whether the file handle was opened asynchronously.</span></span> <span data-ttu-id="9f985-113">インスタンスを作成するときに、この値を指定する、<xref:System.IO.FileStream>クラスを持つコンス トラクターを使用して、 `isAsync`、 `useAsync`、または`options`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-113">You specify this value when you create an instance of the <xref:System.IO.FileStream> class using a constructor that has an `isAsync`, `useAsync`, or `options` parameter.</span></span> <span data-ttu-id="9f985-114">このプロパティが`true`ストリームがファイルの操作を非同期的に実行する重複 I/O を使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-114">When the property is `true`, the stream utilizes overlapped I/O to perform file operations asynchronously.</span></span> <span data-ttu-id="9f985-115">ただし、<xref:System.IO.FileStream.IsAsync%2A>プロパティがある`true`を呼び出して、 <xref:System.IO.FileStream.ReadAsync%2A>、 <xref:System.IO.FileStream.WriteAsync%2A>、または<xref:System.IO.Stream.CopyToAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-115">However, the <xref:System.IO.FileStream.IsAsync%2A> property does not have to be `true` to call the <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, or <xref:System.IO.Stream.CopyToAsync%2A> method.</span></span> <span data-ttu-id="9f985-116">ときに、<xref:System.IO.FileStream.IsAsync%2A>プロパティは`false`および書き込み操作を非同期の読み込みを呼び出すと、引き続き、UI スレッドはブロックされませんが、実際の I/O 操作が同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="9f985-116">When the <xref:System.IO.FileStream.IsAsync%2A> property is `false` and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</span></span>  
  
 <span data-ttu-id="9f985-117"><xref:System.IO.FileStream.Seek%2A>メソッドは、ファイルへのランダム アクセスをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="9f985-117">The <xref:System.IO.FileStream.Seek%2A> method supports random access to files.</span></span> <span data-ttu-id="9f985-118"><xref:System.IO.FileStream.Seek%2A> ファイル内の任意の位置に移動する読み取り/書き込み位置を使用できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-118"><xref:System.IO.FileStream.Seek%2A> allows the read/write position to be moved to any position within the file.</span></span> <span data-ttu-id="9f985-119">これは、バイト オフセット参照ポイント パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-119">This is done with byte offset reference point parameters.</span></span> <span data-ttu-id="9f985-120">バイト オフセットは、シーク参照ポイント、可能性があります、先頭、現在の位置、または、基になるファイルの最後の 3 つのメンバーによって表される、<xref:System.IO.SeekOrigin>列挙します。</span><span class="sxs-lookup"><span data-stu-id="9f985-120">The byte offset is relative to the seek reference point, which can be the beginning, the current position, or the end of the underlying file, as represented by the three members of the <xref:System.IO.SeekOrigin> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-121">ディスク ファイルは、常にランダム アクセスをサポートします。</span><span class="sxs-lookup"><span data-stu-id="9f985-121">Disk files always support random access.</span></span> <span data-ttu-id="9f985-122">、構築時に、<xref:System.IO.FileStream.CanSeek%2A>にプロパティの値が設定されている`true`または`false`基になるファイルの種類によって異なります。ファイルの種類を基になるが file_type_disk では、winbase.h で定義されている場合、<xref:System.IO.FileStream.CanSeek%2A>プロパティの値が`true`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-122">At the time of construction, the <xref:System.IO.FileStream.CanSeek%2A> property value is set to `true` or `false` depending on the underlying file type.If the underlying file type is FILE_TYPE_DISK, as defined in winbase.h, the <xref:System.IO.FileStream.CanSeek%2A> property value is `true`.</span></span> <span data-ttu-id="9f985-123">それ以外の場合、<xref:System.IO.FileStream.CanSeek%2A>プロパティの値が`false`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-123">Otherwise, the <xref:System.IO.FileStream.CanSeek%2A> property value is `false`.</span></span>  
  
 <span data-ttu-id="9f985-124">プロセスは終了し、ロックされているファイルの一部か未解決のロックを含むファイルを動作は定義されません。</span><span class="sxs-lookup"><span data-stu-id="9f985-124">If a process terminates with part of a file locked or closes a file that has outstanding locks, the behavior is undefined.</span></span>  
  
 <span data-ttu-id="9f985-125">ディレクトリ操作とその他のファイル操作は、次を参照してください。、 <xref:System.IO.File>、 <xref:System.IO.Directory>、および<xref:System.IO.Path>クラスです。</span><span class="sxs-lookup"><span data-stu-id="9f985-125">For directory operations and other file operations, see the <xref:System.IO.File>, <xref:System.IO.Directory>, and <xref:System.IO.Path> classes.</span></span> <span data-ttu-id="9f985-126"><xref:System.IO.File>クラスは、ユーティリティ クラスを作成するため、主に、静的メソッドを持つ<xref:System.IO.FileStream>オブジェクト ファイルのパスをベースにします。</span><span class="sxs-lookup"><span data-stu-id="9f985-126">The <xref:System.IO.File> class is a utility class that has static methods primarily for the creation of <xref:System.IO.FileStream> objects based on file paths.</span></span> <span data-ttu-id="9f985-127"><xref:System.IO.MemoryStream>クラスは、バイト配列からストリームを作成し、に似ていますが、<xref:System.IO.FileStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="9f985-127">The <xref:System.IO.MemoryStream> class creates a stream from a byte array and is similar to the <xref:System.IO.FileStream> class.</span></span>  
  
 <span data-ttu-id="9f985-128">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-128">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
## <a name="detection-of-stream-position-changes"></a><span data-ttu-id="9f985-129">ストリームの位置の変更の検出</span><span class="sxs-lookup"><span data-stu-id="9f985-129">Detection of Stream Position Changes</span></span>  
 <span data-ttu-id="9f985-130">ときに、<xref:System.IO.FileStream>オブジェクトでは、そのハンドルでは、排他的に保持にない、別のスレッドでしたファイル ハンドルを同時にアクセスしたファイル ハンドルに関連付けられているオペレーティング システムのファイル ポインターの位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="9f985-130">When a <xref:System.IO.FileStream> object does not have an exclusive hold on its handle, another thread could access the file handle concurrently and change the position of the operating system's file pointer that is associated with the file handle.</span></span> <span data-ttu-id="9f985-131">この場合、キャッシュ内の位置、<xref:System.IO.FileStream>オブジェクトと、バッファーにキャッシュされたデータを侵害する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-131">In this case, the cached position in the <xref:System.IO.FileStream> object and the cached data in the buffer could be compromised.</span></span> <span data-ttu-id="9f985-132"><xref:System.IO.FileStream>オブジェクトが、オペレーティング システムのハンドルの位置で使用されるキャッシュの位置と同じであることを確認するキャッシュされたバッファーにアクセスするメソッドに対して、チェックを定期的に実行、<xref:System.IO.FileStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-132">The <xref:System.IO.FileStream> object routinely performs checks on methods that access the cached buffer to ensure that the operating system's handle position is the same as the cached position used by the <xref:System.IO.FileStream> object.</span></span>  
  
 <span data-ttu-id="9f985-133">呼び出しでハンドルの位置で予期しない変更が検出されたかどうか、<xref:System.IO.FileStream.Read%2A>メソッド、.NET Framework が、バッファーの内容を破棄し、もう一度、ファイルからのストリームを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="9f985-133">If an unexpected change in the handle position is detected in a call to the <xref:System.IO.FileStream.Read%2A> method, the .NET Framework discards the contents of the buffer and reads the stream from the file again.</span></span> <span data-ttu-id="9f985-134">ファイル ストリームの位置に影響を与える他のプロセスと、ファイルのサイズに応じて、パフォーマンスに影響を与えることができます。</span><span class="sxs-lookup"><span data-stu-id="9f985-134">This can affect performance, depending on the size of the file and any other processes that could affect the position of the file stream.</span></span>  
  
 <span data-ttu-id="9f985-135">呼び出しでハンドルの位置で予期しない変更が検出されたかどうか、<xref:System.IO.FileStream.Write%2A>メソッド、バッファーの内容は破棄されますと<xref:System.IO.IOException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="9f985-135">If an unexpected change in the handle position is detected in a call to the <xref:System.IO.FileStream.Write%2A> method, the contents of the buffer are discarded and an <xref:System.IO.IOException> exception is thrown.</span></span>  
  
 <span data-ttu-id="9f985-136">A<xref:System.IO.FileStream>オブジェクトでは、そのハンドルでは、排他的な保留はないときか、<xref:System.IO.FileStream.SafeFileHandle%2A>ハンドルを公開するプロパティにアクセスまたは<xref:System.IO.FileStream>オブジェクトが割り当てられて、<xref:System.IO.FileStream.SafeFileHandle%2A>コンス トラクター内のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-136">A <xref:System.IO.FileStream> object will not have an exclusive hold on its handle when either the <xref:System.IO.FileStream.SafeFileHandle%2A> property is accessed to expose the handle or the <xref:System.IO.FileStream> object is given the <xref:System.IO.FileStream.SafeFileHandle%2A> property in its constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-137">次の例では、一部を示しています、<xref:System.IO.FileStream>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-137">The following example demonstrates some of the <xref:System.IO.FileStream> constructors.</span></span>  
  
 [!code-cpp[fstream class#1](~/samples/snippets/cpp/VS_Snippets_CLR/FStream Class/CPP/fstream class.cpp#1)]
 [!code-csharp[fstream class#1](~/samples/snippets/csharp/VS_Snippets_CLR/FStream Class/CS/fstream class.cs#1)]
 [!code-vb[fstream class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FStream Class/VB/fstream class.vb#1)]  
  
 <span data-ttu-id="9f985-138">次の例では、非同期的にファイルに書き込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-138">The following example shows how to write to a file asynchronously.</span></span> <span data-ttu-id="9f985-139">このコードを TextBlock UserInput および Button_Click という名前の Click イベント ハンドラーにフック ボタンという名前を持つ WPF アプリで実行されます。</span><span class="sxs-lookup"><span data-stu-id="9f985-139">This code runs in a WPF app that has a TextBlock named UserInput and a button hooked up to a Click event handler that is named Button_Click.</span></span> <span data-ttu-id="9f985-140">ファイルのパスは、コンピューター上に存在するよりもファイルに変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-140">The file path needs to be changed to a file than exits on the computer.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="T:System.IO.FileAccess" />
    <altmember cref="T:System.IO.FileMode" />
    <altmember cref="T:System.IO.FileShare" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-141">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-141">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (Microsoft.Win32.SafeHandles.SafeFileHandle handle, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Win32.SafeHandles.SafeFileHandle handle, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As SafeFileHandle, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(Microsoft::Win32::SafeHandles::SafeFileHandle ^ handle, System::IO::FileAccess access);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="9f985-142">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-142">A file handle for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-143">
            <see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> プロパティと <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-143">A constant that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-144">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可を使用して、指定したファイル ハンドル用に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-144">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-145">ときに<xref:System.IO.Stream.Close%2A>が呼び出されると、またはハンドルが閉じられ、ファイルのハンドル数は減少します。</span><span class="sxs-lookup"><span data-stu-id="9f985-145">When <xref:System.IO.Stream.Close%2A> is called, the handle is also closed and the file's handle count is decremented.</span></span>  
  
 <span data-ttu-id="9f985-146">`FileStream` ハンドルを排他的に制御を使用するいると仮定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-146">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="9f985-147">読み取り、書き込み、または中にシーク、`FileStream`も保持しているハンドルは、データの破損、可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-147">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="9f985-148">データの安全性、呼び出す<xref:System.IO.FileStream.Flush%2A>前に、ハンドルを使用して、以外のすべてのメソッドは呼び出しません`Close`が完了したらこのハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-148">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-149">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-149">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-150">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-150">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
 <span data-ttu-id="9f985-151">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-151">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-152">
            <paramref name="access" /> が <see cref="T:System.IO.FileAccess" /> のフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-152">
              <paramref name="access" /> is not a field of <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-153">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-153">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-154">ディスク エラーなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-154">An I/O error, such as a disk error, occurred.</span>
          </span>
          <span data-ttu-id="9f985-155">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-155">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-156">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-156">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-157">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-157">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-158">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-158">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (IntPtr handle, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(IntPtr handle, System::IO::FileAccess access);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use FileStream(SafeFileHandle handle, FileAccess access) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="9f985-159">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-159">A file handle for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-160">
            <see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> プロパティと <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-160">A constant that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-161">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可を使用して、指定したファイル ハンドル用に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-161">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-162">ときに<xref:System.IO.Stream.Close%2A>が呼び出されると、またはハンドルが閉じられ、ファイルのハンドル数は減少します。</span><span class="sxs-lookup"><span data-stu-id="9f985-162">When <xref:System.IO.Stream.Close%2A> is called, the handle is also closed and the file's handle count is decremented.</span></span>  
  
 <span data-ttu-id="9f985-163">`FileStream` ハンドルを排他的に制御を使用するいると仮定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-163">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="9f985-164">読み取り、書き込み、または中にシーク、`FileStream`も保持しているハンドルは、データの破損、可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-164">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="9f985-165">データの安全性、呼び出す<xref:System.IO.FileStream.Flush%2A>前に、ハンドルを使用して、以外のすべてのメソッドは呼び出しません`Close`が完了したらこのハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-165">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-166">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-166">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-167">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-167">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
 <span data-ttu-id="9f985-168">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-168">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-169">
            <paramref name="access" /> が <see cref="T:System.IO.FileAccess" /> のフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-169">
              <paramref name="access" /> is not a field of <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-170">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-170">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-171">ディスク エラーなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-171">An I/O error, such as a disk error, occurred.</span>
          </span>
          <span data-ttu-id="9f985-172">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-172">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-173">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-173">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-174">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-174">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-175">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-175">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9f985-176">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-176">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9f985-177">ファイルを開く方法または作成する方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-177">A constant that determines how to open or create the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-178">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパスと作成モードを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-178">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path and creation mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-179">.NET Framework は、デバイス名をようなパスを使用して物理ディスクに直接アクセスをサポートしていません"\\\\。 \PHYSICALDRIVE0"です。</span><span class="sxs-lookup"><span data-stu-id="9f985-179">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="9f985-180">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-180">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="9f985-181">コンス トラクターには、ファイルを読み取り/書き込みアクセスが与えられます、読み取りアクセスの共有を開く (ファイルを開くまで、同じまたは別のプロセスでの書き込みは失敗の要求は、`FileStream`オブジェクトが閉じられましたが、読み取り試行が成功する)。</span><span class="sxs-lookup"><span data-stu-id="9f985-181">The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the `FileStream` object has been closed, but read attempts will succeed).</span></span>  
  
 <span data-ttu-id="9f985-182">このコンス トラクターを使用すると、読み取り専用のファイルを開くことはできません。代わりを受け取るコンス トラクターを使用する必要があります、`FileAccess`パラメーター値を設定して`FileAccess.Read`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-182">You cannot use this constructor to open read-only files; instead, you must use a constructor that accepts a `FileAccess` parameter with the value set to `FileAccess.Read`.</span></span>  
  
 <span data-ttu-id="9f985-183">バッファー サイズは 4096 バイト (4 KB) の既定のサイズに設定されます。</span><span class="sxs-lookup"><span data-stu-id="9f985-183">The buffer size is set to the default size of 4096 bytes (4 KB).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-184">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-184">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="9f985-185">たとえば、システムによってこのクラスは、物理デバイスをアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-185">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="9f985-186"><xref:System.IO.Stream.CanSeek%2A> `true`すべて<xref:System.IO.FileStream>ファイルをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-186"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="9f985-187">場合`path`シークをサポートしていないデバイスを示す、<xref:System.IO.FileStream.CanSeek%2A>プロパティ、その結果を<xref:System.IO.FileStream>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="9f985-187">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="9f985-188">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-188">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="9f985-189">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-189">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
 <span data-ttu-id="9f985-190">なしのコンス トラクター、<xref:System.IO.FileAccess>パラメーター場合、`mode`にパラメーターが設定されている<xref:System.IO.FileMode.Append>、<xref:System.IO.FileAccess.Write>は、既定のアクセス。</span><span class="sxs-lookup"><span data-stu-id="9f985-190">For constructors without a <xref:System.IO.FileAccess> parameter, if the `mode` parameter is set to <xref:System.IO.FileMode.Append>, <xref:System.IO.FileAccess.Write> is the default access.</span></span> <span data-ttu-id="9f985-191">それ以外の場合、アクセスに設定されている<xref:System.IO.FileAccess.ReadWrite>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-191">Otherwise, the access is set to <xref:System.IO.FileAccess.ReadWrite>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-192">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-192">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-193">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-193">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-194">次のコード例では、データをバイト単位で、ファイルに書き込むし、データが正常に書き込まれたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-194">The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.FileStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream1/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream1/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-195">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-195">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="9f985-196">または、<paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-196">-or-  <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-197">
            <paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-197">
              <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-198">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-198">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-199">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-199">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9f985-200">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-200">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span>
          </span>
          <span data-ttu-id="9f985-201">これらのモードではファイルが既に存在している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-201">The file must already exist in these modes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-202">
            <paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-202">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span>
          </span>
          <span data-ttu-id="9f985-203">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-203">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9f985-204">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-204">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9f985-205">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-205">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-206">
            <paramref name="mode" /> に無効な値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-206">
              <paramref name="mode" /> contains an invalid value.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-207">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-207">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-208">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-208">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
        <altmember cref="F:System.IO.Path.InvalidPathChars" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (Microsoft.Win32.SafeHandles.SafeFileHandle handle, System.IO.FileAccess access, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Win32.SafeHandles.SafeFileHandle handle, valuetype System.IO.FileAccess access, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As SafeFileHandle, access As FileAccess, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(Microsoft::Win32::SafeHandles::SafeFileHandle ^ handle, System::IO::FileAccess access, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="9f985-209">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-209">A file handle for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-210">
            <see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> プロパティと <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する <see cref="T:System.IO.FileAccess" /> 定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-210">A <see cref="T:System.IO.FileAccess" /> constant that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-211">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-211">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-212">既定のバッファー サイズは、4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-212">The default buffer size is 4096.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-213">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可、およびバッファー サイズを使用して、指定したファイル ハンドル用に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-213">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-214">`FileStream` ハンドルを排他的に制御を使用するいると仮定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-214">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="9f985-215">読み取り、書き込み、または中にシーク、`FileStream`も保持しているハンドルは、データの破損、可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-215">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="9f985-216">データの安全性、呼び出す<xref:System.IO.FileStream.Flush%2A>前に、ハンドルを使用して、以外のすべてのメソッドは呼び出しません`Close`が完了したらこのハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-216">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span> <span data-ttu-id="9f985-217">または、読み書き可能なハンドルにこの関数を呼び出す前に`FileStream`コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-217">Alternately, read and write to the handle before calling this `FileStream` constructor.</span></span>  
  
 <span data-ttu-id="9f985-218">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-218">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-219">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-219">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-220">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-220">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-221">
            <paramref name="handle" /> パラメーターが無効なハンドルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-221">The <paramref name="handle" /> parameter is an invalid handle.</span>
          </span>
          <span data-ttu-id="9f985-222">または、同期ハンドルである <paramref name="handle" /> パラメーターが、非同期的に使用されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-222">-or-  The <paramref name="handle" /> parameter is a synchronous handle and it was used asynchronously.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-223">
            <paramref name="bufferSize" /> パラメーターが負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-223">The <paramref name="bufferSize" /> parameter is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-224">ディスク エラーなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-224">An I/O error, such as a disk error, occurred.</span>
          </span>
          <span data-ttu-id="9f985-225">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-225">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-226">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-226">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-227">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-227">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-228">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-228">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-229">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-229">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f985-230">アンマネージ コードを呼び出すアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-230">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="9f985-231">関連付けられた列挙は: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-231">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (IntPtr handle, System.IO.FileAccess access, bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype System.IO.FileAccess access, bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, access As FileAccess, ownsHandle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(IntPtr handle, System::IO::FileAccess access, bool ownsHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use FileStream(SafeFileHandle handle, FileAccess access) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="9f985-232">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-232">A file handle for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-233">
            <see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> プロパティと <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-233">A constant that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
        </param>
        <param name="ownsHandle">
          <span data-ttu-id="9f985-234">この <see langword="FileStream" /> インスタンスがファイル ハンドルを所有する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-234">
              <see langword="true" /> if the file handle will be owned by this <see langword="FileStream" /> instance; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-235">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可と <see langword="FileStream" /> インスタンスの所有権を使用して、指定したファイル ハンドル用に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-235">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission and <see langword="FileStream" /> instance ownership.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-236">`FileStream`オブジェクトには、ファイルに指定されたアクセスが与えられます。</span><span class="sxs-lookup"><span data-stu-id="9f985-236">The `FileStream` object is given the specified access to the file.</span></span> <span data-ttu-id="9f985-237">ハンドルの所有権がなりますとして指定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-237">The ownership of the handle will be as specified.</span></span> <span data-ttu-id="9f985-238">このプロセスへの呼び出し、ハンドルを所有しているかどうか、<xref:System.IO.Stream.Close%2A>メソッドは、ハンドルを終了しても、ファイルのハンドル数は減少します。</span><span class="sxs-lookup"><span data-stu-id="9f985-238">If this process owns the handle, a call to the <xref:System.IO.Stream.Close%2A> method will also close the handle and the file's handle count is decremented.</span></span> <span data-ttu-id="9f985-239">`FileStream`オブジェクトが 4096 バイトまでの既定のバッファー サイズを指定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-239">The `FileStream` object is given the default buffer size of 4096 bytes.</span></span>  
  
 <span data-ttu-id="9f985-240">`FileStream` ハンドルを排他的に制御を使用するいると仮定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-240">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="9f985-241">読み取り、書き込み、または中にシーク、`FileStream`も保持しているハンドルは、データの破損、可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-241">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="9f985-242">データの安全性、呼び出す<xref:System.IO.FileStream.Flush%2A>前に、ハンドルを使用して、以外のメソッドは呼び出しません`Close`が完了したら、ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-242">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling methods other than `Close` after you are done using the handle.</span></span>  
  
 <span data-ttu-id="9f985-243">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-243">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-244">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-244">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-245">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-245">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-246">
            <paramref name="access" /> が <see cref="T:System.IO.FileAccess" /> のフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-246">
              <paramref name="access" /> is not a field of <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-247">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-247">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-248">ディスク エラーなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-248">An I/O error, such as a disk error, occurred.</span>
          </span>
          <span data-ttu-id="9f985-249">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-249">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-250">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-250">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-251">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-251">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-252">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-252">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9f985-253">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-253">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9f985-254">ファイルを開く方法または作成する方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-254">A constant that determines how to open or create the file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-255">
            <see langword="FileStream" /> オブジェクトがファイルにアクセスできる方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-255">A constant that determines how the file can be accessed by the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-256">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-256">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-257">
            <c>path</c> でディスク ファイルが指定されている場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-257">
              <see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <c>path</c> specifies a disk file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-258">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、および読み取り/書き込みアクセス許可を使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-258">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, and read/write permission.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-259">.NET Framework は、デバイス名をようなパスを使用して物理ディスクに直接アクセスをサポートしていません"\\\\。 \PHYSICALDRIVE0"です。</span><span class="sxs-lookup"><span data-stu-id="9f985-259">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="9f985-260">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-260">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="9f985-261">コンス トラクターには、ファイルを読み取り/書き込みアクセスが与えられます、読み取りアクセスの共有を開く (ファイルを開くまで、同じまたは別のプロセスでの書き込みは失敗の要求は、`FileStream`オブジェクトが閉じられましたが、読み取り試行が成功する)。</span><span class="sxs-lookup"><span data-stu-id="9f985-261">The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the `FileStream` object has been closed, but read attempts will succeed).</span></span> <span data-ttu-id="9f985-262">バッファー サイズは 4096 バイト (4 KB) の既定のサイズに設定されます。</span><span class="sxs-lookup"><span data-stu-id="9f985-262">The buffer size is set to the default size of 4096 bytes (4 KB).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-263">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-263">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="9f985-264">たとえば、システムによってこのクラスは、物理デバイスをアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-264">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="9f985-265"><xref:System.IO.Stream.CanSeek%2A> `true`すべて<xref:System.IO.FileStream>ファイルをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-265"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="9f985-266">場合`path`シークをサポートしていないデバイスを示す、<xref:System.IO.FileStream.CanSeek%2A>プロパティ、その結果を<xref:System.IO.FileStream>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="9f985-266">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="9f985-267">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-267">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="9f985-268">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-268">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-269">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-269">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-270">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-270">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-271">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-271">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-272">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-272">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="9f985-273">または、<paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-273">-or-  <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-274">
            <paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-274">
              <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9f985-275">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-275">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span>
          </span>
          <span data-ttu-id="9f985-276">これらのモードではファイルが既に存在している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-276">The file must already exist in these modes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-277">
            <paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-277">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span>
          </span>
          <span data-ttu-id="9f985-278">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-278">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-279">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-279">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9f985-280">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-280">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-281">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-281">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9f985-282">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-282">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-283">
            <paramref name="mode" /> に無効な値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-283">
              <paramref name="mode" /> contains an invalid value.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-284">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-284">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-285">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-285">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (Microsoft.Win32.SafeHandles.SafeFileHandle handle, System.IO.FileAccess access, int bufferSize, bool isAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Win32.SafeHandles.SafeFileHandle handle, valuetype System.IO.FileAccess access, int32 bufferSize, bool isAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As SafeFileHandle, access As FileAccess, bufferSize As Integer, isAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(Microsoft::Win32::SafeHandles::SafeFileHandle ^ handle, System::IO::FileAccess access, int bufferSize, bool isAsync);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="isAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="9f985-286">この <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-286">A file handle for the file that this <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-287">
            <see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> プロパティと <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-287">A constant that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-288">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-288">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-289">既定のバッファー サイズは、4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-289">The default buffer size is 4096.</span>
          </span>
        </param>
        <param name="isAsync">
          <span data-ttu-id="9f985-290">ハンドルが非同期的に開かれた場合 (重複 I/O モード用) は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-290">
              <see langword="true" /> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-291">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可、バッファー サイズ、および同期状態または非同期状態を使用して、指定したファイル ハンドル用に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-291">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission, buffer size, and synchronous or asynchronous state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-292">設定する、`isAsync`パラメーターを`true`を非同期的にファイル ハンドルを開きます。</span><span class="sxs-lookup"><span data-stu-id="9f985-292">You set the `isAsync` parameter to `true` to open the file handle asynchronously.</span></span> <span data-ttu-id="9f985-293">パラメーターの場合は`true`ストリームがファイルの操作を非同期的に実行する重複 I/O を使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-293">When the parameter is `true`, the stream utilizes overlapped I/O to perform file operations asynchronously.</span></span> <span data-ttu-id="9f985-294">ただし、パラメーターは、する必要はありません`true`を呼び出して、 <xref:System.IO.FileStream.ReadAsync%2A>、 <xref:System.IO.FileStream.WriteAsync%2A>、または<xref:System.IO.Stream.CopyToAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-294">However, the parameter does not have to be `true` to call the <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, or <xref:System.IO.Stream.CopyToAsync%2A> method.</span></span> <span data-ttu-id="9f985-295">ときに、`isAsync`パラメーターは`false`および書き込み操作を非同期の読み込みを呼び出すと、引き続き、UI スレッドはブロックされませんが、実際の I/O 操作が同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="9f985-295">When the `isAsync` parameter is `false` and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</span></span>  
  
 <span data-ttu-id="9f985-296">`FileStream` ハンドルを排他的に制御を使用するいると仮定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-296">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="9f985-297">読み取り、書き込み、または中にシーク、`FileStream`も保持しているハンドルは、データの破損、可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-297">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="9f985-298">データの安全性、呼び出す<xref:System.IO.FileStream.Flush%2A>前に、ハンドルを使用して、以外のすべてのメソッドは呼び出しません`Close`が完了したらこのハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-298">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span> <span data-ttu-id="9f985-299">または、読み書き可能なハンドルにこの関数を呼び出す前に`FileStream`コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-299">Alternately, read and write to the handle before calling this `FileStream` constructor.</span></span>  
  
 <span data-ttu-id="9f985-300">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-300">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-301">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-301">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-302">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-302">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-303">
            <paramref name="handle" /> パラメーターが無効なハンドルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-303">The <paramref name="handle" /> parameter is an invalid handle.</span>
          </span>
          <span data-ttu-id="9f985-304">または、同期ハンドルである <paramref name="handle" /> パラメーターが、非同期的に使用されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-304">-or-  The <paramref name="handle" /> parameter is a synchronous handle and it was used asynchronously.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-305">
            <paramref name="bufferSize" /> パラメーターが負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-305">The <paramref name="bufferSize" /> parameter is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-306">ディスク エラーなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-306">An I/O error, such as a disk error, occurred.</span>
          </span>
          <span data-ttu-id="9f985-307">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-307">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-308">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-308">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-309">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-309">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-310">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-310">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-311">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-311">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f985-312">アンマネージ コードを呼び出すアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-312">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="9f985-313">関連付けられた列挙は: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-313">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (IntPtr handle, System.IO.FileAccess access, bool ownsHandle, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype System.IO.FileAccess access, bool ownsHandle, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, access As FileAccess, ownsHandle As Boolean, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(IntPtr handle, System::IO::FileAccess access, bool ownsHandle, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use FileStream(SafeFileHandle handle, FileAccess access, int bufferSize) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsHandle" Type="System.Boolean" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="9f985-314">この <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-314">A file handle for the file that this <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-315">
            <see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> プロパティと <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-315">A constant that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
        </param>
        <param name="ownsHandle">
          <span data-ttu-id="9f985-316">この <see langword="FileStream" /> インスタンスがファイル ハンドルを所有する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-316">
              <see langword="true" /> if the file handle will be owned by this <see langword="FileStream" /> instance; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-317">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-317">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-318">既定のバッファー サイズは、4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-318">The default buffer size is 4096.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-319">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可、<see langword="FileStream" /> インスタンスの所有権、およびバッファー サイズを使用して、指定したファイル ハンドル用に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-319">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission, <see langword="FileStream" /> instance ownership, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-320">`FileStream`オブジェクトには、ファイルに指定されたアクセスが与えられます。</span><span class="sxs-lookup"><span data-stu-id="9f985-320">The `FileStream` object is given the specified access to the file.</span></span> <span data-ttu-id="9f985-321">ハンドルの所有権がなりますとして指定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-321">The ownership of the handle will be as specified.</span></span> <span data-ttu-id="9f985-322">この場合`FileStream`への呼び出し、ハンドルを所有している、<xref:System.IO.Stream.Close%2A>メソッドは、ハンドルを終了してもします。</span><span class="sxs-lookup"><span data-stu-id="9f985-322">If this `FileStream` owns the handle, a call to the <xref:System.IO.Stream.Close%2A> method will also close the handle.</span></span> <span data-ttu-id="9f985-323">具体的には、ファイルのハンドル数は減少します。</span><span class="sxs-lookup"><span data-stu-id="9f985-323">In particular, the file's handle count is decremented.</span></span> <span data-ttu-id="9f985-324">`FileStream`オブジェクトが指定したバッファー サイズを指定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-324">The `FileStream` object is given the specified buffer size.</span></span>  
  
 <span data-ttu-id="9f985-325">`FileStream` ハンドルを排他的に制御を使用するいると仮定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-325">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="9f985-326">読み取り、書き込み、または中にシーク、`FileStream`も保持しているハンドルは、データの破損、可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-326">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="9f985-327">データの安全性、呼び出す<xref:System.IO.FileStream.Flush%2A>前に、ハンドルを使用して、以外のすべてのメソッドは呼び出しません`Close`が完了したらこのハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-327">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span> <span data-ttu-id="9f985-328">または、読み書き可能なハンドルにこの関数を呼び出す前に`FileStream`コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-328">Alternately, read and write to the handle before calling this `FileStream` constructor.</span></span>  
  
 <span data-ttu-id="9f985-329">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-329">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-330">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-330">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-331">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-331">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-332">
            <paramref name="bufferSize" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-332">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-333">ディスク エラーなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-333">An I/O error, such as a disk error, occurred.</span>
          </span>
          <span data-ttu-id="9f985-334">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-334">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-335">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-335">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-336">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-336">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-337">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-337">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-338">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-338">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9f985-339">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-339">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9f985-340">ファイルを開く方法または作成する方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-340">A constant that determines how to open or create the file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-341">
            <see langword="FileStream" /> オブジェクトがファイルにアクセスできる方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-341">A constant that determines how the file can be accessed by the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-342">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-342">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-343">
            <c>path</c> でディスク ファイルが指定されている場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-343">
              <see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <c>path</c> specifies a disk file.</span>
          </span>
        </param>
        <param name="share">
          <span data-ttu-id="9f985-344">プロセスによるファイルの共有方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-344">A constant that determines how the file will be shared by processes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-345">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、読み取り/書き込みアクセス許可、および共有アクセス許可を使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-345">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, read/write permission, and sharing permission.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-346">.NET Framework は、デバイス名をようなパスを使用して物理ディスクに直接アクセスをサポートしていません"\\\\。 \PHYSICALDRIVE0"です。</span><span class="sxs-lookup"><span data-stu-id="9f985-346">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="9f985-347">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-347">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="9f985-348">コンス トラクターには、ファイルを読み取り/書き込みアクセスが与えられます、読み取りアクセスの共有を開く (ファイルを開くまで、同じまたは別のプロセスでの書き込みは失敗の要求は、`FileStream`オブジェクトが閉じられましたが、読み取り試行が成功する)。</span><span class="sxs-lookup"><span data-stu-id="9f985-348">The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the `FileStream` object has been closed, but read attempts will succeed).</span></span> <span data-ttu-id="9f985-349">バッファー サイズは 4096 バイト (4 KB) の既定のサイズに設定されます。</span><span class="sxs-lookup"><span data-stu-id="9f985-349">The buffer size is set to the default size of 4096 bytes (4 KB).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-350">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-350">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="9f985-351">たとえば、システムによってこのクラスは、物理デバイスをアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-351">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="9f985-352"><xref:System.IO.Stream.CanSeek%2A> `true`すべて<xref:System.IO.FileStream>ファイルをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-352"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="9f985-353">場合`path`シークをサポートしていないデバイスを示す、<xref:System.IO.FileStream.CanSeek%2A>プロパティ、その結果を<xref:System.IO.FileStream>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="9f985-353">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="9f985-354">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-354">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-355">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-355">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-356">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-356">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-357">このコード例に示されている例の一部である、<xref:System.IO.FileStream.Lock%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-357">This code example is part of a larger example provided for the <xref:System.IO.FileStream.Lock%2A> method.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#2)]
 [!code-csharp[System.IO.FileStream3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#2)]
 [!code-vb[System.IO.FileStream3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-358">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-358">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-359">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-359">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="9f985-360">または、<paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-360">-or-  <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-361">
            <paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-361">
              <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9f985-362">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-362">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span>
          </span>
          <span data-ttu-id="9f985-363">これらのモードではファイルが既に存在している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-363">The file must already exist in these modes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-364">
            <paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-364">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span>
          </span>
          <span data-ttu-id="9f985-365">または、システムが Windows 98 または Windows 98 Second Edition を実行中で、<paramref name="share" /> が <see langword="FileShare.Delete" /> に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-365">-or-  The system is running Windows 98 or Windows 98 Second Edition and <paramref name="share" /> is set to <see langword="FileShare.Delete" />.</span>
          </span>
          <span data-ttu-id="9f985-366">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-366">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-367">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-367">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9f985-368">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-368">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-369">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-369">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9f985-370">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-370">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-371">
            <paramref name="mode" /> に無効な値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-371">
              <paramref name="mode" /> contains an invalid value.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-372">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-372">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-373">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-373">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (IntPtr handle, System.IO.FileAccess access, bool ownsHandle, int bufferSize, bool isAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype System.IO.FileAccess access, bool ownsHandle, int32 bufferSize, bool isAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, access As FileAccess, ownsHandle As Boolean, bufferSize As Integer, isAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(IntPtr handle, System::IO::FileAccess access, bool ownsHandle, int bufferSize, bool isAsync);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use FileStream(SafeFileHandle handle, FileAccess access, int bufferSize, bool isAsync) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsHandle" Type="System.Boolean" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="isAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="9f985-374">この <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-374">A file handle for the file that this <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-375">
            <see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> プロパティと <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-375">A constant that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
        </param>
        <param name="ownsHandle">
          <span data-ttu-id="9f985-376">この <see langword="FileStream" /> インスタンスがファイル ハンドルを所有する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-376">
              <see langword="true" /> if the file handle will be owned by this <see langword="FileStream" /> instance; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-377">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-377">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-378">既定のバッファー サイズは、4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-378">The default buffer size is 4096.</span>
          </span>
        </param>
        <param name="isAsync">
          <span data-ttu-id="9f985-379">ハンドルが非同期的に開かれた場合 (重複 I/O モード用) は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-379">
              <see langword="true" /> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-380">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可、<see langword="FileStream" /> インスタンスの所有権、バッファー サイズ、および同期状態または非同期状態を使用して、指定したファイル ハンドル用に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-380">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission, <see langword="FileStream" /> instance ownership, buffer size, and synchronous or asynchronous state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-381">`FileStream`オブジェクトには、ファイルに指定されたアクセスが与えられます。</span><span class="sxs-lookup"><span data-stu-id="9f985-381">The `FileStream` object is given the specified access to the file.</span></span> <span data-ttu-id="9f985-382">ハンドルの所有権がなりますとして指定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-382">The ownership of the handle will be as specified.</span></span> <span data-ttu-id="9f985-383">この場合`FileStream`への呼び出し、ハンドルを所有している、<xref:System.IO.Stream.Close%2A>メソッドは、ハンドルを終了してもします。</span><span class="sxs-lookup"><span data-stu-id="9f985-383">If this `FileStream` owns the handle, a call to the <xref:System.IO.Stream.Close%2A> method will also close the handle.</span></span> <span data-ttu-id="9f985-384">具体的には、ファイルのハンドル数は減少します。</span><span class="sxs-lookup"><span data-stu-id="9f985-384">In particular, the file's handle count is decremented.</span></span> <span data-ttu-id="9f985-385">`FileStream`オブジェクトが指定したバッファー サイズを指定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-385">The `FileStream` object is given the specified buffer size.</span></span>  
  
 <span data-ttu-id="9f985-386">`FileStream` ハンドルを排他的に制御を使用するいると仮定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-386">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="9f985-387">読み取り、書き込み、または中にシーク、`FileStream`も保持しているハンドルは、データの破損、可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-387">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="9f985-388">データの安全性、呼び出す<xref:System.IO.FileStream.Flush%2A>前に、ハンドルを使用して、以外のすべてのメソッドは呼び出しません`Close`が完了したらこのハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-388">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span> <span data-ttu-id="9f985-389">または、読み書き可能なハンドルにこの関数を呼び出す前に`FileStream`コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-389">Alternately, read and write to the handle before calling this `FileStream` constructor.</span></span>  
  
 <span data-ttu-id="9f985-390">`FileShare.Read` これらの既定値は、<xref:System.IO.FileStream>なしのコンス トラクター、`FileShare`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-390">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-391">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-391">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-392">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-392">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-393">
            <paramref name="access" /> が <see langword="FileAccess.Read" /> 未満であるか、<see langword="FileAccess.ReadWrite" /> 以上であるか、または <paramref name="bufferSize" /> が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-393">
              <paramref name="access" /> is less than <see langword="FileAccess.Read" /> or greater than <see langword="FileAccess.ReadWrite" /> or <paramref name="bufferSize" /> is less than or equal to 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-394">ハンドルが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-394">The handle is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-395">ディスク エラーなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-395">An I/O error, such as a disk error, occurred.</span>
          </span>
          <span data-ttu-id="9f985-396">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-396">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-397">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-397">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-398">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-398">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f985-399">アンマネージ コードにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-399">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9f985-400">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-400">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9f985-401">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-401">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9f985-402">ファイルを開く方法または作成する方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-402">A constant that determines how to open or create the file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-403">
            <see langword="FileStream" /> オブジェクトがファイルにアクセスできる方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-403">A constant that determines how the file can be accessed by the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-404">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-404">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-405">
            <c>path</c> でディスク ファイルが指定されている場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-405">
              <see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <c>path</c> specifies a disk file.</span>
          </span>
        </param>
        <param name="share">
          <span data-ttu-id="9f985-406">プロセスによるファイルの共有方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-406">A constant that determines how the file will be shared by processes.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-407">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-407">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-408">既定のバッファー サイズは、4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-408">The default buffer size is 4096.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-409">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、読み取り/書き込みアクセス許可、共有アクセス許可、およびバッファー サイズを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-409">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, read/write and sharing permission, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-410">.NET Framework は、デバイス名をようなパスを使用して物理ディスクに直接アクセスをサポートしていません"\\\\。 \PHYSICALDRIVE0"です。</span><span class="sxs-lookup"><span data-stu-id="9f985-410">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="9f985-411">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-411">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-412">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-412">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="9f985-413">たとえば、システムによってこのクラスは、物理デバイスをアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-413">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="9f985-414"><xref:System.IO.Stream.CanSeek%2A> `true`すべて<xref:System.IO.FileStream>ファイルをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-414"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="9f985-415">場合`path`シークをサポートしていないデバイスを示す、<xref:System.IO.FileStream.CanSeek%2A>プロパティ、その結果を<xref:System.IO.FileStream>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="9f985-415">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="9f985-416">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-416">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-417">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-417">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-418">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-418">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-419">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-419">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-420">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-420">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="9f985-421">または、<paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-421">-or-  <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-422">
            <paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-422">
              <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-423">
            <paramref name="bufferSize" /> が負の値またはゼロです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-423">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
          <span data-ttu-id="9f985-424">または、<paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に無効な値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-424">-or-  <paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9f985-425">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-425">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span>
          </span>
          <span data-ttu-id="9f985-426">これらのモードではファイルが既に存在している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-426">The file must already exist in these modes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-427">
            <paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-427">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span>
          </span>
          <span data-ttu-id="9f985-428">または、システムが Windows 98 または Windows 98 Second Edition を実行中で、<paramref name="share" /> が <see langword="FileShare.Delete" /> に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-428">-or-  The system is running Windows 98 or Windows 98 Second Edition and <paramref name="share" /> is set to <see langword="FileShare.Delete" />.</span>
          </span>
          <span data-ttu-id="9f985-429">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-429">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-430">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-430">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9f985-431">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-431">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-432">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-432">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9f985-433">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-433">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-434">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-434">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-435">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-435">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, useAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, bool useAsync);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9f985-436">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-436">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9f985-437">ファイルを開く方法または作成する方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-437">A constant that determines how to open or create the file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-438">
            <see langword="FileStream" /> オブジェクトがファイルにアクセスできる方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-438">A constant that determines how the file can be accessed by the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-439">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-439">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-440">
            <c>path</c> でディスク ファイルが指定されている場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-440">
              <see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <c>path</c> specifies a disk file.</span>
          </span>
        </param>
        <param name="share">
          <span data-ttu-id="9f985-441">プロセスによるファイルの共有方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-441">A constant that determines how the file will be shared by processes.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-442">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-442">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-443">既定のバッファー サイズは 4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-443">The default buffer size is 4096..</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="9f985-444">非同期 I/O または同期 I/O のどちらを使用するかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-444">Specifies whether to use asynchronous I/O or synchronous I/O.</span>
          </span>
          <span data-ttu-id="9f985-445">ただし、基になるオペレーティング システムが非同期 I/O をサポートしていないことがあります。したがって、<see langword="true" /> を指定しても、プラットフォームによってはハンドルが同期的に開かれることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-445">However, note that the underlying operating system might not support asynchronous I/O, so when specifying <see langword="true" />, the handle might be opened synchronously depending on the platform.</span>
          </span>
          <span data-ttu-id="9f985-446">非同期的に開いた場合、<see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドと <see cref="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドは、大量の読み取りまたは書き込み時にはパフォーマンスがより高くなりますが、少量の読み取りまたは書き込み時にはパフォーマンスが非常に低くなることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-446">When opened asynchronously, the <see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> and <see cref="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> methods perform better on large reads or writes, but they might be much slower for small reads or writes.</span>
          </span>
          <span data-ttu-id="9f985-447">アプリケーションが非同期 I/O を利用するように設計されている場合は、<c>useAsync</c> パラメーターを <see langword="true" /> に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-447">If the application is designed to take advantage of asynchronous I/O, set the <c>useAsync</c> parameter to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="9f985-448">非同期 I/O を正しく使用すると、アプリケーションが 10 倍ほど高速化することがあります。ただし、非同期 I/O 用にアプリケーションを再設計せずに非同期 I/O を使用すると、パフォーマンスが 10 分の 1 ほど低下することがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-448">Using asynchronous I/O correctly can speed up applications by as much as a factor of 10, but using it without redesigning the application for asynchronous I/O can decrease performance by as much as a factor of 10.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-449">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、読み取り/書き込みアクセス許可、共有アクセス許可、バッファー サイズ、および同期状態または非同期状態を使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-449">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, read/write and sharing permission, buffer size, and synchronous or asynchronous state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-450">.NET Framework は、デバイス名をようなパスを使用して物理ディスクに直接アクセスをサポートしていません"\\\\。 \PHYSICALDRIVE0"です。</span><span class="sxs-lookup"><span data-stu-id="9f985-450">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="9f985-451">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-451">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-452">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-452">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="9f985-453">たとえば、システムによってこのクラスは、物理デバイスをアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-453">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="9f985-454"><xref:System.IO.Stream.CanSeek%2A> `true`すべて<xref:System.IO.FileStream>ファイルをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-454"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="9f985-455">場合`path`シークをサポートしていないデバイスを示す、<xref:System.IO.FileStream.CanSeek%2A>プロパティ、その結果を<xref:System.IO.FileStream>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="9f985-455">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="9f985-456">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-456">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-457">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-457">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-458">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-458">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-459">次のコード例では、非同期的にデータをファイルに書き込むし、データが正常に書き込まれたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-459">The following code example shows how to asynchronously write data to a file and then verify that the data was written correctly.</span></span> <span data-ttu-id="9f985-460">A`State`情報を渡すにはメイン スレッドからオブジェクトが作成された、`EndReadCallback`と`EndWriteCallback`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-460">A `State` object is created to pass information from the main thread to the `EndReadCallback` and `EndWriteCallback` methods.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-461">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-461">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-462">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-462">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="9f985-463">または、<paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-463">-or-  <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-464">
            <paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-464">
              <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-465">
            <paramref name="bufferSize" /> が負の値またはゼロです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-465">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
          <span data-ttu-id="9f985-466">または、<paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に無効な値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-466">-or-  <paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9f985-467">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-467">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span>
          </span>
          <span data-ttu-id="9f985-468">これらのモードではファイルが既に存在している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-468">The file must already exist in these modes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-469">
            <paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-469">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span>
          </span>
          <span data-ttu-id="9f985-470">または、システムが Windows 98 または Windows 98 Second Edition を実行中で、<paramref name="share" /> が <see langword="FileShare.Delete" /> に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-470">-or-  The system is running Windows 98 or Windows 98 Second Edition and <paramref name="share" /> is set to <see langword="FileShare.Delete" />.</span>
          </span>
          <span data-ttu-id="9f985-471">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-471">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-472">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-472">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9f985-473">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-473">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-474">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-474">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9f985-475">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-475">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-476">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-476">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-477">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-477">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.File" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, System.IO.FileOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, options As FileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, System::IO::FileOptions options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="options" Type="System.IO.FileOptions" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9f985-478">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-478">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9f985-479">ファイルを開く方法または作成する方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-479">A constant that determines how to open or create the file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9f985-480">
            <see langword="FileStream" /> オブジェクトがファイルにアクセスできる方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-480">A constant that determines how the file can be accessed by the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-481">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-481">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span>
          </span>
          <span data-ttu-id="9f985-482">
            <c>path</c> でディスク ファイルが指定されている場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-482">
              <see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <c>path</c> specifies a disk file.</span>
          </span>
        </param>
        <param name="share">
          <span data-ttu-id="9f985-483">プロセスによるファイルの共有方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-483">A constant that determines how the file will be shared by processes.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-484">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-484">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-485">既定のバッファー サイズは、4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-485">The default buffer size is 4096.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9f985-486">追加のファイル オプションを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-486">A value that specifies additional file options.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-487">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、読み取り/書き込みアクセス許可、共有アクセス許可、同一のファイルに対して他の FileStream が保有できるアクセス、バッファー サイズ、および追加のファイル オプションを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-487">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, read/write and sharing permission, the access other FileStreams can have to the same file, the buffer size, and additional file options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-488">.NET Framework は、デバイス名をようなパスを使用して物理ディスクに直接アクセスをサポートしていません"\\\\。 \PHYSICALDRIVE0"です。</span><span class="sxs-lookup"><span data-stu-id="9f985-488">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="9f985-489">`fileOptions`を作成するときに利用できる高度な操作へのアクセスを提供するパラメーターが使用される、<xref:System.IO.FileStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-489">The `fileOptions` parameter is used to provide access to more advanced operations that can be leveraged when creating a <xref:System.IO.FileStream> object.</span></span>  
  
 <span data-ttu-id="9f985-490">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-490">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-491">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-491">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="9f985-492">たとえば、システムによってこのクラスは、物理デバイスをアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-492">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="9f985-493"><xref:System.IO.Stream.CanSeek%2A> `true`すべて<xref:System.IO.FileStream>ファイルをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-493"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="9f985-494">場合`path`シークをサポートしていないデバイスを示す、<xref:System.IO.FileStream.CanSeek%2A>プロパティ、その結果を<xref:System.IO.FileStream>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="9f985-494">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="9f985-495">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-495">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-496">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-496">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-497">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-497">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-498">次の例は、データをファイルに書き込み、次を使用してデータを読み取り、<xref:System.IO.FileStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-498">The following example writes data to a file and then reads the data using the <xref:System.IO.FileStream> object.</span></span>  
  
 [!code-cpp[IO.FileStream.ctor1#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileStream.ctor1/cpp/example.cpp#1)]
 [!code-csharp[IO.FileStream.ctor1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileStream.ctor1/CS/example.cs#1)]
 [!code-vb[IO.FileStream.ctor1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileStream.ctor1/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-499">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-499">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-500">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-500">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="9f985-501">または、<paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-501">-or-  <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-502">
            <paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-502">
              <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-503">
            <paramref name="bufferSize" /> が負の値またはゼロです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-503">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
          <span data-ttu-id="9f985-504">または、<paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に無効な値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-504">-or-  <paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9f985-505">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-505">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span>
          </span>
          <span data-ttu-id="9f985-506">これらのモードではファイルが既に存在している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-506">The file must already exist in these modes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-507">
            <paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-507">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span>
          </span>
          <span data-ttu-id="9f985-508">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-508">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-509">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-509">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9f985-510">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-510">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-511">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-511">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span>
          </span>
          <span data-ttu-id="9f985-512">または、<paramref name="options" /> に対して <see cref="F:System.IO.FileOptions.Encrypted" /> が指定されていますが、ファイルの暗号化は現在のプラットフォームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-512">-or-  <see cref="F:System.IO.FileOptions.Encrypted" /> is specified for <paramref name="options" />, but file encryption is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9f985-513">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-513">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-514">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-514">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-515">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-515">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.Security.AccessControl.FileSystemRights rights, System.IO.FileShare share, int bufferSize, System.IO.FileOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.Security.AccessControl.FileSystemRights rights, valuetype System.IO.FileShare share, int32 bufferSize, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, rights As FileSystemRights, share As FileShare, bufferSize As Integer, options As FileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::Security::AccessControl::FileSystemRights rights, System::IO::FileShare share, int bufferSize, System::IO::FileOptions options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="rights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="options" Type="System.IO.FileOptions" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9f985-516">現在の <see cref="T:System.IO.FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-516">A relative or absolute path for the file that the current <see cref="T:System.IO.FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9f985-517">ファイルを開く方法または作成する方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-517">A constant that determines how to open or create the file.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="9f985-518">ファイルのアクセス規則および監査規則の作成時に使用するアクセス権を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-518">A constant that determines the access rights to use when creating access and audit rules for the file.</span>
          </span>
        </param>
        <param name="share">
          <span data-ttu-id="9f985-519">プロセスによるファイルの共有方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-519">A constant that determines how the file will be shared by processes.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-520">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-520">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-521">既定のバッファー サイズは、4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-521">The default buffer size is 4096.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9f985-522">追加のファイル オプションを指定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-522">A constant that specifies additional file options.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-523">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、アクセス権、共有アクセス許可、バッファー サイズ、および追加のファイル オプションを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-523">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, access rights and sharing permission, the buffer size, and additional file options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-524">.NET Framework は、デバイス名をようなパスを使用して物理ディスクに直接アクセスをサポートしていません"\\\\。 \PHYSICALDRIVE0"です。</span><span class="sxs-lookup"><span data-stu-id="9f985-524">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="9f985-525">これを使用して<xref:System.IO.FileStream.%23ctor%2A>権利ファイルの作成時点でのアクセスを適用するコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-525">Use this <xref:System.IO.FileStream.%23ctor%2A> constructor to apply access rights at the point of creation of a file.</span></span> <span data-ttu-id="9f985-526">アクセスまたは既存のファイルに対して権限を変更して、使用を検討、<xref:System.IO.File.GetAccessControl%2A>と<xref:System.IO.File.SetAccessControl%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-526">To access or modify rights on an existing file, consider using the <xref:System.IO.File.GetAccessControl%2A> and <xref:System.IO.File.SetAccessControl%2A> methods.</span></span>  
  
 <span data-ttu-id="9f985-527">`fileOptions`を作成するときに利用できる高度な操作へのアクセスを提供するパラメーターが使用される、<xref:System.IO.FileStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-527">The `fileOptions` parameter is used to provide access to more advanced operations that can be leveraged when creating a <xref:System.IO.FileStream> object.</span></span>  
  
 <span data-ttu-id="9f985-528">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-528">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-529">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-529">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="9f985-530">たとえば、システムによってこのクラスは、物理デバイスをアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-530">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="9f985-531"><xref:System.IO.Stream.CanSeek%2A> `true`すべて<xref:System.IO.FileStream>ファイルをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-531"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="9f985-532">場合`path`シークをサポートしていないデバイスを示す、<xref:System.IO.FileStream.CanSeek%2A>プロパティ、その結果を<xref:System.IO.FileStream>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="9f985-532">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="9f985-533">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-533">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-534">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-534">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-535">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-535">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-536">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-536">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-537">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-537">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="9f985-538">または、<paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-538">-or-  <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-539">
            <paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-539">
              <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-540">
            <paramref name="bufferSize" /> が負の値またはゼロです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-540">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
          <span data-ttu-id="9f985-541">または、<paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に無効な値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-541">-or-  <paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9f985-542">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-542">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span>
          </span>
          <span data-ttu-id="9f985-543">これらのモードではファイルが既に存在している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-543">The file must already exist in these modes.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="9f985-544">現在のオペレーティング システムは Windows NT 以降ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-544">The current operating system is not Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-545">
            <paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-545">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span>
          </span>
          <span data-ttu-id="9f985-546">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-546">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-547">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-547">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9f985-548">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-548">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-549">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-549">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span>
          </span>
          <span data-ttu-id="9f985-550">または、<paramref name="options" /> に対して <see cref="F:System.IO.FileOptions.Encrypted" /> が指定されていますが、ファイルの暗号化は現在のプラットフォームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-550">-or-  <see cref="F:System.IO.FileOptions.Encrypted" /> is specified for <paramref name="options" />, but file encryption is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9f985-551">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-551">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-552">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-552">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-553">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-553">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.Security.AccessControl.FileSystemRights rights, System.IO.FileShare share, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.Security.AccessControl.FileSystemRights rights, valuetype System.IO.FileShare share, int32 bufferSize, valuetype System.IO.FileOptions options, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::Security::AccessControl::FileSystemRights rights, System::IO::FileShare share, int bufferSize, System::IO::FileOptions options, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="rights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="options" Type="System.IO.FileOptions" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9f985-554">現在の <see cref="T:System.IO.FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-554">A relative or absolute path for the file that the current <see cref="T:System.IO.FileStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9f985-555">ファイルを開く方法または作成する方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-555">A constant that determines how to open or create the file.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="9f985-556">ファイルのアクセス規則および監査規則の作成時に使用するアクセス権を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-556">A constant that determines the access rights to use when creating access and audit rules for the file.</span>
          </span>
        </param>
        <param name="share">
          <span data-ttu-id="9f985-557">プロセスによるファイルの共有方法を決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-557">A constant that determines how the file will be shared by processes.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="9f985-558">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-558">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span>
          </span>
          <span data-ttu-id="9f985-559">既定のバッファー サイズは、4096 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-559">The default buffer size is 4096.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9f985-560">追加のファイル オプションを指定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-560">A constant that specifies additional file options.</span>
          </span>
        </param>
        <param name="fileSecurity">
          <span data-ttu-id="9f985-561">ファイルのアクセス制御と監査セキュリティを決定する定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-561">A constant that determines the access control and audit security for the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-562">
            <see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、アクセス権、共有アクセス許可、バッファー サイズ、追加のファイル オプション、アクセス制御、および監査セキュリティを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-562">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, access rights and sharing permission, the buffer size, additional file options, access control and audit security.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-563">.NET Framework は、デバイス名をようなパスを使用して物理ディスクに直接アクセスをサポートしていません"\\\\。 \PHYSICALDRIVE0"です。</span><span class="sxs-lookup"><span data-stu-id="9f985-563">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="9f985-564">これを使用して<xref:System.IO.FileStream.%23ctor%2A>権利ファイルの作成時点でのアクセスを適用するコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-564">Use this <xref:System.IO.FileStream.%23ctor%2A> constructor to apply access rights at the point of creation of a file.</span></span> <span data-ttu-id="9f985-565">アクセスまたは既存のファイルに対して権限を変更して、使用を検討、<xref:System.IO.File.GetAccessControl%2A>と<xref:System.IO.File.SetAccessControl%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-565">To access or modify rights on an existing file, consider using the <xref:System.IO.File.GetAccessControl%2A> and <xref:System.IO.File.SetAccessControl%2A> methods.</span></span>  
  
 <span data-ttu-id="9f985-566">`fileOptions`を作成するときに利用できる高度な操作へのアクセスを提供するパラメーターが使用される、<xref:System.IO.FileStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-566">The `fileOptions` parameter is used to provide access to more advanced operations that can be leveraged when creating a <xref:System.IO.FileStream> object.</span></span>  
  
 <span data-ttu-id="9f985-567">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-567">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-568">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9f985-568">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="9f985-569">たとえば、システムによってこのクラスは、物理デバイスをアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-569">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="9f985-570"><xref:System.IO.Stream.CanSeek%2A> `true`すべて<xref:System.IO.FileStream>ファイルをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-570"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="9f985-571">場合`path`シークをサポートしていないデバイスを示す、<xref:System.IO.FileStream.CanSeek%2A>プロパティ、その結果を<xref:System.IO.FileStream>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="9f985-571">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="9f985-572">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-572">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-573">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-573">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9f985-574">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-574">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-575">次の例は、データをファイルに書き込み、次を使用してデータを読み取り、<xref:System.IO.FileStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f985-575">The following example writes data to a file and then reads the data using the <xref:System.IO.FileStream> object.</span></span>  
  
 [!code-cpp[IO.FileStream.ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileStream.ctor2/cpp/example.cpp#1)]
 [!code-csharp[IO.FileStream.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileStream.ctor2/CS/example.cs#1)]
 [!code-vb[IO.FileStream.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileStream.ctor2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-576">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-576">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-577">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-577">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="9f985-578">または、<paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-578">-or-  <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-579">
            <paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-579">
              <paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-580">
            <paramref name="bufferSize" /> が負の値またはゼロです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-580">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
          <span data-ttu-id="9f985-581">または、<paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に無効な値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-581">-or-  <paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9f985-582">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-582">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span>
          </span>
          <span data-ttu-id="9f985-583">これらのモードではファイルが既に存在している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-583">The file must already exist in these modes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-584">
            <paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-584">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span>
          </span>
          <span data-ttu-id="9f985-585">または、ストリームが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-585">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-586">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-586">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9f985-587">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-587">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-588">
            <paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-588">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span>
          </span>
          <span data-ttu-id="9f985-589">または、<paramref name="options" /> に対して <see cref="F:System.IO.FileOptions.Encrypted" /> が指定されていますが、ファイルの暗号化は現在のプラットフォームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-589">-or-  <see cref="F:System.IO.FileOptions.Encrypted" /> is specified for <paramref name="options" />, but file encryption is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9f985-590">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-590">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="9f985-591">現在のオペレーティング システムは Windows NT 以降ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-591">The current operating system is not Windows NT or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-592">読み取り、書き込み、およびファイルに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-592">for reading, writing, and appending to files.</span>
          </span>
          <span data-ttu-id="9f985-593">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-593">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] array, int offset, int numBytes, AsyncCallback userCallback, object stateObject);" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] array, int32 offset, int32 numBytes, class System.AsyncCallback userCallback, object stateObject) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (array As Byte(), offset As Integer, numBytes As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ array, int offset, int numBytes, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" />
        <Parameter Name="numBytes" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9f985-594">データを読み取るバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-594">The buffer to read data into.</span>
          </span>
        </param>
        <param name="buffer">To be added.</param>
        <param name="offset">
          <span data-ttu-id="9f985-595">読み取りの開始位置を示す <c>array</c> 内のバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-595">The byte offset in <c>array</c> at which to begin reading.</span>
          </span>
        </param>
        <param name="numBytes">
          <span data-ttu-id="9f985-596">読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-596">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="count">To be added.</param>
        <param name="userCallback">
          <span data-ttu-id="9f985-597">非同期の読み取り操作が完了したときに呼び出されるメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-597">The method to be called when the asynchronous read operation is completed.</span>
          </span>
        </param>
        <param name="callback">To be added.</param>
        <param name="stateObject">
          <span data-ttu-id="9f985-598">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-598">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span>
          </span>
        </param>
        <param name="state">To be added.</param>
        <summary>
          <span data-ttu-id="9f985-599">非同期の読み込み動作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-599">Begins an asynchronous read operation.</span>
          </span>
          <span data-ttu-id="9f985-600">(代わりに、<see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-600">(Consider using <see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-601">非同期の読み取りを参照するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-601">An object that references the asynchronous read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-602">.NET Framework 4 以前のバージョンはなどのメソッドを使用する必要がある<xref:System.IO.FileStream.BeginRead%2A>と<xref:System.IO.FileStream.EndRead%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="9f985-602">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.FileStream.BeginRead%2A> and <xref:System.IO.FileStream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="9f985-603">これらのメソッドでは使用できます、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするただし、新しい非同期メソッドなど<xref:System.IO.FileStream.ReadAsync%2A>、 <xref:System.IO.FileStream.WriteAsync%2A>、 <xref:System.IO.Stream.CopyToAsync%2A>、および<xref:System.IO.FileStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="9f985-603">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.FileStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="9f985-604"><xref:System.IO.FileStream.EndRead%2A> 呼び出しごとに 1 回だけ呼び出す必要があります<xref:System.IO.FileStream.BeginRead%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-604"><xref:System.IO.FileStream.EndRead%2A> must be called exactly once for every call to <xref:System.IO.FileStream.BeginRead%2A>.</span></span> <span data-ttu-id="9f985-605">別の読み取りを開始する前に読み取りプロセスを終了に失敗すると、デッドロックなど、望ましくない動作可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-605">Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</span></span>  
  
 <span data-ttu-id="9f985-606"><xref:System.IO.FileStream> 操作の 2 つの異なるモードを提供します。 I/O 同期と非同期 I/O です。</span><span class="sxs-lookup"><span data-stu-id="9f985-606"><xref:System.IO.FileStream> provides two different modes of operation: synchronous I/O and asynchronous I/O.</span></span> <span data-ttu-id="9f985-607">いずれかを使用できますが、基になるオペレーティング システムのリソースは、これらのモードの 1 つのみで、アクセスを許可する場合があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-607">While either can be used, the underlying operating system resources might allow access in only one of these modes.</span></span> <span data-ttu-id="9f985-608">既定では、<xref:System.IO.FileStream>オペレーティング システム ハンドルを同期的が開きます。</span><span class="sxs-lookup"><span data-stu-id="9f985-608">By default, <xref:System.IO.FileStream> opens the operating system handle synchronously.</span></span> <span data-ttu-id="9f985-609">Windows では、非同期メソッドの速度が低下します。</span><span class="sxs-lookup"><span data-stu-id="9f985-609">In Windows, this slows down asynchronous methods.</span></span> <span data-ttu-id="9f985-610">非同期メソッドを使用している場合を使用して、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-610">If asynchronous methods are used, use the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-611">使用して、<xref:System.IO.FileStream.CanRead%2A>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="9f985-611">Use the <xref:System.IO.FileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="9f985-612">詳細については、「<xref:System.IO.Stream.CanRead%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-612">For additional information, see <xref:System.IO.Stream.CanRead%2A>.</span></span>  
  
 <span data-ttu-id="9f985-613">例外が直ちにスローされる場合は、ストリームが閉じているか、無効な引数を渡す、<xref:System.IO.FileStream.BeginRead%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-613">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.FileStream.BeginRead%2A>.</span></span> <span data-ttu-id="9f985-614">IO 要求中にディスク障害など、非同期読み取り要求中に発生したエラーは、スレッド プールのスレッドで発生しへの呼び出しに可視になる<xref:System.IO.FileStream.EndRead%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-614">Errors that occur during an asynchronous read request, such as a disk failure during the IO request, occur on the thread pool thread and become visible upon a call to <xref:System.IO.FileStream.EndRead%2A>.</span></span>  
  
 <span data-ttu-id="9f985-615"><xref:System.IO.Stream.EndRead%2A> これを呼び出す必要があります<xref:System.IAsyncResult>に読み取られたバイト数を確認します。</span><span class="sxs-lookup"><span data-stu-id="9f985-615"><xref:System.IO.Stream.EndRead%2A> must be called with this <xref:System.IAsyncResult> to find out how many bytes were read.</span></span>  
  
 <span data-ttu-id="9f985-616">複数の非同期要求は、不定の要求の完了の順序をレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="9f985-616">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="9f985-617">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-617">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-618">このコード例に示されている例の一部である、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-618">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#3)]
 [!code-csharp[System.IO.FileStream2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#3)]
 [!code-vb[System.IO.FileStream2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-619">配列長から <paramref name="offset" /> を差し引いた値が <paramref name="numBytes" /> より小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-619">The array length minus <paramref name="offset" /> is less than <paramref name="numBytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-620">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-620">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-621">
            <paramref name="offset" /> または <paramref name="numBytes" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-621">
              <paramref name="offset" /> or <paramref name="numBytes" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-622">非同期の読み取りがファイルの終わりを超えて試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-622">An asynchronous read was attempted past the end of the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] array, int offset, int numBytes, AsyncCallback userCallback, object stateObject);" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] array, int32 offset, int32 numBytes, class System.AsyncCallback userCallback, object stateObject) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (array As Byte(), offset As Integer, numBytes As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ array, int offset, int numBytes, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" />
        <Parameter Name="numBytes" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9f985-623">現在のストリームに書き込むデータを格納しているバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-623">The buffer containing data to write to the current stream.</span>
          </span>
        </param>
        <param name="buffer">To be added.</param>
        <param name="offset">
          <span data-ttu-id="9f985-624">現在のストリームへのバイトのコピーを開始する位置を示す <c>array</c> 内のバイト オフセット。インデックス番号は 0 から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-624">The zero-based byte offset in <c>array</c> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="numBytes">
          <span data-ttu-id="9f985-625">書き込む最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-625">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="count">To be added.</param>
        <param name="userCallback">
          <span data-ttu-id="9f985-626">非同期の書き込み操作が完了したときに呼び出されるメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-626">The method to be called when the asynchronous write operation is completed.</span>
          </span>
        </param>
        <param name="callback">To be added.</param>
        <param name="stateObject">
          <span data-ttu-id="9f985-627">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-627">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <param name="state">To be added.</param>
        <summary>
          <span data-ttu-id="9f985-628">非同期の書き込み操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-628">Begins an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="9f985-629">(代わりに、<see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-629">(Consider using <see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-630">非同期の書き込みを参照するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-630">An object that references the asynchronous write.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-631">.NET Framework 4 以前のバージョンはなどのメソッドを使用する必要がある<xref:System.IO.FileStream.BeginWrite%2A>と<xref:System.IO.FileStream.EndWrite%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="9f985-631">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.FileStream.BeginWrite%2A> and <xref:System.IO.FileStream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="9f985-632">これらのメソッドでは使用できます、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするただし、新しい非同期メソッドなど<xref:System.IO.FileStream.ReadAsync%2A>、 <xref:System.IO.FileStream.WriteAsync%2A>、 <xref:System.IO.Stream.CopyToAsync%2A>、および<xref:System.IO.FileStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="9f985-632">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.FileStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="9f985-633"><xref:System.IO.FileStream.EndWrite%2A> 1 回だけ呼び出す必要がありますすべて<xref:System.IAsyncResult>から<xref:System.IO.FileStream.BeginWrite%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-633"><xref:System.IO.FileStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.FileStream.BeginWrite%2A>.</span></span> <span data-ttu-id="9f985-634"><xref:System.IO.FileStream.EndWrite%2A> I/O 操作が完了するまでブロックされます。</span><span class="sxs-lookup"><span data-stu-id="9f985-634"><xref:System.IO.FileStream.EndWrite%2A> will block until the I/O operation has completed.</span></span>  
  
 <span data-ttu-id="9f985-635">このメソッドは、<xref:System.IO.Stream.BeginWrite%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-635">This method overrides <xref:System.IO.Stream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="9f985-636"><xref:System.IO.FileStream> 操作の 2 つの異なるモードを提供します。 I/O 同期と非同期 I/O です。</span><span class="sxs-lookup"><span data-stu-id="9f985-636"><xref:System.IO.FileStream> provides two different modes of operation: synchronous I/O and asynchronous I/O.</span></span> <span data-ttu-id="9f985-637">いずれかを使用できますが、基になるオペレーティング システムのリソースは、これらのモードの 1 つのみで、アクセスを許可する場合があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-637">While either can be used, the underlying operating system resources might allow access in only one of these modes.</span></span> <span data-ttu-id="9f985-638">既定では、<xref:System.IO.FileStream>オペレーティング システム ハンドルを同期的が開きます。</span><span class="sxs-lookup"><span data-stu-id="9f985-638">By default, <xref:System.IO.FileStream> opens the operating system handle synchronously.</span></span> <span data-ttu-id="9f985-639">Windows では、非同期メソッドの速度が低下します。</span><span class="sxs-lookup"><span data-stu-id="9f985-639">In Windows, this slows down asynchronous methods.</span></span> <span data-ttu-id="9f985-640">非同期メソッドを使用している場合を使用して、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-640">If asynchronous methods are used, use the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 <span data-ttu-id="9f985-641">例外が直ちにスローされる場合は、ストリームが閉じているか、無効な引数を渡す、<xref:System.IO.FileStream.BeginWrite%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-641">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.FileStream.BeginWrite%2A>.</span></span> <span data-ttu-id="9f985-642">IO 要求中にディスク障害など、非同期書き込み要求中に発生したエラーは、スレッド プールのスレッドで発生しへの呼び出しに可視になる<xref:System.IO.FileStream.EndWrite%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-642">Errors that occur during an asynchronous write request, such as a disk failure during the IO request, occur on the thread pool thread and become visible upon a call to <xref:System.IO.FileStream.EndWrite%2A>.</span></span>  
  
 <span data-ttu-id="9f985-643">複数の非同期要求は、不定の要求の完了の順序をレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="9f985-643">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="9f985-644">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-644">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-645">このコード例に示されている例の一部である、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-645">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#2)]
 [!code-csharp[System.IO.FileStream2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#2)]
 [!code-vb[System.IO.FileStream2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-646">
            <paramref name="array" /> の長さから <paramref name="offset" /> を引いた長さが <paramref name="numBytes" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-646">
              <paramref name="array" /> length minus <paramref name="offset" /> is less than <paramref name="numBytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-647">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-647">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-648">
            <paramref name="offset" /> または <paramref name="numBytes" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-648">
              <paramref name="offset" /> or <paramref name="numBytes" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-649">ストリームは書き込みをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-649">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-650">ストリームは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-650">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-651">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-651">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-652">現在のストリームが読み取りをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-652">Gets a value indicating whether the current stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-653">ストリームが読み取りをサポートしている場合は <see langword="true" />。ストリームが閉じているか、書き込み専用アクセスで開かれた場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-653">
              <see langword="true" /> if the stream supports reading; <see langword="false" /> if the stream is closed or was opened with write-only access.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-654">派生したクラス場合<xref:System.IO.Stream>読み取りをサポートしませんへの呼び出し、 <xref:System.IO.FileStream.Read%2A>、 <xref:System.IO.FileStream.ReadByte%2A>、および<xref:System.IO.FileStream.BeginRead%2A>メソッドをスロー、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-654">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.FileStream.Read%2A>, <xref:System.IO.FileStream.ReadByte%2A>, and <xref:System.IO.FileStream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="9f985-655">ストリームが閉じられたかどうか、このプロパティを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-655">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-656">次の例での使用、`CanRead`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-656">The following example demonstrates a use of the `CanRead` property.</span></span> <span data-ttu-id="9f985-657">このコードによる出力は「MyFile.txt 書き込みができません」</span><span class="sxs-lookup"><span data-stu-id="9f985-657">The output of this code is "MyFile.txt is not writable."</span></span> <span data-ttu-id="9f985-658">出力メッセージ「MyFile.txt 両方に書き込まれたしてからの読み取り。」、変更を取得する、`FileAccess`パラメーターを`ReadWrite`で、`FileStream`コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-658">To get the output message "MyFile.txt can be both written to and read from.", change the `FileAccess` parameter to `ReadWrite` in the `FileStream` constructor.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-659">現在のストリームがシークをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-659">Gets a value indicating whether the current stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-660">ストリームがシークをサポートしている場合は <see langword="true" />。ストリームが閉じているか、<see langword="FileStream" /> がパイプまたはコンソール出力などのオペレーティング システム ハンドルから構築された場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-660">
              <see langword="true" /> if the stream supports seeking; <see langword="false" /> if the stream is closed or if the <see langword="FileStream" /> was constructed from an operating-system handle such as a pipe or output to the console.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-661">派生したクラス場合<xref:System.IO.Stream>への呼び出しをシークをサポートしていない<xref:System.IO.FileStream.Length%2A>、 <xref:System.IO.FileStream.SetLength%2A>、 <xref:System.IO.FileStream.Position%2A>、および<xref:System.IO.FileStream.Seek%2A>スロー、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-661">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.FileStream.Length%2A>, <xref:System.IO.FileStream.SetLength%2A>, <xref:System.IO.FileStream.Position%2A>, and <xref:System.IO.FileStream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="9f985-662">ストリームが閉じられたかどうか、このプロパティを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-662">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-663">次の例では、`CanSeek`ストリームがシークをサポートしているかどうかを確認するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-663">The following example uses the `CanSeek` property to check whether a stream supports seeking.</span></span>  
  
 [!code-cpp[fstream canseek#1](~/samples/snippets/cpp/VS_Snippets_CLR/FStream CanSeek/CPP/fstream canseek.cpp#1)]
 [!code-csharp[fstream canseek#1](~/samples/snippets/csharp/VS_Snippets_CLR/FStream CanSeek/CS/fstream canseek.cs#1)]
 [!code-vb[fstream canseek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FStream CanSeek/VB/fstream canseek.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-664">現在のストリームが書き込みをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-664">Gets a value indicating whether the current stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-665">ストリームが書き込みをサポートしている場合は <see langword="true" />。ストリームが閉じているか、読み取り専用アクセスで開かれた場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-665">
              <see langword="true" /> if the stream supports writing; <see langword="false" /> if the stream is closed or was opened with read-only access.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-666">派生したクラス場合<xref:System.IO.Stream>への呼び出しの書き込みをサポートしていません<xref:System.IO.FileStream.SetLength%2A>、 <xref:System.IO.FileStream.Write%2A>、 <xref:System.IO.FileStream.BeginWrite%2A>、または<xref:System.IO.FileStream.WriteByte%2A>をスロー、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-666">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.FileStream.SetLength%2A>, <xref:System.IO.FileStream.Write%2A>, <xref:System.IO.FileStream.BeginWrite%2A>, or <xref:System.IO.FileStream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="9f985-667">ストリームが閉じられたかどうか、このプロパティを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-667">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-668">次の例では、`CanWrite`ストリームが書き込みをサポートするかどうかを確認するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-668">The following example uses the `CanWrite` property to check whether a stream supports writing.</span></span>  
  
 [!code-cpp[fstream canwrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/FStream CanWrite/CPP/fstream canwrite.cpp#1)]
 [!code-csharp[fstream canwrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/FStream CanWrite/CS/fstream canwrite.cs#1)]
 [!code-vb[fstream canwrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FStream CanWrite/VB/fstream canwrite.vb#1)]  
  
 <span data-ttu-id="9f985-669">例を次に示しますを使用して、`CanWrite`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-669">The following is an example using the `CanWrite` property.</span></span> <span data-ttu-id="9f985-670">このコードの出力は、「MyFile.txt は書き込み可能な」です。</span><span class="sxs-lookup"><span data-stu-id="9f985-670">The output of this code is "MyFile.txt is writable."</span></span> <span data-ttu-id="9f985-671">出力メッセージ「MyFile.txt 両方に書き込まれたしてからの読み取り。」、変更を取得する、`FileAccess`パラメーターを`ReadWrite`で、`FileStream`コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-671">To get the output message "MyFile.txt can be both written to and read from.", change the `FileAccess` parameter to `ReadWrite` in the `FileStream` constructor.</span></span>  
  
 [!code-cpp[Classic FileStream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9f985-672">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-672">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-673">
            <see cref="T:System.IO.FileStream" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-673">Releases the unmanaged resources used by the <see cref="T:System.IO.FileStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-674">このメソッドは、パブリック<xref:System.ComponentModel.Component.Dispose%2A>メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-674">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9f985-675"><xref:System.ComponentModel.Component.Dispose%2A> プロテクト呼び出します<xref:System.IO.FileStream.Dispose%2A>メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-675"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.FileStream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9f985-676"><xref:System.Object.Finalize%2A> 呼び出す<xref:System.IO.FileStream.Dispose%2A>で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-676"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.FileStream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9f985-677">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.FileStream> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="9f985-677">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.FileStream> references.</span></span> <span data-ttu-id="9f985-678">このメソッドは、参照される各オブジェクトの <xref:System.ComponentModel.Component.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="9f985-678">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9f985-679">
            <para>
              <see cref="M:System.ComponentModel.Component.Dispose" /> 複数回呼び出す他のオブジェクトから。オーバーライドする場合<see cref="M:System.IO.FileStream.Dispose(System.Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see cref="M:System.ComponentModel.Component.Dispose" />です。実装する方法の詳細についての<see cref="M:System.IO.FileStream.Dispose(System.Boolean)" />、[Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) を実装を参照してください。 します。詳細については<see cref="M:System.ComponentModel.Component.Dispose" />と<see cref="M:System.Object.Finalize" />、[管理されていない Resources](~/docs/standard/garbage-collection/unmanaged.md) をクリーニングを参照してください。 します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-679">
              <para>
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.FileStream.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />. For more information about how to implement <see cref="M:System.IO.FileStream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="9f985-680">待機する保留状態の非同期要求への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-680">The reference to the pending asynchronous request to wait for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-681">保留中の非同期の読み取り操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-681">Waits for the pending asynchronous read operation to complete.</span>
          </span>
          <span data-ttu-id="9f985-682">(代わりに、<see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-682">(Consider using <see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-683">ストリームから読み込んだバイト数 (0 ～要求したバイト数の間の数値)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-683">The number of bytes read from the stream, between 0 and the number of bytes you requested.</span>
          </span>
          <span data-ttu-id="9f985-684">ストリームの末尾では 0 が返されるだけです。それ以外の場合は、少なくとも 1 バイトが読み込み可能になるまでブロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-684">Streams only return 0 at the end of the stream, otherwise, they should block until at least 1 byte is available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-685">.NET Framework 4 以前のバージョンはなどのメソッドを使用する必要がある<xref:System.IO.FileStream.BeginRead%2A>と<xref:System.IO.FileStream.EndRead%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="9f985-685">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.FileStream.BeginRead%2A> and <xref:System.IO.FileStream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="9f985-686">これらのメソッドでは使用できます、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするただし、新しい非同期メソッドなど<xref:System.IO.FileStream.ReadAsync%2A>、 <xref:System.IO.FileStream.WriteAsync%2A>、 <xref:System.IO.Stream.CopyToAsync%2A>、および<xref:System.IO.FileStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="9f985-686">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.FileStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="9f985-687"><xref:System.IO.FileStream.EndRead%2A> すべての呼び出しを正確に呼び出す必要があります<xref:System.IO.FileStream.BeginRead%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-687"><xref:System.IO.FileStream.EndRead%2A> must be called exactly for every call to <xref:System.IO.FileStream.BeginRead%2A>.</span></span> <span data-ttu-id="9f985-688">別の読み取りを開始する前に読み取りプロセスを終了に失敗すると、デッドロックなど、望ましくない動作可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-688">Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</span></span>  
  
 <span data-ttu-id="9f985-689">このメソッドは、<xref:System.IO.Stream.EndRead%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-689">This method overrides <xref:System.IO.Stream.EndRead%2A>.</span></span>  
  
 <span data-ttu-id="9f985-690"><xref:System.IO.FileStream.EndRead%2A> 呼び出すことができるすべて<xref:System.IAsyncResult>から<xref:System.IO.FileStream.BeginRead%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-690"><xref:System.IO.FileStream.EndRead%2A> can be called on every <xref:System.IAsyncResult> from <xref:System.IO.FileStream.BeginRead%2A>.</span></span> <span data-ttu-id="9f985-691">呼び出す<xref:System.IO.FileStream.EndRead%2A>ストリームから読み取られたバイト数がわかります。</span><span class="sxs-lookup"><span data-stu-id="9f985-691">Calling <xref:System.IO.FileStream.EndRead%2A> tells you how many bytes were read from the stream.</span></span> <span data-ttu-id="9f985-692"><xref:System.IO.FileStream.EndRead%2A> I/O 操作が完了するまでブロックされます。</span><span class="sxs-lookup"><span data-stu-id="9f985-692"><xref:System.IO.FileStream.EndRead%2A> will block until the I/O operation has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-693">このコード例に示されている例の一部である、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-693">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#4)]
 [!code-csharp[System.IO.FileStream2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#4)]
 [!code-vb[System.IO.FileStream2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-694">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-694">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-695">この <see cref="T:System.IAsyncResult" /> オブジェクトは、このクラスで <see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出すことによって作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-695">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9f985-696">
            <see cref="M:System.IO.FileStream.EndRead(System.IAsyncResult)" /> は複数回呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-696">
              <see cref="M:System.IO.FileStream.EndRead(System.IAsyncResult)" /> is called multiple times.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-697">ストリームが閉じているか、内部エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-697">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="9f985-698">保留中の非同期 I/O 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-698">The pending asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-699">非同期の書き込み操作を終了し、I/O 操作が完了するまでブロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-699">Ends an asynchronous write operation and blocks until the I/O operation is complete.</span>
          </span>
          <span data-ttu-id="9f985-700">(代わりに、<see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-700">(Consider using <see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-701">.NET Framework 4 以前のバージョンはなどのメソッドを使用する必要がある<xref:System.IO.FileStream.BeginWrite%2A>と<xref:System.IO.FileStream.EndWrite%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="9f985-701">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.FileStream.BeginWrite%2A> and <xref:System.IO.FileStream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="9f985-702">これらのメソッドでは使用できます、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするただし、新しい非同期メソッドなど<xref:System.IO.FileStream.ReadAsync%2A>、 <xref:System.IO.FileStream.WriteAsync%2A>、 <xref:System.IO.Stream.CopyToAsync%2A>、および<xref:System.IO.FileStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="9f985-702">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.FileStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="9f985-703">このメソッドは、<xref:System.IO.Stream.EndWrite%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-703">This method overrides <xref:System.IO.Stream.EndWrite%2A>.</span></span>  
  
 <span data-ttu-id="9f985-704"><xref:System.IO.FileStream.EndWrite%2A> 1 回だけ呼び出す必要がありますすべて<xref:System.IAsyncResult>から<xref:System.IO.FileStream.BeginWrite%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-704"><xref:System.IO.FileStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.FileStream.BeginWrite%2A>.</span></span> <span data-ttu-id="9f985-705"><xref:System.IO.FileStream.EndWrite%2A> I/O 操作が完了するまでブロックされます。</span><span class="sxs-lookup"><span data-stu-id="9f985-705"><xref:System.IO.FileStream.EndWrite%2A> will block until the I/O operation has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-706">このコード例に示されている例の一部である、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-706">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#3)]
 [!code-csharp[System.IO.FileStream2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#3)]
 [!code-vb[System.IO.FileStream2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-707">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-707">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-708">この <see cref="T:System.IAsyncResult" /> オブジェクトは、このクラスで <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出すことによって作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-708">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9f985-709">
            <see cref="M:System.IO.FileStream.EndWrite(System.IAsyncResult)" /> は複数回呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-709">
              <see cref="M:System.IO.FileStream.EndWrite(System.IAsyncResult)" /> is called multiple times.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-710">ストリームが閉じているか、内部エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-710">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FileStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FileStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f985-711">ガベージ コレクターが <see langword="FileStream" /> を再利用するときに、リソースの解放およびその他のクリーンアップ操作を確実に実行するようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-711">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see langword="FileStream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-712">ガベージ コレクター`Finalize`現在のオブジェクトが完了する準備ができています。</span><span class="sxs-lookup"><span data-stu-id="9f985-712">The garbage collector calls `Finalize` when the current object is ready to be finalized.</span></span> <span data-ttu-id="9f985-713">`Finalize` 閉じる、`FileStream`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-713">`Finalize` closes the `FileStream`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-714">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-714">Clears buffers for this stream and causes any buffered data to be written to the file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f985-715">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-715">Clears buffers for this stream and causes any buffered data to be written to the file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-716">このメソッドは、<xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-716">This method overrides <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f985-717">呼び出すと、<xref:System.IO.FileStream.Flush%2A?displayProperty=nameWithType>メソッド、オペレーティング システム I/O バッファーがフラッシュされるもします。</span><span class="sxs-lookup"><span data-stu-id="9f985-717">When you call the <xref:System.IO.FileStream.Flush%2A?displayProperty=nameWithType> method, the operating system I/O buffer is also flushed.</span></span>  
  
 <span data-ttu-id="9f985-718">明示的に呼び出す場合を除き、ストリームのエンコーダーはフラッシュされません<xref:System.IO.FileStream.Flush%2A>またはオブジェクトの破棄します。</span><span class="sxs-lookup"><span data-stu-id="9f985-718">A stream’s encoder is not flushed unless you explicitly call <xref:System.IO.FileStream.Flush%2A> or dispose of the object.</span></span> <span data-ttu-id="9f985-719">設定<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>に`true`に、ストリーム バッファーからデータがフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="9f985-719">Setting <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="9f985-720">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</span><span class="sxs-lookup"><span data-stu-id="9f985-720">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="9f985-721">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="9f985-721">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="9f985-722">読み取りまたは書き込みのいずれかのバッファーを使用できるため<xref:System.IO.FileStream.Flush>は次の 2 つの関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="9f985-722">Because a buffer can be used for either reading or writing, <xref:System.IO.FileStream.Flush> performs the following two functions:</span></span>  
  
-   <span data-ttu-id="9f985-723">ファイルに以前にバッファーに書き込まれたデータをコピーし、エンコーダーの状態を除く、バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="9f985-723">Any data previously written to the buffer is copied to the file and the buffer is cleared except for its encoder state.</span></span>  
  
-   <span data-ttu-id="9f985-724">場合<xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=nameWithType>は`true`とデータが以前の読み取りにバッファーをファイルからコピー、ファイル内の現在位置が、バッファー内の未読のバイト数だけデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="9f985-724">If <xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=nameWithType> is `true` and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer.</span></span> <span data-ttu-id="9f985-725">バッファーをクリアし、します。</span><span class="sxs-lookup"><span data-stu-id="9f985-725">The buffer is then cleared.</span></span>  
  
 <span data-ttu-id="9f985-726">使用して、<xref:System.IO.FileStream.Flush%28System.Boolean%29>バッファリングされたすべてのデータの中間ファイル バッファーのことを確認するときのメソッドのオーバー ロードが記述されたディスクにします。</span><span class="sxs-lookup"><span data-stu-id="9f985-726">Use the <xref:System.IO.FileStream.Flush%28System.Boolean%29> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-727">このコード例に示されている例の一部である、<xref:System.IO.FileStream.Lock%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-727">This code example is part of a larger example provided for the <xref:System.IO.FileStream.Lock%2A> method.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#4)]
 [!code-csharp[System.IO.FileStream3#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#4)]
 [!code-vb[System.IO.FileStream3#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-728">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-728">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-729">ストリームは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-729">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.FileStream.Flush(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush (bool flushToDisk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush(bool flushToDisk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Flush(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush (flushToDisk As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush(bool flushToDisk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flushToDisk" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flushToDisk">
          <span data-ttu-id="9f985-730">すべての中間ファイル バッファーをフラッシュする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-730">
              <see langword="true" /> to flush all intermediate file buffers; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-731">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにし、すべての中間ファイル バッファーもクリアします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-731">Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-732">バッファリングされたすべてのデータの中間ファイル バッファーのことを確認する場合は、このオーバー ロードが書き込まれます使用してディスクにします。</span><span class="sxs-lookup"><span data-stu-id="9f985-732">Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</span></span>  
  
 <span data-ttu-id="9f985-733">呼び出すと、<xref:System.IO.FileStream.Flush%2A>メソッド、オペレーティング システム I/O バッファーがフラッシュされるもします。</span><span class="sxs-lookup"><span data-stu-id="9f985-733">When you call the <xref:System.IO.FileStream.Flush%2A> method, the operating system I/O buffer is also flushed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileStream.Flush" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="9f985-734">キャンセル要求を監視するためのトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-734">The token to monitor for cancellation requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-735">ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-735">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-736">非同期のフラッシュ操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-736">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-737">呼び出すと、<xref:System.IO.FileStream.FlushAsync%2A>メソッド、オペレーティング システム I/O バッファーがフラッシュされるもします。</span><span class="sxs-lookup"><span data-stu-id="9f985-737">When you call the <xref:System.IO.FileStream.FlushAsync%2A> method, the operating system I/O buffer is also flushed.</span></span>  
  
 <span data-ttu-id="9f985-738">返されるタスクに含まれる完了前に、操作が取り消された場合、<xref:System.Threading.Tasks.TaskStatus.Canceled>値を<xref:System.Threading.Tasks.Task.Status%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-738">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span> <span data-ttu-id="9f985-739">返されるタスクに含まれるファイルへのハンドルが破棄されている場合、<xref:System.ObjectDisposedException>での例外、<xref:System.Threading.Tasks.Task.Exception%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-739">If the handle to the file is disposed, the returned task contains the <xref:System.ObjectDisposedException> exception in the <xref:System.Threading.Tasks.Task.Exception%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-740">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-740">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.FileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::FileSecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f985-741">現在の <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクトが示すファイルのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.FileStream" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-741">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileStream" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-742">現在の <see cref="T:System.IO.FileStream" /> オブジェクトが示すファイルのアクセス制御設定をカプセル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-742">An object that encapsulates the access control settings for the file described by the current <see cref="T:System.IO.FileStream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-743">中に、<xref:System.IO.FileStream>クラスと<xref:System.IO.FileStream.GetAccessControl%2A>使用を検討して、既存のファイルのアクセス制御リスト (ACL) エントリを取得するために使用できる<xref:System.IO.File.GetAccessControl%2A?displayProperty=nameWithType>ので、メソッドは使いやすくします。</span><span class="sxs-lookup"><span data-stu-id="9f985-743">While the <xref:System.IO.FileStream> class and <xref:System.IO.FileStream.GetAccessControl%2A> can be used to retrieve the access control list (ACL) entries of an existing file, consider using <xref:System.IO.File.GetAccessControl%2A?displayProperty=nameWithType> method, as it is easier to use.</span></span>  
  
 <span data-ttu-id="9f985-744">使用して、<xref:System.IO.FileStream.GetAccessControl%2A>ファイルの ACL エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="9f985-744">Use the <xref:System.IO.FileStream.GetAccessControl%2A> method to retrieve the ACL entries for a file.</span></span>  
  
 <span data-ttu-id="9f985-745">ACL には、個人、グループ、または権限がない、指定されたファイルの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="9f985-745">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="9f985-746">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-746">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-747">ファイルは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-747">The file is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-748">ファイルを開くときに、I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-748">An I/O error occurred while opening the file.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="9f985-749">ファイルが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-749">The file could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-750">この操作は、現在のプラットフォームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-750">This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="9f985-751">または、呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-751">-or-  The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use SafeFileHandle instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-752">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-752">Gets the operating system file handle for the file that the current <see langword="FileStream" /> object encapsulates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-753">この <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドル。または <see langword="FileStream" /> が閉じられている場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-753">The operating system file handle for the file encapsulated by this <see langword="FileStream" /> object, or -1 if the <see langword="FileStream" /> has been closed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-754">このプロパティは、オペレーティング システムに用意されているシステムの呼び出しで使用するためのオペレーティング システム ハンドル (など`ReadFile`Windows 上)。</span><span class="sxs-lookup"><span data-stu-id="9f985-754">This property is an operating system handle for use with operating-system-provided system calls (such as `ReadFile` on Windows).</span></span> <span data-ttu-id="9f985-755">など、ファイル記述子を期待する C ライブラリ関数では動作しません`fread`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-755">It will not work with C library functions that expect a file descriptor, such as `fread`.</span></span>  
  
 <span data-ttu-id="9f985-756">オペレーティング システム ハンドルが開かれた同期または非同期で、に応じて`FileStream`コンス トラクターが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="9f985-756">The operating system handle might have been opened synchronously or asynchronously, depending on which `FileStream` constructor was called.</span></span> <span data-ttu-id="9f985-757">使用して、<xref:System.IO.FileStream.IsAsync%2A>プロパティをこのハンドルが非同期的に開かれたかどうかを検出します。</span><span class="sxs-lookup"><span data-stu-id="9f985-757">Use the <xref:System.IO.FileStream.IsAsync%2A> property to discover whether this handle was opened asynchronously.</span></span> <span data-ttu-id="9f985-758">Win32 では、つまり、重複 I/O 用、ハンドルが開かれた、異なるパラメーターを必要と`ReadFile`と`WriteFile`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-758">In Win32, this means the handle was opened for overlapped IO, and it requires different parameters to `ReadFile` and `WriteFile`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-759">場合に、データの破損が発生する可能性があります、`FileStream`が作成されると、そのハンドルが渡される、なんらかの操作が、ハンドルのファイル ポインターを移動し、`FileStream`もう一度使用されます。</span><span class="sxs-lookup"><span data-stu-id="9f985-759">Data corruption might occur if a `FileStream` is created, its handle is passed, some operation moves the handle's file pointer, and then the `FileStream` is used again.</span></span> <span data-ttu-id="9f985-760">複数のスレッドは、同時に同じファイルに書き込めません安全と`FileStream`コードをバッファー処理には、行うことは想定しています。</span><span class="sxs-lookup"><span data-stu-id="9f985-760">Multiple threads cannot safely write to the same file simultaneously, and `FileStream` buffering code assumes that it exclusively controls the handle.</span></span> <span data-ttu-id="9f985-761">`FileStream` スローする可能性、<xref:System.IO.IOException>場合`FileStream`他のプロセスがファイル ポインターを移動したことを検出します。</span><span class="sxs-lookup"><span data-stu-id="9f985-761">`FileStream` might throw an <xref:System.IO.IOException> if `FileStream` detects that some other process has moved the file pointer.</span></span> <span data-ttu-id="9f985-762">これを回避するには、書き込みませんすべてのデータ ファイルの一部にする`FileStream`がバッファーに格納したとしたときにメソッドが呼び出された最後の場所にファイル ポインターを復元`FileStream`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-762">To avoid this, do not write any data into a portion of the file that `FileStream` might have buffered, and restore the file pointer to the location it had when methods were last called on `FileStream`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9f985-763">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-763">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f985-764">アンマネージ コードへのアクセスに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-764">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="9f985-765">関連する列挙値:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-765">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9f985-766">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-766">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9f985-767">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-767">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public virtual bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAsync { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-768">
            <see langword="FileStream" /> が非同期的に開かれたか、同期的に開かれたかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-768">Gets a value indicating whether the <see langword="FileStream" /> was opened asynchronously or synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-769">
            <see langword="FileStream" /> が非同期的に開かれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-769">
              <see langword="true" /> if the <see langword="FileStream" /> was opened asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-770">`IsAsync`プロパティを検出するかどうか、`FileStream`ハンドルが開かれた非同期的に、使用するようコードを有効にすると、<xref:System.IO.FileStream.Handle%2A>プロパティ正しくです。</span><span class="sxs-lookup"><span data-stu-id="9f985-770">The `IsAsync` property detects whether the `FileStream` handle was opened asynchronously, enabling your code to use the <xref:System.IO.FileStream.Handle%2A> property correctly.</span></span> <span data-ttu-id="9f985-771">Win32 では、 `IsAsync` true を示し、ハンドル重複 I/O 用に開かれたために異なるパラメーターを必要とされている`ReadFile`と`WriteFile`です。</span><span class="sxs-lookup"><span data-stu-id="9f985-771">In Win32, `IsAsync` being true means the handle was opened for overlapped I/O, and thus requires different parameters to `ReadFile` and `WriteFile`.</span></span>  
  
 <span data-ttu-id="9f985-772">インスタンスを作成するときに、この値を指定する、<xref:System.IO.FileStream>クラスを持つコンス トラクターを使用して、 `isAsync`、 `useAsync`、または`options`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9f985-772">You specify this value when you create an instance of the <xref:System.IO.FileStream> class using a constructor that has an `isAsync`, `useAsync`, or `options` parameter.</span></span> <span data-ttu-id="9f985-773">このプロパティが`true`ストリームがファイルの操作を非同期的に実行する重複 I/O を使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-773">When the property is `true`, the stream utilizes overlapped I/O to perform file operations asynchronously.</span></span> <span data-ttu-id="9f985-774">ただし、<xref:System.IO.FileStream.IsAsync%2A>プロパティがある`true`を呼び出して、 <xref:System.IO.FileStream.ReadAsync%2A>、 <xref:System.IO.FileStream.WriteAsync%2A>、または<xref:System.IO.Stream.CopyToAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-774">However, the <xref:System.IO.FileStream.IsAsync%2A> property does not have to be `true` to call the <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, or <xref:System.IO.Stream.CopyToAsync%2A> method.</span></span> <span data-ttu-id="9f985-775">ときに、<xref:System.IO.FileStream.IsAsync%2A>プロパティは`false`および書き込み操作を非同期の読み込みを呼び出すと、引き続き、UI スレッドはブロックされませんが、実際の I/O 操作が同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="9f985-775">When the <xref:System.IO.FileStream.IsAsync%2A> property is `false` and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-776">このコード例に示されている例の一部である、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-776">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#2)]
 [!code-csharp[System.IO.FileStream2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#2)]
 [!code-vb[System.IO.FileStream2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-777">ストリーム長 (バイト単位) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-777">Gets the length in bytes of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-778">ストリーム長 (バイト単位) を表す long 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-778">A long value representing the length of the stream in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-779">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-779">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-780">次の例では、`Length`と`Position`プロパティ ファイルの終端の条件を確認します。</span><span class="sxs-lookup"><span data-stu-id="9f985-780">The following example uses the `Length` and `Position` properties to check for an end-of-file condition.</span></span>  
  
 [!code-cpp[Classic FileStream.Length Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.Length Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.Length Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.Length Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.Length Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.Length Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-781">このストリーム用の <see cref="P:System.IO.FileStream.CanSeek" /> が <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-781">
              <see cref="P:System.IO.FileStream.CanSeek" /> for this stream is <see langword="false" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-782">ファイルが閉じられているなど、I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-782">An I/O error, such as the file being closed, occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public virtual void Lock (long position, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lock(int64 position, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Lock(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lock (position As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lock(long position, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="9f985-783">ロックする範囲の先頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-783">The beginning of the range to lock.</span>
          </span>
          <span data-ttu-id="9f985-784">このパラメーターの値は、0 (ゼロ) 以上にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-784">The value of this parameter must be equal to or greater than zero (0).</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9f985-785">ロックする範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-785">The range to be locked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-786">
            <see cref="T:System.IO.FileStream" /> に対する他のプロセスからの読み取りまたは書き込みを禁止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-786">Prevents other processes from reading from or writing to the <see cref="T:System.IO.FileStream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-787">ファイル ストリームの範囲をロックすると、ファイル ストリームの範囲にロックのプロセスの排他アクセスのスレッドが与えられます。</span><span class="sxs-lookup"><span data-stu-id="9f985-787">Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.</span></span>  
  
 <span data-ttu-id="9f985-788">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-788">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-789">次のコード例では、別のプロセスは、ファイルに読み取り/書き込みアクセス権を持つ場合でも、ファイルの部分にアクセスできないように、ファイルの一部をロックする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-789">The following code example demonstrates how to lock part of a file so another process cannot access that part of the file even though it has read/write access to the file.</span></span> <span data-ttu-id="9f985-790">別のコマンド ウィンドウで、プログラムを同時に実行し、さまざまなコンソールの入力オプションを使用してを調査します。</span><span class="sxs-lookup"><span data-stu-id="9f985-790">Run the program simultaneously in different command windows and investigate using the different console input options.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#1)]
 [!code-csharp[System.IO.FileStream3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#1)]
 [!code-vb[System.IO.FileStream3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-791">
            <paramref name="position" /> または <paramref name="length" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-791">
              <paramref name="position" /> or <paramref name="length" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-792">ファイルは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-792">The file is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-793">別のプロセスがファイルの一部をロックしているため、プロセスはこのファイルにアクセスできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-793">The process cannot access the file because another process has locked a portion of the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-794">コンストラクターに渡された <see langword="FileStream" /> の名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-794">Gets the name of the <see langword="FileStream" /> that was passed to the constructor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-795">
            <see langword="FileStream" /> の名前を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-795">A string that is the name of the <see langword="FileStream" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-796">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-796">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-797">このコード例に示されている例の一部である、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="9f985-797">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#4)]
 [!code-csharp[System.IO.FileStream2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#4)]
 [!code-vb[System.IO.FileStream2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9f985-798">パスにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-798">for access to the path.</span>
          </span>
          <span data-ttu-id="9f985-799">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-799">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-800">ストリームの現在位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-800">Gets or sets the current position of this stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-801">ストリームの現在位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-801">The current position of this stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-802">ストリームの長さを超えた位置へのシークはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="9f985-802">Seeking to any location beyond the length of the stream is supported.</span></span>  <span data-ttu-id="9f985-803">シークすると、ファイルの長さを超えて、ファイルのサイズが大きくなります。</span><span class="sxs-lookup"><span data-stu-id="9f985-803">When you seek beyond the length of the file, the file size grows.</span></span>  <span data-ttu-id="9f985-804">Microsoft Windows NT 以降では、ファイルの末尾に追加されたデータすべてが 0 に設定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-804">In Microsoft Windows NT and newer, any data added to the end of the file is set to zero.</span></span>  <span data-ttu-id="9f985-805">Microsoft Windows 98 またはそれ以前は、ファイルの末尾に追加されたデータすべてがデータは既に削除は 0 に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="9f985-805">In Microsoft Windows 98 or earlier, any data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</span></span> <span data-ttu-id="9f985-806">Windows 98 またはそれ以前のストリームの末尾を越える大きな値に、ストリームの位置を設定すると、例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f985-806">Setting the position of the stream to a large value beyond the end of the stream in Windows 98 or earlier may result in an exception being raised.</span></span>  
  
 <span data-ttu-id="9f985-807">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-807">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-808">次の例では、`Length`と`Position`プロパティ ファイルの終端の条件を確認します。</span><span class="sxs-lookup"><span data-stu-id="9f985-808">The following example uses the `Length` and `Position` properties to check for an end-of-file condition.</span></span>  
  
 [!code-cpp[Classic FileStream.Length Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.Length Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.Length Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.Length Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.Length Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.Length Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-809">このストリームはシークをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-809">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-810">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-810">An I/O error occurred.</span>
          </span>
          <span data-ttu-id="9f985-811">または、位置が、Windows 98 以前のストリームの末尾を越える非常に大きな値に設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-811">\- or -  The position was set to a very large value beyond the end of the stream in Windows 98 or earlier.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-812">位置を負の値に設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-812">Attempted to set the position to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="9f985-813">サポートされていない、ストリームの末尾を越えるシークをしようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-813">Attempted seeking past the end of a stream that does not support this.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (array As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9f985-814">このメソッドが返されるときに、現在のソースから読み取られるバイトにより置き換えられた、<c>offset</c> と (<c>offset</c> + <c>count</c> - 1<c>)</c> の間の値を持つ指定されたバイト配列を含みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-814">When this method returns, contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1<c>)</c> replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="9f985-815">読み取られるバイトが配置される<c>配列</c>内のバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-815">The byte offset in <c>array</c> at which the read bytes will be placed.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9f985-816">読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-816">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-817">ストリームからバイトのブロックを読み取り、そのデータを特定のバッファーに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-817">Reads a block of bytes from the stream and writes the data in a given buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-818">バッファーに読み取られた合計バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-818">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="9f985-819">要求しただけのバイト数を読み取れなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-819">This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-820">このメソッドは、<xref:System.IO.Stream.Read%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-820">This method overrides <xref:System.IO.Stream.Read%2A>.</span></span>  
  
 <span data-ttu-id="9f985-821">`offset`パラメーターはバイトのオフセット`array`(バッファーのインデックス) 読み取りを開始する位置を示す、`count`パラメーターは、このストリームから読み取られるバイトの最大数を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-821">The `offset` parameter gives the offset of the byte in `array` (the buffer index) at which to begin reading, and the `count` parameter gives the maximum number of bytes to be read from this stream.</span></span> <span data-ttu-id="9f985-822">ストリームの末尾に達した場合は、実際の数バイトを読み取り、または 0 を返されるです。</span><span class="sxs-lookup"><span data-stu-id="9f985-822">The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</span></span> <span data-ttu-id="9f985-823">読み取り操作が成功した場合、ストリームの現在の位置は読み取られたバイト数で進められます。</span><span class="sxs-lookup"><span data-stu-id="9f985-823">If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</span></span> <span data-ttu-id="9f985-824">例外が発生する場合は、ストリームの現在の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="9f985-824">If an exception occurs, the current position of the stream is unchanged.</span></span>  
  
 <span data-ttu-id="9f985-825"><xref:System.IO.FileStream.Read%2A>メソッドには、ストリームの末尾に到達した場合にのみゼロが返されます。</span><span class="sxs-lookup"><span data-stu-id="9f985-825">The <xref:System.IO.FileStream.Read%2A> method returns zero only after reaching the end of the stream.</span></span> <span data-ttu-id="9f985-826">それ以外の場合、<xref:System.IO.FileStream.Read%2A>常に返す前に、ストリームから、少なくとも 1 バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="9f985-826">Otherwise, <xref:System.IO.FileStream.Read%2A> always reads at least one byte from the stream before returning.</span></span> <span data-ttu-id="9f985-827">データがないかどうかを呼び出すとストリームから<xref:System.IO.FileStream.Read%2A>、少なくとも 1 バイトのデータを返すことができるまで、メソッドはブロックされます。</span><span class="sxs-lookup"><span data-stu-id="9f985-827">If no data is available from the stream upon a call to <xref:System.IO.FileStream.Read%2A>, the method will block until at least one byte of data can be returned.</span></span> <span data-ttu-id="9f985-828">実装は、ストリームの末尾に達していない場合でも、要求されたより少ないバイト数を返すことです。</span><span class="sxs-lookup"><span data-stu-id="9f985-828">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="9f985-829">使用して<xref:System.IO.BinaryReader>プリミティブ データ型を読み取るためです。</span><span class="sxs-lookup"><span data-stu-id="9f985-829">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
 <span data-ttu-id="9f985-830">読み取り操作を実行するスレッドを中断しません。</span><span class="sxs-lookup"><span data-stu-id="9f985-830">Do not interrupt a thread that is performing a read operation.</span></span> <span data-ttu-id="9f985-831">アプリケーションは正常に実行するスレッドはブロック解除後に見えますが、中断は、アプリケーションのパフォーマンスと信頼性を減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="9f985-831">Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</span></span>  
  
 <span data-ttu-id="9f985-832">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-832">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-833">次の例から内容の読み取り、<xref:System.IO.FileStream>別に書き込みます<xref:System.IO.FileStream>です。</span><span class="sxs-lookup"><span data-stu-id="9f985-833">The following example reads the contents from a <xref:System.IO.FileStream> and writes it into another <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[FSRead#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSRead/CS/fsread.cs#1)]
 [!code-vb[FSRead#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSRead/VB/fsread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-834">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-834">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-835">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-835">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-836">ストリームは読み取りをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-836">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-837">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-837">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-838">
            <paramref name="offset" /> と <paramref name="count" /> が <paramref name="array" /> の無効な範囲を示しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-838">
              <paramref name="offset" /> and <paramref name="count" /> describe an invalid range in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-839">ストリームが閉じた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-839">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9f985-840">データを書き込むバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-840">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="9f985-841">ストリームからのデータの書き込み開始位置を示す <c>buffer</c> 内のバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-841">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9f985-842">読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-842">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="9f985-843">キャンセル要求を監視するためのトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-843">The token to monitor for cancellation requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-844">現在のストリームからバイト シーケンスを非同期に読み取り、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-844">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-845">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-845">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="9f985-846">
            <paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-846">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="9f985-847">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-847">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-848"><xref:System.IO.FileStream.ReadAsync%2A>メソッドでは、メイン スレッドをブロックすることがなくリソースを消費するファイルの操作を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="9f985-848">The <xref:System.IO.FileStream.ReadAsync%2A> method enables you to perform resource-intensive file operations without blocking the main thread.</span></span> <span data-ttu-id="9f985-849">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="9f985-849">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="9f985-850">非同期メソッドと組み合わせてで使用される、`async`と`await`Visual Basic および c# のキーワードです。</span><span class="sxs-lookup"><span data-stu-id="9f985-850">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="9f985-851">使用して、<xref:System.IO.FileStream.CanRead%2A>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="9f985-851">Use the <xref:System.IO.FileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="9f985-852">返されるタスクに含まれる完了前に、操作が取り消された場合、<xref:System.Threading.Tasks.TaskStatus.Canceled>値を<xref:System.Threading.Tasks.Task.Status%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-852">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span> <span data-ttu-id="9f985-853">返されるタスクに含まれるファイルへのハンドルが破棄されている場合、<xref:System.ObjectDisposedException>での例外、<xref:System.Threading.Tasks.Task.Exception%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-853">If the handle to the file is disposed, the returned task contains the <xref:System.ObjectDisposedException> exception in the <xref:System.Threading.Tasks.Task.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-854">次の例では、非同期的に、ファイルを読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-854">The following example shows how to read from a file asynchronously.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
 [!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-855">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-855">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-856">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-856">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-857">
            <paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-857">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-858">ストリームは読み取りをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-858">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-859">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-859">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9f985-860">ストリームは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-860">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f985-861">ファイルからバイトを読み取り、読み取り位置を 1 バイト進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-861">Reads a byte from the file and advances the read position one byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-862">
            <see cref="T:System.Int32" /> にキャストしたバイト。ストリームの末尾に達した場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-862">The byte, cast to an <see cref="T:System.Int32" />, or -1 if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-863">このメソッドは、<xref:System.IO.Stream.ReadByte%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-863">This method overrides <xref:System.IO.Stream.ReadByte%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-864">使用して、<xref:System.IO.FileStream.CanRead%2A>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="9f985-864">Use the <xref:System.IO.FileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="9f985-865">詳細については、「<xref:System.IO.Stream.CanRead%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-865">For additional information, see <xref:System.IO.Stream.CanRead%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-866">次のコード例では、データをバイト単位で、ファイルに書き込むし、データが正常に書き込まれたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-866">The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.FileStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream1/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream1/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-867">現在のストリームは読み取りをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-867">The current stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-868">現在のストリームが閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-868">The current stream is closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9f985-869">
            <para>既定の実装<see langword="Stream" />新しいシングル バイト配列を作成し、呼び出して<see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />です。これは、正しい正式には、効率的なことはできません。内部バッファーと共にストリームは、このメソッドをオーバーライドし、読み取りバッファーを直接呼び出しごとに余分な配列の割り当てを回避するバージョンをはるかに効率的に提供する必要があります。一般的なファイルとディレクトリの操作の一覧は、[一般的な I/O Tasks](~/docs/standard/io/common-i-o-tasks.md) を参照してください。。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-869">
              <para>The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />. While this is formally correct, it is inefficient. Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.  For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SafeFileHandle">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.SafeFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SafeFileHandle As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Win32::SafeHandles::SafeFileHandle ^ SafeFileHandle { Microsoft::Win32::SafeHandles::SafeFileHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f985-870">現在の <see cref="T:System.IO.FileStream" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを表す <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-870">Gets a <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> object that represents the operating system file handle for the file that the current <see cref="T:System.IO.FileStream" /> object encapsulates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f985-871">現在の <see cref="T:System.IO.FileStream" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-871">An object that represents the operating system file handle for the file that the current <see cref="T:System.IO.FileStream" /> object encapsulates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-872"><xref:System.IO.FileStream.SafeFileHandle%2A>プロパティは自動的にストリームをフラッシュし、現在のストリームの位置を 0 に設定します。</span><span class="sxs-lookup"><span data-stu-id="9f985-872">The <xref:System.IO.FileStream.SafeFileHandle%2A> property automatically flushes the stream and sets the current stream position to 0.</span></span>  <span data-ttu-id="9f985-873">これにより、移動するファイルまたは別のストリームを使用してリセットするストリームの位置、<xref:System.IO.FileStream.SafeFileHandle%2A>このプロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="9f985-873">This allows the file to be moved or the stream position to be reset by another stream using the <xref:System.IO.FileStream.SafeFileHandle%2A> returned by this property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f985-874">アンマネージ コードを呼び出すアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-874">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="9f985-875">セキュリティ アクション: 列挙型のリンク要求に関連付けられています。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-875">Security action: Link Demand  Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9f985-876">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-876">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9f985-877">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-877">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="9f985-878">シークの開始位置を示す、<c>origin</c> に対する相対ポイント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-878">The point relative to <c>origin</c> from which to begin seeking.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="9f985-879">
            <see cref="T:System.IO.SeekOrigin" /> 型の値を使用して、<c>offset</c> の参照ポイントとして先頭、末尾、または現在位置を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-879">Specifies the beginning, the end, or the current position as a reference point for <c>offset</c>, using a value of type <see cref="T:System.IO.SeekOrigin" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-880">このストリームの現在位置を特定の値に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-880">Sets the current position of this stream to the given value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-881">ストリームの新しい位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-881">The new position in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-882">このメソッドは、<xref:System.IO.Stream.Seek%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-882">This method overrides <xref:System.IO.Stream.Seek%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-883">使用して、<xref:System.IO.FileStream.CanSeek%2A?displayProperty=nameWithType>プロパティを現在のインスタンスがシークをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="9f985-883">Use the <xref:System.IO.FileStream.CanSeek%2A?displayProperty=nameWithType> property to determine whether the current instance supports seeking.</span></span> <span data-ttu-id="9f985-884">詳細については、「<xref:System.IO.Stream.CanSeek%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-884">For additional information, see <xref:System.IO.Stream.CanSeek%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f985-885">ストリームの長さを超えた位置をシークできます。</span><span class="sxs-lookup"><span data-stu-id="9f985-885">You can seek to any location beyond the length of the stream.</span></span> <span data-ttu-id="9f985-886">シークすると、ファイルの長さを超えて、ファイルのサイズが大きくなります。</span><span class="sxs-lookup"><span data-stu-id="9f985-886">When you seek beyond the length of the file, the file size grows.</span></span> <span data-ttu-id="9f985-887">Windows NT とそれ以降のバージョンでは、ファイルの末尾に追加されたデータは、0 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="9f985-887">In Windows NT and later versions, data added to the end of the file is set to zero.</span></span> <span data-ttu-id="9f985-888">Windows 98 またはそれ以前のバージョンでは、ファイルの末尾に追加されたデータが設定されていないデータは既に削除は 0 にします。</span><span class="sxs-lookup"><span data-stu-id="9f985-888">In Windows 98 or earlier versions, data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</span></span>  
  
 <span data-ttu-id="9f985-889">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-889">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-890">次の例では、データをバイト単位で、ファイルに書き込むし、データが正常に書き込まれたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-890">The following example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.FileStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream1/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream1/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream1/VB/source.vb#1)]  
  
 <span data-ttu-id="9f985-891">次の例は、さまざまなを使用して、ファイルの先頭にファイルの末尾から、反対方向のテキストを読み取ります<xref:System.IO.SeekOrigin>の値を使った、<xref:System.IO.FileStream.Seek%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-891">The following example reads text in the reverse direction, from the end of file to the beginning of the file, by using the various <xref:System.IO.SeekOrigin> values with the <xref:System.IO.FileStream.Seek%2A> method.</span></span>  
  
 [!code-csharp[System.IO.FileStream.Seek#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.filestream.seek/cs/source.cs#1)]
 [!code-vb[System.IO.FileStream.Seek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.filestream.seek/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-892">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-892">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-893">ストリームがシークをサポートしていません。たとえば、<see langword="FileStream" /> がパイプまたはコンソール出力から構築されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-893">The stream does not support seeking, such as if the <see langword="FileStream" /> is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-894">シークがストリームの開始前に試行されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-894">Seeking is attempted before the beginning of the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-895">ストリームが閉じた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-895">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="fileSecurity">
          <span data-ttu-id="9f985-896">現在のファイルに適用する ACL エントリを示すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-896">An object that describes an ACL entry to apply to the current file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-897">
            <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の <see cref="T:System.IO.FileStream" /> オブジェクトが示すファイルに適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-897">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.FileSecurity" /> object to the file described by the current <see cref="T:System.IO.FileStream" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-898">中に、<xref:System.IO.FileStream>クラスと<xref:System.IO.FileStream.SetAccessControl%2A>既存のファイルで使用できる、使用を検討して、<xref:System.IO.File.SetAccessControl%2A?displayProperty=nameWithType>メソッドが簡単に使用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-898">While the <xref:System.IO.FileStream> class and <xref:System.IO.FileStream.SetAccessControl%2A> can be used on an existing file, consider using the <xref:System.IO.File.SetAccessControl%2A?displayProperty=nameWithType> method as it is easier to use.</span></span>  
  
 <span data-ttu-id="9f985-899"><xref:System.IO.FileStream.SetAccessControl%2A>メソッドが継承されない ACL リストを表すファイルへのアクセス制御リスト (ACL) エントリを適用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-899">The <xref:System.IO.FileStream.SetAccessControl%2A> method applies access control list (ACL) entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f985-900">ACL に指定された、`fileSecurity`パラメーターは、ファイルの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="9f985-900">The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file.</span></span> <span data-ttu-id="9f985-901">新しいユーザーのアクセス許可を追加する、<xref:System.IO.FileStream.GetAccessControl%2A>メソッドを既存の ACL を取得して、変更し、<xref:System.IO.FileStream.SetAccessControl%2A>をファイルに再度適用します。</span><span class="sxs-lookup"><span data-stu-id="9f985-901">To add permissions for a new user, use the <xref:System.IO.FileStream.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileStream.SetAccessControl%2A> to apply it back to the file.</span></span>  
  
 <span data-ttu-id="9f985-902">ACL には、個人、グループ、または権限がない、指定されたファイルの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="9f985-902">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="9f985-903">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-903">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-904">ファイルは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-904">The file is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-905">
            <paramref name="fileSecurity" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-905">The <paramref name="fileSecurity" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="9f985-906">ファイルを検出または変更できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-906">The file could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9f985-907">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-907">The current process does not have access to open the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9f985-908">ストリームの新しい長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-908">The new length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-909">ストリーム長を特定の値に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-909">Sets the length of this stream to the given value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-910">このメソッドは、<xref:System.IO.Stream.SetLength%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-910">This method overrides <xref:System.IO.Stream.SetLength%2A>.</span></span>  
  
 <span data-ttu-id="9f985-911">指定した値が、ストリームの現在の長さより小さい場合は、ストリームは切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="9f985-911">If the given value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="9f985-912">このシナリオでは、現在の位置が、新しい長さより大きい場合、現在の位置がストリームの最後のバイトまで移動します。</span><span class="sxs-lookup"><span data-stu-id="9f985-912">In this scenario, if the current position is greater than the new length, the current position is moved to the last byte of the stream.</span></span> <span data-ttu-id="9f985-913">指定した値が、ストリームの現在の長さより大きい場合は、ストリームが展開され、現在の位置は変わりません。</span><span class="sxs-lookup"><span data-stu-id="9f985-913">If the given value is larger than the current length of the stream, the stream is expanded, and the current position remains the same.</span></span> <span data-ttu-id="9f985-914">ストリームが展開されている場合、古いクライアント シークレットと新しい長さの間のストリームの内容は未定義です。</span><span class="sxs-lookup"><span data-stu-id="9f985-914">If the stream is expanded, the contents of the stream between the old and the new length are undefined.</span></span>  
  
 <span data-ttu-id="9f985-915">ストリームは書き込みとシークの両方をサポートする必要があります`SetLength`動作をします。</span><span class="sxs-lookup"><span data-stu-id="9f985-915">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-916">使用して、 <xref:System.IO.FileStream.CanWrite%2A> 、現在のインスタンスがドキュメントの作成をサポートしているかどうかを決定するプロパティと<xref:System.IO.FileStream.CanSeek%2A>シークがサポートされているかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-916">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.FileStream.CanSeek%2A> property to determine whether seeking is supported.</span></span> <span data-ttu-id="9f985-917">追加情報については、<xref:System.IO.Stream.CanWrite%2A>、および <xref:System.IO.Stream.CanSeek%2A> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-917">For additional information, see <xref:System.IO.Stream.CanWrite%2A> and <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="9f985-918">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-918">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-919">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-919">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-920">ストリームでは、書き込みとシークの両方は使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-920">The stream does not support both writing and seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-921">
            <paramref name="value" /> パラメーターを 0 未満の値に設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-921">Attempted to set the <paramref name="value" /> parameter to less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public virtual void Unlock (long position, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlock(int64 position, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unlock (position As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unlock(long position, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="9f985-922">ロックを解除する範囲の先頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-922">The beginning of the range to unlock.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9f985-923">ロックを解除する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-923">The range to be unlocked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-924">他のプロセスにより以前にロックされたファイルの全部または一部へのアクセスを許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-924">Allows access by other processes to all or part of a file that was previously locked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-925">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-925">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-926">次のコード例では、別のプロセスは、ファイルを読み取り/書き込みアクセス権を持つ場合でも、ファイルの部分にアクセスできず、ファイルの指定された部分のロックを解除し、ファイルの一部をロックする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-926">The following code example demonstrates how to lock part of a file so another process cannot access that part of the file even though it has read/write access to the file, and then unlock the specified part of the file .</span></span> <span data-ttu-id="9f985-927">別のコマンド ウィンドウで、プログラムを同時に実行し、さまざまなコンソールの入力オプションを使用してを調査します。</span><span class="sxs-lookup"><span data-stu-id="9f985-927">Run the program simultaneously in different command windows and investigate using the different console input options.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#1)]
 [!code-csharp[System.IO.FileStream3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#1)]
 [!code-vb[System.IO.FileStream3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-928">
            <paramref name="position" /> または <paramref name="length" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-928">
              <paramref name="position" /> or <paramref name="length" /> is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (array As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9f985-929">ストリームに書き込むデータを格納しているバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-929">The buffer containing data to write to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="9f985-930">ストリームへのバイトのコピーを開始する位置を示す <c>array</c> 内のバイト オフセット。インデックス番号は 0 から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-930">The zero-based byte offset in <c>array</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9f985-931">書き込む最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-931">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-932">ファイル ストリームにバイトのブロックを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-932">Writes a block of bytes to the file stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-933">このメソッドは、<xref:System.IO.Stream.Write%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-933">This method overrides <xref:System.IO.Stream.Write%2A>.</span></span>  
  
 <span data-ttu-id="9f985-934">`offset`パラメーターはバイトのオフセット`array`(バッファーのインデックス) コピーを開始する位置を示す、`count`パラメーターは、ストリームに書き込まれるバイト数。</span><span class="sxs-lookup"><span data-stu-id="9f985-934">The `offset` parameter gives the offset of the byte in `array` (the buffer index) at which to begin copying, and the `count` parameter gives the number of bytes that will be written to the stream.</span></span> <span data-ttu-id="9f985-935">書き込み操作が成功した場合、ストリームの現在の位置は書き込まれたバイト数で進められます。</span><span class="sxs-lookup"><span data-stu-id="9f985-935">If the write operation is successful, the current position of the stream is advanced by the number of bytes written.</span></span> <span data-ttu-id="9f985-936">例外が発生する場合は、ストリームの現在の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="9f985-936">If an exception occurs, the current position of the stream is unchanged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-937">使用して、<xref:System.IO.FileStream.CanWrite%2A>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="9f985-937">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="9f985-938">詳細については、「<xref:System.IO.Stream.CanWrite%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-938">For additional information, see <xref:System.IO.Stream.CanWrite%2A>.</span></span>  
  
 <span data-ttu-id="9f985-939">書き込み操作を実行するスレッドを中断しません。</span><span class="sxs-lookup"><span data-stu-id="9f985-939">Do not interrupt a thread that is performing a write operation.</span></span> <span data-ttu-id="9f985-940">アプリケーションは正常に実行するスレッドはブロック解除後に見えますが、中断は、アプリケーションのパフォーマンスと信頼性を減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="9f985-940">Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</span></span>  
  
 <span data-ttu-id="9f985-941">一般的なファイルとディレクトリの操作の一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="9f985-941">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-942">このコード例に示されている例の一部である、<xref:System.IO.FileStream.Lock%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9f985-942">This code example is part of a larger example provided for the <xref:System.IO.FileStream.Lock%2A> method.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#3)]
 [!code-csharp[System.IO.FileStream3#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#3)]
 [!code-vb[System.IO.FileStream3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-943">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-943">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-944">
            <paramref name="offset" /> と <paramref name="count" /> が <paramref name="array" /> の無効な範囲を示しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-944">
              <paramref name="offset" /> and <paramref name="count" /> describe an invalid range in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-945">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-945">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9f985-946">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-946">An I/O error occurred.</span>
          </span>
          <span data-ttu-id="9f985-947">または、別のスレッドが原因で、オペレーティング システムのファイル ハンドルの位置で予期しない変更が発生した可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-947">\- or -  Another thread may have caused an unexpected change in the position of the operating system's file handle.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-948">ストリームは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-948">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-949">現在のストリームのインスタンスでは、書き込みをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-949">The current stream instance does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9f985-950">データの書き込み元となるバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-950">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="9f985-951">ストリームへのバイトのコピーを開始する位置を示す <c>buffer</c> 内のバイト オフセット。インデックス番号は 0 から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-951">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9f985-952">書き込む最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-952">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="9f985-953">キャンセル要求を監視するためのトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-953">The token to monitor for cancellation requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-954">現在のストリームにバイト シーケンスを非同期に書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-954">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f985-955">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-955">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-956"><xref:System.IO.FileStream.WriteAsync%2A>メソッドでは、メイン スレッドをブロックすることがなくリソースを消費するファイルの操作を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="9f985-956">The <xref:System.IO.FileStream.WriteAsync%2A> method enables you to perform resource-intensive file operations without blocking the main thread.</span></span> <span data-ttu-id="9f985-957">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="9f985-957">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="9f985-958">非同期メソッドと組み合わせてで使用される、`async`と`await`Visual Basic および c# のキーワードです。</span><span class="sxs-lookup"><span data-stu-id="9f985-958">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="9f985-959">使用して、<xref:System.IO.FileStream.CanWrite%2A>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="9f985-959">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="9f985-960">返されるタスクに含まれる完了前に、操作が取り消された場合、<xref:System.Threading.Tasks.TaskStatus.Canceled>値を<xref:System.Threading.Tasks.Task.Status%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-960">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span> <span data-ttu-id="9f985-961">返されるタスクに含まれるファイルへのハンドルが破棄されている場合、<xref:System.ObjectDisposedException>での例外、<xref:System.Threading.Tasks.Task.Exception%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9f985-961">If the handle to the file is disposed, the returned task contains the <xref:System.ObjectDisposedException> exception in the <xref:System.Threading.Tasks.Task.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-962">次の例では、ファイルを非同期的に書き込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-962">The following example shows how to write asynchronously to a file.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f985-963">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-963">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9f985-964">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-964">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f985-965">
            <paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-965">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-966">ストリームは書き込みをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-966">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-967">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-967">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9f985-968">ストリームは、前の書き込み操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-968">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9f985-969">ストリームに書き込むバイト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-969">A byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f985-970">ファイル ストリームの現在位置にバイトを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-970">Writes a byte to the current position in the file stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f985-971">このメソッドは、<xref:System.IO.Stream.WriteByte%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f985-971">This method overrides <xref:System.IO.Stream.WriteByte%2A>.</span></span>  
  
 <span data-ttu-id="9f985-972">使用して`WriteByte`にバイトを書き込む、`FileStream`効率的にします。</span><span class="sxs-lookup"><span data-stu-id="9f985-972">Use `WriteByte` to write a byte to a `FileStream` efficiently.</span></span> <span data-ttu-id="9f985-973">ストリームが閉じられているか書き込み禁止になっての場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="9f985-973">If the stream is closed or not writable, an exception will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f985-974">使用して、<xref:System.IO.FileStream.CanWrite%2A>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="9f985-974">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="9f985-975">詳細については、「<xref:System.IO.Stream.CanWrite%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f985-975">For additional information, see <xref:System.IO.Stream.CanWrite%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f985-976">次のコード例では、データをバイト単位で、ファイルに書き込むし、データが正常に書き込まれたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9f985-976">The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.FileStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream1/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream1/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9f985-977">ストリームは閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-977">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9f985-978">ストリームは書き込みをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-978">The stream does not support writing.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9f985-979">
            <para>既定の実装<see langword="Stream" />新しいシングル バイト配列を作成し、呼び出して<see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />です。これは、正しい正式には、効率的なことはできません。内部バッファーと共にストリームは、このメソッドをオーバーライドし、読み取りバッファーを直接呼び出しごとに余分な配列の割り当てを回避するバージョンをはるかに効率的に提供する必要があります。一般的なファイルとディレクトリの操作の一覧は、[一般的な I/O Tasks](~/docs/standard/io/common-i-o-tasks.md) を参照してください。。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9f985-979">
              <para>The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />. While this is formally correct, it is inefficient. Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.  For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>