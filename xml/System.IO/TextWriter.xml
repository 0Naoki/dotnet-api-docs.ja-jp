<Type Name="TextWriter" FullName="System.IO.TextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4275d06aa49d7dfc32f6067f773ab411f2194f2" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52609771" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextWriter : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextWriter extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextWriter&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriter abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextWriter = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="00988-101">一連の文字を書き込むことができるライターを表します。</span><span class="sxs-lookup"><span data-stu-id="00988-101">Represents a writer that can write a sequential series of characters.</span></span> <span data-ttu-id="00988-102">このクラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="00988-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-103"><xref:System.IO.TextWriter> 抽象基本クラスは、<xref:System.IO.StreamWriter>と<xref:System.IO.StringWriter>、それぞれストリームと、文字列に文字を書き込むします。</span><span class="sxs-lookup"><span data-stu-id="00988-103"><xref:System.IO.TextWriter> is the abstract base class of <xref:System.IO.StreamWriter> and <xref:System.IO.StringWriter>, which write characters to streams and strings, respectively.</span></span> <span data-ttu-id="00988-104">インスタンスを作成<xref:System.IO.TextWriter>オブジェクトを文字列に書き込み、ファイルに文字列を書き込み、または XML をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="00988-104">Create an instance of <xref:System.IO.TextWriter> to write an object to a string, write strings to a file, or to serialize XML.</span></span> <span data-ttu-id="00988-105">インスタンスを使用することもできます。<xref:System.IO.TextWriter>テキスト文字列またはストリームに使用する同じ Api を使用するカスタム バッキング ストアを書き込む、またはテキストの書式設定のサポートを追加します。</span><span class="sxs-lookup"><span data-stu-id="00988-105">You can also use an instance of <xref:System.IO.TextWriter> to write text to a custom backing store using the same APIs you would use for a string or a stream, or to add support for text formatting.</span></span>  
  
 <span data-ttu-id="00988-106">すべての`Write`メソッドの<xref:System.IO.TextWriter>プリミティブ データ型を持つパラメーターが文字列として値を記述します。</span><span class="sxs-lookup"><span data-stu-id="00988-106">All the `Write` methods of <xref:System.IO.TextWriter> having primitive data types as parameters write out the values as strings.</span></span>  
  
 <span data-ttu-id="00988-107">既定で、<xref:System.IO.TextWriter>安全なスレッドはありません。</span><span class="sxs-lookup"><span data-stu-id="00988-107">By default, a <xref:System.IO.TextWriter> is not thread safe.</span></span> <span data-ttu-id="00988-108">参照してください<xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType>のスレッド セーフ ラッパー。</span><span class="sxs-lookup"><span data-stu-id="00988-108">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="00988-109">この型は、<xref:System.IDisposable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="00988-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="00988-110">この型から派生した任意の型を使用してが完了したらを直接または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00988-110">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="00988-111">型の直接 dispose を呼び出してその<xref:System.IO.TextWriter.Dispose%2A>メソッド、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="00988-111">To dispose of the type directly, call its <xref:System.IO.TextWriter.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="00988-112">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(で C# の場合) または`Using`(Visual Basic) でします。</span><span class="sxs-lookup"><span data-stu-id="00988-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="00988-113">詳細については、Dispose と"を使用して、オブジェクトを実装する IDisposable"」セクションを参照してください、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="00988-113">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="00988-114">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-114">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00988-115"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="00988-115">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="00988-116">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="00988-116">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="00988-117"><xref:System.IO.StreamWriter>クラスから派生<xref:System.IO.TextWriter>し、ストリームに書き込むため、メンバーの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="00988-117">The <xref:System.IO.StreamWriter> class derives from <xref:System.IO.TextWriter> and provides implementations of the members for writing to a stream.</span></span> <span data-ttu-id="00988-118">次の例を使用してテキスト ファイルに文字列値で構成される 2 つの行を記述する方法を示しています、<xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-118">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="00988-119">提供する派生クラスで Dispose をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="00988-119">Override Dispose in a derived class to provide</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="00988-120">派生クラスで実装する必要があります最小、<see cref="M:System.IO.TextWriter.Write(System.Char)" />メソッドの便利なインスタンスを<see cref="T:System.IO.TextWriter" />します。</span><span class="sxs-lookup"><span data-stu-id="00988-120">A derived class must minimally implement the <see cref="M:System.IO.TextWriter.Write(System.Char)" /> method to make a useful instance of <see cref="T:System.IO.TextWriter" />.</span></span></para></block>
    <altmember cref="T:System.IO.StreamWriter" />
    <altmember cref="T:System.IO.StringWriter" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-121">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-121">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-122">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-122">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-123">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-123">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="00988-124">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="00988-124">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00988-125"><see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="00988-125">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00988-126"><see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="00988-126">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-127">値を指定しない場合は、このコンス トラクター オーバー ロードを使用して、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00988-127">Use this constructor overload when you do not want to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property.</span></span> <span data-ttu-id="00988-128">ときに、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティは`null`、書式設定は、現在のスレッドのカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="00988-128">When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="00988-129">派生クラスのこのコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-129">Use this constructor for derived classes.</span></span>  
  
 <span data-ttu-id="00988-130">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-130">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="00988-131">複合書式指定</span><span class="sxs-lookup"><span data-stu-id="00988-131">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-132">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-132">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-133">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-133">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-134">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-134">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.TextWriter : IFormatProvider -&gt; System.IO.TextWriter" Usage="new System.IO.TextWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><span data-ttu-id="00988-135">書式を制御する <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-135">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="00988-136">指定した書式プロバイダーで <see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="00988-136">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class with the specified format provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-137">このコンス トラクター オーバー ロードを使用して、値を提供する、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00988-137">Use this constructor overload to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property.</span></span> <span data-ttu-id="00988-138">値、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティを呼び出すときに使用されるカルチャ固有の書式設定を指定します、<xref:System.IO.TextWriter.Write%2A>と<xref:System.IO.TextWriter.WriteLine%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-138">The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods.</span></span> <span data-ttu-id="00988-139">使用してインスタンスを作成する書式プロバイダーを指定しない場合、<xref:System.IO.TextWriter.%23ctor>コンス トラクターは、設定、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティを`null`します。</span><span class="sxs-lookup"><span data-stu-id="00988-139">If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`.</span></span> <span data-ttu-id="00988-140">ときに、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティは`null`、書式設定は、現在のスレッドのカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="00988-140">When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="00988-141">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-141">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="00988-142">複合書式指定</span><span class="sxs-lookup"><span data-stu-id="00988-142">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-143">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-143">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-144">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-144">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-145">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-145">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00988-146">現在のライターを終了し、ライターに関連付けられたすべてのシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="00988-146">Closes the current writer and releases any system resources associated with the writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-147">この実装の`Close`呼び出し、<xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType>メソッドを渡します、`true`値。</span><span class="sxs-lookup"><span data-stu-id="00988-147">This implementation of `Close` calls the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="00988-148">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない<xref:System.IO.TextWriter.Flush%2A>または`Close`します。</span><span class="sxs-lookup"><span data-stu-id="00988-148">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.TextWriter.Flush%2A> or `Close`.</span></span> <span data-ttu-id="00988-149">設定、<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>プロパティを`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="00988-149">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="00988-150">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="00988-150">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="00988-151">このシナリオでは、UTF8、UTF7、エンコーダーは、隣接する文字または文字列を受信した後にのみ特定の文字をエンコードすることができますに影響します。</span><span class="sxs-lookup"><span data-stu-id="00988-151">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00988-152">派生クラスでオーバーライドしないでください、<xref:System.IO.TextWriter.Close%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-152">In derived classes, do not override the <xref:System.IO.TextWriter.Close%2A> method.</span></span> <span data-ttu-id="00988-153">代わりに、オーバーライド、<xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType>リソースを解放するためのコードを追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-153">Instead, override the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-154">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-154">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-155">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-155">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-156">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-156">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CoreNewLine">
      <MemberSignature Language="C#" Value="protected char[] CoreNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field family char[] CoreNewLine" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextWriter.CoreNewLine" />
      <MemberSignature Language="VB.NET" Value="Protected CoreNewLine As Char() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;char&gt; ^ CoreNewLine;" />
      <MemberSignature Language="F#" Value="val mutable CoreNewLine : char[]" Usage="System.IO.TextWriter.CoreNewLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00988-157">この <see langword="TextWriter" /> で使用する改行文字を格納します。</span><span class="sxs-lookup"><span data-stu-id="00988-157">Stores the newline characters used for this <see langword="TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-158">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-159">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-159">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-160">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-160">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-161">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-161">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00988-162">この <see cref="T:System.IO.TextWriter" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="00988-162">Releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00988-163">この <see cref="T:System.IO.TextWriter" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="00988-163">Releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-164"><xref:System.IO.TextWriter> を使い終わったら、<xref:System.IO.TextWriter.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="00988-164">Call <xref:System.IO.TextWriter.Dispose%2A> when you are finished using the <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="00988-165"><xref:System.IO.TextWriter.Dispose%2A>メソッドによって、<xref:System.IO.TextWriter> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="00988-165">The <xref:System.IO.TextWriter.Dispose%2A> method leaves the <xref:System.IO.TextWriter> in an unusable state.</span></span> <span data-ttu-id="00988-166"><xref:System.IO.TextWriter.Dispose%2A>呼び出し後は、<xref:System.IO.TextWriter>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.IO.TextWriter> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00988-166">After calling <xref:System.IO.TextWriter.Dispose%2A>, you must release all references to the <xref:System.IO.TextWriter> so the garbage collector can reclaim the memory that the <xref:System.IO.TextWriter> was occupying.</span></span>  
  
 <span data-ttu-id="00988-167">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="00988-167">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="00988-168">**注**常に呼び出し<xref:System.IO.TextWriter.Dispose%2A>への参照を解放する前に、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="00988-168">**Note** Always call <xref:System.IO.TextWriter.Dispose%2A> before you release your last reference to the <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="00988-169">そうしないと、ガベージ コレクターが <xref:System.IO.TextWriter> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="00988-169">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextWriter> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="00988-170">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00988-170"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="00988-171"><see cref="T:System.IO.TextWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="00988-171">Releases the unmanaged resources used by the <see cref="T:System.IO.TextWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-172">このメソッドを呼び出して`Dispose`と<xref:System.Object.Finalize%2A>します。</span><span class="sxs-lookup"><span data-stu-id="00988-172">This method is called by `Dispose` and <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="00988-173">既定では、このメソッドを指定します、`disposing`パラメーターとして`true`します。</span><span class="sxs-lookup"><span data-stu-id="00988-173">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="00988-174"><xref:System.Object.Finalize%2A> 指定します、`disposing`パラメーターとして`false`します。</span><span class="sxs-lookup"><span data-stu-id="00988-174"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="00988-175">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.TextWriter> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="00988-175">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextWriter> references.</span></span> <span data-ttu-id="00988-176">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="00988-176">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="00988-177">
            <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="00988-177">
            <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="00988-178">このメソッドをオーバーライドする場合は、への以前の呼び出しで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="00988-178">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="00988-179">このメソッドを実装する方法の詳細については、次を参照してください。 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-179">For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="00988-180">詳細については<see cref="M:System.IDisposable.Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-180">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-181">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-181">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-182">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-182">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-183">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-183">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.TextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00988-184">派生クラスによってオーバーライドされると、出力を書き込む文字エンコーディングを返します。</span><span class="sxs-lookup"><span data-stu-id="00988-184">When overridden in a derived class, returns the character encoding in which the output is written.</span></span></summary>
        <value><span data-ttu-id="00988-185">出力の書き込み時に適用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="00988-185">The character encoding in which the output is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-186">このプロパティは、いくつか XML のシナリオで使用されるエンコーディングを格納しているヘッダーを記述する必要があります、ために必要な`TextWriter`します。</span><span class="sxs-lookup"><span data-stu-id="00988-186">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `TextWriter`.</span></span> <span data-ttu-id="00988-187">これにより、任意で使用する XML コード`TextWriter`し、正しい XML ヘッダーを生成します。</span><span class="sxs-lookup"><span data-stu-id="00988-187">This enables the XML code to consume an arbitrary `TextWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="00988-188">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-188">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-189">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-189">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-190">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-190">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-191">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-191">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="textWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00988-192">現在のライターのすべてのバッファーをクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-192">Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-193">この既定のメソッドは、何もしませんが、派生クラスは、適切な機能を提供するメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="00988-193">This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</span></span>  
  
 <span data-ttu-id="00988-194">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない`Flush`または<xref:System.IO.TextWriter.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="00988-194">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.TextWriter.Close%2A>.</span></span> <span data-ttu-id="00988-195">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="00988-195">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="00988-196">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="00988-196">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="00988-197">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="00988-197">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-198">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-198">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-199">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-199">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-200">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-200">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="textWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00988-201">現在のライターのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-201">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="00988-202">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-202">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-203">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-203">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-204">ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-204">The writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public virtual IFormatProvider FormatProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.FormatProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FormatProvider As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IFormatProvider ^ FormatProvider { IFormatProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormatProvider : IFormatProvider" Usage="System.IO.TextWriter.FormatProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00988-205">書式を制御するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="00988-205">Gets an object that controls formatting.</span></span></summary>
        <value><span data-ttu-id="00988-206">特定のカルチャ設定の <see cref="T:System.IFormatProvider" /> オブジェクト、または他のカルチャ設定が指定されていない場合は現在のカルチャ設定の書式。</span><span class="sxs-lookup"><span data-stu-id="00988-206">An <see cref="T:System.IFormatProvider" /> object for a specific culture, or the formatting of the current culture if no other culture is specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-207">値、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティを呼び出すときに使用されるカルチャ固有の書式設定を指定します、<xref:System.IO.TextWriter.Write%2A>と<xref:System.IO.TextWriter.WriteLine%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-207">The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods.</span></span> <span data-ttu-id="00988-208">使用してインスタンスを作成する書式プロバイダーを指定しない場合、<xref:System.IO.TextWriter.%23ctor>コンス トラクターは、設定、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティを`null`します。</span><span class="sxs-lookup"><span data-stu-id="00988-208">If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`.</span></span> <span data-ttu-id="00988-209">ときに、<xref:System.IO.TextWriter.FormatProvider%2A>プロパティが含まれています`null`、書式設定は、現在のスレッドのカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="00988-209">When the <xref:System.IO.TextWriter.FormatProvider%2A> property contains `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="00988-210">ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。[方法: テキスト ファイルを書き込む](~/docs/standard/io/how-to-write-text-to-a-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-210">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="00988-211">ファイルからテキストの読み取りの例は、次を参照してください。[方法: テキスト ファイルからの読み取り](~/docs/standard/io/how-to-read-text-from-a-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-211">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="00988-212">読み取りと書き込みをバイナリ ファイルの例は、次を参照してください。[方法: 新しく作成されたデータ ファイルを読み書き](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-212">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="00988-213">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-213">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-214">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-214">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-215">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-215">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-216">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-216">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public virtual string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.IO.TextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00988-217">現在の <see langword="TextWriter" /> で使用される行終端文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00988-217">Gets or sets the line terminator string used by the current <see langword="TextWriter" />.</span></span></summary>
        <value><span data-ttu-id="00988-218">現在の <see langword="TextWriter" /> で使用する行終端文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-218">The line terminator string for the current <see langword="TextWriter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-219">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="00988-219">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="00988-220">たびに 1 つのテキスト ストリームに書き込まれる行終端記号の文字列の`WriteLine`メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="00988-220">The line terminator string is written to the text stream whenever one of the `WriteLine` methods is called.</span></span> <span data-ttu-id="00988-221">によって書き込まれるテキストの順序で、`TextWriter`読み取りが可能にする<xref:System.IO.TextReader>、終端記号文字列として"\n"または"\r\n"のみを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00988-221">In order for text written by the `TextWriter` to be readable by a <xref:System.IO.TextReader>, only "\n" or "\r\n" should be used as terminator strings.</span></span> <span data-ttu-id="00988-222">場合`NewLine`に設定されている`null`既定の改行文字が代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="00988-222">If `NewLine` is set to `null`, the default newline character is used instead.</span></span>  
  
 <span data-ttu-id="00988-223">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-223">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-224">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-224">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-225">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-225">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-226">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-226">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextWriter ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextWriter" Usage="System.IO.TextWriter.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00988-227">バッキング ストアを持たない書き込み専用の <see langword="TextWriter" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="00988-227">Provides a <see langword="TextWriter" /> with no backing store that can be written to, but not read from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-228">使用`Null`はオペレーティング システムのリソースを消費していないストリームに出力をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="00988-228">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="00988-229">ときに、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>でメソッドが呼び出された`Null`、単に呼び出しを返します、および実際にデータは任意のバッキング ストアに書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="00988-229">When the <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="00988-230">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-230">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-231">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-231">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-232">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-232">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-233">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-233">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Synchronized (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextWriter Synchronized(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (writer As TextWriter) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextWriter ^ Synchronized(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextWriter -&gt; System.IO.TextWriter" Usage="System.IO.TextWriter.Synchronized writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="00988-234">同期する <see langword="TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="00988-234">The <see langword="TextWriter" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="00988-235">指定した <see langword="TextWriter" /> をラップするスレッド セーフ ラッパーを作成します。</span><span class="sxs-lookup"><span data-stu-id="00988-235">Creates a thread-safe wrapper around the specified <see langword="TextWriter" />.</span></span></summary>
        <returns><span data-ttu-id="00988-236">スレッド セーフ ラッパー。</span><span class="sxs-lookup"><span data-stu-id="00988-236">A thread-safe wrapper.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-237">すべての書き込みに返されるラッパーの操作はスレッド セーフになります。</span><span class="sxs-lookup"><span data-stu-id="00988-237">All write operations to the returned wrapper will be thread safe.</span></span> <span data-ttu-id="00988-238">一度に 1 つのスレッドがでメソッドを実行できることを確認するには、このメソッドを呼び出す、<xref:System.IO.TextWriter>返されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="00988-238">You call this method to ensure that only one thread at a time can execute the methods on the <xref:System.IO.TextWriter> instance that is returned.</span></span> <span data-ttu-id="00988-239">同期とスレッド処理の詳細については、次を参照してください。[マルチ スレッドのデータの同期](~/docs/standard/threading/synchronizing-data-for-multithreading.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-239">For more information about synchronization and threading, see [Synchronizing Data for Multithreading](~/docs/standard/threading/synchronizing-data-for-multithreading.md).</span></span>  
  
 <span data-ttu-id="00988-240">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-240">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-241"><paramref name="writer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-241"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-242">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-242">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-243">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-243">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-244">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-244">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00988-245">このメンバーの詳細については、「<see cref="M:System.IDisposable.Dispose" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="00988-245">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="00988-246">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="00988-246">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00988-247">これは、<xref:System.IO.TextWriter> のインスタンスが <xref:System.IDisposable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="00988-247">It can be used only when the <xref:System.IO.TextWriter> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00988-248">データをテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-248">Writes data to a text string or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-249">書き込む <see langword="Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="00988-249">The <see langword="Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="00988-250"><see langword="Boolean" /> 値のテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-250">Writes the text representation of a <see langword="Boolean" /> value to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-251">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.Boolean.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-251">The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="00988-252">このメソッドを出力するか<xref:System.Boolean.TrueString?displayProperty=nameWithType>または<xref:System.Boolean.FalseString?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="00988-252">This method outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="00988-253">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-253">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-254"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-254">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-255">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-255">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-256">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-256">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-257">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-257">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-258">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-258">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(char value);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-259">テキスト ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="00988-259">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="00988-260">文字をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-260">Writes a character to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-261">この既定のメソッドは、何もしませんが、派生クラスは、適切な機能を提供するメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="00988-261">This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</span></span>  
  
 <span data-ttu-id="00988-262">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-262">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-263"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-263">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-264">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-264">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.Char)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-265">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-265">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-266">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-266">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-267">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-267">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="textWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="00988-268">テキスト ストリームに書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="00988-268">The character array to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="00988-269">文字配列をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-269">Writes a character array to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-270">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-270">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="00988-271">この既定のメソッドを呼び出す、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッド全体の文字配列を渡します。</span><span class="sxs-lookup"><span data-stu-id="00988-271">This default method calls the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method and passes the entire character array.</span></span> <span data-ttu-id="00988-272">文字配列がある場合`null`、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="00988-272">If the character array is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="00988-273">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-273">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-274"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-274">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-275">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-275">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char[])" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-276">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-276">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-277">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-277">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-278">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-278">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member Write : decimal -&gt; unit&#xA;override this.Write : decimal -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-279">書き込む 10 進値。</span><span class="sxs-lookup"><span data-stu-id="00988-279">The decimal value to write.</span></span></param>
        <summary><span data-ttu-id="00988-280">10 進値のテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-280">Writes the text representation of a decimal value to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-281"><xref:System.IO.TextWriter.FormatProvider%2A>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-281">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-282"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-282">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-283">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-283">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-284">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-284">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-285">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-285">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-286">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-286">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-287">書き込む 8 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="00988-287">The 8-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="00988-288">8 バイト浮動小数点値のテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-288">Writes the text representation of an 8-byte floating-point value to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-289">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.Double.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-289">The text representation of the specified value is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-290"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-290">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-291">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-291">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-292"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-292">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-293">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-293">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-294">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-294">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-295">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-295">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-296">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-296">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-297">書き込む 4 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="00988-297">The 4-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="00988-298">4 バイト符号付き整数のテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-298">Writes the text representation of a 4-byte signed integer to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-299">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.Int32.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-299">The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-300"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-300">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-301">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-301">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-302"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-302">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-303">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-303">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-304">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-304">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-305">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-305">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-306">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-306">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-307">書き込む 8 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="00988-307">The 8-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="00988-308">8 バイト符号付き整数のテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-308">Writes the text representation of an 8-byte signed integer to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-309">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.Int64.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-309">The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-310"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-310">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-311">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-311">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 [<span data-ttu-id="00988-312">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-312">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-313"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-313">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-314">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-314">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-315">書き込むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-315">The object to write.</span></span></param>
        <summary><span data-ttu-id="00988-316">オブジェクトで <see langword="ToString" /> メソッドを呼び出して、そのオブジェクトのテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-316">Writes the text representation of an object to the text string or stream by calling the <see langword="ToString" /> method on that object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-317">このオーバー ロードは、<xref:System.IO.TextWriter.Write%28System.String%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="00988-317">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%29> overload.</span></span>  
  
 <span data-ttu-id="00988-318">指定したオブジェクトが場合`null`、操作はありませんし、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="00988-318">If the specified object is `null`, no action is taken and no exception is thrown.</span></span> <span data-ttu-id="00988-319">それ以外の場合、オブジェクトの`ToString`メソッドは、の文字列形式を生成するために呼び出され、結果の文字列が出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="00988-319">Otherwise, the object's `ToString` method is called to produce the string representation, and the resulting string is then written to the output stream.</span></span> <span data-ttu-id="00988-320"><xref:System.IO.TextWriter.FormatProvider%2A>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-320">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-321">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-321">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-322"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-322">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-323">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-323">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-324">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-324">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-325">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-325">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-326">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-326">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="textWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-327">書き込む 4 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="00988-327">The 4-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="00988-328">4 バイト浮動小数点値のテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-328">Writes the text representation of a 4-byte floating-point value to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-329">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.Single.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-329">The text representation of the specified value is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-330"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-330">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-331">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-331">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-332"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-332">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-333">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-333">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-334">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-334">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-335">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-335">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-336">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-336">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-337">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-337">The string to write.</span></span></param>
        <summary><span data-ttu-id="00988-338">文字列をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-338">Writes a string to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-339">このオーバー ロードは、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="00988-339">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="00988-340">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-340">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="00988-341">`value` が `null` の場合は、何もテキスト ストリームに書き込みません。</span><span class="sxs-lookup"><span data-stu-id="00988-341">If `value` is `null`, nothing is written to the text stream.</span></span>  
  
 <span data-ttu-id="00988-342">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-342">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-343"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-343">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-344">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-344">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.String)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.String)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-345">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-345">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-346">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-346">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-347">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-347">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint32 -&gt; unit&#xA;override this.Write : uint32 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-348">書き込む 4 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="00988-348">The 4-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="00988-349">4 バイト符号なし整数のテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-349">Writes the text representation of a 4-byte unsigned integer to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-350">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.UInt32.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-350">The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-351"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-351">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-352">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-352">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-353"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-353">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-354">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-354">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-355">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-355">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-356">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-356">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-357">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-357">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint64 -&gt; unit&#xA;override this.Write : uint64 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-358">書き込む 8 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="00988-358">The 8-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="00988-359">8 バイト符号なし整数のテキスト形式をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-359">Writes the text representation of an 8-byte unsigned integer to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-360">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.UInt64.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-360">The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-361"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-361">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-362">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-362">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-363"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-363">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-364">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-364">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-365">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-365">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-366">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-366">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-367">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-367">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="textWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="00988-368">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-368">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="00988-369">書式設定および書き込みをするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-369">The object to format and write.</span></span></param>
        <summary><span data-ttu-id="00988-370"><see cref="M:System.String.Format(System.String,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-370">Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-371">このメソッドは、オブジェクトの値を文字列表現に変換して、その表現を文字列に埋め込むには、複合書式指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-371">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="00988-372">.NET には、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="00988-372">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="00988-373">複合書式指定機能の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-373">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="00988-374">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-374">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-375">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-375">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-376">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-376">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-377">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-377">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="00988-378">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="00988-378">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="00988-379">書式設定プロセスでは、対応するオブジェクトの値の文字列表現を各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="00988-379">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="00988-380">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="00988-380">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="00988-381">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="00988-381">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="00988-382">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="00988-382">Elements in square brackets are optional.</span></span> <span data-ttu-id="00988-383">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="00988-383">The following table describes each element.</span></span> <span data-ttu-id="00988-384">複合書式指定項目の構文を含む、機能を書式設定の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-384">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="00988-385">要素</span><span class="sxs-lookup"><span data-stu-id="00988-385">Element</span></span>|<span data-ttu-id="00988-386">説明</span><span class="sxs-lookup"><span data-stu-id="00988-386">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="00988-387">インデックス</span><span class="sxs-lookup"><span data-stu-id="00988-387">index</span></span>|<span data-ttu-id="00988-388">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="00988-388">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="00988-389">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="00988-389">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00988-390">このオーバー ロードは、パラメーターで 1 つのオブジェクトのみを持つための値の一覧の*インデックス*常に 0 があります。</span><span class="sxs-lookup"><span data-stu-id="00988-390">Because this overload has only a single object in its parameter list, the value of *index* must always be 0.</span></span> <span data-ttu-id="00988-391">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00988-391">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="00988-392">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="00988-392">,*length*</span></span>|<span data-ttu-id="00988-393">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="00988-393">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="00988-394">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="00988-394">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="00988-395">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="00988-395">:*formatString*</span></span>|<span data-ttu-id="00988-396">書式設定するオブジェクトでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-396">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="00988-397">指定できる値*formatString*はオブジェクトのによってサポートされる値と同じ`ToString(string format)`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-397">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="00988-398">場合*formatString*が指定されていない書式設定するオブジェクトを実装して、<xref:System.IFormattable>インターフェイス、`null`の値として渡される、`format`パラメーターとして使用される、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-398">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="00988-399">先頭と末尾の文字を中かっこ"{"と"}"が必要です。</span><span class="sxs-lookup"><span data-stu-id="00988-399">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="00988-400">単一のリテラル中かっこ文字を指定する`format`、先頭の 2 つを指定または末尾の文字は; を中かっこは、"{{"または"}}"。</span><span class="sxs-lookup"><span data-stu-id="00988-400">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="00988-401">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="00988-401">.</span></span> <span data-ttu-id="00988-402">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-402">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="00988-403">指定したオブジェクトが書式指定文字列で参照されていない場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="00988-403">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="00988-404">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-404">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-405"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-405"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-406"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-406">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-407">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-407">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="00988-408"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="00988-408"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="00988-409">- または -</span><span class="sxs-lookup"><span data-stu-id="00988-409">-or-</span></span> 
<span data-ttu-id="00988-410">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 1) 以上です。</span><span class="sxs-lookup"><span data-stu-id="00988-410">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-411">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-411">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-412">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-412">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-413">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-413">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="textWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="00988-414">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-414">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="00988-415">書式設定および書き込みをする 0 個以上のオブジェクトを含むオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="00988-415">An object array that contains zero or more objects to format and write.</span></span></param>
        <summary><span data-ttu-id="00988-416"><see cref="M:System.String.Format(System.String,System.Object[])" /> メソッドと同じセマンティクスを使用して、書式設定された文字列をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-416">Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-417">このメソッドは、オブジェクトの値を文字列表現に変換して、その表現を文字列に埋め込むには、複合書式指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-417">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="00988-418">.NET には、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="00988-418">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="00988-419">複合書式指定機能の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-419">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="00988-420">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-420">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-421">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-421">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-422">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-422">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-423">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-423">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="00988-424">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="00988-424">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="00988-425">書式設定プロセスでは、対応するオブジェクトの値の文字列表現を各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="00988-425">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="00988-426">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="00988-426">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="00988-427">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="00988-427">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="00988-428">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="00988-428">Elements in square brackets are optional.</span></span> <span data-ttu-id="00988-429">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="00988-429">The following table describes each element.</span></span> <span data-ttu-id="00988-430">複合書式指定項目の構文を含む、機能を書式設定の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-430">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="00988-431">要素</span><span class="sxs-lookup"><span data-stu-id="00988-431">Element</span></span>|<span data-ttu-id="00988-432">説明</span><span class="sxs-lookup"><span data-stu-id="00988-432">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="00988-433">インデックス</span><span class="sxs-lookup"><span data-stu-id="00988-433">index</span></span>|<span data-ttu-id="00988-434">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="00988-434">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="00988-435">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="00988-435">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00988-436">このオーバー ロードが、パラメーター配列があるための値の一覧の*インデックス*常に、配列の長さより小さくなければなりません。</span><span class="sxs-lookup"><span data-stu-id="00988-436">Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array.</span></span> <span data-ttu-id="00988-437">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00988-437">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="00988-438">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="00988-438">,*length*</span></span>|<span data-ttu-id="00988-439">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="00988-439">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="00988-440">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="00988-440">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="00988-441">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="00988-441">:*formatString*</span></span>|<span data-ttu-id="00988-442">書式設定するオブジェクトでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-442">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="00988-443">指定できる値*formatString*はオブジェクトのによってサポートされる値と同じ`ToString(string format)`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-443">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="00988-444">場合*formatString*が指定されていない書式設定するオブジェクトを実装して、<xref:System.IFormattable>インターフェイス、`null`の値として渡される、`format`パラメーターとして使用される、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-444">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="00988-445">先頭と末尾の文字を中かっこ"{"と"}"が必要です。</span><span class="sxs-lookup"><span data-stu-id="00988-445">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="00988-446">単一のリテラル中かっこ文字を指定する`format`、先頭の 2 つを指定または末尾の文字は; を中かっこは、"{{"または"}}"。</span><span class="sxs-lookup"><span data-stu-id="00988-446">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="00988-447">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-447">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="00988-448">指定したオブジェクトが書式指定文字列で参照されていない場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="00988-448">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="00988-449">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-449">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-450"><paramref name="format" /> または <paramref name="arg" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-450"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-451"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-451">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-452">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-452">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="00988-453"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="00988-453"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="00988-454">- または -</span><span class="sxs-lookup"><span data-stu-id="00988-454">-or-</span></span> 
<span data-ttu-id="00988-455">書式項目のインデックスが 0 (ゼロ) 未満であるか、<paramref name="arg" /> 配列の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="00988-455">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="arg" /> array.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-456">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-456">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-457">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-457">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-458">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-458">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="textWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="00988-459">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="00988-459">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="00988-460">データの取得を開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="00988-460">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="00988-461">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="00988-461">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="00988-462">文字の部分配列をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-462">Writes a subarray of characters to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-463">このメソッドは書き込み`count`文字のデータにこの`TextWriter`から、`buffer`位置から文字配列`index`します。</span><span class="sxs-lookup"><span data-stu-id="00988-463">This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.</span></span>  
  
 <span data-ttu-id="00988-464">このオーバー ロードは、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29>内の各文字のオーバー ロード`buffer`間`index`と (`index` + `count`)。</span><span class="sxs-lookup"><span data-stu-id="00988-464">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload for each character in `buffer` between `index` and (`index` + `count`).</span></span>  
  
 <span data-ttu-id="00988-465">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-465">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00988-466">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="00988-466">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-467"><paramref name="buffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-467">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00988-468"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="00988-468"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-469"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-469">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-470">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-470">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-471">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-471">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-472">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-472">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-473">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-473">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="textWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="00988-474">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-474">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="00988-475">書式設定および書き込みをする最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-475">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="00988-476">書式設定および書き込みをする 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-476">The second object to format and write.</span></span></param>
        <summary><span data-ttu-id="00988-477"><see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-477">Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-478">このメソッドは、オブジェクトの値を文字列表現に変換して、その表現を文字列に埋め込むには、複合書式指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-478">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="00988-479">.NET には、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="00988-479">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="00988-480">複合書式指定機能の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-480">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="00988-481">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-481">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-482">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-482">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-483">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-483">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-484">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-484">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="00988-485">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="00988-485">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="00988-486">書式設定プロセスでは、対応するオブジェクトの値の文字列表現を各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="00988-486">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="00988-487">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="00988-487">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="00988-488">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="00988-488">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="00988-489">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="00988-489">Elements in square brackets are optional.</span></span> <span data-ttu-id="00988-490">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="00988-490">The following table describes each element.</span></span> <span data-ttu-id="00988-491">複合書式指定項目の構文を含む、機能を書式設定の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-491">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="00988-492">要素</span><span class="sxs-lookup"><span data-stu-id="00988-492">Element</span></span>|<span data-ttu-id="00988-493">説明</span><span class="sxs-lookup"><span data-stu-id="00988-493">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="00988-494">インデックス</span><span class="sxs-lookup"><span data-stu-id="00988-494">index</span></span>|<span data-ttu-id="00988-495">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="00988-495">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="00988-496">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="00988-496">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00988-497">このオーバー ロードは、パラメーターで 2 つのオブジェクトを持つための値の一覧の*インデックス*0 または 1 を常にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="00988-497">Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1.</span></span> <span data-ttu-id="00988-498">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00988-498">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="00988-499">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="00988-499">,*length*</span></span>|<span data-ttu-id="00988-500">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="00988-500">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="00988-501">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="00988-501">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="00988-502">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="00988-502">:*formatString*</span></span>|<span data-ttu-id="00988-503">書式設定するオブジェクトでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-503">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="00988-504">指定できる値*formatString*はオブジェクトのによってサポートされる値と同じ`ToString(string format)`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-504">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="00988-505">場合*formatString*が指定されていない書式設定するオブジェクトを実装して、<xref:System.IFormattable>インターフェイス、`null`の値として渡される、`format`パラメーターとして使用される、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-505">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="00988-506">先頭と末尾の文字を中かっこ"{"と"}"が必要です。</span><span class="sxs-lookup"><span data-stu-id="00988-506">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="00988-507">単一のリテラル中かっこ文字を指定する`format`、先頭の 2 つを指定または末尾の文字は; を中かっこは、"{{"または"}}"。</span><span class="sxs-lookup"><span data-stu-id="00988-507">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="00988-508">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-508">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="00988-509">指定したオブジェクトが書式指定文字列で参照されていない場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="00988-509">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="00988-510">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-510">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-511"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-511"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-512"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-512">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-513">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-513">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="00988-514"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="00988-514"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="00988-515">- または -</span><span class="sxs-lookup"><span data-stu-id="00988-515">-or-</span></span> 
<span data-ttu-id="00988-516">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 2) 以上です。</span><span class="sxs-lookup"><span data-stu-id="00988-516">The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-517">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-517">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-518">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-518">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-519">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-519">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj * obj -&gt; unit" Usage="textWriter.Write (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="00988-520">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-520">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="00988-521">書式設定および書き込みをする最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-521">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="00988-522">書式設定および書き込みをする 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-522">The second object to format and write.</span></span></param>
        <param name="arg2"><span data-ttu-id="00988-523">書式設定および書き込みをする 3 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-523">The third object to format and write.</span></span></param>
        <summary><span data-ttu-id="00988-524"><see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-524">Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-525">このメソッドは、オブジェクトの値を文字列表現に変換して、その表現を文字列に埋め込むには、複合書式指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-525">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="00988-526">.NET には、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="00988-526">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="00988-527">複合書式指定機能の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-527">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="00988-528">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-528">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-529">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-529">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-530">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-530">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-531">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-531">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="00988-532">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="00988-532">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="00988-533">書式設定プロセスでは、対応するオブジェクトの値の文字列表現を各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="00988-533">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="00988-534">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="00988-534">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="00988-535">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="00988-535">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="00988-536">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="00988-536">Elements in square brackets are optional.</span></span> <span data-ttu-id="00988-537">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="00988-537">The following table describes each element.</span></span> <span data-ttu-id="00988-538">複合書式指定項目の構文を含む、機能を書式設定の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-538">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="00988-539">要素</span><span class="sxs-lookup"><span data-stu-id="00988-539">Element</span></span>|<span data-ttu-id="00988-540">説明</span><span class="sxs-lookup"><span data-stu-id="00988-540">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="00988-541">インデックス</span><span class="sxs-lookup"><span data-stu-id="00988-541">index</span></span>|<span data-ttu-id="00988-542">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="00988-542">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="00988-543">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="00988-543">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00988-544">このオーバー ロードは、パラメーターで 3 つのオブジェクトを持つための値の一覧の*インデックス*0、1、または 2 を常にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="00988-544">Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2.</span></span> <span data-ttu-id="00988-545">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00988-545">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="00988-546">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="00988-546">,*length*</span></span>|<span data-ttu-id="00988-547">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="00988-547">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="00988-548">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="00988-548">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="00988-549">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="00988-549">:*formatString*</span></span>|<span data-ttu-id="00988-550">書式設定するオブジェクトでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-550">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="00988-551">指定できる値*formatString*はオブジェクトのによってサポートされる値と同じ`ToString(string format)`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-551">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="00988-552">場合*formatString*が指定されていない書式設定するオブジェクトを実装して、<xref:System.IFormattable>インターフェイス、`null`の値として渡される、`format`パラメーターとして使用される、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-552">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="00988-553">先頭と末尾の文字を中かっこ"{"と"}"が必要です。</span><span class="sxs-lookup"><span data-stu-id="00988-553">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="00988-554">単一のリテラル中かっこ文字を指定する`format`、先頭の 2 つを指定または末尾の文字は; を中かっこは、"{{"または"}}"。</span><span class="sxs-lookup"><span data-stu-id="00988-554">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="00988-555">このメソッドから個々 の改行文字 (16 進数の 0x000a) の指定した文字列を検索し、置き換えいない<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="00988-555">This method does not search the specified string  for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="00988-556">指定したオブジェクトが書式指定文字列で参照されていない場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="00988-556">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="00988-557">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-557">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-558"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-558"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-559"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-559">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-560">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-560">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="00988-561"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="00988-561"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="00988-562">- または -</span><span class="sxs-lookup"><span data-stu-id="00988-562">-or-</span></span> 
<span data-ttu-id="00988-563">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 3) 以上です。</span><span class="sxs-lookup"><span data-stu-id="00988-563">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-564">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-564">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-565">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-565">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-566">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-566">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00988-567">データをテキスト文字列またはストリームに非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-567">Writes data to the text string or stream asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-568">テキスト ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="00988-568">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="00988-569">文字をテキスト文字列またはストリームに非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-569">Writes a character to the text string or stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="00988-570">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-570">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-571"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="00988-571">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="00988-572">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="00988-572">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="00988-573">使用する例については、<xref:System.IO.TextWriter.WriteAsync%2A>メソッドを参照してください、<xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-573">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-574">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-574">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-575">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-575">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Char()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : char[] -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="00988-576">テキスト ストリームに書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="00988-576">The character array to write to the text stream.</span></span> <span data-ttu-id="00988-577"><paramref name="buffer" /> が <see langword="null" /> の場合は、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="00988-577">If <paramref name="buffer" /> is <see langword="null" />, nothing is written.</span></span></param>
        <summary><span data-ttu-id="00988-578">文字配列をテキスト文字列またはストリームに非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-578">Writes a character array to the text string or stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="00988-579">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-579">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-580">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-580">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-581">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-581">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-582">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-582">The string to write.</span></span> <span data-ttu-id="00988-583"><paramref name="value" /> が <see langword="null" /> の場合は、何もテキスト ストリームに書き込みません。</span><span class="sxs-lookup"><span data-stu-id="00988-583">If <paramref name="value" /> is <see langword="null" />, nothing is written to the text stream.</span></span></param>
        <summary><span data-ttu-id="00988-584">文字列をテキスト文字列またはストリームに非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-584">Writes a string to the text string or stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="00988-585">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-585">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-586"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="00988-586">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="00988-587">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="00988-587">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="00988-588">使用する例については、<xref:System.IO.TextWriter.WriteAsync%2A>メソッドを参照してください、<xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-588">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-589">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-589">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-590">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-590">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.String)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="00988-591">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="00988-591">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="00988-592">データの取得を開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="00988-592">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="00988-593">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="00988-593">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="00988-594">文字の部分配列をテキスト文字列またはストリームに非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-594">Writes a subarray of characters to the text string or stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="00988-595">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-595">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-596"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="00988-596">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="00988-597">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="00988-597">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="00988-598">使用する例については、<xref:System.IO.TextWriter.WriteAsync%2A>メソッドを参照してください、<xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-598">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-599"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-599"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00988-600"><paramref name="index" /> に <paramref name="count" /> を加算した値がバッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="00988-600">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00988-601"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="00988-601"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-602">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-602">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-603">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-603">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00988-604">データをテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-604">Writes data followed by a line terminator to the text string or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="textWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00988-605">行終端記号をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-605">Writes a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-606">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-606">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-607">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-607">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-608"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-608">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-609">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-609">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-610">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-610">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-611">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-611">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-612">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-612">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-613">書き込む <see langword="Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="00988-613">The <see langword="Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="00988-614"><see langword="Boolean" /> 値のテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-614">Writes the text representation of a <see langword="Boolean" /> value followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-615">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.Boolean.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-615">The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="00988-616">このメソッドを出力するか<xref:System.Boolean.TrueString?displayProperty=nameWithType>または<xref:System.Boolean.FalseString?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="00988-616">This method outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="00988-617">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-617">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-618">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-618">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-619"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-619">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-620">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-620">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-621">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-621">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-622">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-622">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-623">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-623">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-624">テキスト ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="00988-624">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="00988-625">文字をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-625">Writes a character followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-626">このオーバー ロードは<xref:System.IO.TextWriter.Write%28System.Char%29>続けて<xref:System.IO.TextWriter.WriteLine>します。</span><span class="sxs-lookup"><span data-stu-id="00988-626">This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%29> followed by <xref:System.IO.TextWriter.WriteLine> .</span></span>  
  
 <span data-ttu-id="00988-627">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-627">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-628">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-628">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-629"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-629">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-630">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-630">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-631">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-631">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-632">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-632">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-633">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-633">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="textWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="00988-634">データの読み取り元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="00988-634">The character array from which data is read.</span></span></param>
        <summary><span data-ttu-id="00988-635">文字の配列をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-635">Writes an array of characters followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-636">すべての文字`buffer`は基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="00988-636">All the characters in `buffer` are written to the underlying stream.</span></span> <span data-ttu-id="00988-637">文字配列が `null` の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="00988-637">If the character array is `null`, only the line terminator is written.</span></span>  
  
 <span data-ttu-id="00988-638">このオーバー ロードは<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29>続けて<xref:System.IO.TextWriter.WriteLine>します。</span><span class="sxs-lookup"><span data-stu-id="00988-638">This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> followed by <xref:System.IO.TextWriter.WriteLine> .</span></span>  
  
 <span data-ttu-id="00988-639">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-639">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-640">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-640">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-641"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-641">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-642">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-642">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-643">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-643">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-644">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-644">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-645">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-645">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : decimal -&gt; unit&#xA;override this.WriteLine : decimal -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-646">書き込む 10 進値。</span><span class="sxs-lookup"><span data-stu-id="00988-646">The decimal value to write.</span></span></param>
        <summary><span data-ttu-id="00988-647">10 進値のテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-647">Writes the text representation of a decimal value followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-648"><xref:System.IO.TextWriter.FormatProvider%2A>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-648">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="00988-649">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-649">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="00988-650">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-650">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-651"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-651">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-652">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-652">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-653">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-653">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-654">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-654">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-655">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-655">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-656">書き込む 8 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="00988-656">The 8-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="00988-657">8 バイト浮動小数点値のテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-657">Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-658"><xref:System.IO.TextWriter.FormatProvider%2A>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-658">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="00988-659">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-659">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="00988-660">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-660">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-661"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-661">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-662">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-662">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-663">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-663">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-664">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-664">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-665">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-665">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-666">書き込む 4 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="00988-666">The 4-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="00988-667">4 バイト符号付き整数のテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-667">Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-668">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.Int32.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-668">The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-669"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-669">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-670">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-670">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-671">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-671">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-672"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-672">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-673">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-673">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-674">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-674">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-675">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-675">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-676">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-676">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-677">書き込む 8 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="00988-677">The 8-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="00988-678">8 バイト符号付き整数のテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-678">Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-679">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.Int64.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-679">The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-680"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-680">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-681">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-681">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-682">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-682">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-683"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-683">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-684">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-684">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-685">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-685">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-686">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-686">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-687">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-687">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-688">書き込むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-688">The object to write.</span></span> <span data-ttu-id="00988-689"><paramref name="value" /> が <see langword="null" /> の場合は、行終端記号だけを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-689">If <paramref name="value" /> is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="00988-690">オブジェクトで <see langword="ToString" /> メソッドを呼び出して、そのオブジェクトのテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-690">Writes the text representation of an object by calling the <see langword="ToString" /> method on that object, followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-691">このオーバー ロードは、<xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="00988-691">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29> overload.</span></span> <span data-ttu-id="00988-692"><xref:System.IO.TextWriter.FormatProvider%2A>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-692">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-693">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-693">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-694">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-694">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-695"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-695">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-696">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-696">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-697">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-697">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-698">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-698">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-699">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-699">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="textWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-700">書き込む 4 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="00988-700">The 4-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="00988-701">4 バイト浮動小数点値のテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-701">Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-702"><xref:System.IO.TextWriter.FormatProvider%2A>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-702">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="00988-703">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-703">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="00988-704">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-704">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-705"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-705">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-706">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-706">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-707">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-707">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-708">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-708">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-709">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-709">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-710">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-710">The string to write.</span></span> <span data-ttu-id="00988-711"><paramref name="value" /> が <see langword="null" /> の場合は、行終端記号だけを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-711">If <paramref name="value" /> is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="00988-712">文字列をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-712">Writes a string followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-713">このオーバー ロードは、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="00988-713">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="00988-714">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-714">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-715">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-715">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="00988-716">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-716">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-717"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-717">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-718">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-718">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-719">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-719">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-720">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-720">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-721">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-721">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-722">書き込む 4 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="00988-722">The 4-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="00988-723">4 バイト符号なし整数のテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-723">Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-724">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.UInt32.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-724">The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-725"><xref:System.IO.TextWriter.FormatProvider%2A>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-725">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-726">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-726">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-727">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-727">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-728"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-728">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-729">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-729">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-730">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-730">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-731">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-731">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-732">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-732">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint64 -&gt; unit&#xA;override this.WriteLine : uint64 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-733">書き込む 8 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="00988-733">The 8-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="00988-734">8 バイト符号なし整数のテキスト形式をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-734">Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-735">指定した値のテキスト表現が呼び出すことによって生成された、<xref:System.UInt64.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-735">The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="00988-736"><xref:System.IO.TextWriter.FormatProvider%2A>しない場合は、プロパティ`null`カルチャに固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="00988-736">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="00988-737">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-737">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-738">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-738">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-739"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-739">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-740">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-740">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-741">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-741">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-742">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-742">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-743">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-743">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="00988-744">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-744">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="00988-745">書式設定および書き込みをするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-745">The object to format and write.</span></span></param>
        <summary><span data-ttu-id="00988-746"><see cref="M:System.String.Format(System.String,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列と改行をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-746">Writes a formatted string and a new line to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-747">このメソッドは、オブジェクトの値を文字列表現に変換して、その表現を文字列に埋め込むには、複合書式指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-747">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="00988-748">.NET には、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="00988-748">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="00988-749">複合書式指定機能の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-749">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="00988-750">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-750">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-751">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-751">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-752">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-752">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-753">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-753">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="00988-754">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="00988-754">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="00988-755">書式設定プロセスでは、対応するオブジェクトの値の文字列表現を各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="00988-755">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="00988-756">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="00988-756">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="00988-757">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="00988-757">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="00988-758">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="00988-758">Elements in square brackets are optional.</span></span> <span data-ttu-id="00988-759">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="00988-759">The following table describes each element.</span></span> <span data-ttu-id="00988-760">複合書式指定項目の構文を含む、機能を書式設定の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-760">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="00988-761">要素</span><span class="sxs-lookup"><span data-stu-id="00988-761">Element</span></span>|<span data-ttu-id="00988-762">説明</span><span class="sxs-lookup"><span data-stu-id="00988-762">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="00988-763">インデックス</span><span class="sxs-lookup"><span data-stu-id="00988-763">index</span></span>|<span data-ttu-id="00988-764">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="00988-764">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="00988-765">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="00988-765">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00988-766">このオーバー ロードは、パラメーターで 1 つのオブジェクトのみを持つための値の一覧の*インデックス*常に 0 があります。</span><span class="sxs-lookup"><span data-stu-id="00988-766">Because this overload has only a single object in its parameter list, the value of *index* must always be 0.</span></span> <span data-ttu-id="00988-767">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00988-767">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="00988-768">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="00988-768">,*length*</span></span>|<span data-ttu-id="00988-769">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="00988-769">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="00988-770">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="00988-770">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="00988-771">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="00988-771">:*formatString*</span></span>|<span data-ttu-id="00988-772">書式設定するオブジェクトでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-772">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="00988-773">指定できる値*formatString*はオブジェクトのによってサポートされる値と同じ`ToString(string format)`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-773">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="00988-774">場合*formatString*が指定されていない書式設定するオブジェクトを実装して、<xref:System.IFormattable>インターフェイス、`null`の値として渡される、`format`パラメーターとして使用される、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-774">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="00988-775">先頭と末尾の文字を中かっこ"{"と"}"が必要です。</span><span class="sxs-lookup"><span data-stu-id="00988-775">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="00988-776">単一のリテラル中かっこ文字を指定する`format`、先頭の 2 つを指定または末尾の文字は; を中かっこは、"{{"または"}}"。</span><span class="sxs-lookup"><span data-stu-id="00988-776">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="00988-777">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-777">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="00988-778">指定したオブジェクトが書式指定文字列で参照されていない場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="00988-778">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="00988-779">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-779">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-780">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-780">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-781"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-781"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-782"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-782">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-783">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-783">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="00988-784"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="00988-784"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="00988-785">- または -</span><span class="sxs-lookup"><span data-stu-id="00988-785">-or-</span></span> 
<span data-ttu-id="00988-786">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 1) 以上です。</span><span class="sxs-lookup"><span data-stu-id="00988-786">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-787">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-787">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-788">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-788">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-789">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-789">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="textWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="00988-790">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-790">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="00988-791">書式設定および書き込みをする 0 個以上のオブジェクトを含むオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="00988-791">An object array that contains zero or more objects to format and write.</span></span></param>
        <summary><span data-ttu-id="00988-792"><see cref="M:System.String.Format(System.String,System.Object)" /> と同じセマンティクスを使用して、書式設定された文字列と改行を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-792">Writes out a formatted string and a new line, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-793">このメソッドは、オブジェクトの値を文字列表現に変換して、その表現を文字列に埋め込むには、複合書式指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-793">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="00988-794">.NET には、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="00988-794">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="00988-795">複合書式指定機能の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-795">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="00988-796">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-796">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-797">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-797">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-798">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-798">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-799">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-799">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="00988-800">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="00988-800">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="00988-801">書式設定プロセスでは、対応するオブジェクトの値の文字列表現を各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="00988-801">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="00988-802">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="00988-802">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="00988-803">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="00988-803">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="00988-804">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="00988-804">Elements in square brackets are optional.</span></span> <span data-ttu-id="00988-805">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="00988-805">The following table describes each element.</span></span> <span data-ttu-id="00988-806">複合書式指定項目の構文を含む、機能を書式設定の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-806">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="00988-807">要素</span><span class="sxs-lookup"><span data-stu-id="00988-807">Element</span></span>|<span data-ttu-id="00988-808">説明</span><span class="sxs-lookup"><span data-stu-id="00988-808">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="00988-809">インデックス</span><span class="sxs-lookup"><span data-stu-id="00988-809">index</span></span>|<span data-ttu-id="00988-810">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="00988-810">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="00988-811">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="00988-811">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00988-812">このオーバー ロードが、パラメーター配列があるための値の一覧の*インデックス*常に、配列の長さより小さくなければなりません。</span><span class="sxs-lookup"><span data-stu-id="00988-812">Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array.</span></span> <span data-ttu-id="00988-813">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00988-813">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="00988-814">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="00988-814">,*length*</span></span>|<span data-ttu-id="00988-815">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="00988-815">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="00988-816">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="00988-816">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="00988-817">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="00988-817">:*formatString*</span></span>|<span data-ttu-id="00988-818">書式設定するオブジェクトでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-818">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="00988-819">指定できる値*formatString*はオブジェクトのによってサポートされる値と同じ`ToString(string format)`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-819">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="00988-820">場合*formatString*が指定されていない書式設定するオブジェクトを実装して、<xref:System.IFormattable>インターフェイス、`null`の値として渡される、`format`パラメーターとして使用される、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-820">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="00988-821">先頭と末尾の文字を中かっこ"{"と"}"が必要です。</span><span class="sxs-lookup"><span data-stu-id="00988-821">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="00988-822">単一のリテラル中かっこ文字を指定する`format`、先頭の 2 つを指定または末尾の文字は; を中かっこは、"{{"または"}}"。</span><span class="sxs-lookup"><span data-stu-id="00988-822">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="00988-823">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-823">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="00988-824">指定したオブジェクトが書式指定文字列で参照されていない場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="00988-824">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="00988-825">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-825">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-826">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-826">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-827">文字列またはオブジェクトが <see langword="null" /> として渡されました。</span><span class="sxs-lookup"><span data-stu-id="00988-827">A string or object is passed in as <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-828"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-828">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-829">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-829">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="00988-830"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="00988-830"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="00988-831">- または -</span><span class="sxs-lookup"><span data-stu-id="00988-831">-or-</span></span> 
<span data-ttu-id="00988-832">書式項目のインデックスが 0 (ゼロ) 未満であるか、<paramref name="arg" /> 配列の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="00988-832">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="arg" /> array.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-833">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-833">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-834">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-834">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-835">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-835">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="textWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="00988-836">データの読み取り元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="00988-836">The character array from which data is read.</span></span></param>
        <param name="index"><span data-ttu-id="00988-837">データの読み込みを開始する、<paramref name="buffer" /> 内の文字の位置。</span><span class="sxs-lookup"><span data-stu-id="00988-837">The character position in <paramref name="buffer" /> at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="00988-838">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="00988-838">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="00988-839">文字の部分配列をテキスト文字列またはストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-839">Writes a subarray of characters followed by a line terminator to the text string or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-840">このメソッドは書き込み`count`文字のデータにこの`TextWriter`から、`buffer`位置から文字配列`index`します。</span><span class="sxs-lookup"><span data-stu-id="00988-840">This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.</span></span>  
  
 <span data-ttu-id="00988-841">このオーバー ロードの呼び出しと同じですが、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29>メソッドに続けて<xref:System.IO.TextWriter.WriteLine%2A>内の各文字の`buffer`間`index`と (`index` + `count`)。</span><span class="sxs-lookup"><span data-stu-id="00988-841">This overload is equivalent to calling the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> method followed by <xref:System.IO.TextWriter.WriteLine%2A> for each character in `buffer` between `index` and (`index` + `count`).</span></span>  
  
 <span data-ttu-id="00988-842">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-842">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-843">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-843">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00988-844">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="00988-844">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-845"><paramref name="buffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-845">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00988-846"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="00988-846"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-847"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-847">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-848">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-848">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-849">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-849">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-850">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-850">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-851">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-851">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="00988-852">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-852">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="00988-853">書式設定および書き込みをする最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-853">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="00988-854">書式設定および書き込みをする 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-854">The second object to format and write.</span></span></param>
        <summary><span data-ttu-id="00988-855"><see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列と改行をテキスト文字列またはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-855">Writes a formatted string and a new line to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-856">このメソッドは、オブジェクトの値を文字列表現に変換して、その表現を文字列に埋め込むには、複合書式指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-856">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="00988-857">.NET には、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="00988-857">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="00988-858">複合書式指定機能の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-858">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="00988-859">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-859">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-860">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-860">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-861">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-861">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-862">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-862">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="00988-863">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="00988-863">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="00988-864">書式設定プロセスでは、対応するオブジェクトの値の文字列表現を各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="00988-864">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="00988-865">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="00988-865">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="00988-866">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="00988-866">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="00988-867">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="00988-867">Elements in square brackets are optional.</span></span> <span data-ttu-id="00988-868">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="00988-868">The following table describes each element.</span></span> <span data-ttu-id="00988-869">複合書式指定項目の構文を含む、機能を書式設定の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-869">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="00988-870">要素</span><span class="sxs-lookup"><span data-stu-id="00988-870">Element</span></span>|<span data-ttu-id="00988-871">説明</span><span class="sxs-lookup"><span data-stu-id="00988-871">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="00988-872">インデックス</span><span class="sxs-lookup"><span data-stu-id="00988-872">index</span></span>|<span data-ttu-id="00988-873">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="00988-873">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="00988-874">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="00988-874">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00988-875">このオーバー ロードは、パラメーターで 2 つのオブジェクトを持つための値の一覧の*インデックス*0 または 1 を常にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="00988-875">Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1.</span></span> <span data-ttu-id="00988-876">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00988-876">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="00988-877">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="00988-877">,*length*</span></span>|<span data-ttu-id="00988-878">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="00988-878">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="00988-879">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="00988-879">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="00988-880">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="00988-880">:*formatString*</span></span>|<span data-ttu-id="00988-881">書式設定するオブジェクトでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-881">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="00988-882">指定できる値*formatString*はオブジェクトのによってサポートされる値と同じ`ToString(string format)`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-882">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="00988-883">場合*formatString*が指定されていない書式設定するオブジェクトを実装して、<xref:System.IFormattable>インターフェイス、`null`の値として渡される、`format`パラメーターとして使用される、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-883">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="00988-884">先頭と末尾の文字を中かっこ"{"と"}"が必要です。</span><span class="sxs-lookup"><span data-stu-id="00988-884">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="00988-885">単一のリテラル中かっこ文字を指定する`format`、先頭の 2 つを指定または末尾の文字は; を中かっこは、"{{"または"}}"。</span><span class="sxs-lookup"><span data-stu-id="00988-885">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="00988-886">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-886">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="00988-887">指定したオブジェクトが書式指定文字列で参照されていない場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="00988-887">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="00988-888">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-888">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-889">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-889">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-890"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-890"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-891"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-891">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-892">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-892">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="00988-893"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="00988-893"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="00988-894">- または -</span><span class="sxs-lookup"><span data-stu-id="00988-894">-or-</span></span> 
<span data-ttu-id="00988-895">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 2) 以上です。</span><span class="sxs-lookup"><span data-stu-id="00988-895">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-896">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-896">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-897">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-897">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-898">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-898">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="00988-899">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-899">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="00988-900">書式設定および書き込みをする最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-900">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="00988-901">書式設定および書き込みをする 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-901">The second object to format and write.</span></span></param>
        <param name="arg2"><span data-ttu-id="00988-902">書式設定および書き込みをする 3 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00988-902">The third object to format and write.</span></span></param>
        <summary><span data-ttu-id="00988-903"><see cref="M:System.String.Format(System.String,System.Object)" /> と同じセマンティクスを使用して、書式設定された文字列と改行を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-903">Writes out a formatted string and a new line, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-904">このメソッドは、オブジェクトの値を文字列表現に変換して、その表現を文字列に埋め込むには、複合書式指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="00988-904">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="00988-905">.NET には、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートが用意されています。</span><span class="sxs-lookup"><span data-stu-id="00988-905">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="00988-906">複合書式指定機能の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-906">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="00988-907">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-907">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-908">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-908">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-909">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-909">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="00988-910">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-910">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="00988-911">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="00988-911">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="00988-912">書式設定プロセスでは、対応するオブジェクトの値の文字列表現を各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="00988-912">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="00988-913">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="00988-913">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="00988-914">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="00988-914">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="00988-915">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="00988-915">Elements in square brackets are optional.</span></span> <span data-ttu-id="00988-916">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="00988-916">The following table describes each element.</span></span> <span data-ttu-id="00988-917">複合書式指定項目の構文を含む、機能を書式設定の詳細については、次を参照してください。[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-917">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="00988-918">要素</span><span class="sxs-lookup"><span data-stu-id="00988-918">Element</span></span>|<span data-ttu-id="00988-919">説明</span><span class="sxs-lookup"><span data-stu-id="00988-919">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="00988-920">インデックス</span><span class="sxs-lookup"><span data-stu-id="00988-920">index</span></span>|<span data-ttu-id="00988-921">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="00988-921">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="00988-922">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="00988-922">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00988-923">このオーバー ロードは、パラメーターで 3 つのオブジェクトを持つための値の一覧の*インデックス*0、1、または 2 を常にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="00988-923">Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2.</span></span> <span data-ttu-id="00988-924">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00988-924">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="00988-925">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="00988-925">,*length*</span></span>|<span data-ttu-id="00988-926">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="00988-926">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="00988-927">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="00988-927">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="00988-928">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="00988-928">:*formatString*</span></span>|<span data-ttu-id="00988-929">書式設定するオブジェクトでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-929">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="00988-930">指定できる値*formatString*はオブジェクトのによってサポートされる値と同じ`ToString(string format)`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-930">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="00988-931">場合*formatString*が指定されていない書式設定するオブジェクトを実装して、<xref:System.IFormattable>インターフェイス、`null`の値として渡される、`format`パラメーターとして使用される、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-931">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="00988-932">先頭と末尾の文字を中かっこ"{"と"}"が必要です。</span><span class="sxs-lookup"><span data-stu-id="00988-932">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="00988-933">単一のリテラル中かっこ文字を指定する`format`、先頭の 2 つを指定または末尾の文字は; を中かっこは、"{{"または"}}"。</span><span class="sxs-lookup"><span data-stu-id="00988-933">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="00988-934">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="00988-934">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="00988-935">指定したオブジェクトが書式指定文字列で参照されていない場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="00988-935">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="00988-936">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-936">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-937">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="00988-937">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-938"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-938"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-939"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="00988-939">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="00988-940">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00988-940">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="00988-941"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="00988-941"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="00988-942">- または -</span><span class="sxs-lookup"><span data-stu-id="00988-942">-or-</span></span> 
<span data-ttu-id="00988-943">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 3) 以上です。</span><span class="sxs-lookup"><span data-stu-id="00988-943">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="00988-944">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="00988-944">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="00988-945">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="00988-945">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="00988-946">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="00988-946">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00988-947">データをテキスト文字列またはストリームに非同期的に書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-947">Writes data followed by a line terminator asynchronously to the text string or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : unit -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00988-948">行終端記号をテキスト文字列またはストリームに非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-948">Writes a line terminator asynchronously to the text string or stream.</span></span></summary>
        <returns><span data-ttu-id="00988-949">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-949">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-950">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-950">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-951">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-951">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-952">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-952">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-953">テキスト ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="00988-953">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="00988-954">文字をテキスト文字列またはストリームに非同期的に書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-954">Writes a character followed by a line terminator asynchronously to the text string or stream.</span></span></summary>
        <returns><span data-ttu-id="00988-955">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-955">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-956">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-956">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-957"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="00988-957">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="00988-958">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="00988-958">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="00988-959">使用する例については、<xref:System.IO.TextWriter.WriteLineAsync%2A>メソッドを参照してください、<xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-959">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-960">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-960">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-961">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-961">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteLineAsync (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteLineAsync (buffer As Char()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.WriteLineAsync : char[] -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="00988-962">テキスト ストリームに書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="00988-962">The character array to write to the text stream.</span></span> <span data-ttu-id="00988-963">文字配列が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="00988-963">If the character array is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="00988-964">文字の配列をテキスト文字列またはストリームに非同期的に書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-964">Writes an array of characters followed by a line terminator asynchronously to the text string or stream.</span></span></summary>
        <returns><span data-ttu-id="00988-965">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-965">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-966">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-966">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-967">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-967">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-968">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-968">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="00988-969">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="00988-969">The string to write.</span></span> <span data-ttu-id="00988-970">値が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="00988-970">If the value is <see langword="null" />, only a line terminator is written.</span></span></param>
        <summary><span data-ttu-id="00988-971">文字列をテキスト文字列またはストリームに非同期的に書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-971">Writes a string followed by a line terminator asynchronously to the text string or stream.</span></span></summary>
        <returns><span data-ttu-id="00988-972">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-972">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-973">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-973">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-974"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="00988-974">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="00988-975">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="00988-975">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="00988-976">使用する例については、<xref:System.IO.TextWriter.WriteLineAsync%2A>メソッドを参照してください、<xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-976">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-977">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-977">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-978">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-978">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="00988-979">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="00988-979">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="00988-980">データの取得を開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="00988-980">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="00988-981">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="00988-981">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="00988-982">文字の部分配列をテキスト文字列またはストリームに非同期的に書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="00988-982">Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.</span></span></summary>
        <returns><span data-ttu-id="00988-983">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="00988-983">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00988-984">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="00988-984">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="00988-985"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="00988-985">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="00988-986">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="00988-986">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="00988-987">使用する例については、<xref:System.IO.TextWriter.WriteLineAsync%2A>メソッドを参照してください、<xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00988-987">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00988-988"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="00988-988"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00988-989"><paramref name="index" /> に <paramref name="count" /> を加算した値がバッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="00988-989">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00988-990"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="00988-990"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="00988-991">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="00988-991">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00988-992">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="00988-992">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>