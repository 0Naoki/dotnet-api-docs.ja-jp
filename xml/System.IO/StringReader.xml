<Type Name="StringReader" FullName="System.IO.StringReader">
  <TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f9a80-101">文字列から読み取る <see cref="T:System.IO.TextReader" /> を実装します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-102"><xref:System.IO.StringReader> 同期または非同期で文字列を読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="f9a80-103">使用時に文字を読み取ることができます、<xref:System.IO.StringReader.Read%2A>または<xref:System.IO.StringReader.ReadAsync%2A>メソッドは、時間を使用して、一度に 1 行ずつ、<xref:System.IO.StringReader.ReadLine%2A>または<xref:System.IO.StringReader.ReadLineAsync%2A>メソッドと、文字列全体を使用して、<xref:System.IO.StringReader.ReadToEnd%2A>または<xref:System.IO.StringReader.ReadToEndAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="f9a80-104">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f9a80-105">目的</span><span class="sxs-lookup"><span data-stu-id="f9a80-105">To do this...</span></span>|<span data-ttu-id="f9a80-106">参照項目</span><span class="sxs-lookup"><span data-stu-id="f9a80-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f9a80-107">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-107">Create a text file.</span></span>|[<span data-ttu-id="f9a80-108">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-109">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-109">Write to a text file.</span></span>|[<span data-ttu-id="f9a80-110">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-111">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-111">Read from a text file.</span></span>|[<span data-ttu-id="f9a80-112">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f9a80-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f9a80-113">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-113">Append text to a file.</span></span>|[<span data-ttu-id="f9a80-114">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="f9a80-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-115">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-116">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-117">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-118">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-119">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-119">Read from a binary file.</span></span>|[<span data-ttu-id="f9a80-120">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f9a80-121">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-121">Write to a binary file.</span></span>|[<span data-ttu-id="f9a80-122">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f9a80-123">次の例では、文字列全体を非同期的に読み込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="f9a80-124"><see cref="T:System.IO.StringReader" /> を初期化する目的の文字列。</span><span class="sxs-lookup"><span data-stu-id="f9a80-124">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span></span></param>
        <summary><span data-ttu-id="f9a80-125">指定した文字列から読み取る <see cref="T:System.IO.StringReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-125">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-126">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-126">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f9a80-127">目的</span><span class="sxs-lookup"><span data-stu-id="f9a80-127">To do this...</span></span>|<span data-ttu-id="f9a80-128">参照項目</span><span class="sxs-lookup"><span data-stu-id="f9a80-128">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f9a80-129">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-129">Create a text file.</span></span>|[<span data-ttu-id="f9a80-130">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-130">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-131">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-131">Write to a text file.</span></span>|[<span data-ttu-id="f9a80-132">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-132">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-133">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-133">Read from a text file.</span></span>|[<span data-ttu-id="f9a80-134">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f9a80-134">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f9a80-135">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-135">Append text to a file.</span></span>|[<span data-ttu-id="f9a80-136">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="f9a80-136">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-137">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-137">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-138">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-138">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-139">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-139">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-140">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-140">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-141">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-141">Read from a binary file.</span></span>|[<span data-ttu-id="f9a80-142">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-142">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f9a80-143">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-143">Write to a binary file.</span></span>|[<span data-ttu-id="f9a80-144">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-144">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f9a80-145">このコード例に示されている例の一部である、<xref:System.IO.StringReader>クラスです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-145">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9a80-146"><paramref name="s" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-146">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9a80-147"><see cref="T:System.IO.StringReader" /> を閉じます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-147">Closes the <see cref="T:System.IO.StringReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-148">ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。[する方法: テキスト ファイルを書き込む](~/docs/standard/io/how-to-write-text-to-a-file.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-148">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="f9a80-149">ファイルからテキストの読み取りの例は、次を参照してください。[する方法: テキスト ファイルからの読み取り](~/docs/standard/io/how-to-read-text-from-a-file.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-149">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="f9a80-150">読み取りと書き込み、バイナリ ファイルの例は、次を参照してください。[する方法: 新しく作成されたデータ ファイルに読み書き](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-150">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="f9a80-151">このメソッドは、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-151">This method overrides the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9a80-152">この実装`Close`呼び出し、<xref:System.IO.StringReader.Dispose%2A>メソッド、`true`値。</span><span class="sxs-lookup"><span data-stu-id="f9a80-152">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="f9a80-153">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません`Close`です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-153">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="f9a80-154">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`に、ストリーム バッファーからデータがフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-154">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="f9a80-155">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</span><span class="sxs-lookup"><span data-stu-id="f9a80-155">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="f9a80-156">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-156">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="f9a80-157">呼び出しに続く`Close`、他のメソッドが例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="f9a80-157">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f9a80-158">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f9a80-158"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f9a80-159"><see cref="T:System.IO.StringReader" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-159">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-160">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StringReader> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-160">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="f9a80-161">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-161">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9a80-162"><see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-162"><see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="f9a80-163">オーバーライドする場合<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />を以前の呼び出しで既に破棄されているオブジェクトを参照しないように注意、<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-163">When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9a80-164">使用可能な次の文字を返しますが、その文字は使用されません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-164">Returns the next available character but does not consume it.</span></span></summary>
        <returns><span data-ttu-id="f9a80-165">読み取り対象の次の文字を表す整数。使用できる文字がないか、ストリームがシークをサポートしていない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="f9a80-165">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-166"><xref:System.IO.StringReader.Peek%2A>メソッドは、ファイル、または別のエラーの終了が発生したかどうかを確認するために整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-166">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="f9a80-167">これにより、ユーザーをまず確認かどうか、返される値は-1 にキャストする前に、<xref:System.Char>型です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-167">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="f9a80-168">このメソッドは、<xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-168">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9a80-169">現在の位置、`StringReader`この操作では変更されません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-169">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="f9a80-170">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-170">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f9a80-171">目的</span><span class="sxs-lookup"><span data-stu-id="f9a80-171">To do this...</span></span>|<span data-ttu-id="f9a80-172">参照項目</span><span class="sxs-lookup"><span data-stu-id="f9a80-172">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f9a80-173">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-173">Create a text file.</span></span>|[<span data-ttu-id="f9a80-174">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-174">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-175">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-175">Write to a text file.</span></span>|[<span data-ttu-id="f9a80-176">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-176">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-177">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-177">Read from a text file.</span></span>|[<span data-ttu-id="f9a80-178">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f9a80-178">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f9a80-179">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-179">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-180">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-180">The current reader is closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9a80-181">入力文字列から次の文字または次の文字セットを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-181">Reads the next character or next set of characters from the input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9a80-182">入力文字列から次の文字を読み取り、1 文字分だけ文字位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-182">Reads the next character from the input string and advances the character position by one character.</span></span></summary>
        <returns><span data-ttu-id="f9a80-183">基になる文字列の次の文字。または使用できる文字がない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="f9a80-183">The next character from the underlying string, or -1 if no more characters are available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-184">このメソッドは、<xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-184">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9a80-185">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-185">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f9a80-186">目的</span><span class="sxs-lookup"><span data-stu-id="f9a80-186">To do this...</span></span>|<span data-ttu-id="f9a80-187">参照項目</span><span class="sxs-lookup"><span data-stu-id="f9a80-187">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f9a80-188">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-188">Create a text file.</span></span>|[<span data-ttu-id="f9a80-189">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-189">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-190">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-190">Write to a text file.</span></span>|[<span data-ttu-id="f9a80-191">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-191">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-192">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-192">Read from a text file.</span></span>|[<span data-ttu-id="f9a80-193">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f9a80-193">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f9a80-194">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-194">Append text to a file.</span></span>|[<span data-ttu-id="f9a80-195">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="f9a80-195">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-196">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-196">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-197">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-197">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-198">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-198">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-199">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-199">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-200">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-200">Read from a binary file.</span></span>|[<span data-ttu-id="f9a80-201">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-201">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f9a80-202">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-202">Write to a binary file.</span></span>|[<span data-ttu-id="f9a80-203">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-203">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f9a80-204">このコード例に示されている例の一部である、<xref:System.IO.StringReader>クラスです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-204">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-205">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-205">The current reader is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f9a80-206">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-206">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="f9a80-207">バッファー内の開始インデックス。</span><span class="sxs-lookup"><span data-stu-id="f9a80-207">The starting index in the buffer.</span></span></param>
        <param name="count"><span data-ttu-id="f9a80-208">読み取る文字の数。</span><span class="sxs-lookup"><span data-stu-id="f9a80-208">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="f9a80-209">入力文字列から文字のブロックを読み取り、<paramref name="count" /> だけ文字位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-209">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span></span></summary>
        <returns><span data-ttu-id="f9a80-210">バッファーに読み取られた合計文字数。</span><span class="sxs-lookup"><span data-stu-id="f9a80-210">The total number of characters read into the buffer.</span></span> <span data-ttu-id="f9a80-211">要求しただけの文字数を読み取ることができなかった場合、この値は要求した文字数より小さくなります。基になる文字列の末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-211">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-212">このメソッドは、<xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f9a80-212">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f9a80-213">このメソッドはまで読み取る`count`の文字、<xref:System.IO.StringReader>に、`buffer`開始位置から文字配列`index`です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-213">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="f9a80-214">実際の文字数の読み取り、または文字列の末尾に達するし、文字が読み取られません場合は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-214">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="f9a80-215">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-215">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f9a80-216">目的</span><span class="sxs-lookup"><span data-stu-id="f9a80-216">To do this...</span></span>|<span data-ttu-id="f9a80-217">参照項目</span><span class="sxs-lookup"><span data-stu-id="f9a80-217">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f9a80-218">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-218">Create a text file.</span></span>|[<span data-ttu-id="f9a80-219">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-219">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-220">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-220">Write to a text file.</span></span>|[<span data-ttu-id="f9a80-221">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-221">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-222">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-222">Read from a text file.</span></span>|[<span data-ttu-id="f9a80-223">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f9a80-223">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f9a80-224">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-224">Append text to a file.</span></span>|[<span data-ttu-id="f9a80-225">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="f9a80-225">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-226">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-226">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-227">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-227">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-228">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-228">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-229">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-229">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-230">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-230">Read from a binary file.</span></span>|[<span data-ttu-id="f9a80-231">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-231">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f9a80-232">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-232">Write to a binary file.</span></span>|[<span data-ttu-id="f9a80-233">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-233">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9a80-234"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-234"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9a80-235">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-235">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9a80-236"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-236"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-237">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-237">The current reader is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f9a80-238">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-238">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="f9a80-239">書き込みを開始する <c>buffer</c> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="f9a80-239">The position in <c>buffer</c> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="f9a80-240">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="f9a80-240">The maximum number of characters to read.</span></span> <span data-ttu-id="f9a80-241">指定された文字数をバッファーに書き込む前に文字列の末尾に到達した場合、メソッドは制御を返します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-241">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="f9a80-242">指定した最大文字数を現在の文字列から非同期的に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-242">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="f9a80-243">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f9a80-243">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="f9a80-244"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-244">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="f9a80-245">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、文字列の末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-245">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-246">タスクが完了した後にいずれかで指定された文字の数、`count`パラメーターが読み取りまたは文字列の末尾に到達します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-246">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a80-247">次の例では、文字列の最初の 23 の文字を非同期に読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-247">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9a80-248"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-248"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9a80-249"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-249"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9a80-250"><paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-250">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-251">文字列リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-251">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9a80-252">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-252">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f9a80-253">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-253">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="f9a80-254">書き込みを開始する <c>buffer</c> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="f9a80-254">The position in <c>buffer</c> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="f9a80-255">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="f9a80-255">The maximum number of characters to read.</span></span> <span data-ttu-id="f9a80-256">指定された文字数をバッファーに書き込む前に文字列の末尾に到達した場合、メソッドは制御を返します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-256">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="f9a80-257">指定した最大文字数を現在の文字列から非同期的に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-257">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="f9a80-258">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f9a80-258">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="f9a80-259"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-259">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="f9a80-260">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、文字列の末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-260">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-261">タスクが完了しないかまでで指定された文字の数、`count`パラメーターが読み取られ、または文字列の末尾に達しています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-261">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9a80-262"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-262"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9a80-263"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-263"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9a80-264"><paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-264">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-265">文字列リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-265">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9a80-266">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-266">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9a80-267">現在の文字列から 1 行分の文字を読み取り、そのデータを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-267">Reads a line of characters from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="f9a80-268">現在の文字列の次の行。文字列の末尾に到達した場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f9a80-268">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-269">このメソッドは、<xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-269">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9a80-270">行は、一連の文字とライン フィード ("\n")、キャリッジ リターン ("\r")、または行の直後にキャリッジ リターンが ("\r\n") をフィードとして定義されます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-270">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f9a80-271">返される文字列には、末尾にキャリッジ リターンとライン フィードが含まれていません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-271">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="f9a80-272">返される値は`null`文字列の末尾に達している場合。</span><span class="sxs-lookup"><span data-stu-id="f9a80-272">The returned value is `null` if the end of the string has been reached.</span></span>  
  
 <span data-ttu-id="f9a80-273">現在のメソッドがスローされた場合、 <xref:System.OutOfMemoryException>、文字がこのメソッドが、読み込むことが、内部に既に読み取られた文字の数によって、基になる文字列で、リーダーの位置が高度な<xref:System.IO.StringReader.ReadLine%2A>バッファーは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-273">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="f9a80-274">既に読み取られた文字が回復することはできませんし、再初期化してのみアクセスできる、文字列内のリーダーの位置を変更できないため、<xref:System.IO.StringReader>です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-274">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="f9a80-275">このような状況を避けるためを使用して、<xref:System.IO.StringReader.Read%2A>読み取りが事前に割り当てられたバッファーの文字メソッドとストアです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-275">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="f9a80-276">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-276">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f9a80-277">目的</span><span class="sxs-lookup"><span data-stu-id="f9a80-277">To do this...</span></span>|<span data-ttu-id="f9a80-278">参照項目</span><span class="sxs-lookup"><span data-stu-id="f9a80-278">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f9a80-279">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-279">Create a text file.</span></span>|[<span data-ttu-id="f9a80-280">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-280">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-281">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-281">Write to a text file.</span></span>|[<span data-ttu-id="f9a80-282">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-282">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-283">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-283">Read from a text file.</span></span>|[<span data-ttu-id="f9a80-284">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f9a80-284">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f9a80-285">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-285">Append text to a file.</span></span>|[<span data-ttu-id="f9a80-286">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="f9a80-286">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-287">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-287">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-288">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-288">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-289">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-289">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-290">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-290">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-291">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-291">Read from a binary file.</span></span>|[<span data-ttu-id="f9a80-292">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-292">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f9a80-293">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-293">Write to a binary file.</span></span>|[<span data-ttu-id="f9a80-294">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-294">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f9a80-295">このコード例に示されている例の一部である、<xref:System.IO.StringReader>クラスです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-295">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-296">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-296">The current reader is closed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="f9a80-297">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-297">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9a80-298">現在の文字列から非同期的に 1 行分の文字を読み取り、そのデータを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-298">Reads a line of characters asynchronously from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="f9a80-299">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f9a80-299">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="f9a80-300"><paramref name="TResult" /> パラメーターの値には、文字列リーダーの次の行が含まれます。または、すべての文字が読み取られた場合は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-300">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9a80-301">次の例では、非同期的に、文字列から一度に 1 行を読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-301">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9a80-302">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-302">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-303">文字列リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-303">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9a80-304">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-304">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9a80-305">現在位置から文字列の末尾まですべての文字を読み取り、1 つの文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-305">Reads all characters from the current position to the end of the string and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="f9a80-306">基になる文字列の現在位置から末尾までの内容。</span><span class="sxs-lookup"><span data-stu-id="f9a80-306">The content from the current position to the end of the underlying string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a80-307">このメソッドは、<xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-307">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9a80-308">現在のメソッドがスローされた場合、 <xref:System.OutOfMemoryException>、文字がこのメソッドが、読み込むことが、内部に既に読み取られた文字の数によって、基になる文字列で、リーダーの位置が高度な<xref:System.IO.StringReader.ReadToEnd%2A>バッファーは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-308">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="f9a80-309">既に読み取られた文字が回復することはできませんし、再初期化してのみアクセスできる、文字列内のリーダーの位置を変更できないため、<xref:System.IO.StringReader>です。</span><span class="sxs-lookup"><span data-stu-id="f9a80-309">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="f9a80-310">このような状況を避けるためを使用して、<xref:System.IO.StringReader.Read%2A>読み取りが事前に割り当てられたバッファーの文字メソッドとストアです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-310">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="f9a80-311">次の表は、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-311">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f9a80-312">目的</span><span class="sxs-lookup"><span data-stu-id="f9a80-312">To do this...</span></span>|<span data-ttu-id="f9a80-313">参照項目</span><span class="sxs-lookup"><span data-stu-id="f9a80-313">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f9a80-314">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-314">Create a text file.</span></span>|[<span data-ttu-id="f9a80-315">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-315">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-316">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-316">Write to a text file.</span></span>|[<span data-ttu-id="f9a80-317">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f9a80-317">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f9a80-318">テキスト ファイルから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="f9a80-318">Read from a text file.</span></span>|[<span data-ttu-id="f9a80-319">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f9a80-319">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f9a80-320">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-320">Append text to a file.</span></span>|[<span data-ttu-id="f9a80-321">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="f9a80-321">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-322">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-322">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-323">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-323">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-324">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-324">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-325">ファイルが存在するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-325">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f9a80-326">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="f9a80-326">Read from a binary file.</span></span>|[<span data-ttu-id="f9a80-327">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-327">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f9a80-328">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-328">Write to a binary file.</span></span>|[<span data-ttu-id="f9a80-329">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f9a80-329">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f9a80-330">このコード例に示されている例の一部である、<xref:System.IO.TextReader>クラスです。</span><span class="sxs-lookup"><span data-stu-id="f9a80-330">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="f9a80-331">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-331">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-332">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-332">The current reader is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9a80-333">現在位置から文字列の末尾まですべての文字を非同期的に読み取り、1 つの文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-333">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="f9a80-334">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f9a80-334">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="f9a80-335"><paramref name="TResult" /> パラメーターの値には、現在位置から文字列の末尾までの文字から成る文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="f9a80-335">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9a80-336">次の例では、文字列全体を非同期的に読み込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f9a80-336">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9a80-337">文字数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-337">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9a80-338">文字列リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-338">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9a80-339">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="f9a80-339">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>