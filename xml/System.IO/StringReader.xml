<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b86237068feab52a54882406b8232fb44f39a26" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69242881" /></Metadata><TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="63d0a-101">文字列から読み取る <see cref="T:System.IO.TextReader" /> を実装します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-102"><xref:System.IO.StringReader>文字列を同期的または非同期的に読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="63d0a-103">メソッドまたはメソッドを使用<xref:System.IO.StringReader.Read%2A>して<xref:System.IO.StringReader.ReadLine%2A> <xref:System.IO.StringReader.ReadLineAsync%2A>一度に1つ<xref:System.IO.StringReader.ReadAsync%2A>の文字を読み取ることができます。また、メソッドまたはメソッドを使用<xref:System.IO.StringReader.ReadToEnd%2A> <xref:System.IO.StringReader.ReadToEndAsync%2A>して、メソッドと文字列全体を1行ずつ読み取ることもできます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="63d0a-104">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="63d0a-105">目的</span><span class="sxs-lookup"><span data-stu-id="63d0a-105">To do this...</span></span>|<span data-ttu-id="63d0a-106">参照項目</span><span class="sxs-lookup"><span data-stu-id="63d0a-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="63d0a-107">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-107">Create a text file.</span></span>|[<span data-ttu-id="63d0a-108">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-109">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-109">Write to a text file.</span></span>|[<span data-ttu-id="63d0a-110">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-111">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="63d0a-111">Read from a text file.</span></span>|[<span data-ttu-id="63d0a-112">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="63d0a-113">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-113">Append text to a file.</span></span>|[<span data-ttu-id="63d0a-114">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="63d0a-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-115">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-116">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-117">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-118">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-119">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-119">Read from a binary file.</span></span>|[<span data-ttu-id="63d0a-120">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="63d0a-121">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-121">Write to a binary file.</span></span>|[<span data-ttu-id="63d0a-122">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="63d0a-123">次の例は、文字列全体を非同期に読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-124">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-124">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-125">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-125">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-126">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-126">How to: Write Text to a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="63d0a-127"><see cref="T:System.IO.StringReader" /> を初期化する目的の文字列。</span><span class="sxs-lookup"><span data-stu-id="63d0a-127">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span></span></param>
        <summary><span data-ttu-id="63d0a-128">指定した文字列から読み取る <see cref="T:System.IO.StringReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-128">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-129">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-129">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="63d0a-130">目的</span><span class="sxs-lookup"><span data-stu-id="63d0a-130">To do this...</span></span>|<span data-ttu-id="63d0a-131">参照項目</span><span class="sxs-lookup"><span data-stu-id="63d0a-131">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="63d0a-132">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-132">Create a text file.</span></span>|[<span data-ttu-id="63d0a-133">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-133">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-134">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-134">Write to a text file.</span></span>|[<span data-ttu-id="63d0a-135">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-135">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-136">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="63d0a-136">Read from a text file.</span></span>|[<span data-ttu-id="63d0a-137">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-137">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="63d0a-138">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-138">Append text to a file.</span></span>|[<span data-ttu-id="63d0a-139">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="63d0a-139">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-140">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-140">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-141">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-141">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-142">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-142">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-143">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-143">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-144">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-144">Read from a binary file.</span></span>|[<span data-ttu-id="63d0a-145">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-145">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="63d0a-146">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-146">Write to a binary file.</span></span>|[<span data-ttu-id="63d0a-147">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-147">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="63d0a-148">このコード例は、 <xref:System.IO.StringReader>クラスに対して提供される大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-148">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63d0a-149"><paramref name="s" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-149">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-150">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-150">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-151">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-151">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-152">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-152">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d0a-153"><see cref="T:System.IO.StringReader" /> を閉じます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-153">Closes the <see cref="T:System.IO.StringReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="63d0a-154">ファイルを作成し、ファイルにテキストを書き込む例については[、「方法:ファイル](~/docs/standard/io/how-to-write-text-to-a-file.md)にテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-154">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="63d0a-155">ファイルからテキストを読み取る例については、 [「方法:ファイル](~/docs/standard/io/how-to-read-text-from-a-file.md)からテキストを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-155">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="63d0a-156">バイナリファイルの読み取りと書き込みの例については、「 [方法:新しく作成されたデータファイル](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)の読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="63d0a-156">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
<span data-ttu-id="63d0a-157">このメソッドは、 <xref:System.IO.TextReader.Close%2A?displayProperty=nameWithType>メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="63d0a-157">This method overrides the <xref:System.IO.TextReader.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
<span data-ttu-id="63d0a-158">の`Close`この実装は、 <xref:System.IO.StringReader.Dispose%2A>値を`true`渡すメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-158">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A>, method passing a `true` value.</span></span> <span data-ttu-id="63d0a-159">を`Close`呼び出した後、他のメソッドが例外をスローする場合があります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-159">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-160">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-160">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-161">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-161">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-162">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-162">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="63d0a-163">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63d0a-163"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="63d0a-164"><see cref="T:System.IO.StringReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-164">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-165">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StringReader> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-165">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="63d0a-166">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-166">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="63d0a-167">
            <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-167">
            <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="63d0a-168">をオーバーライド<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />する場合は、以前にを<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="63d0a-168">When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-169">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-169">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-170">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-170">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-171">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-171">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d0a-172">読み取り可能な次の文字を返しますが、その文字は使用されません。</span><span class="sxs-lookup"><span data-stu-id="63d0a-172">Returns the next available character but does not consume it.</span></span></summary>
        <returns><span data-ttu-id="63d0a-173">読み取り対象の次の文字を表す整数。使用できる文字がないか、ストリームがシークをサポートしていない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="63d0a-173">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-174">メソッド<xref:System.IO.StringReader.Peek%2A>は、ファイルの終わりまたは別のエラーが発生したかどうかを判断するために、整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-174">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="63d0a-175">これにより、ユーザーは最初に、返された値が-1 であるか<xref:System.Char>どうかを、型にキャストする前に確認できます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-175">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="63d0a-176">このメソッドは、 <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="63d0a-176">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="63d0a-177">の現在の`StringReader`位置は、この操作によって変更されません。</span><span class="sxs-lookup"><span data-stu-id="63d0a-177">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="63d0a-178">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-178">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="63d0a-179">目的</span><span class="sxs-lookup"><span data-stu-id="63d0a-179">To do this...</span></span>|<span data-ttu-id="63d0a-180">参照項目</span><span class="sxs-lookup"><span data-stu-id="63d0a-180">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="63d0a-181">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-181">Create a text file.</span></span>|[<span data-ttu-id="63d0a-182">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-183">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-183">Write to a text file.</span></span>|[<span data-ttu-id="63d0a-184">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-184">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-185">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="63d0a-185">Read from a text file.</span></span>|[<span data-ttu-id="63d0a-186">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-186">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="63d0a-187">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-188">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-188">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-189">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-189">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-190">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-190">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-191">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-191">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63d0a-192">入力文字列から次の文字または次の文字セットを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-192">Reads the next character or next set of characters from the input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d0a-193">入力文字列から次の文字を読み取り、1 文字分だけ文字位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-193">Reads the next character from the input string and advances the character position by one character.</span></span></summary>
        <returns><span data-ttu-id="63d0a-194">基になる文字列の次の文字。または使用できる文字がない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="63d0a-194">The next character from the underlying string, or -1 if no more characters are available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-195">このメソッドは、 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="63d0a-195">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="63d0a-196">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-196">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="63d0a-197">目的</span><span class="sxs-lookup"><span data-stu-id="63d0a-197">To do this...</span></span>|<span data-ttu-id="63d0a-198">参照項目</span><span class="sxs-lookup"><span data-stu-id="63d0a-198">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="63d0a-199">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-199">Create a text file.</span></span>|[<span data-ttu-id="63d0a-200">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-200">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-201">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-201">Write to a text file.</span></span>|[<span data-ttu-id="63d0a-202">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-202">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-203">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="63d0a-203">Read from a text file.</span></span>|[<span data-ttu-id="63d0a-204">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-204">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="63d0a-205">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-205">Append text to a file.</span></span>|[<span data-ttu-id="63d0a-206">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="63d0a-206">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-207">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-207">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-208">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-208">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-209">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-209">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-210">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-210">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-211">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-211">Read from a binary file.</span></span>|[<span data-ttu-id="63d0a-212">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-212">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="63d0a-213">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-213">Write to a binary file.</span></span>|[<span data-ttu-id="63d0a-214">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-214">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="63d0a-215">このコード例は、 <xref:System.IO.StringReader>クラスに対して提供される大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-215">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-216">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-216">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-217">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-217">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-218">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-218">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-219">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-219">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="63d0a-220">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-220">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="63d0a-221">バッファー内の開始インデックス。</span><span class="sxs-lookup"><span data-stu-id="63d0a-221">The starting index in the buffer.</span></span></param>
        <param name="count"><span data-ttu-id="63d0a-222">読み取る文字の数。</span><span class="sxs-lookup"><span data-stu-id="63d0a-222">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="63d0a-223">入力文字列から文字のブロックを読み取り、<paramref name="count" /> だけ文字位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-223">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span></span></summary>
        <returns><span data-ttu-id="63d0a-224">バッファーに読み取られた合計文字数。</span><span class="sxs-lookup"><span data-stu-id="63d0a-224">The total number of characters read into the buffer.</span></span> <span data-ttu-id="63d0a-225">要求しただけの文字数を読み取ることができなかった場合、この値は要求した文字数より小さくなります。基になる文字列の末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-225">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-226">このメソッドは、<xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="63d0a-226">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="63d0a-227">メソッドは、 <xref:System.IO.StringReader>から文字配列`count`の`buffer`位置`index`で始まる文字までを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-227">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="63d0a-228">実際に読み取られた文字数を返します。文字列の末尾に到達し、文字が読み取られていない場合は0を返します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-228">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="63d0a-229">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-229">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="63d0a-230">目的</span><span class="sxs-lookup"><span data-stu-id="63d0a-230">To do this...</span></span>|<span data-ttu-id="63d0a-231">参照項目</span><span class="sxs-lookup"><span data-stu-id="63d0a-231">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="63d0a-232">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-232">Create a text file.</span></span>|[<span data-ttu-id="63d0a-233">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-233">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-234">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-234">Write to a text file.</span></span>|[<span data-ttu-id="63d0a-235">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-235">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-236">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="63d0a-236">Read from a text file.</span></span>|[<span data-ttu-id="63d0a-237">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-237">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="63d0a-238">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-238">Append text to a file.</span></span>|[<span data-ttu-id="63d0a-239">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="63d0a-239">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-240">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-240">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-241">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-241">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-242">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-242">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-243">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-243">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-244">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-244">Read from a binary file.</span></span>|[<span data-ttu-id="63d0a-245">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-245">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="63d0a-246">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-246">Write to a binary file.</span></span>|[<span data-ttu-id="63d0a-247">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-247">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63d0a-248"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-248"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="63d0a-249">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-249">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="63d0a-250"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-250"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-251">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-251">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-252">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-252">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-253">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-253">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-254">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-254">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="63d0a-255">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-255">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="63d0a-256">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="63d0a-256">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="63d0a-257">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="63d0a-257">The maximum number of characters to read.</span></span> <span data-ttu-id="63d0a-258">指定された文字数をバッファーに書き込む前に文字列の末尾に到達した場合、メソッドは制御を返します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-258">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="63d0a-259">指定した最大文字数を現在の文字列から非同期的に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-259">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="63d0a-260">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="63d0a-260">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="63d0a-261"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-261">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="63d0a-262">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、文字列の末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-262">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-263">`count`パラメーターで指定された文字数が読み取られるか、文字列の末尾に到達すると、タスクが完了します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-263">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d0a-264">次の例は、文字列の最初の23文字を非同期に読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-264">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63d0a-265"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-265"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="63d0a-266"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-266"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="63d0a-267"><paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="63d0a-267">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-268">文字列リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-268">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63d0a-269">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-269">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="63d0a-270">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-270">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="63d0a-271">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="63d0a-271">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="63d0a-272">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="63d0a-272">The maximum number of characters to read.</span></span> <span data-ttu-id="63d0a-273">指定された文字数をバッファーに書き込む前に文字列の末尾に到達した場合、メソッドは制御を返します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-273">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="63d0a-274">指定した最大文字数を現在の文字列から非同期的に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-274">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="63d0a-275">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="63d0a-275">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="63d0a-276"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-276">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="63d0a-277">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、文字列の末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-277">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-278">このタスクは、 `count`パラメーターで指定された文字数が読み込まれるか、文字列の末尾に到達するまでは完了しません。</span><span class="sxs-lookup"><span data-stu-id="63d0a-278">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63d0a-279"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-279"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="63d0a-280"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-280"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="63d0a-281"><paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="63d0a-281">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-282">文字列リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-282">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63d0a-283">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-283">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d0a-284">現在の文字列から 1 行分の文字を読み取り、そのデータを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-284">Reads a line of characters from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="63d0a-285">現在の文字列の次の行。文字列の末尾に到達した場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="63d0a-285">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-286">このメソッドは、 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="63d0a-286">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="63d0a-287">行は、文字のシーケンスの後に改行 ("\n")、復帰 ("\r")、キャリッジリターンの直後に改行文字 ("\r\n")、またはストリームの終端マーカーとして定義されます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-287">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), a carriage return immediately followed by a line feed ("\r\n"), or the end-of-stream marker.</span></span> <span data-ttu-id="63d0a-288">返される文字列には、終端の復帰またはラインフィードは含まれません。</span><span class="sxs-lookup"><span data-stu-id="63d0a-288">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="63d0a-289">ストリームの終わりの`null`マーカーに達した場合、戻り値はになります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-289">The returned value is `null` if the end-of-stream marker has been reached.</span></span> <span data-ttu-id="63d0a-290">つまり、最後に読み取られた行とストリームの末尾のマーカーの間に何もないと、メソッドはを返し`null`ます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-290">That is to say, if there is nothing between the last line read and the end-of-stream marker, the method returns `null`.</span></span>  
  
 <span data-ttu-id="63d0a-291">現在のメソッドがをスロー <xref:System.OutOfMemoryException>する場合、基になる文字列内のリーダーの位置は、メソッドが読み取ることができる文字数だけ進んでいますが、内部<xref:System.IO.StringReader.ReadLine%2A>バッファーに既に読み込まれている文字は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-291">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="63d0a-292">文字列内のリーダーの位置は変更できないため、既に読み取られている文字は回復不能であり、を再初期化<xref:System.IO.StringReader>することによってのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-292">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="63d0a-293">このような状況を回避するに<xref:System.IO.StringReader.Read%2A>は、メソッドを使用し、事前割り当て済みのバッファーに読み取り文字を格納します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-293">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="63d0a-294">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-294">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="63d0a-295">目的</span><span class="sxs-lookup"><span data-stu-id="63d0a-295">To do this...</span></span>|<span data-ttu-id="63d0a-296">参照項目</span><span class="sxs-lookup"><span data-stu-id="63d0a-296">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="63d0a-297">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-297">Create a text file.</span></span>|[<span data-ttu-id="63d0a-298">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-298">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-299">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-299">Write to a text file.</span></span>|[<span data-ttu-id="63d0a-300">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-300">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-301">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="63d0a-301">Read from a text file.</span></span>|[<span data-ttu-id="63d0a-302">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-302">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="63d0a-303">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-303">Append text to a file.</span></span>|[<span data-ttu-id="63d0a-304">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="63d0a-304">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-305">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-305">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-306">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-306">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-307">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-307">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-308">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-308">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-309">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-309">Read from a binary file.</span></span>|[<span data-ttu-id="63d0a-310">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-310">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="63d0a-311">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-311">Write to a binary file.</span></span>|[<span data-ttu-id="63d0a-312">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-312">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="63d0a-313">このコード例は、 <xref:System.IO.StringReader>クラスに対して提供される大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-313">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-314">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-314">The current reader is closed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="63d0a-315">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-315">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-316">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-316">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-317">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-317">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-318">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-318">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d0a-319">現在の文字列から非同期的に 1 行分の文字を読み取り、そのデータを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-319">Reads a line of characters asynchronously from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="63d0a-320">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="63d0a-320">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="63d0a-321"><paramref name="TResult" /> パラメーターの値には、文字列リーダーの次の行が含まれます。または、すべての文字が読み取られた場合は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-321">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63d0a-322">次の例は、一度に1つの行を文字列から非同期に読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-322">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="63d0a-323">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-323">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-324">文字列リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-324">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63d0a-325">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-325">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d0a-326">現在位置から文字列の末尾まですべての文字を読み取り、1 つの文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-326">Reads all characters from the current position to the end of the string and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="63d0a-327">基になる文字列の現在位置から末尾までの内容。</span><span class="sxs-lookup"><span data-stu-id="63d0a-327">The content from the current position to the end of the underlying string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d0a-328">このメソッドは、 <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="63d0a-328">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="63d0a-329">現在のメソッドがをスロー <xref:System.OutOfMemoryException>する場合、基になる文字列内のリーダーの位置は、メソッドが読み取ることができる文字数だけ進んでいますが、内部<xref:System.IO.StringReader.ReadToEnd%2A>バッファーに既に読み込まれている文字は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-329">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="63d0a-330">文字列内のリーダーの位置は変更できないため、既に読み取られている文字は回復不能であり、を再初期化<xref:System.IO.StringReader>することによってのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-330">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="63d0a-331">このような状況を回避するに<xref:System.IO.StringReader.Read%2A>は、メソッドを使用し、事前割り当て済みのバッファーに読み取り文字を格納します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-331">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="63d0a-332">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-332">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="63d0a-333">目的</span><span class="sxs-lookup"><span data-stu-id="63d0a-333">To do this...</span></span>|<span data-ttu-id="63d0a-334">参照項目</span><span class="sxs-lookup"><span data-stu-id="63d0a-334">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="63d0a-335">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-335">Create a text file.</span></span>|[<span data-ttu-id="63d0a-336">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-336">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-337">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-337">Write to a text file.</span></span>|[<span data-ttu-id="63d0a-338">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-338">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="63d0a-339">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="63d0a-339">Read from a text file.</span></span>|[<span data-ttu-id="63d0a-340">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-340">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="63d0a-341">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-341">Append text to a file.</span></span>|[<span data-ttu-id="63d0a-342">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="63d0a-342">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-343">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-343">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-344">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-344">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-345">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-345">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-346">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-346">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="63d0a-347">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="63d0a-347">Read from a binary file.</span></span>|[<span data-ttu-id="63d0a-348">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-348">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="63d0a-349">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-349">Write to a binary file.</span></span>|[<span data-ttu-id="63d0a-350">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="63d0a-350">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="63d0a-351">このコード例は、 <xref:System.IO.TextReader>クラスに対して提供される大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="63d0a-351">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="63d0a-352">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-352">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-353">現在のリーダーが閉じています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-353">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="63d0a-354">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="63d0a-354">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="63d0a-355">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="63d0a-355">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="63d0a-356">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="63d0a-356">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d0a-357">現在位置から文字列の末尾まですべての文字を非同期的に読み取り、1 つの文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="63d0a-357">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="63d0a-358">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="63d0a-358">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="63d0a-359"><paramref name="TResult" /> パラメーターの値には、現在位置から文字列の末尾までの文字から成る文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="63d0a-359">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63d0a-360">次の例は、文字列全体を非同期に読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-360">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="63d0a-361">文字数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-361">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="63d0a-362">文字列リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-362">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63d0a-363">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="63d0a-363">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
