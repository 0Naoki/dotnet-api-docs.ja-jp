<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7464a35d5d918ea9d55ba7973845d7fc133537cc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37651627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ca4bc-101">文字列から読み取る <see cref="T:System.IO.TextReader" /> を実装します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca4bc-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-102"><xref:System.IO.StringReader> 同期または非同期で文字列を読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="ca4bc-103">回に文字を読み取ることができます、<xref:System.IO.StringReader.Read%2A>または<xref:System.IO.StringReader.ReadAsync%2A>メソッドは、時間を使用して、一度に 1 行、<xref:System.IO.StringReader.ReadLine%2A>または<xref:System.IO.StringReader.ReadLineAsync%2A>メソッドと、文字列全体を使用して、<xref:System.IO.StringReader.ReadToEnd%2A>または<xref:System.IO.StringReader.ReadToEndAsync%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="ca4bc-104">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="ca4bc-105">目的</span><span class="sxs-lookup"><span data-stu-id="ca4bc-105">To do this...</span></span>|<span data-ttu-id="ca4bc-106">参照項目</span><span class="sxs-lookup"><span data-stu-id="ca4bc-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="ca4bc-107">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-107">Create a text file.</span></span>|[<span data-ttu-id="ca4bc-108">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-109">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-109">Write to a text file.</span></span>|[<span data-ttu-id="ca4bc-110">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-111">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-111">Read from a text file.</span></span>|[<span data-ttu-id="ca4bc-112">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca4bc-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="ca4bc-113">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-113">Append text to a file.</span></span>|[<span data-ttu-id="ca4bc-114">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="ca4bc-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-115">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-116">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-117">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-118">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-119">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-119">Read from a binary file.</span></span>|[<span data-ttu-id="ca4bc-120">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="ca4bc-121">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-121">Write to a binary file.</span></span>|[<span data-ttu-id="ca4bc-122">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca4bc-123">次の例では、非同期的に文字列全体を読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ca4bc-124">
            <see cref="T:System.IO.StringReader" /> を初期化する目的の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-124">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca4bc-125">指定した文字列から読み取る <see cref="T:System.IO.StringReader" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-125">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-126">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-126">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="ca4bc-127">目的</span><span class="sxs-lookup"><span data-stu-id="ca4bc-127">To do this...</span></span>|<span data-ttu-id="ca4bc-128">参照項目</span><span class="sxs-lookup"><span data-stu-id="ca4bc-128">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="ca4bc-129">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-129">Create a text file.</span></span>|[<span data-ttu-id="ca4bc-130">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-130">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-131">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-131">Write to a text file.</span></span>|[<span data-ttu-id="ca4bc-132">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-132">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-133">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-133">Read from a text file.</span></span>|[<span data-ttu-id="ca4bc-134">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca4bc-134">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="ca4bc-135">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-135">Append text to a file.</span></span>|[<span data-ttu-id="ca4bc-136">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="ca4bc-136">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-137">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-137">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-138">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-138">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-139">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-139">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-140">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-140">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-141">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-141">Read from a binary file.</span></span>|[<span data-ttu-id="ca4bc-142">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-142">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="ca4bc-143">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-143">Write to a binary file.</span></span>|[<span data-ttu-id="ca4bc-144">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-144">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca4bc-145">このコード例が示されている例の一部、<xref:System.IO.StringReader>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-145">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca4bc-146">
            <paramref name="s" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-146">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca4bc-147">
            <see cref="T:System.IO.StringReader" /> を閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-147">Closes the <see cref="T:System.IO.StringReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-148">ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。[方法: テキスト ファイルを書き込む](~/docs/standard/io/how-to-write-text-to-a-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-148">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="ca4bc-149">ファイルからテキストの読み取りの例は、次を参照してください。[方法: テキスト ファイルからの読み取り](~/docs/standard/io/how-to-read-text-from-a-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-149">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="ca4bc-150">読み取りと書き込みをバイナリ ファイルの例は、次を参照してください。[方法: 新しく作成されたデータ ファイルを読み書き](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-150">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="ca4bc-151">このメソッドは、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-151">This method overrides the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ca4bc-152">この実装の`Close`呼び出し、<xref:System.IO.StringReader.Dispose%2A>メソッドに渡して、`true`値。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-152">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="ca4bc-153">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない`Close`します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-153">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="ca4bc-154">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-154">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="ca4bc-155">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-155">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="ca4bc-156">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-156">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="ca4bc-157">呼び出しに続く`Close`、他のメソッドが例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-157">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ca4bc-158">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-158">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca4bc-159">
            <see cref="T:System.IO.StringReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-159">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-160">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StringReader> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-160">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="ca4bc-161">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-161">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ca4bc-162">
            <para>
              <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> 他のオブジェクトで何度も呼び出せます。オーバーライドするときに<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />を以前の呼び出しで破棄されたオブジェクトを参照しないように注意、<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-162">
              <para>
                <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca4bc-163">使用可能な次の文字を返しますが、その文字は使用されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-163">Returns the next available character but does not consume it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-164">読み取り対象の次の文字を表す整数。使用できる文字がないか、ストリームがシークをサポートしていない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-164">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-165"><xref:System.IO.StringReader.Peek%2A>メソッドは、ファイル、または別のエラーの終了が発生したかどうかを確認するには整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-165">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="ca4bc-166">これにより、ユーザーをまず確認かどうか、返される値は-1 にキャストする前に、<xref:System.Char>型。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-166">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="ca4bc-167">このメソッドは、<xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-167">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ca4bc-168">現在の位置、`StringReader`この操作では変更されません。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-168">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="ca4bc-169">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-169">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="ca4bc-170">目的</span><span class="sxs-lookup"><span data-stu-id="ca4bc-170">To do this...</span></span>|<span data-ttu-id="ca4bc-171">参照項目</span><span class="sxs-lookup"><span data-stu-id="ca4bc-171">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="ca4bc-172">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-172">Create a text file.</span></span>|[<span data-ttu-id="ca4bc-173">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-173">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-174">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-174">Write to a text file.</span></span>|[<span data-ttu-id="ca4bc-175">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-175">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-176">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-176">Read from a text file.</span></span>|[<span data-ttu-id="ca4bc-177">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca4bc-177">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="ca4bc-178">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-178">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-179">現在のリーダーが閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-179">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca4bc-180">入力文字列から次の文字または次の文字セットを読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-180">Reads the next character or next set of characters from the input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca4bc-181">入力文字列から次の文字を読み取り、1 文字分だけ文字位置を進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-181">Reads the next character from the input string and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-182">基になる文字列の次の文字。または使用できる文字がない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-182">The next character from the underlying string, or -1 if no more characters are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-183">このメソッドは、<xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-183">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ca4bc-184">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-184">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="ca4bc-185">目的</span><span class="sxs-lookup"><span data-stu-id="ca4bc-185">To do this...</span></span>|<span data-ttu-id="ca4bc-186">参照項目</span><span class="sxs-lookup"><span data-stu-id="ca4bc-186">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="ca4bc-187">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-187">Create a text file.</span></span>|[<span data-ttu-id="ca4bc-188">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-188">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-189">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-189">Write to a text file.</span></span>|[<span data-ttu-id="ca4bc-190">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-190">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-191">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-191">Read from a text file.</span></span>|[<span data-ttu-id="ca4bc-192">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca4bc-192">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="ca4bc-193">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-193">Append text to a file.</span></span>|[<span data-ttu-id="ca4bc-194">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="ca4bc-194">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-195">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-195">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-196">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-196">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-197">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-197">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-198">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-198">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-199">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-199">Read from a binary file.</span></span>|[<span data-ttu-id="ca4bc-200">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-200">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="ca4bc-201">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-201">Write to a binary file.</span></span>|[<span data-ttu-id="ca4bc-202">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-202">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca4bc-203">このコード例が示されている例の一部、<xref:System.IO.StringReader>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-203">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-204">現在のリーダーが閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-204">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ca4bc-205">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-205">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ca4bc-206">バッファー内の開始インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-206">The starting index in the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ca4bc-207">読み取る文字の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-207">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca4bc-208">入力文字列から文字のブロックを読み取り、<paramref name="count" /> だけ文字位置を進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-208">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-209">バッファーに読み取られた合計文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-209">The total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="ca4bc-210">要求しただけの文字数を読み取ることができなかった場合、この値は要求した文字数より小さくなります。基になる文字列の末尾に到達した場合は 0 になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-210">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-211">このメソッドは、<xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-211">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ca4bc-212">メソッドは最大読み取り`count`文字を<xref:System.IO.StringReader>に、`buffer`位置から文字配列`index`します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-212">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="ca4bc-213">実際の文字数は、読み取り、または文字列の末尾に達するし、文字が読み取れない場合は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-213">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="ca4bc-214">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-214">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="ca4bc-215">目的</span><span class="sxs-lookup"><span data-stu-id="ca4bc-215">To do this...</span></span>|<span data-ttu-id="ca4bc-216">参照項目</span><span class="sxs-lookup"><span data-stu-id="ca4bc-216">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="ca4bc-217">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-217">Create a text file.</span></span>|[<span data-ttu-id="ca4bc-218">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-218">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-219">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-219">Write to a text file.</span></span>|[<span data-ttu-id="ca4bc-220">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-220">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-221">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-221">Read from a text file.</span></span>|[<span data-ttu-id="ca4bc-222">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca4bc-222">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="ca4bc-223">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-223">Append text to a file.</span></span>|[<span data-ttu-id="ca4bc-224">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="ca4bc-224">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-225">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-225">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-226">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-226">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-227">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-227">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-228">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-228">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-229">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-229">Read from a binary file.</span></span>|[<span data-ttu-id="ca4bc-230">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-230">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="ca4bc-231">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-231">Write to a binary file.</span></span>|[<span data-ttu-id="ca4bc-232">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-232">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca4bc-233">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-233">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca4bc-234">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-234">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca4bc-235">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-235">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-236">現在のリーダーが閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-236">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ca4bc-237">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-237">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ca4bc-238">書き込みを開始する <c>buffer</c> 内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-238">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ca4bc-239">読み取り対象の最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-239">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="ca4bc-240">指定された文字数をバッファーに書き込む前に文字列の末尾に到達した場合、メソッドは制御を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-240">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca4bc-241">指定した最大文字数を現在の文字列から非同期的に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-241">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-242">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-242">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="ca4bc-243">
            <paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-243">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="ca4bc-244">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、文字列の末尾に到達した場合は 0 になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-244">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-245">タスクの完了後にいずれかで指定された文字の数、`count`パラメーターが読み取り専用または文字列の末尾に到達します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-245">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca4bc-246">次の例では、非同期的に文字列の最初の 23 の文字を読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-246">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca4bc-247">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-247">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca4bc-248">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-248">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca4bc-249">
            <paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-249">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-250">文字列リーダーは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-250">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca4bc-251">リーダーは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-251">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ca4bc-252">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-252">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ca4bc-253">書き込みを開始する <c>buffer</c> 内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-253">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ca4bc-254">読み取り対象の最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-254">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="ca4bc-255">指定された文字数をバッファーに書き込む前に文字列の末尾に到達した場合、メソッドは制御を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-255">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca4bc-256">指定した最大文字数を現在の文字列から非同期的に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-256">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-257">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-257">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="ca4bc-258">
            <paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-258">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="ca4bc-259">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、文字列の末尾に到達した場合は 0 になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-259">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-260">タスクが完了しないまでで指定された文字の数、`count`パラメーターは読み取り専用、または文字列の末尾に達しています。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-260">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca4bc-261">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-261">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca4bc-262">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-262">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca4bc-263">
            <paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-263">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-264">文字列リーダーは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-264">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca4bc-265">リーダーは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-265">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca4bc-266">現在の文字列から 1 行分の文字を読み取り、そのデータを文字列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-266">Reads a line of characters from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-267">現在の文字列の次の行。文字列の末尾に到達した場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-267">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-268">このメソッドは、<xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-268">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ca4bc-269">行は、一連の文字が続く行 ("\n") のフィード、キャリッジ リターン ("\r") またはキャリッジ リターンとライン フィード ("\r\n") として定義されます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-269">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="ca4bc-270">返される文字列は、終端のキャリッジ リターン、改行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-270">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="ca4bc-271">返される値は`null`文字列の末尾に達している場合。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-271">The returned value is `null` if the end of the string has been reached.</span></span>  
  
 <span data-ttu-id="ca4bc-272">現在のメソッドがスローした場合、 <xref:System.OutOfMemoryException>、基になる文字列で、リーダーの位置が文字を読み取るには、メソッドができましたが、内部に既に読み取られた文字の数で高度な<xref:System.IO.StringReader.ReadLine%2A>バッファーは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-272">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="ca4bc-273">既に読み取られた文字は回復不可能でと、再初期化によってのみアクセスできる、文字列内のリーダーの位置を変更できないため、<xref:System.IO.StringReader>します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-273">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="ca4bc-274">このような状況を避けるためには、使用、<xref:System.IO.StringReader.Read%2A>メソッドとストア、読み取りが事前に割り当てられるバッファーの文字します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-274">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="ca4bc-275">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-275">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="ca4bc-276">目的</span><span class="sxs-lookup"><span data-stu-id="ca4bc-276">To do this...</span></span>|<span data-ttu-id="ca4bc-277">参照項目</span><span class="sxs-lookup"><span data-stu-id="ca4bc-277">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="ca4bc-278">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-278">Create a text file.</span></span>|[<span data-ttu-id="ca4bc-279">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-279">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-280">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-280">Write to a text file.</span></span>|[<span data-ttu-id="ca4bc-281">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-281">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-282">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-282">Read from a text file.</span></span>|[<span data-ttu-id="ca4bc-283">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca4bc-283">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="ca4bc-284">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-284">Append text to a file.</span></span>|[<span data-ttu-id="ca4bc-285">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="ca4bc-285">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-286">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-286">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-287">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-287">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-288">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-288">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-289">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-289">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-290">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-290">Read from a binary file.</span></span>|[<span data-ttu-id="ca4bc-291">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-291">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="ca4bc-292">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-292">Write to a binary file.</span></span>|[<span data-ttu-id="ca4bc-293">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-293">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca4bc-294">このコード例が示されている例の一部、<xref:System.IO.StringReader>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-294">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-295">現在のリーダーが閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-295">The current reader is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="ca4bc-296">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-296">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca4bc-297">現在の文字列から非同期的に 1 行分の文字を読み取り、そのデータを文字列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-297">Reads a line of characters asynchronously from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-298">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-298">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="ca4bc-299">
            <paramref name="TResult" /> パラメーターの値には、文字列リーダーの次の行が含まれます。または、すべての文字が読み取られた場合は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-299">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ca4bc-300">次の例では、文字列から一度に 1 行を非同期的に読み込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-300">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca4bc-301">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-301">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-302">文字列リーダーは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-302">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca4bc-303">リーダーは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-303">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca4bc-304">現在位置から文字列の末尾まですべての文字を読み取り、1 つの文字列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-304">Reads all characters from the current position to the end of the string and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-305">基になる文字列の現在位置から末尾までの内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-305">The content from the current position to the end of the underlying string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bc-306">このメソッドは、<xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-306">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ca4bc-307">現在のメソッドがスローした場合、 <xref:System.OutOfMemoryException>、基になる文字列で、リーダーの位置が文字を読み取るには、メソッドができましたが、内部に既に読み取られた文字の数で高度な<xref:System.IO.StringReader.ReadToEnd%2A>バッファーは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-307">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="ca4bc-308">既に読み取られた文字は回復不可能でと、再初期化によってのみアクセスできる、文字列内のリーダーの位置を変更できないため、<xref:System.IO.StringReader>します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-308">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="ca4bc-309">このような状況を避けるためには、使用、<xref:System.IO.StringReader.Read%2A>メソッドとストア、読み取りが事前に割り当てられるバッファーの文字します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-309">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="ca4bc-310">次の表では、その他の一般的なまたは関連する I/O タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-310">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="ca4bc-311">目的</span><span class="sxs-lookup"><span data-stu-id="ca4bc-311">To do this...</span></span>|<span data-ttu-id="ca4bc-312">参照項目</span><span class="sxs-lookup"><span data-stu-id="ca4bc-312">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="ca4bc-313">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-313">Create a text file.</span></span>|[<span data-ttu-id="ca4bc-314">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-314">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-315">テキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-315">Write to a text file.</span></span>|[<span data-ttu-id="ca4bc-316">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca4bc-316">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="ca4bc-317">テキスト ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-317">Read from a text file.</span></span>|[<span data-ttu-id="ca4bc-318">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca4bc-318">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="ca4bc-319">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-319">Append text to a file.</span></span>|[<span data-ttu-id="ca4bc-320">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="ca4bc-320">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-321">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-321">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-322">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-322">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-323">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-323">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-324">ファイルの存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-324">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ca4bc-325">バイナリ ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-325">Read from a binary file.</span></span>|[<span data-ttu-id="ca4bc-326">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-326">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="ca4bc-327">バイナリ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-327">Write to a binary file.</span></span>|[<span data-ttu-id="ca4bc-328">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ca4bc-328">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca4bc-329">このコード例が示されている例の一部、<xref:System.IO.TextReader>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-329">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="ca4bc-330">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-330">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-331">現在のリーダーが閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-331">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca4bc-332">現在位置から文字列の末尾まですべての文字を非同期的に読み取り、1 つの文字列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-332">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca4bc-333">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-333">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="ca4bc-334">
            <paramref name="TResult" /> パラメーターの値には、現在位置から文字列の末尾までの文字から成る文字列が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-334">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ca4bc-335">次の例では、非同期的に文字列全体を読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ca4bc-335">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca4bc-336">文字数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-336">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca4bc-337">文字列リーダーは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-337">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca4bc-338">リーダーは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca4bc-338">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>