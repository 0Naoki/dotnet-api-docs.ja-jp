<Type Name="BinaryReader" FullName="System.IO.BinaryReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa9a9c38c8c36285a549e0e02c2c217d8dc80bce" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69243888" /></Metadata><TypeSignature Language="C#" Value="public class BinaryReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.BinaryReader" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryReader : IDisposable" />
  <TypeSignature Language="F#" Value="type BinaryReader = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4164e-101">プリミティブ データ型を特定のエンコーディングのバイナリ値として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-101">Reads primitive data types as binary values in a specific encoding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-102">クラス<xref:System.IO.BinaryReader>には、ストリームからのプリミティブデータ型の読み取りを簡単にするメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="4164e-102">The <xref:System.IO.BinaryReader> class provides methods that simplify reading primitive data types from a stream.</span></span> <span data-ttu-id="4164e-103">たとえば、 <xref:System.IO.BinaryReader.ReadBoolean%2A>メソッドを使用して次のバイトをブール値として読み取り、ストリーム内の現在位置を1バイト進めることができます。</span><span class="sxs-lookup"><span data-stu-id="4164e-103">For example, you can use the <xref:System.IO.BinaryReader.ReadBoolean%2A> method to read the next byte as a Boolean value and advance the current position in the stream by one byte.</span></span> <span data-ttu-id="4164e-104">クラスには、さまざまなデータ型をサポートする read メソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4164e-104">The class includes read methods that support different data types.</span></span>  
  
 <span data-ttu-id="4164e-105"><xref:System.IO.BinaryReader>クラスの新しいインスタンスを作成するときに、読み取るストリームを指定します。また、必要に応じて、エンコードの種類と、オブジェクトを<xref:System.IO.BinaryReader>破棄した後にストリームを開いたままにするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="4164e-105">When you create a new instance of the <xref:System.IO.BinaryReader> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryReader> object.</span></span> <span data-ttu-id="4164e-106">エンコードの種類を指定しない場合は、UTF-8 が使用されます。</span><span class="sxs-lookup"><span data-stu-id="4164e-106">If you do not specify an encoding type, UTF-8 is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4164e-107">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="4164e-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="4164e-108">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4164e-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="4164e-109">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4164e-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="4164e-110">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="4164e-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="4164e-111">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-112">次のコード例は、ファイルにアプリケーション設定を格納および取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-112">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="4164e-113">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="4164e-113">How to: Read and Write to a Newly Created Data File</span></span></related>
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-114">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-114">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-115">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-115">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-116">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-116">How to: Write Text to a File</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4164e-117"><see cref="T:System.IO.BinaryReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4164e-117">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryReader : System.IO.Stream -&gt; System.IO.BinaryReader" Usage="new System.IO.BinaryReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4164e-118">入力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="4164e-118">The input stream.</span></span></param>
        <summary><span data-ttu-id="4164e-119">指定したストリームに基づき、UTF-8 エンコーディングを使用する <see cref="T:System.IO.BinaryReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4164e-119">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and using UTF-8 encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-120">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-120">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-121">次のコード例は、ファイルにアプリケーション設定を格納および取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-121">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-122">ストリームが読み取りをサポートしていないか、<see langword="null" /> であるか、既に閉じています。</span><span class="sxs-lookup"><span data-stu-id="4164e-122">The stream does not support reading, is <see langword="null" />, or is already closed.</span></span></exception>
        <altmember cref="T:System.Text.UTF8Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-123">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-123">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-124">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-124">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-125">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-125">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryReader : System.IO.Stream * System.Text.Encoding -&gt; System.IO.BinaryReader" Usage="new System.IO.BinaryReader (input, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4164e-126">入力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="4164e-126">The input stream.</span></span></param>
        <param name="encoding"><span data-ttu-id="4164e-127">使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="4164e-127">The character encoding to use.</span></span></param>
        <summary><span data-ttu-id="4164e-128">指定したストリームと文字エンコーディングに基づいて、<see cref="T:System.IO.BinaryReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4164e-128">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and character encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-129">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-129">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-130">ストリームが読み取りをサポートしていないか、<see langword="null" /> であるか、既に閉じています。</span><span class="sxs-lookup"><span data-stu-id="4164e-130">The stream does not support reading, is <see langword="null" />, or is already closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4164e-131"><paramref name="encoding" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4164e-131"><paramref name="encoding" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-132">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-132">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-133">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-133">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-134">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-134">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Text.Encoding encoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input, System::Text::Encoding ^ encoding, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryReader : System.IO.Stream * System.Text.Encoding * bool -&gt; System.IO.BinaryReader" Usage="new System.IO.BinaryReader (input, encoding, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4164e-135">入力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="4164e-135">The input stream.</span></span></param>
        <param name="encoding"><span data-ttu-id="4164e-136">使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="4164e-136">The character encoding to use.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="4164e-137"><see cref="T:System.IO.BinaryReader" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4164e-137"><see langword="true" /> to leave the stream open after the <see cref="T:System.IO.BinaryReader" /> object is disposed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4164e-138">指定したストリームと文字エンコーディングに基づいて <see cref="T:System.IO.BinaryReader" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</span><span class="sxs-lookup"><span data-stu-id="4164e-138">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and character encoding, and optionally leaves the stream open.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-139">ストリームが読み取りをサポートしていないか、<see langword="null" /> であるか、既に閉じています。</span><span class="sxs-lookup"><span data-stu-id="4164e-139">The stream does not support reading, is <see langword="null" />, or is already closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4164e-140"><paramref name="encoding" /> または <paramref name="input" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4164e-140"><paramref name="encoding" /> or <paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-141">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-141">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-142">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-142">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-143">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-143">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BinaryReader.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.BinaryReader.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4164e-144"><see cref="T:System.IO.BinaryReader" /> の基になるストリームへのアクセスを公開します。</span><span class="sxs-lookup"><span data-stu-id="4164e-144">Exposes access to the underlying stream of the <see cref="T:System.IO.BinaryReader" />.</span></span></summary>
        <value><span data-ttu-id="4164e-145"><see langword="BinaryReader" /> に関連付けられた、基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="4164e-145">The underlying stream associated with the <see langword="BinaryReader" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="4164e-146">を読み取り中または使用中に基に`BinaryReader`なるストリームを使用すると、データの損失と破損が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4164e-146">Using the underlying stream while reading or while using the `BinaryReader` can cause data loss and corruption.</span></span> <span data-ttu-id="4164e-147">たとえば、同じバイトが2回以上読み取られる場合や、バイトがスキップされる場合、文字の読み取りが予測不可能になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="4164e-147">For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.</span></span>  
  
 <span data-ttu-id="4164e-148">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-148">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-149">クラスの`Double` `BinaryReader` <xref:System.IO.BinaryWriter>上にあるクラスとクラスを使用して、メモリにデータを読み書きする方法を次のコード例に示します。 <xref:System.IO.MemoryStream></span><span class="sxs-lookup"><span data-stu-id="4164e-149">The following code example shows how to read and write `Double` data to memory by using the `BinaryReader` and <xref:System.IO.BinaryWriter> classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="4164e-150">`MemoryStream`データの読み取りと`Byte`書き込みのみを行います。</span><span class="sxs-lookup"><span data-stu-id="4164e-150">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-151">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-151">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-152">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-152">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-153">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-153">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="binaryReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-154">現在のリーダーと基になるストリームをクローズします。</span><span class="sxs-lookup"><span data-stu-id="4164e-154">Closes the current reader and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-155">の`Close`この実装は、 <xref:System.IO.BinaryReader.Dispose%2A>値を`true`渡すメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4164e-155">This implementation of `Close` calls the <xref:System.IO.BinaryReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="4164e-156">または<xref:System.IO.Stream.Flush%2A> `Close`を明示的に呼び出す場合を除き、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="4164e-156">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="4164e-157">を<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="4164e-157">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="4164e-158">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="4164e-158">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="4164e-159">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="4164e-159">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-160">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-160">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-161">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-161">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-162">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-162">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4164e-163"><see cref="T:System.IO.BinaryReader" /> クラスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="4164e-163">Releases the resources used by the <see cref="T:System.IO.BinaryReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="binaryReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-164"><see cref="T:System.IO.BinaryReader" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="4164e-164">Releases all resources used by the current instance of the <see cref="T:System.IO.BinaryReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-165"><xref:System.IO.BinaryReader> を使い終わったら、`Dispose`を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4164e-165">Call `Dispose` when you are finished using the <xref:System.IO.BinaryReader>.</span></span> <span data-ttu-id="4164e-166">`Dispose`メソッドによって、<xref:System.IO.BinaryReader> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="4164e-166">The `Dispose` method leaves the <xref:System.IO.BinaryReader> in an unusable state.</span></span> <span data-ttu-id="4164e-167">`Dispose`呼び出し後は、<xref:System.IO.BinaryReader>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.IO.BinaryReader> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4164e-167">After calling `Dispose`, you must release all references to the <xref:System.IO.BinaryReader> so the garbage collector can reclaim the memory that the <xref:System.IO.BinaryReader> was occupying.</span></span>  
  
 <span data-ttu-id="4164e-168">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-168">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4164e-169"><xref:System.IO.BinaryReader>への最後の参照を解放する前に、必ず`Dispose`を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-169">Always call `Dispose` before you release your last reference to the <xref:System.IO.BinaryReader>.</span></span> <span data-ttu-id="4164e-170">そうしないと、ガベージ コレクターが <xref:System.IO.BinaryReader> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="4164e-170">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.BinaryReader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="binaryReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="4164e-171">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4164e-171"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="4164e-172"><see cref="T:System.IO.BinaryReader" /> クラスによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="4164e-172">Releases the unmanaged resources used by the <see cref="T:System.IO.BinaryReader" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-173">このメソッドは、および`Dispose` <xref:System.Object.Finalize%2A>によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4164e-173">This method is called by `Dispose` and <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="4164e-174">既定では`disposing` 、このメソッドはパラメーターを`true`として指定します。</span><span class="sxs-lookup"><span data-stu-id="4164e-174">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="4164e-175"><xref:System.Object.Finalize%2A>パラメーターをとし`false`て指定します。 `disposing`</span><span class="sxs-lookup"><span data-stu-id="4164e-175"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="4164e-176">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.BinaryReader> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="4164e-176">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.BinaryReader> references.</span></span> <span data-ttu-id="4164e-177">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4164e-177">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4164e-178">
            <see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="4164e-178">
            <see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="4164e-179">このメソッドをオーバーライドする場合は、以前にを<see langword="Dispose" />呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-179">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="4164e-180">このメソッドの実装方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-180">For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="4164e-181"><see cref="M:System.IDisposable.Dispose" /> および<see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-181">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-182">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-182">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-183">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-183">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-184">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-184">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillBuffer">
      <MemberSignature Language="C#" Value="protected virtual void FillBuffer (int numBytes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FillBuffer(int32 numBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.FillBuffer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FillBuffer (numBytes As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FillBuffer(int numBytes);" />
      <MemberSignature Language="F#" Value="abstract member FillBuffer : int -&gt; unit&#xA;override this.FillBuffer : int -&gt; unit" Usage="binaryReader.FillBuffer numBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numBytes"><span data-ttu-id="4164e-185">読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="4164e-185">The number of bytes to be read.</span></span></param>
        <summary><span data-ttu-id="4164e-186">指定したバイト数分だけストリームから読み取ったバイトを内部バッファーに格納します。</span><span class="sxs-lookup"><span data-stu-id="4164e-186">Fills the internal buffer with the specified number of bytes read from the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-187">内部バッファーサイズは、16からによって返される値から、 <xref:System.Text.Encoding.GetMaxByteCount%2A>指定されたエンコーディングに対してより大きい値になります。</span><span class="sxs-lookup"><span data-stu-id="4164e-187">The internal buffer size is the larger value between 16 and the value returned by <xref:System.Text.Encoding.GetMaxByteCount%2A> for the specified encoding.</span></span>  
  
 <span data-ttu-id="4164e-188">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-188">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-189"><paramref name="numBytes" /> 分のバイトを読み取る前にストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-189">The end of the stream is reached before <paramref name="numBytes" /> could be read.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-190">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-190">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4164e-191">要求された <paramref name="numBytes" /> が、内部バッファー サイズより大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="4164e-191">Requested <paramref name="numBytes" /> is larger than the internal buffer size.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-192">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-192">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-193">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-193">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-194">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-194">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PeekChar">
      <MemberSignature Language="C#" Value="public virtual int PeekChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PeekChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.PeekChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekChar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int PeekChar();" />
      <MemberSignature Language="F#" Value="abstract member PeekChar : unit -&gt; int&#xA;override this.PeekChar : unit -&gt; int" Usage="binaryReader.PeekChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-195">読み取り可能な次の文字を返します。バイトの位置または文字の位置は変化しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-195">Returns the next available character and does not advance the byte or character position.</span></span></summary>
        <returns><span data-ttu-id="4164e-196">使用できる次の文字。使用できる文字がないか、ストリームがシークをサポートしていない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="4164e-196">The next available character, or -1 if no more characters are available or the stream does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-197">ストリームでサロゲート文字が必要な場合は、 <xref:System.IO.BinaryReader.ReadChars%2A>メソッドを使用して、ストリームを元の位置に戻します。</span><span class="sxs-lookup"><span data-stu-id="4164e-197">If surrogate characters can be expected in the stream use the <xref:System.IO.BinaryReader.ReadChars%2A> method, then set the stream back to the original position.</span></span>  
  
 <span data-ttu-id="4164e-198">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-198">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-199">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-199">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-200">現在の文字は、ストリーム用に選択された <see cref="T:System.Text.Encoding" /> を使用して内部文字バッファーにデコードできません。</span><span class="sxs-lookup"><span data-stu-id="4164e-200">The current character cannot be decoded into the internal character buffer by using the <see cref="T:System.Text.Encoding" /> selected for the stream.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-201">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-201">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-202">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-202">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-203">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-203">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4164e-204">基になるストリームからバイトを読み取り、ストリームの現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-204">Reads bytes from the underlying stream and advances the current position of the stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="binaryReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-205">基になるストリームから文字を読み取り、使用した <see langword="Encoding" /> とストリームから読み取った特定の文字に従ってストリームの現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-205">Reads characters from the underlying stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span></span></summary>
        <returns><span data-ttu-id="4164e-206">入力ストリームの次の文字。現在読み取り可能な文字がない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="4164e-206">The next character from the input stream, or -1 if no characters are currently available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-207"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-207"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-208">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-208">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-209">次の例は、バッキングストアとしてメモリを使用してデータの読み取りと書き込みを行う方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-209">The following example shows how to read and write data using memory as a backing store.</span></span> <span data-ttu-id="4164e-210">この例では、無効なファイルパス文字の一覧をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="4164e-210">This example displays a list of invalid file path characters to the console.</span></span> <span data-ttu-id="4164e-211">コードはすべての無効なファイルパス文字の一覧を表示しようとしますが、すべての文字が表示可能な文字のセット内に含まれているわけではありません。</span><span class="sxs-lookup"><span data-stu-id="4164e-211">Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</span></span> <span data-ttu-id="4164e-212">無効な文字の一覧はシステムによって異なる場合があるため、このコードの出力も異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="4164e-212">Because the list of invalid characters can vary based on the system, output for this code may also vary.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/CPP/rwreadchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/CS/rwreadchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/VB/rwreadchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-213">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-213">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-214">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-214">The stream is closed.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-215">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-215">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-216">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-216">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-217">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-217">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;byte&gt; -&gt; int&#xA;override this.Read : Span&lt;byte&gt; -&gt; int" Usage="binaryReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="binaryReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * int -&gt; int&#xA;override this.Read : byte[] * int * int -&gt; int" Usage="binaryReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4164e-218">データを読み取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="4164e-218">The buffer to read data into.</span></span></param>
        <param name="index"><span data-ttu-id="4164e-219">バッファー内の、バッファーへの読み取り開始点。</span><span class="sxs-lookup"><span data-stu-id="4164e-219">The starting point in the buffer at which to begin reading into the buffer.</span></span></param>
        <param name="count"><span data-ttu-id="4164e-220">読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="4164e-220">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="4164e-221">バイト配列内の指定された位置を開始点として、ストリームから指定されたバイト数を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-221">Reads the specified number of bytes from the stream, starting from a specified point in the byte array.</span></span></summary>
        <returns><span data-ttu-id="4164e-222"><paramref name="buffer" /> に読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="4164e-222">The number of bytes read into <paramref name="buffer" />.</span></span> <span data-ttu-id="4164e-223">要求したバイト数分のバイトを読み取れなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-223">This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-224"><xref:System.IO.BinaryReader>では、読み取り操作が失敗した後、ファイルの位置は復元されません。</span><span class="sxs-lookup"><span data-stu-id="4164e-224"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="4164e-225">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-225">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-226">次の例では、バッキングストアとしてメモリを使用してバイナリデータを書き込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4164e-226">The following example shows how to write binary data by using memory as a backing store.</span></span> <span data-ttu-id="4164e-227">データが正しく書き込まれたかどうかを示すメッセージがコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="4164e-227">It displays a message to the console that indicates whether the data was written correctly.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]  
  
 <span data-ttu-id="4164e-228">この例では、ファイルの内容を読み取り、各バイトの数値を16列形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="4164e-228">This example reads the contents of a file and displays each byte's numeric value in 16-column format.</span></span> <span data-ttu-id="4164e-229">メソッドが<xref:System.IO.BinaryReader.Read%2A> 0 バイトを返すと、読み取り中のファイルの末尾が検出されます。</span><span class="sxs-lookup"><span data-stu-id="4164e-229">The end of the file that is being read is detected when the <xref:System.IO.BinaryReader.Read%2A> method returns zero bytes.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source5.cs#6)]
 [!code-vb[System.IO.BinaryReaderWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source5.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-230">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="4164e-230">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span>  
  
<span data-ttu-id="4164e-231">- または -</span><span class="sxs-lookup"><span data-stu-id="4164e-231">-or-</span></span> 
<span data-ttu-id="4164e-232">デコードされた文字の数が <paramref name="count" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="4164e-232">The number of decoded characters to read is greater than <paramref name="count" />.</span></span> <span data-ttu-id="4164e-233">これは、Unicode デコーダーがフォールバック文字またはサロゲート ペアを返す場合に発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-233">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4164e-234"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4164e-234"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4164e-235"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="4164e-235"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-236">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-236">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-237">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-237">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-238">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-238">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-239">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-239">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-240">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-240">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="binaryReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4164e-241">データを読み取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="4164e-241">The buffer to read data into.</span></span></param>
        <param name="index"><span data-ttu-id="4164e-242">バッファー内の、バッファーへの読み取り開始点。</span><span class="sxs-lookup"><span data-stu-id="4164e-242">The starting point in the buffer at which to begin reading into the buffer.</span></span></param>
        <param name="count"><span data-ttu-id="4164e-243">読み取る文字の数。</span><span class="sxs-lookup"><span data-stu-id="4164e-243">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="4164e-244">文字配列内の指定された位置を開始点として、ストリームから指定された文字数を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-244">Reads the specified number of characters from the stream, starting from a specified point in the character array.</span></span></summary>
        <returns><span data-ttu-id="4164e-245">バッファーに読み取られた合計文字数。</span><span class="sxs-lookup"><span data-stu-id="4164e-245">The total number of characters read into the buffer.</span></span> <span data-ttu-id="4164e-246">要求した文字数分の文字を読み取れなかった場合、この値は要求した文字数より小さくなります。また、ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-246">This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-247"><xref:System.IO.BinaryReader>では、読み取り操作が失敗した後、ファイルの位置は復元されません。</span><span class="sxs-lookup"><span data-stu-id="4164e-247"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="4164e-248">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-248">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-249">次の例は、バッキングストアとしてメモリを使用してデータの読み取りと書き込みを行う方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-249">The following example shows how to read and write data using memory as a backing store.</span></span> <span data-ttu-id="4164e-250">この例では、無効なファイルパス文字の一覧をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="4164e-250">This example displays a list of invalid file path characters to the console.</span></span> <span data-ttu-id="4164e-251">コードはすべての無効なファイルパス文字の一覧を表示しようとしますが、すべての文字が表示可能な文字のセット内に含まれているわけではありません。</span><span class="sxs-lookup"><span data-stu-id="4164e-251">Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</span></span> <span data-ttu-id="4164e-252">無効な文字の一覧はシステムによって異なる場合があるため、このコードの出力も異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="4164e-252">Because the list of invalid characters can vary based on the system, output for this code may also vary.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-253">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="4164e-253">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span>  
  
<span data-ttu-id="4164e-254">- または -</span><span class="sxs-lookup"><span data-stu-id="4164e-254">-or-</span></span> 
<span data-ttu-id="4164e-255">デコードされた文字の数が <paramref name="count" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="4164e-255">The number of decoded characters to read is greater than <paramref name="count" />.</span></span> <span data-ttu-id="4164e-256">これは、Unicode デコーダーがフォールバック文字またはサロゲート ペアを返す場合に発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-256">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4164e-257"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4164e-257"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4164e-258"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="4164e-258"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-259">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-259">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-260">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-260">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-261">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-261">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-262">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-262">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-263">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-263">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read7BitEncodedInt">
      <MemberSignature Language="C#" Value="protected internal int Read7BitEncodedInt ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance int32 Read7BitEncodedInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read7BitEncodedInt" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function Read7BitEncodedInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; int Read7BitEncodedInt();" />
      <MemberSignature Language="F#" Value="member this.Read7BitEncodedInt : unit -&gt; int" Usage="binaryReader.Read7BitEncodedInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-264">32 ビット整数を圧縮形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-264">Reads in a 32-bit integer in compressed format.</span></span></summary>
        <returns><span data-ttu-id="4164e-265">圧縮形式の 32 ビット整数。</span><span class="sxs-lookup"><span data-stu-id="4164e-265">A 32-bit integer in compressed format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-266"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-266"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-267">整数が7ビットに適合する場合、整数は1バイトの領域のみを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-267">If the integer will fit in seven bits, the integer takes only one byte of space.</span></span> <span data-ttu-id="4164e-268">整数は、によって<xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType>書き込まれる必要があります。</span><span class="sxs-lookup"><span data-stu-id="4164e-268">The integer is expected to have been written through <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4164e-269">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-269">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-270">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-270">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-271">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-271">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-272">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-272">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4164e-273">ストリームが破損しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-273">The stream is corrupted.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-274">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-274">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-275">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-275">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-276">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-276">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadBoolean();" />
      <MemberSignature Language="F#" Value="abstract member ReadBoolean : unit -&gt; bool&#xA;override this.ReadBoolean : unit -&gt; bool" Usage="binaryReader.ReadBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-277">現在のストリームから <see langword="Boolean" /> 値を読み取り、ストリームの現在位置を 1 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-277">Reads a <see langword="Boolean" /> value from the current stream and advances the current position of the stream by one byte.</span></span></summary>
        <returns><span data-ttu-id="4164e-278">読み取ったバイトが 0 以外の場合は <see langword="true" />。0 の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4164e-278"><see langword="true" /> if the byte is nonzero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-279"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-279"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-280">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-280">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-281">次のコード例は、ファイルにアプリケーション設定を格納および取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-281">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-282">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-282">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-283">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-283">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-284">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-284">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-285">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-285">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-286">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-286">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-287">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-287">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual byte ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Byte ReadByte();" />
      <MemberSignature Language="F#" Value="abstract member ReadByte : unit -&gt; byte&#xA;override this.ReadByte : unit -&gt; byte" Usage="binaryReader.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-288">現在のストリームから次のバイトを読み取り、ストリームの現在位置を 1 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-288">Reads the next byte from the current stream and advances the current position of the stream by one byte.</span></span></summary>
        <returns><span data-ttu-id="4164e-289">現在のストリームから読み取った次のバイト。</span><span class="sxs-lookup"><span data-stu-id="4164e-289">The next byte read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-290"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-290"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-291">データ形式の競合が原因で、この方法を次のエンコーディングで使用することは推奨されません。</span><span class="sxs-lookup"><span data-stu-id="4164e-291">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="4164e-292">UTF-7</span><span class="sxs-lookup"><span data-stu-id="4164e-292">UTF-7</span></span>  
  
-   <span data-ttu-id="4164e-293">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="4164e-293">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="4164e-294">ISCII</span><span class="sxs-lookup"><span data-stu-id="4164e-294">ISCII</span></span>  
  
 <span data-ttu-id="4164e-295">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-295">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-296">次のコード例は、バッキングストアとしてメモリを使用してバイナリデータを書き込み、データが正しく書き込まれたことを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-296">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-297">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-297">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-298">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-298">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-299">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-299">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-300">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-300">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-301">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-301">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-302">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-302">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] ReadBytes (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ReadBytes(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBytes (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ReadBytes(int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBytes : int -&gt; byte[]&#xA;override this.ReadBytes : int -&gt; byte[]" Usage="binaryReader.ReadBytes count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="4164e-303">読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="4164e-303">The number of bytes to read.</span></span> <span data-ttu-id="4164e-304">この値は 0 以上の数字の必要があり、それ以外の場合は例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-304">This value must be 0 or a non-negative number or an exception will occur.</span></span></param>
        <summary><span data-ttu-id="4164e-305">現在のストリームから指定されたバイト数をバイト配列に読み取り、そのバイト数だけストリーム内の現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-305">Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-306">基になるストリームから読み取ったデータが格納されているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4164e-306">A byte array containing data read from the underlying stream.</span></span> <span data-ttu-id="4164e-307">ストリームの末尾に到達した場合は要求したバイト数より小さくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-307">This might be less than the number of bytes requested if the end of the stream is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-308"><xref:System.IO.BinaryReader>では、読み取り操作が失敗した後、ファイルの位置は復元されません。</span><span class="sxs-lookup"><span data-stu-id="4164e-308"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="4164e-309">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-309">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-310">次のコード例は、バッキングストアとしてメモリを使用してバイナリデータを書き込み、データが正しく書き込まれたことを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-310">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]  
  
 <span data-ttu-id="4164e-311">この例では、ファイルの内容を読み取り、ダンプテキストとしてコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="4164e-311">This example reads the contents of a file and displays it to the console as dump text.</span></span> <span data-ttu-id="4164e-312"><xref:System.Byte> から<xref:System.IO.BinaryReader.ReadBytes%2A>返された配列の長さが0のときに、読み取り中のファイルの末尾が検出されます。</span><span class="sxs-lookup"><span data-stu-id="4164e-312">The end of the file that is being read is detected when the length of the <xref:System.Byte> array returned from <xref:System.IO.BinaryReader.ReadBytes%2A> is zero.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source5.cs#6)]
 [!code-vb[System.IO.BinaryReaderWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source5.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-313">デコードされた文字の数が <paramref name="count" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="4164e-313">The number of decoded characters to read is greater than <paramref name="count" />.</span></span> <span data-ttu-id="4164e-314">これは、Unicode デコーダーがフォールバック文字またはサロゲート ペアを返す場合に発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-314">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-315">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-315">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-316">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-316">The stream is closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4164e-317"><paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="4164e-317"><paramref name="count" /> is negative.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-318">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-318">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-319">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-319">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-320">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-320">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public virtual char ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char ReadChar();" />
      <MemberSignature Language="F#" Value="abstract member ReadChar : unit -&gt; char&#xA;override this.ReadChar : unit -&gt; char" Usage="binaryReader.ReadChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-321">現在のストリームの次の文字を読み取り、使用した <see langword="Encoding" /> とストリームから読み取った特定の文字に従ってストリームの現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-321">Reads the next character from the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span></span></summary>
        <returns><span data-ttu-id="4164e-322">現在のストリームから読み取った文字。</span><span class="sxs-lookup"><span data-stu-id="4164e-322">A character read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-323">メソッドが<xref:System.IO.BinaryReader.ReadChar%2A>ストリーム内のサロゲート文字を読み取ろうとすると、例外が発生し、ストリーム内の位置が進められます。</span><span class="sxs-lookup"><span data-stu-id="4164e-323">If the <xref:System.IO.BinaryReader.ReadChar%2A> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance.</span></span> <span data-ttu-id="4164e-324">ストリームがシーク可能である場合、が<xref:System.IO.BinaryReader.ReadChar%2A>呼び出される前に位置が元の場所に復元されます。ただし、ストリームがシーク不可能な場合、位置は修正されません。</span><span class="sxs-lookup"><span data-stu-id="4164e-324">The position is restored to the original location before <xref:System.IO.BinaryReader.ReadChar%2A> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected.</span></span> <span data-ttu-id="4164e-325">ストリームでサロゲート文字が想定される場合は、代わりに<xref:System.IO.BinaryReader.ReadChars%2A>メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="4164e-325">If surrogate characters can be expected in the stream, use the <xref:System.IO.BinaryReader.ReadChars%2A> method instead.</span></span>  
  
 <span data-ttu-id="4164e-326">データ形式の競合が原因で、この方法を次のエンコーディングで使用することは推奨されません。</span><span class="sxs-lookup"><span data-stu-id="4164e-326">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="4164e-327">UTF-7</span><span class="sxs-lookup"><span data-stu-id="4164e-327">UTF-7</span></span>  
  
-   <span data-ttu-id="4164e-328">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="4164e-328">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="4164e-329">ISCII</span><span class="sxs-lookup"><span data-stu-id="4164e-329">ISCII</span></span>  
  
 <span data-ttu-id="4164e-330">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-330">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-331">次のコード例は、バッキングストアとしてメモリを使用してデータの読み取りと書き込みを行う方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-331">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-332">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-332">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-333">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-333">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-334">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-334">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-335">サロゲート文字が読み取られました。</span><span class="sxs-lookup"><span data-stu-id="4164e-335">A surrogate character was read.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-336">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-336">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-337">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-337">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-338">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-338">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadChars">
      <MemberSignature Language="C#" Value="public virtual char[] ReadChars (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] ReadChars(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadChars (count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ ReadChars(int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadChars : int -&gt; char[]&#xA;override this.ReadChars : int -&gt; char[]" Usage="binaryReader.ReadChars count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="4164e-339">読み取る文字の数。</span><span class="sxs-lookup"><span data-stu-id="4164e-339">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="4164e-340">現在のストリームから指定された文字数を読み取り、そのデータを文字配列として返します。また、使用した <see langword="Encoding" /> とストリームから読み取った特定の文字に従って現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-340">Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span></span></summary>
        <returns><span data-ttu-id="4164e-341">基になるストリームから読み取ったデータが格納されている文字配列。</span><span class="sxs-lookup"><span data-stu-id="4164e-341">A character array containing data read from the underlying stream.</span></span> <span data-ttu-id="4164e-342">ストリームの末尾に到達した場合は、要求された文字数より小さくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-342">This might be less than the number of characters requested if the end of the stream is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-343"><xref:System.IO.BinaryReader>では、読み取り操作が失敗した後、ファイルの位置は復元されません。</span><span class="sxs-lookup"><span data-stu-id="4164e-343"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="4164e-344">ネットワークストリームから読み取る場合、場合によっては、 <xref:System.IO.BinaryReader.ReadChars%2A> <xref:System.IO.BinaryReader>が Unicode エンコーディングを使用して作成された場合に、メソッドがストリームから余分な文字を読み取ることがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-344">When reading from network streams, in some rare cases, the <xref:System.IO.BinaryReader.ReadChars%2A> method might read an extra character from the stream if the <xref:System.IO.BinaryReader> was constructed with Unicode encoding.</span></span> <span data-ttu-id="4164e-345">この問題が発生した場合は<xref:System.IO.BinaryReader.ReadBytes%2A> 、メソッドを使用して固定長のバイト配列を読み取り、その配列を<xref:System.IO.BinaryReader.ReadChars%2A>メソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="4164e-345">If this occurs, you can use the <xref:System.IO.BinaryReader.ReadBytes%2A> method to read a fixed-length byte array, and then pass that array to the <xref:System.IO.BinaryReader.ReadChars%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-346">次のコード例は、バッキングストアとしてメモリを使用してデータの読み取りと書き込みを行う方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-346">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4164e-347">デコードされた文字の数が <paramref name="count" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="4164e-347">The number of decoded characters to read is greater than <paramref name="count" />.</span></span> <span data-ttu-id="4164e-348">これは、Unicode デコーダーがフォールバック文字またはサロゲート ペアを返す場合に発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="4164e-348">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-349">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-349">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-350">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-350">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4164e-351"><paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="4164e-351"><paramref name="count" /> is negative.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-352">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-352">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-353">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-353">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-354">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-354">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadDecimal();" />
      <MemberSignature Language="F#" Value="abstract member ReadDecimal : unit -&gt; decimal&#xA;override this.ReadDecimal : unit -&gt; decimal" Usage="binaryReader.ReadDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-355">現在のストリームから 10 進数値を読み取り、ストリームの現在位置を 16 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-355">Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-356">現在のストリームから読み取った 10 進数値。</span><span class="sxs-lookup"><span data-stu-id="4164e-356">A decimal value read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-357"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-357"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-358">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-358">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-359">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-359">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-360">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-360">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-361">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-361">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-362">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-362">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-363">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-363">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-364">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-364">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadDouble();" />
      <MemberSignature Language="F#" Value="abstract member ReadDouble : unit -&gt; double&#xA;override this.ReadDouble : unit -&gt; double" Usage="binaryReader.ReadDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-365">現在のストリームから 8 バイト浮動小数点値を読み取り、ストリームの現在位置を 8 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-365">Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-366">現在のストリームから読み取った 8 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="4164e-366">An 8-byte floating point value read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-367"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-367"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-368">`BinaryReader`このデータ型をリトルエンディアン形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-368">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4164e-369">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-369">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-370">クラスの`Double` `BinaryReader` <xref:System.IO.BinaryWriter>上にあるクラスとクラスを使用して、メモリにデータを読み書きする方法を次のコード例に示します。 <xref:System.IO.MemoryStream></span><span class="sxs-lookup"><span data-stu-id="4164e-370">The following code example shows how to read and write `Double` data to memory by using the `BinaryReader` and <xref:System.IO.BinaryWriter> classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="4164e-371">`MemoryStream`データの読み取りと`Byte`書き込みのみを行います。</span><span class="sxs-lookup"><span data-stu-id="4164e-371">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-372">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-372">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-373">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-373">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-374">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-374">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-375">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-375">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-376">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-376">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-377">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-377">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public virtual short ReadInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ReadInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt16" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt16 () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual short ReadInt16();" />
      <MemberSignature Language="F#" Value="abstract member ReadInt16 : unit -&gt; int16&#xA;override this.ReadInt16 : unit -&gt; int16" Usage="binaryReader.ReadInt16 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-378">現在のストリームから 2 バイト符号付き整数を読み取り、ストリームの現在位置を 2 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-378">Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-379">現在のストリームから読み取った 2 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="4164e-379">A 2-byte signed integer read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-380"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-380"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-381">`BinaryReader`このデータ型をリトルエンディアン形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-381">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4164e-382">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-382">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-383">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-383">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-384">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-384">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-385">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-385">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-386">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-386">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-387">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-387">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-388">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-388">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public virtual int ReadInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt32" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt32 () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadInt32();" />
      <MemberSignature Language="F#" Value="abstract member ReadInt32 : unit -&gt; int&#xA;override this.ReadInt32 : unit -&gt; int" Usage="binaryReader.ReadInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-389">現在のストリームから 4 バイト符号付き整数を読み取り、ストリームの現在位置を 4 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-389">Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-390">現在のストリームから読み取った 4 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="4164e-390">A 4-byte signed integer read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-391"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-391"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-392"><xref:System.IO.BinaryReader>このデータ型をリトルエンディアン形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-392"><xref:System.IO.BinaryReader> reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4164e-393">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-393">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-394">次のコード例は、ファイルにアプリケーション設定を格納および取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-394">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-395">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-395">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-396">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-396">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-397">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-397">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-398">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-398">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-399">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-399">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-400">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-400">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public virtual long ReadInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt64" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt64 () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadInt64();" />
      <MemberSignature Language="F#" Value="abstract member ReadInt64 : unit -&gt; int64&#xA;override this.ReadInt64 : unit -&gt; int64" Usage="binaryReader.ReadInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-401">現在のストリームから 8 バイト符号付き整数を読み取り、ストリームの現在位置を 8 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-401">Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-402">現在のストリームから読み取った 8 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="4164e-402">An 8-byte signed integer read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-403"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-403"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-404">`BinaryReader`このデータ型をリトルエンディアン形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-404">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4164e-405">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-405">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-406">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-406">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-407">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-407">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-408">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-408">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-409">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-409">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-410">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-410">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-411">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-411">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadSByte">
      <MemberSignature Language="C#" Value="public virtual sbyte ReadSByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ReadSByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadSByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSByte () As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::SByte ReadSByte();" />
      <MemberSignature Language="F#" Value="abstract member ReadSByte : unit -&gt; sbyte&#xA;override this.ReadSByte : unit -&gt; sbyte" Usage="binaryReader.ReadSByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-412">現在のストリームから符号付きバイトを読み取り、ストリームの現在位置を 1 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-412">Reads a signed byte from this stream and advances the current position of the stream by one byte.</span></span></summary>
        <returns><span data-ttu-id="4164e-413">現在のストリームから読み取った符号付きバイト。</span><span class="sxs-lookup"><span data-stu-id="4164e-413">A signed byte read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-414"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-414"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-415">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-415">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-416">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-416">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-417">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-417">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-418">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-418">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-419">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-419">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-420">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-420">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-421">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-421">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadSingle">
      <MemberSignature Language="C#" Value="public virtual float ReadSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadSingle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSingle () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadSingle();" />
      <MemberSignature Language="F#" Value="abstract member ReadSingle : unit -&gt; single&#xA;override this.ReadSingle : unit -&gt; single" Usage="binaryReader.ReadSingle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-422">現在のストリームから 4 バイト浮動小数点値を読み取り、ストリームの現在位置を 4 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-422">Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-423">現在のストリームから読み取った 4 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="4164e-423">A 4-byte floating point value read from the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-424"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-424"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-425">`BinaryReader`このデータ型をリトルエンディアン形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-425">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4164e-426">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-426">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-427">次のコード例は、ファイルにアプリケーション設定を格納および取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-427">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-428">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-428">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-429">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-429">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-430">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-430">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-431">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-431">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-432">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-432">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-433">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-433">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public virtual string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="abstract member ReadString : unit -&gt; string&#xA;override this.ReadString : unit -&gt; string" Usage="binaryReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-434">現在のストリームから 1 つの文字列を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-434">Reads a string from the current stream.</span></span> <span data-ttu-id="4164e-435">ストリームの文字列は、7 ビットごとにエンコードされた文字列の長さが先頭に付加されています。</span><span class="sxs-lookup"><span data-stu-id="4164e-435">The string is prefixed with the length, encoded as an integer seven bits at a time.</span></span></summary>
        <returns><span data-ttu-id="4164e-436">読み取った文字列。</span><span class="sxs-lookup"><span data-stu-id="4164e-436">The string being read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-437"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-437"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-438">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-438">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4164e-439">次のコード例は、ファイルにアプリケーション設定を格納および取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4164e-439">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-440">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-440">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-441">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-441">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-442">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-442">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-443">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-443">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-444">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-444">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-445">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-445">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt16">
      <MemberSignature Language="C#" Value="public virtual ushort ReadUInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int16 ReadUInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt16" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt16 () As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt16 ReadUInt16();" />
      <MemberSignature Language="F#" Value="abstract member ReadUInt16 : unit -&gt; uint16&#xA;override this.ReadUInt16 : unit -&gt; uint16" Usage="binaryReader.ReadUInt16 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-446">リトル エンディアン エンコーディングを使用して現在のストリームから 2 バイト符号なし整数を読み取り、ストリームの位置を 2 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-446">Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-447">現在のストリームから読み取った 2 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="4164e-447">A 2-byte unsigned integer read from this stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-448"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-448"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-449">`BinaryReader`このデータ型をリトルエンディアン形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-449">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4164e-450">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-450">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-451">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-451">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-452">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-452">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-453">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-453">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-454">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-454">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-455">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-455">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-456">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-456">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt32">
      <MemberSignature Language="C#" Value="public virtual uint ReadUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 ReadUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt32 () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt32 ReadUInt32();" />
      <MemberSignature Language="F#" Value="abstract member ReadUInt32 : unit -&gt; uint32&#xA;override this.ReadUInt32 : unit -&gt; uint32" Usage="binaryReader.ReadUInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-457">現在のストリームから 4 バイト符号なし整数を読み取り、ストリームの位置を 4 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-457">Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-458">現在のストリームから読み取った 4 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="4164e-458">A 4-byte unsigned integer read from this stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-459"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-459"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-460">`BinaryReader`このデータ型をリトルエンディアン形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-460">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4164e-461">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-461">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-462">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-462">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-463">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-463">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-464">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-464">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-465">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-465">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-466">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-466">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-467">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-467">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt64">
      <MemberSignature Language="C#" Value="public virtual ulong ReadUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int64 ReadUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt64 () As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt64 ReadUInt64();" />
      <MemberSignature Language="F#" Value="abstract member ReadUInt64 : unit -&gt; uint64&#xA;override this.ReadUInt64 : unit -&gt; uint64" Usage="binaryReader.ReadUInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-468">現在のストリームから 8 バイト符号なし整数を読み取り、ストリームの位置を 8 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="4164e-468">Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.</span></span></summary>
        <returns><span data-ttu-id="4164e-469">現在のストリームから読み取った 8 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="4164e-469">An 8-byte unsigned integer read from this stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4164e-470"><xref:System.IO.BinaryReader>は、読み取りに失敗した後にファイルの位置を復元しません。</span><span class="sxs-lookup"><span data-stu-id="4164e-470"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4164e-471">`BinaryReader`このデータ型をリトルエンディアン形式で読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4164e-471">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4164e-472">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-472">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="4164e-473">ストリームの末尾に到達しました。</span><span class="sxs-lookup"><span data-stu-id="4164e-473">The end of the stream is reached.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4164e-474">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4164e-474">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4164e-475">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="4164e-475">The stream is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-476">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-476">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-477">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-477">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-478">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-478">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4164e-479"><see cref="T:System.IO.BinaryReader" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="4164e-479">Releases all resources used by the <see cref="T:System.IO.BinaryReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="4164e-480">を<xref:System.IO.BinaryReader.Dispose%2A>呼び出すと、 <xref:System.IO.BinaryReader>によって使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="4164e-480">Calling <xref:System.IO.BinaryReader.Dispose%2A> allows the resources used by the <xref:System.IO.BinaryReader> to be reallocated for other purposes.</span></span> <span data-ttu-id="4164e-481">の詳細<xref:System.IO.BinaryReader.Dispose%2A>については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4164e-481">For more information about <xref:System.IO.BinaryReader.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="4164e-482">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="4164e-482">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="4164e-483">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="4164e-483">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="4164e-484">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="4164e-484">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
