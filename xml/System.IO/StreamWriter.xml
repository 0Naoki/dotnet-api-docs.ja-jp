<Type Name="StreamWriter" FullName="System.IO.StreamWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f31bd789fd27cfb5dec1f299d1b5fc770e9fc32" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StreamWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StreamWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StreamWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="35536-101">文字を特定のエンコーディングでストリームに書き込むための <see cref="T:System.IO.TextWriter" /> を実装しています。</span>
      <span class="sxs-lookup">
        <span data-stu-id="35536-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing characters to a stream in a particular encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-102"><xref:System.IO.StreamWriter> 派生したクラスが特定のエンコーディングで文字出力用に設計されていますが<xref:System.IO.Stream>バイトの入力し、出力用に設計されています。</span><span class="sxs-lookup"><span data-stu-id="35536-102"><xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="35536-103">この型は、<xref:System.IDisposable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="35536-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="35536-104">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="35536-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="35536-105">型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="35536-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="35536-106">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="35536-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="35536-107">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="35536-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="35536-108"><xref:System.IO.StreamWriter> 既定値のインスタンスを使用して<xref:System.Text.UTF8Encoding>指定しない限り、します。</span><span class="sxs-lookup"><span data-stu-id="35536-108"><xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise.</span></span> <span data-ttu-id="35536-109">このインスタンスの`UTF8Encoding`バイト順マーク (BOM) を使用せずにので作成はその<xref:System.Text.Encoding.GetPreamble%2A>メソッドが空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="35536-109">This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="35536-110">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="35536-110">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="35536-111">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-111">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="35536-112">BOM を指定し、無効なバイトで例外をスローするかどうかを判断などをパラメーターとしてエンコード オブジェクトを受け取るコンス トラクターを使用して<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>または<xref:System.IO.StreamWriter.%23ctor%2A>です。</span><span class="sxs-lookup"><span data-stu-id="35536-112">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="35536-113">既定では、<xref:System.IO.StreamWriter>はスレッド セーフであります。</span><span class="sxs-lookup"><span data-stu-id="35536-113">By default, a <xref:System.IO.StreamWriter> is not thread safe.</span></span> <span data-ttu-id="35536-114">参照してください<xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType>スレッド セーフ ラッパー。</span><span class="sxs-lookup"><span data-stu-id="35536-114">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
 <span data-ttu-id="35536-115">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-115">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-116">次の例を使用する方法を示しています、<xref:System.IO.StreamWriter>が C ドライブにディレクトリを一覧表示しを使用してファイルを記述するオブジェクト、<xref:System.IO.StreamReader>読み取りおよび各ディレクトリ名を表示するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35536-116">The following example shows how to use a <xref:System.IO.StreamWriter> object to write a file that lists the directories on the C drive, and then uses a <xref:System.IO.StreamReader> object to read and display each directory name.</span></span> <span data-ttu-id="35536-117">これらのオブジェクトの使用をお勧め、`using`ステートメント アンマネージ リソースが正しく破棄されるようにします。</span><span class="sxs-lookup"><span data-stu-id="35536-117">A good practice is to use these objects in a `using` statement so that the unmanaged resources are correctly disposed.</span></span> <span data-ttu-id="35536-118">`using`ステートメントを自動的に呼び出す<xref:System.IDisposable.Dispose%2A>オブジェクトによって使用されているコードが完了したときにします。</span><span class="sxs-lookup"><span data-stu-id="35536-118">The `using` statement automatically calls <xref:System.IDisposable.Dispose%2A> on the object when the code that is using it has completed.</span></span> <span data-ttu-id="35536-119">使用するこの例で使用するコンス トラクターはサポートされていません[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]アプリ。</span><span class="sxs-lookup"><span data-stu-id="35536-119">The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.</span></span>  
  
 [!code-csharp[StreamReadWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/streamreadwrite/cs/program.cs#1)]
 [!code-vb[StreamReadWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/streamreadwrite/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.StreamReader" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35536-120">
            <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-120">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="35536-121">書き込まれるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-121">The stream to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-122">UTF-8 エンコーディングと既定のバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-122">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using UTF-8 encoding and the default buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-123">このコンス トラクターを作成、<xref:System.IO.StreamWriter>ためエンコードせず、バイト順マーク (BOM)、utf-8 でその<xref:System.Text.Encoding.GetPreamble%2A>メソッドが空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="35536-123">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="35536-124">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="35536-124">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="35536-125">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-125">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="35536-126">無効なバイトで例外をスローするかどうかを指定するように、パラメーターとしてエンコード オブジェクトを受け取るコンス トラクターを使用して<xref:System.IO.StreamWriter.%23ctor%2A>です。</span><span class="sxs-lookup"><span data-stu-id="35536-126">To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span> <span data-ttu-id="35536-127"><xref:System.IO.StreamWriter.BaseStream%2A>プロパティを使用して、初期化、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="35536-127">The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter.</span></span> <span data-ttu-id="35536-128">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="35536-128">The position of the stream is not reset.</span></span>  
  
 <span data-ttu-id="35536-129"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>で提供されている<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="35536-129">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="35536-130">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-130">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="35536-131">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-131">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-132">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="35536-132">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program1.cs#1)]
 [!code-vb[System.IO.StreamWriter.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-133">
            <paramref name="stream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-133">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-134">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-134">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="35536-135">書き込まれる完全なファイルパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-135">The complete file path to write to.</span>
          </span>
          <span data-ttu-id="35536-136">
            <c>path</c> はファイル名にすることもできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-136">
              <c>path</c> can be a file name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-137">既定のエンコーディングとバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-137">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-138">このコンス トラクターを作成、<xref:System.IO.StreamWriter>ためエンコードせず、バイト順マーク (BOM)、utf-8 でその<xref:System.Text.Encoding.GetPreamble%2A>メソッドが空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="35536-138">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="35536-139">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="35536-139">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="35536-140">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-140">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="35536-141">BOM を指定し、無効なバイトで例外をスローするかどうかを判断などをパラメーターとしてエンコード オブジェクトを受け取るコンス トラクターを使用して<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>です。</span><span class="sxs-lookup"><span data-stu-id="35536-141">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="35536-142">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="35536-142">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span> <span data-ttu-id="35536-143">ファイルが存在する場合は上書きされます。それ以外の場合、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="35536-143">If the file exists, it is overwritten; otherwise, a new file is created.</span></span>  
  
 <span data-ttu-id="35536-144">`path`パラメーターは必要ありません、ディスクに格納されたファイル ストリームを使用してアクセスをサポートするシステムの一部であることができます。</span><span class="sxs-lookup"><span data-stu-id="35536-144">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="35536-145">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-145">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="35536-146">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-147">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="35536-147">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program5.cs#5)]
 [!code-vb[System.IO.StreamWriter.ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35536-148">アクセスが拒否されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-148">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-149">
            <paramref name="path" /> が空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-149">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
          <span data-ttu-id="35536-150">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-150">-or-</span>
          </span>
          <span data-ttu-id="35536-151">
            <paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-151">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-152">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="35536-153">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-153">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="35536-154">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-154">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="35536-155">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下、ファイル名は 260 文字以下にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-155">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-156">
            <paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-156">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="35536-157">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-157">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="35536-158">読み取りや、ファイルを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-158">for reading and writing files.</span>
          </span>
          <span data-ttu-id="35536-159">関連する列挙値: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-159">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="35536-160">書き込まれるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-160">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="35536-161">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-161">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-162">指定したエンコーディングと既定のバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-162">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and the default buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-163">このコンス トラクターを初期化します、<xref:System.IO.StreamWriter.Encoding%2A>エンコーディングのパラメーターを使用してプロパティと<xref:System.IO.StreamWriter.BaseStream%2A>stream パラメーターを使用してプロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-163">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter.</span></span> <span data-ttu-id="35536-164">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="35536-164">The position of the stream is not reset.</span></span> <span data-ttu-id="35536-165">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="35536-165">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="35536-166"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>で提供されている<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="35536-166">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="35536-167">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-167">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="35536-168">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-168">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-169">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="35536-169">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program2.cs#2)]
 [!code-vb[System.IO.StreamWriter.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-170">
            <paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-170">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-171">
            <paramref name="stream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-171">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="35536-172">書き込まれる完全なファイルパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-172">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="35536-173">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-173">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="35536-174">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-174">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-175">既定のエンコーディングとバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-175">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span>
          </span>
          <span data-ttu-id="35536-176">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-176">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="35536-177">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-177">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-178">このコンス トラクターを作成、<xref:System.IO.StreamWriter>ためエンコードせず、バイト順マーク (BOM)、utf-8 でその<xref:System.Text.Encoding.GetPreamble%2A>メソッドが空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="35536-178">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="35536-179">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="35536-179">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="35536-180">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-180">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="35536-181">BOM を指定し、無効なバイトで例外をスローするかどうかを判断などをパラメーターとしてエンコード オブジェクトを受け取るコンス トラクターを使用して<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>です。</span><span class="sxs-lookup"><span data-stu-id="35536-181">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="35536-182">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="35536-182">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="35536-183">`path`パラメーターは必要ありません、ディスクに格納されたファイル ストリームを使用してアクセスをサポートするシステムの一部であることができます。</span><span class="sxs-lookup"><span data-stu-id="35536-183">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="35536-184">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-184">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="35536-185">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-185">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-186">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="35536-186">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program6.cs#6)]
 [!code-vb[System.IO.StreamWriter.ctor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35536-187">アクセスが拒否されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-187">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-188">
            <paramref name="path" /> が空です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-188">
              <paramref name="path" /> is empty.</span>
          </span>
          <span data-ttu-id="35536-189">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-189">-or-</span>
          </span>
          <span data-ttu-id="35536-190">
            <paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-190">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-191">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-191">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="35536-192">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-192">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-193">
            <paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-193">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="35536-194">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-194">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="35536-195">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下、ファイル名は 260 文字以下にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-195">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="35536-196">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-196">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="35536-197">読み取りや、ファイルを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-197">for reading and writing files.</span>
          </span>
          <span data-ttu-id="35536-198">関連する列挙値: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-198">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="35536-199">書き込まれるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-199">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="35536-200">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-200">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="35536-201">バイト単位のバッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-201">The buffer size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-202">指定したエンコーディングとバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-202">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-203">このコンス トラクター、<xref:System.IO.StreamWriter.Encoding%2A>プロパティを使用して、`encoding`パラメーター、および<xref:System.IO.StreamWriter.BaseStream%2A>プロパティを使用して、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="35536-203">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter.</span></span> <span data-ttu-id="35536-204">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="35536-204">The position of the stream is not reset.</span></span> <span data-ttu-id="35536-205">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="35536-205">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="35536-206"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>で提供されている<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="35536-206">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="35536-207">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-207">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="35536-208">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-208">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-209">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="35536-209">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program3.cs#3)]
 [!code-vb[System.IO.StreamWriter.ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-210">
            <paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-210">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35536-211">
            <paramref name="bufferSize" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-211">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-212">
            <paramref name="stream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-212">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="35536-213">書き込まれる完全なファイルパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-213">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="35536-214">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-214">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="35536-215">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-215">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="35536-216">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-216">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-217">指定したエンコーディングと既定のバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-217">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the specified encoding and default buffer size.</span>
          </span>
          <span data-ttu-id="35536-218">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-218">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="35536-219">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-219">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-220">このコンス トラクター、 <xref:System.IO.StreamWriter.Encoding%2A> encoding パラメーターを使用してプロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-220">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="35536-221">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="35536-221">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="35536-222">`path` 汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="35536-222">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="35536-223">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="35536-223">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="35536-224">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-224">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="35536-225">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-225">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-226">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="35536-226">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program7.cs#7)]
 [!code-vb[System.IO.StreamWriter.ctor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35536-227">アクセスが拒否されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-227">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-228">
            <paramref name="path" /> が空です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-228">
              <paramref name="path" /> is empty.</span>
          </span>
          <span data-ttu-id="35536-229">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-229">-or-</span>
          </span>
          <span data-ttu-id="35536-230">
            <paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-230">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-231">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-231">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="35536-232">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-232">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-233">
            <paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-233">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="35536-234">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-234">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="35536-235">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下、ファイル名は 260 文字以下にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-235">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="35536-236">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-236">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="35536-237">読み取りや、ファイルを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-237">for reading and writing files.</span>
          </span>
          <span data-ttu-id="35536-238">関連する列挙値: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-238">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="35536-239">書き込まれるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-239">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="35536-240">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-240">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="35536-241">バイト単位のバッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-241">The buffer size, in bytes.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="35536-242">
            <see cref="T:System.IO.StreamWriter" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-242">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.StreamWriter" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-243">指定した円コーディングとバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-243">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-244">設定しない限り、`leaveOpen`パラメーターを`true`、<xref:System.IO.StreamWriter>オブジェクトの呼び出し<xref:System.IO.Stream.Dispose>で提供されている<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="35536-244">Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="35536-245">このコンス トラクター、<xref:System.IO.StreamWriter.Encoding%2A>プロパティを使用して、`encoding`パラメーター、および初期化、<xref:System.IO.StreamWriter.BaseStream%2A>プロパティを使用して、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="35536-245">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter.</span></span> <span data-ttu-id="35536-246">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="35536-246">The position of the stream is not reset.</span></span> <span data-ttu-id="35536-247">詳細については、次を参照してください。、<xref:System.IO.TextWriter.Encoding%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-247">For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="35536-248">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-248">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-249">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="35536-249">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program4.cs#4)]
 [!code-vb[System.IO.StreamWriter.ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-250">
            <paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-250">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35536-251">
            <paramref name="bufferSize" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-251">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-252">
            <paramref name="stream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-252">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="35536-253">書き込まれる完全なファイルパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-253">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="35536-254">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-254">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="35536-255">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-255">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="35536-256">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-256">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="35536-257">バイト単位のバッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-257">The buffer size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-258">指定したエンコーディングとバッファー サイズを使用して、指定したパス上の指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-258">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file on the specified path, using the specified encoding and buffer size.</span>
          </span>
          <span data-ttu-id="35536-259">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-259">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="35536-260">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-260">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-261">このコンス トラクター、 <xref:System.IO.StreamWriter.Encoding%2A> encoding パラメーターを使用してプロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-261">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="35536-262">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="35536-262">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="35536-263">`path` 汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="35536-263">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="35536-264">`path` ディスクに格納されているファイルである必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="35536-264">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="35536-265">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-265">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="35536-266">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-266">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-267">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="35536-267">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program8.cs#8)]
 [!code-vb[System.IO.StreamWriter.ctor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-268">
            <paramref name="path" /> が空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-268">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
          <span data-ttu-id="35536-269">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-269">-or-</span>
          </span>
          <span data-ttu-id="35536-270">
            <paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-270">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-271">
            <paramref name="path" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-271">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35536-272">
            <paramref name="bufferSize" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-272">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-273">
            <paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-273">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="35536-274">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-274">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35536-275">アクセスが拒否されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-275">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="35536-276">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-276">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="35536-277">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-277">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="35536-278">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下、ファイル名は 260 文字以下にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-278">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="35536-279">読み取りや、ファイルを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-279">for reading and writing files.</span>
          </span>
          <span data-ttu-id="35536-280">関連する列挙値: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-280">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public virtual bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35536-281">
            <see cref="T:System.IO.StreamWriter" /> が呼び出されるたびに、<see cref="M:System.IO.StreamWriter.Write(System.Char)" /> によって基になるストリームに対するバッファーをフラッシュするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-281">Gets or sets a value indicating whether the <see cref="T:System.IO.StreamWriter" /> will flush its buffer to the underlying stream after every call to <see cref="M:System.IO.StreamWriter.Write(System.Char)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35536-282">
            <see cref="T:System.IO.StreamWriter" /> に強制的にバッファーをフラッシュさせる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-282">
              <see langword="true" /> to force <see cref="T:System.IO.StreamWriter" /> to flush its buffer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-283">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません<xref:System.IO.StreamWriter.Flush%2A>または<xref:System.IO.StreamWriter.Close%2A>です。</span><span class="sxs-lookup"><span data-stu-id="35536-283">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="35536-284">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データからフラッシュされるバッファーのストリームに個々 の書き込み操作の後に、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="35536-284">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="35536-285">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</span><span class="sxs-lookup"><span data-stu-id="35536-285">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="35536-286">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="35536-286">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="35536-287">ときに`AutoFlush`に設定されている`false`、`StreamWriter`バッファリングのどちらも内部的におよび、エンコーダーに渡されたエンコードからの可能性のある、限られた量の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="35536-287">When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in.</span></span> <span data-ttu-id="35536-288">設定してパフォーマンスを向上させるを取得することができます`AutoFlush`に`false`ことを前提とすると、必ず呼び出して`Close`(または少なくとも`Flush`) 終了するとに書き込み、`StreamWriter`です。</span><span class="sxs-lookup"><span data-stu-id="35536-288">You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.</span></span>  
  
 <span data-ttu-id="35536-289">たとえば、設定`AutoFlush`に`true`即時のフィードバックがユーザーに期待されている場所のデバイスに書き込みを行うときにします。</span><span class="sxs-lookup"><span data-stu-id="35536-289">For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback.</span></span> <span data-ttu-id="35536-290">`Console.Out` このような場合の 1 つです。`StreamWriter`に書き込むために内部的に使用される`Console`エンコーダー状態以外のすべての内部状態をすべての呼び出しにフラッシュ<xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="35536-290">`Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35536-291">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-291">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-292">次の例を使用する構文を示しています、`AutoFlush`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-292">The following example shows the syntax for using the `AutoFlush` property.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#5)]
 [!code-csharp[System.IO.StreamWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#5)]
 [!code-vb[System.IO.StreamWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35536-293">バッキング ストアと連結する、基になるストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-293">Gets the underlying stream that interfaces with a backing store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35536-294">この <see langword="StreamWriter" /> が書き込むストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-294">The stream this <see langword="StreamWriter" /> is writing to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-295">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-295">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35536-296">現在の <see langword="StreamWriter" /> オブジェクトと基になるストリームを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-296">Closes the current <see langword="StreamWriter" /> object and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-297">このメソッドは、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="35536-297">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35536-298">この実装<xref:System.IO.StreamWriter.Close%2A>呼び出し、<xref:System.IO.StreamWriter.Dispose%2A>メソッド、`true`値。</span><span class="sxs-lookup"><span data-stu-id="35536-298">This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="35536-299">呼び出す必要があります<xref:System.IO.StreamWriter.Close%2A>を基になるストリームに、のすべてのデータを正しく書き込むことを確認します。</span><span class="sxs-lookup"><span data-stu-id="35536-299">You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream.</span></span> <span data-ttu-id="35536-300">呼び出しに続く<xref:System.IO.StreamWriter.Close%2A>、に対するすべての操作、<xref:System.IO.StreamWriter>例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="35536-300">Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions.</span></span> <span data-ttu-id="35536-301">ディスクに十分な空き領域がある場合は、呼び出す<xref:System.IO.StreamWriter.Close%2A>で例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="35536-301">If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.</span></span>  
  
 <span data-ttu-id="35536-302">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません<xref:System.IO.StreamWriter.Flush%2A>または<xref:System.IO.StreamWriter.Close%2A>です。</span><span class="sxs-lookup"><span data-stu-id="35536-302">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="35536-303">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`に、ストリーム バッファーからデータがフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="35536-303">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="35536-304">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</span><span class="sxs-lookup"><span data-stu-id="35536-304">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="35536-305">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="35536-305">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-306">次のコード例を示しています、`Close`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35536-306">The following code example demonstrates the `Close` method.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#17)]
 [!code-csharp[System.IO.StreamWriter#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#17)]
 [!code-vb[System.IO.StreamWriter#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="35536-307">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-307">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="35536-308">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-308">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-309">
            <see cref="T:System.IO.StreamWriter" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-309">Releases the unmanaged resources used by the <see cref="T:System.IO.StreamWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-310">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StreamWriter> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="35536-310">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references.</span></span> <span data-ttu-id="35536-311">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="35536-311">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="35536-312">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-312">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="35536-313">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="35536-313">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="35536-314">オーバーライドする場合<see langword="Dispose" />を以前の呼び出しで既に破棄されているオブジェクトを参照しないように注意、<see langword="Dispose" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="35536-314">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="35536-315">このメソッドは、基本クラスの dispose メソッドを呼び出す<see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="35536-315">This method calls the dispose method of the base class, <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35536-316">出力の書き込みに使用する <see cref="T:System.Text.Encoding" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-316">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35536-317">現在のインスタンスのコンストラクターで指定した <see cref="T:System.Text.Encoding" />。エンコーディングを指定しなかった場合は、<see cref="T:System.Text.UTF8Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-317">The <see cref="T:System.Text.Encoding" /> specified in the constructor for the current instance, or <see cref="T:System.Text.UTF8Encoding" /> if an encoding was not specified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-318">このプロパティは、一部の XML のシナリオで使用されるエンコーディングを格納している、ヘッダーを書き込む必要があります、必要に応じて、<xref:System.IO.StreamWriter>です。</span><span class="sxs-lookup"><span data-stu-id="35536-318">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>.</span></span> <span data-ttu-id="35536-319">これにより、任意に使用する XML コード<xref:System.IO.StreamWriter>し、正しい XML ヘッダーを生成します。</span><span class="sxs-lookup"><span data-stu-id="35536-319">This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="35536-320">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-320">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-321">次の例では、指定されたエンコーディングを取得します<xref:System.IO.StreamWriter>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="35536-321">The following example retrieves the encoding of the specified <xref:System.IO.StreamWriter> instance.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#11)]
 [!code-csharp[System.IO.StreamWriter#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#11)]
 [!code-vb[System.IO.StreamWriter#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35536-322">現在のライターで使用したすべてのバッファーをクリアし、バッファー内のすべてのデータを基になるストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-322">Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-323">このメソッドは、<xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="35536-323">This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35536-324">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません`Flush`または<xref:System.IO.StreamWriter.Close%2A>です。</span><span class="sxs-lookup"><span data-stu-id="35536-324">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="35536-325">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データからフラッシュされるバッファーのストリームに個々 の書き込み操作の後に、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="35536-325">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="35536-326">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</span><span class="sxs-lookup"><span data-stu-id="35536-326">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="35536-327">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="35536-327">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="35536-328">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-328">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-329">現在のライターがクローズされています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-329">The current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-330">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-330">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="35536-331">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-331">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.Close" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35536-332">このストリームのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-332">Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35536-333">非同期のフラッシュ操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-333">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-334">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-334">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.StreamWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.StreamWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.StreamWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As StreamWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::StreamWriter ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35536-335">バッキング ストアを持たない書き込み専用の <see langword="StreamWriter" /> を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-335">Provides a <see langword="StreamWriter" /> with no backing store that can be written to, but not read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-336">使用して`Null`への出力をリダイレクトする、`StreamWriter`するすべてのオペレーティング システム リソースは使用されません。</span><span class="sxs-lookup"><span data-stu-id="35536-336">Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="35536-337">ときに、`StreamWriter.Write`でメソッドが呼び出される`Null`呼び出しを単純に返します、および、実際にデータは、バッキング ストアに書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="35536-337">When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="35536-338">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-338">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-339">次の例での使用、`Null`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="35536-339">The following example demonstrates a use of the `Null` field.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#6)]
 [!code-csharp[System.IO.StreamWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#6)]
 [!code-vb[System.IO.StreamWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35536-340">ストリームにデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-340">Writes data to the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="35536-341">ストリームに書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-341">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-342">ストリームに文字を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-342">Writes a character to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-343">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="35536-343">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35536-344">指定した文字は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="35536-344">The specified character is written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="35536-345">場合<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`、<xref:System.IO.StreamWriter.Flush%2A>自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="35536-345">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="35536-346">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-346">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-347">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-347">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-348">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-348">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35536-349">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-349">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="35536-350">書き込むデータを格納する文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-350">A character array containing the data to write.</span>
          </span>
          <span data-ttu-id="35536-351">
            <c>buffer</c> が <see langword="null" /> の場合は、何も書き込まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-351">If <c>buffer</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-352">ストリームに文字配列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-352">Writes a character array to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-353">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="35536-353">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35536-354">指定された文字は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="35536-354">The specified characters are written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="35536-355">場合<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`、<xref:System.IO.StreamWriter.Flush%2A>自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="35536-355">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="35536-356">このメソッドより高速なパフォーマンスを提供可能性があります`Write`(`char[],``int,``int`) を確認する引数が少ないためです。</span><span class="sxs-lookup"><span data-stu-id="35536-356">This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check.</span></span>  
  
 <span data-ttu-id="35536-357">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-357">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-358">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-358">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-359">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-359">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35536-360">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-360">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="35536-361">ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-361">The string to write to the stream.</span>
          </span>
          <span data-ttu-id="35536-362">
            <c>value</c> が null の場合は、何も書き込まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-362">If <c>value</c> is null, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-363">ストリームに文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-363">Writes a string to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-364">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="35536-364">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35536-365">指定した<xref:System.String>は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="35536-365">The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.</span></span>  
  
 <span data-ttu-id="35536-366"><xref:System.IO.StreamWriter.Flush%2A> 場合に自動的に呼び出される<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="35536-366"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span> <span data-ttu-id="35536-367">場合`value`は`null`エントリが書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="35536-367">If `value` is `null`, no entries are written.</span></span>  
  
 <span data-ttu-id="35536-368">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-369">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-369">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35536-370">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-370">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-371">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-371">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="35536-372">書き込むデータを格納する文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-372">A character array that contains the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="35536-373">データの読み取りを開始する、バッファー内の文字位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-373">The character position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="35536-374">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-374">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-375">ストリームに文字配列の一部を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-375">Writes a subarray of characters to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-376">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="35536-376">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35536-377">文字を読み取る`buffer`始点`index`まで`index`+ (`count` - 1)。</span><span class="sxs-lookup"><span data-stu-id="35536-377">The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1).</span></span> <span data-ttu-id="35536-378">すべての文字は、基になるストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="35536-378">All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely.</span></span> <span data-ttu-id="35536-379"><xref:System.IO.StreamWriter.Flush%2A> 場合に自動的に呼び出される<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="35536-379"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span>  
  
 <span data-ttu-id="35536-380">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="35536-380">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-381">この例では、配列の 3 番目の要素で始まるファイルに、13 要素を配列から 8 文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="35536-381">This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.</span></span>  
  
 [!code-cpp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic StreamWriter.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-382">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-382">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-383">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35536-384">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-384">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35536-385">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-385">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-386">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-386">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35536-387">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-387">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35536-388">ストリームにデータを非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-388">Writes data to the stream asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="35536-389">ストリームに書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-389">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-390">文字を非同期でストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-390">Writes a character to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35536-391">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-391">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="35536-392">次の例は、1 つの文字を書き込む方法を示しています。 (文字"a") を使用してテキスト ファイルに、<xref:System.IO.StreamWriter.WriteAsync%28System.Char%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35536-392">The following example shows how to write a single character (the letter "a") to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example20.cs#20)]
 [!code-vb[System.IO.StreamWriter#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example20.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-393">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-393">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35536-394">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-394">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="35536-395">ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-395">The string to write to the stream.</span>
          </span>
          <span data-ttu-id="35536-396">
            <c>value</c> が <see langword="null" /> の場合は、何も書き込まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-396">If <c>value</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-397">文字列をストリームに非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-397">Writes a string to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35536-398">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-398">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="35536-399">次の例を使用して文字列をテキスト ファイルに書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteAsync%28System.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35536-399">The following example shows how to write a string to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example21.cs#21)]
 [!code-vb[System.IO.StreamWriter#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example21.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-400">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-400">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35536-401">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-401">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="35536-402">書き込むデータを格納する文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-402">A character array that contains the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="35536-403">データの読み取りを開始する、バッファー内の文字位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-403">The character position in the buffer at which to begin reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="35536-404">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-404">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-405">文字の部分配列をストリームに非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-405">Writes a subarray of characters to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35536-406">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-406">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="35536-407">次の例を使用して、テキスト ファイルに複数の文字を書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35536-407">The following example shows how to write multiple characters to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example24.cs#24)]
 [!code-vb[System.IO.StreamWriter#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example24.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-408">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-408">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-409">
            <paramref name="index" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-409">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35536-410">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-410">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-411">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-411">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35536-412">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-412">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35536-413">データを非同期でストリームに書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-413">Writes data followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35536-414">行終端記号をストリームに非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-414">Writes a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35536-415">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-415">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-416">行終端記号がによって定義された、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-416">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-417">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-417">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35536-418">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-418">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="35536-419">ストリームに書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-419">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-420">非同期でストリームに文字を書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-420">Writes a character followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35536-421">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-421">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-422">行終端記号がによって定義された、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-422">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-423">次の例は、1 つの文字を書き込む方法を示しています。 (文字"a")、テキスト ファイルに行を後に 1 つの文字を含む (、文字"b") を使用して、別の行を、<xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35536-423">The following example shows how to write a single character (the letter "a") to a line in a text file, followed by another line that contains a single character (the letter "b"), by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example22.cs#22)]
 [!code-vb[System.IO.StreamWriter#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example22.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-424">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-424">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35536-425">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-425">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="35536-426">書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-426">The string to write.</span>
          </span>
          <span data-ttu-id="35536-427">値が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-427">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-428">文字列を非同期でストリームに書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-428">Writes a string followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35536-429">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-429">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-430">行終端記号がによって定義された、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-430">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-431">次の例を使用して、テキスト ファイルに文字列の値から成る 2 つの行を記述する方法を示しています、<xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35536-431">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-432">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-432">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35536-433">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-433">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="35536-434">データの書き込み元の文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-434">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="35536-435">データの読み取りを開始する、バッファー内の文字位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-435">The character position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="35536-436">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-436">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35536-437">文字の部分配列をストリームに非同期で書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-437">Writes a subarray of characters followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35536-438">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-438">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35536-439">行終端記号がによって定義された、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35536-439">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35536-440">次の例を使用して、テキスト ファイルに次の 2 つの別々 の行に文字を書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35536-440">The following example shows how to write characters to two separate lines in a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="35536-441">最初の行には、最初の 11 文字文字列 (「最初の行」とそれに続く空白文字) にはが含まれています。</span><span class="sxs-lookup"><span data-stu-id="35536-441">The first line contains the first 11 characters from the string (the letters "First line" followed by a space).</span></span> <span data-ttu-id="35536-442">2 番目の行に残りの文字文字列にはが含まれています (文字「と 2 番目の行」) です。</span><span class="sxs-lookup"><span data-stu-id="35536-442">The second line contains the remaining characters from the string (the letters "and second line").</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example25.cs#25)]
 [!code-vb[System.IO.StreamWriter#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example25.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35536-443">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-443">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35536-444">
            <paramref name="index" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-444">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35536-445">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-445">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35536-446">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-446">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35536-447">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35536-447">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>