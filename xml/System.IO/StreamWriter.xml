<Type Name="StreamWriter" FullName="System.IO.StreamWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ba0721dadc76bf68c570460d2d44265fd441269" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56399210" /></Metadata><TypeSignature Language="C#" Value="public class StreamWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StreamWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StreamWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type StreamWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="17837-101">文字を特定のエンコーディングでストリームに書き込むための <see cref="T:System.IO.TextWriter" /> を実装しています。</span><span class="sxs-lookup"><span data-stu-id="17837-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing characters to a stream in a particular encoding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-102"><xref:System.IO.StreamWriter> 派生したクラスは特定のエンコーディングで文字出力用に設計されていますが<xref:System.IO.Stream>バイト入出力用に設計されています。</span><span class="sxs-lookup"><span data-stu-id="17837-102"><xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="17837-103">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="17837-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="17837-104">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17837-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="17837-105">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="17837-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="17837-106">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="17837-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="17837-107">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="17837-108"><xref:System.IO.StreamWriter> 既定値のインスタンスを使用して<xref:System.Text.UTF8Encoding>それ以外の場合に指定されていない場合。</span><span class="sxs-lookup"><span data-stu-id="17837-108"><xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise.</span></span> <span data-ttu-id="17837-109">このインスタンスの`UTF8Encoding`バイト順マーク (BOM) なししたがっては構築その<xref:System.Text.Encoding.GetPreamble%2A>メソッドは空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="17837-109">This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="17837-110">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="17837-110">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="17837-111">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-111">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="17837-112">BOM を指定し、無効なバイトで例外がスローするかどうかを判断するには、エンコーディング オブジェクトをなど、パラメーターとして受け取るコンス トラクターを使用<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>または<xref:System.IO.StreamWriter.%23ctor%2A>します。</span><span class="sxs-lookup"><span data-stu-id="17837-112">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="17837-113">既定で、<xref:System.IO.StreamWriter>安全なスレッドはありません。</span><span class="sxs-lookup"><span data-stu-id="17837-113">By default, a <xref:System.IO.StreamWriter> is not thread safe.</span></span> <span data-ttu-id="17837-114">参照してください<xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType>のスレッド セーフ ラッパー。</span><span class="sxs-lookup"><span data-stu-id="17837-114">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
 <span data-ttu-id="17837-115">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-115">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-116">次の例は、使用する方法を示します、<xref:System.IO.StreamWriter>オブジェクトを使用して、C ドライブのディレクトリを一覧表示されるファイルの書き込みを<xref:System.IO.StreamReader>を読み取り、各ディレクトリ名を表示するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17837-116">The following example shows how to use a <xref:System.IO.StreamWriter> object to write a file that lists the directories on the C drive, and then uses a <xref:System.IO.StreamReader> object to read and display each directory name.</span></span> <span data-ttu-id="17837-117">これらのオブジェクトを使用するをお勧め、`using`ステートメント、アンマネージ リソースが適切に破棄されるようにします。</span><span class="sxs-lookup"><span data-stu-id="17837-117">A good practice is to use these objects in a `using` statement so that the unmanaged resources are correctly disposed.</span></span> <span data-ttu-id="17837-118">`using`ステートメントが自動的に呼び出します<xref:System.IDisposable.Dispose%2A>それを使用するコードが完了したときのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17837-118">The `using` statement automatically calls <xref:System.IDisposable.Dispose%2A> on the object when the code that is using it has completed.</span></span> <span data-ttu-id="17837-119">使用するこの例で使用されるコンス トラクターはサポートされていません[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]アプリ。</span><span class="sxs-lookup"><span data-stu-id="17837-119">The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.</span></span>  
  
 [!code-csharp[StreamReadWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/streamreadwrite/cs/program.cs#1)]
 [!code-vb[StreamReadWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/streamreadwrite/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.StreamReader" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-120">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-120">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-121">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-121">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-122">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-122">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="17837-123">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="17837-123">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17837-124"><see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17837-124">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : System.IO.Stream -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="17837-125">書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17837-125">The stream to write to.</span></span></param>
        <summary><span data-ttu-id="17837-126">UTF-8 エンコーディングと既定のバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17837-126">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using UTF-8 encoding and the default buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-127">このコンス トラクターを作成、 <xref:System.IO.StreamWriter> utf-8 エンコード付きでせずバイト オーダー マーク (BOM) ので、<xref:System.Text.Encoding.GetPreamble%2A>メソッドは空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="17837-127">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="17837-128">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="17837-128">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="17837-129">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-129">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="17837-130">無効なバイトで例外がスローするかどうかを指定するなど、パラメーターとしてのエンコーディング オブジェクトを受け取るコンス トラクターを使用して、<xref:System.IO.StreamWriter.%23ctor%2A>します。</span><span class="sxs-lookup"><span data-stu-id="17837-130">To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span> <span data-ttu-id="17837-131"><xref:System.IO.StreamWriter.BaseStream%2A>を使用してプロパティを初期化、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="17837-131">The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter.</span></span> <span data-ttu-id="17837-132">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="17837-132">The position of the stream is not reset.</span></span>  
  
 <span data-ttu-id="17837-133"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>提供された<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17837-133">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17837-134">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-134">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="17837-135">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-135">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-136">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="17837-136">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program1.cs#1)]
 [!code-vb[System.IO.StreamWriter.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-137"><paramref name="stream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17837-137"><paramref name="stream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-138"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17837-138"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-139">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-139">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-140">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-140">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-141">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-141">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : string -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="17837-142">書き込まれる完全なファイルパス。</span><span class="sxs-lookup"><span data-stu-id="17837-142">The complete file path to write to.</span></span> <span data-ttu-id="17837-143"><paramref name="path" /> はファイル名にすることもできます。</span><span class="sxs-lookup"><span data-stu-id="17837-143"><paramref name="path" /> can be a file name.</span></span></param>
        <summary><span data-ttu-id="17837-144">既定のエンコーディングとバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17837-144">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-145">このコンス トラクターを作成、 <xref:System.IO.StreamWriter> utf-8 エンコード付きでせずバイト オーダー マーク (BOM) ので、<xref:System.Text.Encoding.GetPreamble%2A>メソッドは空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="17837-145">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="17837-146">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="17837-146">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="17837-147">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-147">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="17837-148">BOM を指定し、無効なバイトで例外がスローするかどうかを判断するには、エンコーディング オブジェクトをなど、パラメーターとして受け取るコンス トラクターを使用<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>します。</span><span class="sxs-lookup"><span data-stu-id="17837-148">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="17837-149">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="17837-149">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span> <span data-ttu-id="17837-150">ファイルが存在する場合は上書きされます。それ以外の場合、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="17837-150">If the file exists, it is overwritten; otherwise, a new file is created.</span></span>  
  
 <span data-ttu-id="17837-151">`path`パラメーターは、ディスクに格納されているファイルは必要ありません。 ストリームを使用してアクセスをサポートするシステムの一部であることができます。</span><span class="sxs-lookup"><span data-stu-id="17837-151">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17837-152">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-152">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="17837-153">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-153">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-154">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="17837-154">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program5.cs#5)]
 [!code-vb[System.IO.StreamWriter.ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="17837-155">アクセスが拒否されました。</span><span class="sxs-lookup"><span data-stu-id="17837-155">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-156"><paramref name="path" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="17837-156"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="17837-157">または</span><span class="sxs-lookup"><span data-stu-id="17837-157">-or-</span></span> 
 <span data-ttu-id="17837-158"><paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-158"><paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-159"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17837-159"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="17837-160">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="17837-160">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="17837-161">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="17837-161">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-162"><paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span><span class="sxs-lookup"><span data-stu-id="17837-162"><paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="17837-163">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="17837-163">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="17837-164">ファイルを読み書きします。</span><span class="sxs-lookup"><span data-stu-id="17837-164">for reading and writing files.</span></span> <span data-ttu-id="17837-165">列挙型に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="17837-165">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-166">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-166">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-167">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-167">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-168">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-168">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : System.IO.Stream * System.Text.Encoding -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (stream, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="17837-169">書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17837-169">The stream to write to.</span></span></param>
        <param name="encoding"><span data-ttu-id="17837-170">使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="17837-170">The character encoding to use.</span></span></param>
        <summary><span data-ttu-id="17837-171">指定したエンコーディングと既定のバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17837-171">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and the default buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-172">このコンス トラクターを初期化します、<xref:System.IO.StreamWriter.Encoding%2A>エンコード パラメーターを使用してプロパティと<xref:System.IO.StreamWriter.BaseStream%2A>ストリーム パラメーターを使用するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-172">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter.</span></span> <span data-ttu-id="17837-173">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="17837-173">The position of the stream is not reset.</span></span> <span data-ttu-id="17837-174">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-174">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="17837-175"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>提供された<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17837-175">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17837-176">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-176">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="17837-177">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-177">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-178">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="17837-178">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program2.cs#2)]
 [!code-vb[System.IO.StreamWriter.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-179"><paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="17837-179"><paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-180"><paramref name="stream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17837-180"><paramref name="stream" /> is not writable.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-181">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-181">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-182">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-182">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-183">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-183">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : string * bool -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (path, append)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="17837-184">書き込まれる完全なファイルパス。</span><span class="sxs-lookup"><span data-stu-id="17837-184">The complete file path to write to.</span></span></param>
        <param name="append"><span data-ttu-id="17837-185">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17837-185"><see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span></span> <span data-ttu-id="17837-186">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="17837-186">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span></span></param>
        <summary><span data-ttu-id="17837-187">既定のエンコーディングとバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17837-187">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span></span> <span data-ttu-id="17837-188">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span><span class="sxs-lookup"><span data-stu-id="17837-188">If the file exists, it can be either overwritten or appended to.</span></span> <span data-ttu-id="17837-189">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="17837-189">If the file does not exist, this constructor creates a new file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-190">このコンス トラクターを作成、 <xref:System.IO.StreamWriter> utf-8 エンコード付きでせずバイト オーダー マーク (BOM) ので、<xref:System.Text.Encoding.GetPreamble%2A>メソッドは空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="17837-190">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="17837-191">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="17837-191">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="17837-192">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-192">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="17837-193">BOM を指定し、無効なバイトで例外がスローするかどうかを判断するには、エンコーディング オブジェクトをなど、パラメーターとして受け取るコンス トラクターを使用<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>します。</span><span class="sxs-lookup"><span data-stu-id="17837-193">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="17837-194">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="17837-194">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="17837-195">`path`パラメーターは、ディスクに格納されているファイルは必要ありません。 ストリームを使用してアクセスをサポートするシステムの一部であることができます。</span><span class="sxs-lookup"><span data-stu-id="17837-195">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17837-196">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-196">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="17837-197">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="17837-197">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-198">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="17837-198">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program6.cs#6)]
 [!code-vb[System.IO.StreamWriter.ctor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="17837-199">アクセスが拒否されました。</span><span class="sxs-lookup"><span data-stu-id="17837-199">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-200"><paramref name="path" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="17837-200"><paramref name="path" /> is empty.</span></span>  
  
<span data-ttu-id="17837-201">または</span><span class="sxs-lookup"><span data-stu-id="17837-201">-or-</span></span> 
 <span data-ttu-id="17837-202"><paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-202"><paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-203"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17837-203"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="17837-204">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="17837-204">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-205"><paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span><span class="sxs-lookup"><span data-stu-id="17837-205"><paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="17837-206">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="17837-206">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="17837-207">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="17837-207">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="17837-208">ファイルを読み書きします。</span><span class="sxs-lookup"><span data-stu-id="17837-208">for reading and writing files.</span></span> <span data-ttu-id="17837-209">列挙型に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="17837-209">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-210">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-210">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-211">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-211">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-212">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-212">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : System.IO.Stream * System.Text.Encoding * int -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (stream, encoding, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="17837-213">書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17837-213">The stream to write to.</span></span></param>
        <param name="encoding"><span data-ttu-id="17837-214">使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="17837-214">The character encoding to use.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="17837-215">バイト単位のバッファー サイズ。</span><span class="sxs-lookup"><span data-stu-id="17837-215">The buffer size, in bytes.</span></span></param>
        <summary><span data-ttu-id="17837-216">指定したエンコーディングとバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17837-216">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-217">このコンス トラクターを初期化します、<xref:System.IO.StreamWriter.Encoding%2A>プロパティを使用して、`encoding`パラメーター、および<xref:System.IO.StreamWriter.BaseStream%2A>プロパティを使用して、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="17837-217">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter.</span></span> <span data-ttu-id="17837-218">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="17837-218">The position of the stream is not reset.</span></span> <span data-ttu-id="17837-219">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-219">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="17837-220"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>提供された<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17837-220">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17837-221">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-221">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="17837-222">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-222">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-223">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="17837-223">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program3.cs#3)]
 [!code-vb[System.IO.StreamWriter.ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-224"><paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="17837-224"><paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17837-225"><paramref name="bufferSize" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="17837-225"><paramref name="bufferSize" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-226"><paramref name="stream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17837-226"><paramref name="stream" /> is not writable.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-227">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-227">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-228">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-228">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-229">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-229">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : string * bool * System.Text.Encoding -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (path, append, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="17837-230">書き込まれる完全なファイルパス。</span><span class="sxs-lookup"><span data-stu-id="17837-230">The complete file path to write to.</span></span></param>
        <param name="append"><span data-ttu-id="17837-231">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17837-231"><see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span></span> <span data-ttu-id="17837-232">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="17837-232">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span></span></param>
        <param name="encoding"><span data-ttu-id="17837-233">使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="17837-233">The character encoding to use.</span></span></param>
        <summary><span data-ttu-id="17837-234">指定したエンコーディングと既定のバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17837-234">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the specified encoding and default buffer size.</span></span> <span data-ttu-id="17837-235">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span><span class="sxs-lookup"><span data-stu-id="17837-235">If the file exists, it can be either overwritten or appended to.</span></span> <span data-ttu-id="17837-236">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="17837-236">If the file does not exist, this constructor creates a new file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-237">このコンス トラクターの初期化、<xref:System.IO.StreamWriter.Encoding%2A>エンコード パラメーターを使用するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-237">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="17837-238">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-238">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="17837-239">`path` 汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名であることができます。</span><span class="sxs-lookup"><span data-stu-id="17837-239">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="17837-240">`path` ディスクに格納されているファイルにする必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分であることができます。</span><span class="sxs-lookup"><span data-stu-id="17837-240">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17837-241">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-241">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="17837-242">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-242">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-243">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="17837-243">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program7.cs#7)]
 [!code-vb[System.IO.StreamWriter.ctor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="17837-244">アクセスが拒否されました。</span><span class="sxs-lookup"><span data-stu-id="17837-244">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-245"><paramref name="path" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="17837-245"><paramref name="path" /> is empty.</span></span>  
  
<span data-ttu-id="17837-246">または</span><span class="sxs-lookup"><span data-stu-id="17837-246">-or-</span></span> 
 <span data-ttu-id="17837-247"><paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-247"><paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-248"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17837-248"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="17837-249">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="17837-249">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-250"><paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span><span class="sxs-lookup"><span data-stu-id="17837-250"><paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="17837-251">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="17837-251">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="17837-252">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="17837-252">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="17837-253">ファイルを読み書きします。</span><span class="sxs-lookup"><span data-stu-id="17837-253">for reading and writing files.</span></span> <span data-ttu-id="17837-254">列挙型に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="17837-254">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-255">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-255">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-256">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-256">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-257">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-257">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : System.IO.Stream * System.Text.Encoding * int * bool -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (stream, encoding, bufferSize, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="17837-258">書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17837-258">The stream to write to.</span></span></param>
        <param name="encoding"><span data-ttu-id="17837-259">使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="17837-259">The character encoding to use.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="17837-260">バイト単位のバッファー サイズ。</span><span class="sxs-lookup"><span data-stu-id="17837-260">The buffer size, in bytes.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="17837-261"><see cref="T:System.IO.StreamWriter" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17837-261"><see langword="true" /> to leave the stream open after the <see cref="T:System.IO.StreamWriter" /> object is disposed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="17837-262">指定した円コーディングとバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</span><span class="sxs-lookup"><span data-stu-id="17837-262">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-263">設定しない限り、`leaveOpen`パラメーターを`true`、<xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>提供された<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17837-263">Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="17837-264">このコンス トラクターの初期化、<xref:System.IO.StreamWriter.Encoding%2A>プロパティを使用して、`encoding`パラメーター、および初期化、<xref:System.IO.StreamWriter.BaseStream%2A>プロパティを使用して、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="17837-264">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter.</span></span> <span data-ttu-id="17837-265">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="17837-265">The position of the stream is not reset.</span></span> <span data-ttu-id="17837-266">詳細については、次を参照してください。、<xref:System.IO.TextWriter.Encoding%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-266">For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17837-267">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-267">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-268">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="17837-268">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program4.cs#4)]
 [!code-vb[System.IO.StreamWriter.ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-269"><paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="17837-269"><paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17837-270"><paramref name="bufferSize" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="17837-270"><paramref name="bufferSize" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-271"><paramref name="stream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17837-271"><paramref name="stream" /> is not writable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : string * bool * System.Text.Encoding * int -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (path, append, encoding, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="17837-272">書き込まれる完全なファイルパス。</span><span class="sxs-lookup"><span data-stu-id="17837-272">The complete file path to write to.</span></span></param>
        <param name="append"><span data-ttu-id="17837-273">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17837-273"><see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span></span> <span data-ttu-id="17837-274">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="17837-274">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span></span></param>
        <param name="encoding"><span data-ttu-id="17837-275">使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="17837-275">The character encoding to use.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="17837-276">バイト単位のバッファー サイズ。</span><span class="sxs-lookup"><span data-stu-id="17837-276">The buffer size, in bytes.</span></span></param>
        <summary><span data-ttu-id="17837-277">指定したエンコーディングとバッファー サイズを使用して、指定したパス上の指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17837-277">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file on the specified path, using the specified encoding and buffer size.</span></span> <span data-ttu-id="17837-278">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span><span class="sxs-lookup"><span data-stu-id="17837-278">If the file exists, it can be either overwritten or appended to.</span></span> <span data-ttu-id="17837-279">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="17837-279">If the file does not exist, this constructor creates a new file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-280">このコンス トラクターの初期化、<xref:System.IO.StreamWriter.Encoding%2A>エンコード パラメーターを使用するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-280">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="17837-281">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-281">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="17837-282">`path` 汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名であることができます。</span><span class="sxs-lookup"><span data-stu-id="17837-282">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="17837-283">`path` ディスクに格納されているファイルにする必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分であることができます。</span><span class="sxs-lookup"><span data-stu-id="17837-283">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17837-284">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-284">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="17837-285">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-285">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-286">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="17837-286">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program8.cs#8)]
 [!code-vb[System.IO.StreamWriter.ctor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-287"><paramref name="path" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="17837-287"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="17837-288">または</span><span class="sxs-lookup"><span data-stu-id="17837-288">-or-</span></span> 
 <span data-ttu-id="17837-289"><paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-289"><paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-290"><paramref name="path" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="17837-290"><paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17837-291"><paramref name="bufferSize" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="17837-291"><paramref name="bufferSize" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-292"><paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span><span class="sxs-lookup"><span data-stu-id="17837-292"><paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="17837-293">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="17837-293">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="17837-294">アクセスが拒否されました。</span><span class="sxs-lookup"><span data-stu-id="17837-294">Access is denied.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="17837-295">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="17837-295">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="17837-296">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="17837-296">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="17837-297">ファイルを読み書きします。</span><span class="sxs-lookup"><span data-stu-id="17837-297">for reading and writing files.</span></span> <span data-ttu-id="17837-298">列挙型に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="17837-298">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-299">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-299">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-300">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-300">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-301">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-301">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public virtual bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.IO.StreamWriter.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17837-302"><see cref="T:System.IO.StreamWriter" /> が呼び出されるたびに、<see cref="M:System.IO.StreamWriter.Write(System.Char)" /> によって基になるストリームに対するバッファーをフラッシュするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="17837-302">Gets or sets a value indicating whether the <see cref="T:System.IO.StreamWriter" /> will flush its buffer to the underlying stream after every call to <see cref="M:System.IO.StreamWriter.Write(System.Char)" />.</span></span></summary>
        <value><span data-ttu-id="17837-303"><see cref="T:System.IO.StreamWriter" /> に強制的にバッファーをフラッシュさせる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17837-303"><see langword="true" /> to force <see cref="T:System.IO.StreamWriter" /> to flush its buffer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-304">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない<xref:System.IO.StreamWriter.Flush%2A>または<xref:System.IO.StreamWriter.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="17837-304">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="17837-305">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データからフラッシュされるバッファー ストリームに書き込み操作の後、エンコーダーの状態はフラッシュされませんが、ことを意味します。</span><span class="sxs-lookup"><span data-stu-id="17837-305">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="17837-306">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="17837-306">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="17837-307">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="17837-307">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="17837-308">ときに`AutoFlush`に設定されている`false`、`StreamWriter`バッファリングのどちらも内部的に、可能性のあるで渡されるエンコーディングから、エンコーダーでは、限られた量の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="17837-308">When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in.</span></span> <span data-ttu-id="17837-309">パフォーマンスの向上を設定して取得できます`AutoFlush`に`false`常に呼び出すことを前提と`Close`(または、少なくとも`Flush`) 完了したら書き込みの`StreamWriter`します。</span><span class="sxs-lookup"><span data-stu-id="17837-309">You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.</span></span>  
  
 <span data-ttu-id="17837-310">たとえば、設定`AutoFlush`に`true`ユーザーに迅速なフィードバックが必要ですが、デバイスを作成する場合。</span><span class="sxs-lookup"><span data-stu-id="17837-310">For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback.</span></span> <span data-ttu-id="17837-311">`Console.Out` このような場合のいずれかです。`StreamWriter`への書き込みに内部的に使用`Console`に呼び出されるたびにエンコーダー状態以外のすべての内部状態をフラッシュ<xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="17837-311">`Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="17837-312">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="17837-312">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-313">次の例を使用する構文を示しています、`AutoFlush`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-313">The following example shows the syntax for using the `AutoFlush` property.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#5)]
 [!code-csharp[System.IO.StreamWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#5)]
 [!code-vb[System.IO.StreamWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-314">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-314">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-315">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-315">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-316">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-316">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.StreamWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17837-317">バッキング ストアと連結する、基になるストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="17837-317">Gets the underlying stream that interfaces with a backing store.</span></span></summary>
        <value><span data-ttu-id="17837-318">この <see langword="StreamWriter" /> が書き込むストリーム。</span><span class="sxs-lookup"><span data-stu-id="17837-318">The stream this <see langword="StreamWriter" /> is writing to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-319">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-319">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-320">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-320">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-321">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-321">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-322">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-322">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="streamWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17837-323">現在の <see langword="StreamWriter" /> オブジェクトと基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="17837-323">Closes the current <see langword="StreamWriter" /> object and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-324">このメソッドは、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="17837-324">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="17837-325">この実装の<xref:System.IO.StreamWriter.Close%2A>呼び出し、<xref:System.IO.StreamWriter.Dispose%2A>メソッドに渡して、`true`値。</span><span class="sxs-lookup"><span data-stu-id="17837-325">This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="17837-326">呼び出す必要があります<xref:System.IO.StreamWriter.Close%2A>を基になるストリームに、のすべてのデータを正しく書き込むことを確認します。</span><span class="sxs-lookup"><span data-stu-id="17837-326">You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream.</span></span> <span data-ttu-id="17837-327">呼び出しに続く<xref:System.IO.StreamWriter.Close%2A>でその操作、<xref:System.IO.StreamWriter>例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="17837-327">Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions.</span></span> <span data-ttu-id="17837-328">ディスクに十分な空き領域がある場合は、呼び出す<xref:System.IO.StreamWriter.Close%2A>で例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="17837-328">If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.</span></span>  
  
 <span data-ttu-id="17837-329">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない<xref:System.IO.StreamWriter.Flush%2A>または<xref:System.IO.StreamWriter.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="17837-329">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="17837-330">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="17837-330">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="17837-331">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="17837-331">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="17837-332">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="17837-332">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-333">次のコード例に示します、`Close`メソッド。</span><span class="sxs-lookup"><span data-stu-id="17837-333">The following code example demonstrates the `Close` method.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#17)]
 [!code-csharp[System.IO.StreamWriter#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#17)]
 [!code-vb[System.IO.StreamWriter#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="17837-334">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="17837-334">The current encoding does not support displaying half of a Unicode surrogate pair.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-335">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-335">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-336">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-336">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-337">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-337">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="streamWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="17837-338">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17837-338"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="17837-339"><see cref="T:System.IO.StreamWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="17837-339">Releases the unmanaged resources used by the <see cref="T:System.IO.StreamWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-340">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StreamWriter> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="17837-340">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references.</span></span> <span data-ttu-id="17837-341">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="17837-341">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="17837-342">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="17837-342">The current encoding does not support displaying half of a Unicode surrogate pair.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="17837-343">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="17837-343">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="17837-344">オーバーライドするときに<see langword="Dispose" />を以前の呼び出しで破棄されたオブジェクトを参照しないように注意、<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="17837-344">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span>  
  
<span data-ttu-id="17837-345">このメソッドは、基底クラスの dispose メソッド<see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />します。</span><span class="sxs-lookup"><span data-stu-id="17837-345">This method calls the dispose method of the base class, <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />.</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-346">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-346">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-347">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-347">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-348">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-348">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="streamWriter.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.StreamWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17837-349">出力の書き込みに使用する <see cref="T:System.Text.Encoding" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="17837-349">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span></span></summary>
        <value><span data-ttu-id="17837-350">現在のインスタンスのコンストラクターで指定した <see cref="T:System.Text.Encoding" />。エンコーディングを指定しなかった場合は、<see cref="T:System.Text.UTF8Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="17837-350">The <see cref="T:System.Text.Encoding" /> specified in the constructor for the current instance, or <see cref="T:System.Text.UTF8Encoding" /> if an encoding was not specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-351">このプロパティは、いくつか XML のシナリオで使用されるエンコーディングを格納しているヘッダーを記述する必要があります、ために必要な<xref:System.IO.StreamWriter>します。</span><span class="sxs-lookup"><span data-stu-id="17837-351">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>.</span></span> <span data-ttu-id="17837-352">これにより、任意で使用する XML コード<xref:System.IO.StreamWriter>し、正しい XML ヘッダーを生成します。</span><span class="sxs-lookup"><span data-stu-id="17837-352">This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="17837-353">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-353">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-354">次の例では、指定したエンコーディングを取得します<xref:System.IO.StreamWriter>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="17837-354">The following example retrieves the encoding of the specified <xref:System.IO.StreamWriter> instance.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#11)]
 [!code-csharp[System.IO.StreamWriter#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#11)]
 [!code-vb[System.IO.StreamWriter#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-355">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-355">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-356">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-356">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-357">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-357">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~StreamWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!StreamWriter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="streamWriter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17837-358">現在の <see cref="T:System.IO.StreamWriter" /> のリソースを解放し、ガベージ コレクターで再生します。</span><span class="sxs-lookup"><span data-stu-id="17837-358">Frees the resources of the current <see cref="T:System.IO.StreamWriter" /> before it is reclaimed by the garbage collector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples  
<span data-ttu-id="17837-359">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-359">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>

]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-360">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-360">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-361">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-361">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-362">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-362">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="streamWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17837-363">現在のライターで使用したすべてのバッファーをクリアし、バッファー内のすべてのデータを基になるストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-363">Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-364">このメソッドは、<xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="17837-364">This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="17837-365">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない`Flush`または<xref:System.IO.StreamWriter.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="17837-365">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="17837-366">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データからフラッシュされるバッファー ストリームに書き込み操作の後、エンコーダーの状態はフラッシュされませんが、ことを意味します。</span><span class="sxs-lookup"><span data-stu-id="17837-366">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="17837-367">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="17837-367">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="17837-368">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="17837-368">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="17837-369">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-369">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-370">現在のライターがクローズされています。</span><span class="sxs-lookup"><span data-stu-id="17837-370">The current writer is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-371">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="17837-371">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="17837-372">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="17837-372">The current encoding does not support displaying half of a Unicode surrogate pair.</span></span></exception>
        <altmember cref="M:System.IO.Stream.Close" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-373">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-373">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-374">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-374">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-375">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-375">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="streamWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17837-376">このストリームのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-376">Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="17837-377">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="17837-377">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-378">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="17837-378">The stream has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.StreamWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.StreamWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.StreamWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As StreamWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::StreamWriter ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.StreamWriter" Usage="System.IO.StreamWriter.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17837-379">バッキング ストアを持たない書き込み専用の <see langword="StreamWriter" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="17837-379">Provides a <see langword="StreamWriter" /> with no backing store that can be written to, but not read from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-380">使用`Null`への出力をリダイレクトする、`StreamWriter`オペレーティング システムのリソースを使いません。</span><span class="sxs-lookup"><span data-stu-id="17837-380">Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="17837-381">ときに、`StreamWriter.Write`でメソッドが呼び出された`Null`、単に呼び出しを返します、および実際にデータは任意のバッキング ストアに書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="17837-381">When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="17837-382">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-382">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-383">次の例を使用して、`Null`フィールド。</span><span class="sxs-lookup"><span data-stu-id="17837-383">The following example demonstrates a use of the `Null` field.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#6)]
 [!code-csharp[System.IO.StreamWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#6)]
 [!code-vb[System.IO.StreamWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-384">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-384">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-385">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-385">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-386">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-386">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17837-387">ストリームにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-387">Writes data to the stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="streamWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="17837-388">ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="17837-388">The character to write to the stream.</span></span></param>
        <summary><span data-ttu-id="17837-389">ストリームに文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-389">Writes a character to the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-390">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="17837-390">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="17837-391">指定した文字は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-391">The specified character is written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="17837-392">場合<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`、<xref:System.IO.StreamWriter.Flush%2A>が自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17837-392">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="17837-393">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-393">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-394">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="17837-394">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-395"><see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span><span class="sxs-lookup"><span data-stu-id="17837-395"><see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17837-396"><see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span><span class="sxs-lookup"><span data-stu-id="17837-396"><see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-397">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-397">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-398">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-398">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-399">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-399">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] -&gt; unit" Usage="streamWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17837-400">書き込むデータを格納する文字配列。</span><span class="sxs-lookup"><span data-stu-id="17837-400">A character array containing the data to write.</span></span> <span data-ttu-id="17837-401"><paramref name="buffer" /> が <see langword="null" /> の場合は、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="17837-401">If <paramref name="buffer" /> is <see langword="null" />, nothing is written.</span></span></param>
        <summary><span data-ttu-id="17837-402">ストリームに文字配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-402">Writes a character array to the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-403">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="17837-403">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="17837-404">指定された文字は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-404">The specified characters are written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="17837-405">場合<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`、<xref:System.IO.StreamWriter.Flush%2A>が自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17837-405">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="17837-406">このメソッドが高速なパフォーマンスを提供`Write`(`char[],``int,``int`) を確認する引数が少ないためです。</span><span class="sxs-lookup"><span data-stu-id="17837-406">This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check.</span></span>  
  
 <span data-ttu-id="17837-407">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="17837-407">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-408">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="17837-408">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-409"><see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span><span class="sxs-lookup"><span data-stu-id="17837-409"><see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17837-410"><see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span><span class="sxs-lookup"><span data-stu-id="17837-410"><see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-411">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-411">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-412">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-412">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-413">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-413">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="streamWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="streamWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="17837-414">ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="17837-414">The string to write to the stream.</span></span> <span data-ttu-id="17837-415"><paramref name="value" /> が null の場合は、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="17837-415">If <paramref name="value" /> is null, nothing is written.</span></span></param>
        <summary><span data-ttu-id="17837-416">ストリームに文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-416">Writes a string to the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-417">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="17837-417">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="17837-418">指定した<xref:System.String>は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-418">The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.</span></span>  
  
 <span data-ttu-id="17837-419"><xref:System.IO.StreamWriter.Flush%2A> 場合に自動的に呼び出される<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="17837-419"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span> <span data-ttu-id="17837-420">場合`value`は`null`エントリは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="17837-420">If `value` is `null`, no entries are written.</span></span>  
  
 <span data-ttu-id="17837-421">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-421">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-422"><see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span><span class="sxs-lookup"><span data-stu-id="17837-422"><see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17837-423"><see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span><span class="sxs-lookup"><span data-stu-id="17837-423"><see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-424">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="17837-424">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-425">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-425">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-426">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-426">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-427">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-427">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="streamWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17837-428">書き込むデータを格納する文字配列。</span><span class="sxs-lookup"><span data-stu-id="17837-428">A character array that contains the data to write.</span></span></param>
        <param name="index"><span data-ttu-id="17837-429">データの読み取りを開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="17837-429">The character position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="17837-430">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="17837-430">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="17837-431">ストリームに文字配列の一部を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-431">Writes a subarray of characters to the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-432">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="17837-432">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="17837-433">文字を読み取る`buffer`から始まる`index`まで`index`+ (`count` - 1)。</span><span class="sxs-lookup"><span data-stu-id="17837-433">The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1).</span></span> <span data-ttu-id="17837-434">すべての文字は、基になるストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-434">All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely.</span></span> <span data-ttu-id="17837-435"><xref:System.IO.StreamWriter.Flush%2A> 場合に自動的に呼び出される<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="17837-435"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span>  
  
 <span data-ttu-id="17837-436">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="17837-436">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-437">この例では、ファイル、3 番目の要素配列の先頭に 13 要素配列から 8 文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-437">This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.</span></span>  
  
 [!code-cpp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic StreamWriter.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-438"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17837-438"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-439">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="17837-439">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17837-440"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="17837-440"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17837-441">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="17837-441">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-442"><see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span><span class="sxs-lookup"><span data-stu-id="17837-442"><see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17837-443"><see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span><span class="sxs-lookup"><span data-stu-id="17837-443"><see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="17837-444">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="17837-444">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="17837-445">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="17837-445">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="17837-446">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="17837-446">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17837-447">ストリームにデータを非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-447">Writes data to the stream asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="17837-448">ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="17837-448">The character to write to the stream.</span></span></param>
        <summary><span data-ttu-id="17837-449">文字を非同期でストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-449">Writes a character to the stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="17837-450">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="17837-450">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17837-451">次の例では、1 つの文字を書き込む方法を示しています (文字"a") を使用してテキスト ファイルに、<xref:System.IO.StreamWriter.WriteAsync%28System.Char%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="17837-451">The following example shows how to write a single character (the letter "a") to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example20.cs#20)]
 [!code-vb[System.IO.StreamWriter#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example20.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-452">ストリーム ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="17837-452">The stream writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17837-453">ストリーム ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="17837-453">The stream writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="17837-454">ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="17837-454">The string to write to the stream.</span></span> <span data-ttu-id="17837-455"><paramref name="value" /> が <see langword="null" /> の場合は、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="17837-455">If <paramref name="value" /> is <see langword="null" />, nothing is written.</span></span></param>
        <summary><span data-ttu-id="17837-456">文字列をストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-456">Writes a string to the stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="17837-457">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="17837-457">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17837-458">次の例を使用して、テキスト ファイルに文字列を書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteAsync%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="17837-458">The following example shows how to write a string to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example21.cs#21)]
 [!code-vb[System.IO.StreamWriter#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example21.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-459">ストリーム ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="17837-459">The stream writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17837-460">ストリーム ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="17837-460">The stream writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17837-461">書き込むデータを格納する文字配列。</span><span class="sxs-lookup"><span data-stu-id="17837-461">A character array that contains the data to write.</span></span></param>
        <param name="index"><span data-ttu-id="17837-462">データの読み取りを開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="17837-462">The character position in the buffer at which to begin reading data.</span></span></param>
        <param name="count"><span data-ttu-id="17837-463">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="17837-463">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="17837-464">文字の部分配列をストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-464">Writes a subarray of characters to the stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="17837-465">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="17837-465">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17837-466">次の例を使用して、テキスト ファイルに複数の文字を書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="17837-466">The following example shows how to write multiple characters to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example24.cs#24)]
 [!code-vb[System.IO.StreamWriter#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example24.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-467"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17837-467"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-468"><paramref name="index" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="17837-468">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17837-469"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="17837-469"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-470">ストリーム ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="17837-470">The stream writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17837-471">ストリーム ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="17837-471">The stream writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="streamWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="streamWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17837-472">データを非同期でストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-472">Writes data followed by a line terminator asynchronously to the stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : unit -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17837-473">行終端記号をストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-473">Writes a line terminator asynchronously to the stream.</span></span></summary>
        <returns><span data-ttu-id="17837-474">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="17837-474">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-475">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-475">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-476">ストリーム ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="17837-476">The stream writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17837-477">ストリーム ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="17837-477">The stream writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="17837-478">ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="17837-478">The character to write to the stream.</span></span></param>
        <summary><span data-ttu-id="17837-479">非同期でストリームに文字を書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-479">Writes a character followed by a line terminator asynchronously to the stream.</span></span></summary>
        <returns><span data-ttu-id="17837-480">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="17837-480">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-481">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-481">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-482">次の例では、1 つの文字を書き込む方法を示しています (文字"a") テキスト ファイルの行に続く別の行を使用して単一の文字 (文字"b") を含む、<xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="17837-482">The following example shows how to write a single character (the letter "a") to a line in a text file, followed by another line that contains a single character (the letter "b"), by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example22.cs#22)]
 [!code-vb[System.IO.StreamWriter#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example22.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-483">ストリーム ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="17837-483">The stream writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17837-484">ストリーム ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="17837-484">The stream writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="17837-485">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="17837-485">The string to write.</span></span> <span data-ttu-id="17837-486">値が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="17837-486">If the value is <see langword="null" />, only a line terminator is written.</span></span></param>
        <summary><span data-ttu-id="17837-487">文字列を非同期でストリームに書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-487">Writes a string followed by a line terminator asynchronously to the stream.</span></span></summary>
        <returns><span data-ttu-id="17837-488">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="17837-488">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-489">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-489">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-490">次の例を使用してテキスト ファイルに文字列値で構成される 2 つの行を記述する方法を示しています、<xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="17837-490">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-491">ストリーム ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="17837-491">The stream writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17837-492">ストリーム ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="17837-492">The stream writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17837-493">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="17837-493">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="17837-494">データの読み取りを開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="17837-494">The character position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="17837-495">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="17837-495">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="17837-496">文字の部分配列をストリームに非同期で書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17837-496">Writes a subarray of characters followed by a line terminator asynchronously to the stream.</span></span></summary>
        <returns><span data-ttu-id="17837-497">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="17837-497">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17837-498">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="17837-498">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17837-499">次の例を使用して、テキスト ファイルで 2 つの別々 の行に文字を書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="17837-499">The following example shows how to write characters to two separate lines in a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="17837-500">最初の行には、文字列 (「最初の行」とそれに続く空白文字) から最初の 11 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="17837-500">The first line contains the first 11 characters from the string (the letters "First line" followed by a space).</span></span> <span data-ttu-id="17837-501">2 番目の行には、文字列から残りの文字が含まれています (文字「と 2 番目の行」)。</span><span class="sxs-lookup"><span data-stu-id="17837-501">The second line contains the remaining characters from the string (the letters "and second line").</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example25.cs#25)]
 [!code-vb[System.IO.StreamWriter#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example25.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17837-502"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17837-502"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17837-503"><paramref name="index" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="17837-503">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17837-504"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="17837-504"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17837-505">ストリーム ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="17837-505">The stream writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17837-506">ストリーム ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="17837-506">The stream writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>