<Type Name="StreamWriter" FullName="System.IO.StreamWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c158fd858cdb67e3bcb6e77882361862c94e9c83" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39910986" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StreamWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StreamWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StreamWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type StreamWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="92f8c-101">文字を特定のエンコーディングでストリームに書き込むための <see cref="T:System.IO.TextWriter" /> を実装しています。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f8c-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing characters to a stream in a particular encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-102"><xref:System.IO.StreamWriter> 派生したクラスは特定のエンコーディングで文字出力用に設計されていますが<xref:System.IO.Stream>バイト入出力用に設計されています。</span><span class="sxs-lookup"><span data-stu-id="92f8c-102"><xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="92f8c-103">この型は、<xref:System.IDisposable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="92f8c-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="92f8c-104">型の使用が完了したら、直接的または間接的にそれを破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="92f8c-105">型の直接 dispose を呼び出してその<xref:System.IDisposable.Dispose%2A>メソッド、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="92f8c-106">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(で C# の場合) または`Using`(Visual Basic) でします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="92f8c-107">詳細については、"を使用して、オブジェクトを実装する IDisposable"のセクションを参照してください、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="92f8c-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="92f8c-108"><xref:System.IO.StreamWriter> 既定値のインスタンスを使用して<xref:System.Text.UTF8Encoding>それ以外の場合に指定されていない場合。</span><span class="sxs-lookup"><span data-stu-id="92f8c-108"><xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise.</span></span> <span data-ttu-id="92f8c-109">このインスタンスの`UTF8Encoding`バイト順マーク (BOM) なししたがっては構築その<xref:System.Text.Encoding.GetPreamble%2A>メソッドは空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-109">This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="92f8c-110">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-110">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="92f8c-111">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-111">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="92f8c-112">BOM を指定し、無効なバイトで例外がスローするかどうかを判断するには、エンコーディング オブジェクトをなど、パラメーターとして受け取るコンス トラクターを使用<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>または<xref:System.IO.StreamWriter.%23ctor%2A>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-112">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="92f8c-113">既定で、<xref:System.IO.StreamWriter>安全なスレッドはありません。</span><span class="sxs-lookup"><span data-stu-id="92f8c-113">By default, a <xref:System.IO.StreamWriter> is not thread safe.</span></span> <span data-ttu-id="92f8c-114">参照してください<xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType>のスレッド セーフ ラッパー。</span><span class="sxs-lookup"><span data-stu-id="92f8c-114">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
 <span data-ttu-id="92f8c-115">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-115">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-116">次の例は、使用する方法を示します、<xref:System.IO.StreamWriter>オブジェクトを使用して、C ドライブのディレクトリを一覧表示されるファイルの書き込みを<xref:System.IO.StreamReader>を読み取り、各ディレクトリ名を表示するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="92f8c-116">The following example shows how to use a <xref:System.IO.StreamWriter> object to write a file that lists the directories on the C drive, and then uses a <xref:System.IO.StreamReader> object to read and display each directory name.</span></span> <span data-ttu-id="92f8c-117">これらのオブジェクトを使用するをお勧め、`using`ステートメント、アンマネージ リソースが適切に破棄されるようにします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-117">A good practice is to use these objects in a `using` statement so that the unmanaged resources are correctly disposed.</span></span> <span data-ttu-id="92f8c-118">`using`ステートメントが自動的に呼び出します<xref:System.IDisposable.Dispose%2A>それを使用するコードが完了したときのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="92f8c-118">The `using` statement automatically calls <xref:System.IDisposable.Dispose%2A> on the object when the code that is using it has completed.</span></span> <span data-ttu-id="92f8c-119">使用するこの例で使用されるコンス トラクターはサポートされていません[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]アプリ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-119">The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.</span></span>  
  
 [!code-csharp[StreamReadWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/streamreadwrite/cs/program.cs#1)]
 [!code-vb[StreamReadWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/streamreadwrite/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.StreamReader" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-120">
            <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-120">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : System.IO.Stream -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="92f8c-121">書き込まれるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-121">The stream to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-122">UTF-8 エンコーディングと既定のバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-122">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using UTF-8 encoding and the default buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-123">このコンス トラクターを作成、 <xref:System.IO.StreamWriter> utf-8 エンコード付きでせずバイト オーダー マーク (BOM) ので、<xref:System.Text.Encoding.GetPreamble%2A>メソッドは空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-123">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="92f8c-124">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-124">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="92f8c-125">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-125">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="92f8c-126">無効なバイトで例外がスローするかどうかを指定するなど、パラメーターとしてのエンコーディング オブジェクトを受け取るコンス トラクターを使用して、<xref:System.IO.StreamWriter.%23ctor%2A>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-126">To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span> <span data-ttu-id="92f8c-127"><xref:System.IO.StreamWriter.BaseStream%2A>を使用してプロパティを初期化、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="92f8c-127">The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter.</span></span> <span data-ttu-id="92f8c-128">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="92f8c-128">The position of the stream is not reset.</span></span>  
  
 <span data-ttu-id="92f8c-129"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>提供された<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-129">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="92f8c-130">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-130">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="92f8c-131">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-131">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-132">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-132">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program1.cs#1)]
 [!code-vb[System.IO.StreamWriter.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-133">
            <paramref name="stream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-133">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-134">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-134">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : string -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="92f8c-135">書き込まれる完全なファイルパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-135">The complete file path to write to.</span>
          </span>
          <span data-ttu-id="92f8c-136">
            <c>path</c> はファイル名にすることもできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-136">
              <c>path</c> can be a file name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-137">既定のエンコーディングとバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-137">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-138">このコンス トラクターを作成、 <xref:System.IO.StreamWriter> utf-8 エンコード付きでせずバイト オーダー マーク (BOM) ので、<xref:System.Text.Encoding.GetPreamble%2A>メソッドは空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-138">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="92f8c-139">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-139">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="92f8c-140">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-140">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="92f8c-141">BOM を指定し、無効なバイトで例外がスローするかどうかを判断するには、エンコーディング オブジェクトをなど、パラメーターとして受け取るコンス トラクターを使用<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-141">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="92f8c-142">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-142">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span> <span data-ttu-id="92f8c-143">ファイルが存在する場合は上書きされます。それ以外の場合、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-143">If the file exists, it is overwritten; otherwise, a new file is created.</span></span>  
  
 <span data-ttu-id="92f8c-144">`path`パラメーターは、ディスクに格納されているファイルは必要ありません。 ストリームを使用してアクセスをサポートするシステムの一部であることができます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-144">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="92f8c-145">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-145">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="92f8c-146">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-147">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-147">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program5.cs#5)]
 [!code-vb[System.IO.StreamWriter.ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="92f8c-148">アクセスが拒否されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-148">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-149">
            <paramref name="path" /> が空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-149">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
          <span data-ttu-id="92f8c-150">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-150">-or-</span>
          </span>
          <span data-ttu-id="92f8c-151">
            <paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-151">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-152">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="92f8c-153">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-153">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="92f8c-154">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-154">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-155">
            <paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-155">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92f8c-156">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-156">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92f8c-157">ファイルを読み書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-157">for reading and writing files.</span>
          </span>
          <span data-ttu-id="92f8c-158">列挙型に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-158">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : System.IO.Stream * System.Text.Encoding -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (stream, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="92f8c-159">書き込まれるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-159">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="92f8c-160">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-160">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-161">指定したエンコーディングと既定のバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-161">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and the default buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-162">このコンス トラクターを初期化します、<xref:System.IO.StreamWriter.Encoding%2A>エンコード パラメーターを使用してプロパティと<xref:System.IO.StreamWriter.BaseStream%2A>ストリーム パラメーターを使用するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-162">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter.</span></span> <span data-ttu-id="92f8c-163">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="92f8c-163">The position of the stream is not reset.</span></span> <span data-ttu-id="92f8c-164">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="92f8c-164">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="92f8c-165"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>提供された<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-165">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="92f8c-166">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-166">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="92f8c-167">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-167">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-168">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-168">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program2.cs#2)]
 [!code-vb[System.IO.StreamWriter.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-169">
            <paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-169">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-170">
            <paramref name="stream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-170">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : string * bool -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (path, append)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="92f8c-171">書き込まれる完全なファイルパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-171">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="92f8c-172">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-172">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="92f8c-173">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-173">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-174">既定のエンコーディングとバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-174">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span>
          </span>
          <span data-ttu-id="92f8c-175">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-175">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="92f8c-176">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-176">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-177">このコンス トラクターを作成、 <xref:System.IO.StreamWriter> utf-8 エンコード付きでせずバイト オーダー マーク (BOM) ので、<xref:System.Text.Encoding.GetPreamble%2A>メソッドは空のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-177">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="92f8c-178">このコンス トラクターの既定の utf-8 エンコードでは、無効なバイトで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-178">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="92f8c-179">この動作のエンコーディング オブジェクトによって提供される動作とは異なります、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-179">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="92f8c-180">BOM を指定し、無効なバイトで例外がスローするかどうかを判断するには、エンコーディング オブジェクトをなど、パラメーターとして受け取るコンス トラクターを使用<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-180">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="92f8c-181">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-181">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="92f8c-182">`path`パラメーターは、ディスクに格納されているファイルは必要ありません。 ストリームを使用してアクセスをサポートするシステムの一部であることができます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-182">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="92f8c-183">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-183">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="92f8c-184">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-184">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-185">次のコード例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-185">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program6.cs#6)]
 [!code-vb[System.IO.StreamWriter.ctor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="92f8c-186">アクセスが拒否されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-186">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-187">
            <paramref name="path" /> が空です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-187">
              <paramref name="path" /> is empty.</span>
          </span>
          <span data-ttu-id="92f8c-188">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-188">-or-</span>
          </span>
          <span data-ttu-id="92f8c-189">
            <paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-189">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-190">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-190">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="92f8c-191">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-191">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-192">
            <paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-192">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="92f8c-193">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-193">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92f8c-194">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-194">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92f8c-195">ファイルを読み書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-195">for reading and writing files.</span>
          </span>
          <span data-ttu-id="92f8c-196">列挙型に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-196">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : System.IO.Stream * System.Text.Encoding * int -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (stream, encoding, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="92f8c-197">書き込まれるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-197">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="92f8c-198">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-198">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="92f8c-199">バイト単位のバッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-199">The buffer size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-200">指定したエンコーディングとバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-200">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-201">このコンス トラクターを初期化します、<xref:System.IO.StreamWriter.Encoding%2A>プロパティを使用して、`encoding`パラメーター、および<xref:System.IO.StreamWriter.BaseStream%2A>プロパティを使用して、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="92f8c-201">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter.</span></span> <span data-ttu-id="92f8c-202">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="92f8c-202">The position of the stream is not reset.</span></span> <span data-ttu-id="92f8c-203">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="92f8c-203">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="92f8c-204"><xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>提供された<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-204">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="92f8c-205">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-205">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="92f8c-206">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-206">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-207">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-207">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program3.cs#3)]
 [!code-vb[System.IO.StreamWriter.ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-208">
            <paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-208">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f8c-209">
            <paramref name="bufferSize" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-209">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-210">
            <paramref name="stream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-210">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : string * bool * System.Text.Encoding -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (path, append, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="92f8c-211">書き込まれる完全なファイルパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-211">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="92f8c-212">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-212">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="92f8c-213">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-213">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="92f8c-214">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-214">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-215">指定したエンコーディングと既定のバッファー サイズを使用して、指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-215">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the specified encoding and default buffer size.</span>
          </span>
          <span data-ttu-id="92f8c-216">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-216">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="92f8c-217">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-217">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-218">このコンス トラクターの初期化、<xref:System.IO.StreamWriter.Encoding%2A>エンコード パラメーターを使用するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-218">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="92f8c-219">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="92f8c-219">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="92f8c-220">`path` 汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名であることができます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-220">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="92f8c-221">`path` ディスクに格納されているファイルにする必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分であることができます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-221">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="92f8c-222">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-222">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="92f8c-223">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-223">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-224">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-224">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program7.cs#7)]
 [!code-vb[System.IO.StreamWriter.ctor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="92f8c-225">アクセスが拒否されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-225">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-226">
            <paramref name="path" /> が空です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-226">
              <paramref name="path" /> is empty.</span>
          </span>
          <span data-ttu-id="92f8c-227">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-227">-or-</span>
          </span>
          <span data-ttu-id="92f8c-228">
            <paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-228">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-229">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-229">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="92f8c-230">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-230">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-231">
            <paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-231">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="92f8c-232">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-232">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92f8c-233">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-233">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92f8c-234">ファイルを読み書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-234">for reading and writing files.</span>
          </span>
          <span data-ttu-id="92f8c-235">列挙型に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-235">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : System.IO.Stream * System.Text.Encoding * int * bool -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (stream, encoding, bufferSize, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="92f8c-236">書き込まれるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-236">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="92f8c-237">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-237">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="92f8c-238">バイト単位のバッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-238">The buffer size, in bytes.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="92f8c-239">
            <see cref="T:System.IO.StreamWriter" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-239">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.StreamWriter" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-240">指定した円コーディングとバッファー サイズを使用して、指定したストリーム用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-240">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-241">設定しない限り、`leaveOpen`パラメーターを`true`、<xref:System.IO.StreamWriter>オブジェクト呼び出し<xref:System.IO.Stream.Dispose>提供された<xref:System.IO.Stream>オブジェクトと<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-241">Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="92f8c-242">このコンス トラクターの初期化、<xref:System.IO.StreamWriter.Encoding%2A>プロパティを使用して、`encoding`パラメーター、および初期化、<xref:System.IO.StreamWriter.BaseStream%2A>プロパティを使用して、`stream`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="92f8c-242">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter.</span></span> <span data-ttu-id="92f8c-243">ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="92f8c-243">The position of the stream is not reset.</span></span> <span data-ttu-id="92f8c-244">詳細については、次を参照してください。、<xref:System.IO.TextWriter.Encoding%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-244">For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="92f8c-245">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-245">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-246">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-246">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program4.cs#4)]
 [!code-vb[System.IO.StreamWriter.ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-247">
            <paramref name="stream" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-247">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f8c-248">
            <paramref name="bufferSize" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-248">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-249">
            <paramref name="stream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-249">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamWriter : string * bool * System.Text.Encoding * int -&gt; System.IO.StreamWriter" Usage="new System.IO.StreamWriter (path, append, encoding, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="92f8c-250">書き込まれる完全なファイルパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-250">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="92f8c-251">データをファイルに追加する場合は <see langword="true" />、ファイルを上書きする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-251">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="92f8c-252">指定されたファイルが存在しない場合、このパラメーターは無効であり、コンストラクターは新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-252">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="92f8c-253">使用する文字エンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-253">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="92f8c-254">バイト単位のバッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-254">The buffer size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-255">指定したエンコーディングとバッファー サイズを使用して、指定したパス上の指定したファイル用の <see cref="T:System.IO.StreamWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-255">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file on the specified path, using the specified encoding and buffer size.</span>
          </span>
          <span data-ttu-id="92f8c-256">ファイルが存在する場合は、ファイルを上書きするか、またはファイルの末尾に追加できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-256">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="92f8c-257">ファイルが存在しない場合は、このコンストラクターが新しいファイルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-257">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-258">このコンス トラクターの初期化、<xref:System.IO.StreamWriter.Encoding%2A>エンコード パラメーターを使用するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-258">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="92f8c-259">詳細については、「<xref:System.IO.TextWriter.Encoding%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="92f8c-259">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="92f8c-260">`path` 汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名であることができます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-260">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="92f8c-261">`path` ディスクに格納されているファイルにする必要はありません。ストリーム経由でアクセスをサポートするシステムの任意の部分であることができます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-261">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="92f8c-262">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-262">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="92f8c-263">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-263">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-264">次の例では、このコンス トラクターを示します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-264">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program8.cs#8)]
 [!code-vb[System.IO.StreamWriter.ctor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-265">
            <paramref name="path" /> が空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-265">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
          <span data-ttu-id="92f8c-266">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-266">-or-</span>
          </span>
          <span data-ttu-id="92f8c-267">
            <paramref name="path" /> には、システム デバイスの名前 (com1、com2 など) が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-267">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-268">
            <paramref name="path" /> または <paramref name="encoding" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-268">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f8c-269">
            <paramref name="bufferSize" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-269">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-270">
            <paramref name="path" /> には、ファイル名、ディレクトリ名、またはボリューム ラベルの不正な構文または無効な構文が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-270">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92f8c-271">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-271">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="92f8c-272">アクセスが拒否されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-272">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="92f8c-273">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-273">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="92f8c-274">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-274">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92f8c-275">ファイルを読み書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-275">for reading and writing files.</span>
          </span>
          <span data-ttu-id="92f8c-276">列挙型に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-276">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public virtual bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.IO.StreamWriter.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-277">
            <see cref="T:System.IO.StreamWriter" /> が呼び出されるたびに、<see cref="M:System.IO.StreamWriter.Write(System.Char)" /> によって基になるストリームに対するバッファーをフラッシュするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-277">Gets or sets a value indicating whether the <see cref="T:System.IO.StreamWriter" /> will flush its buffer to the underlying stream after every call to <see cref="M:System.IO.StreamWriter.Write(System.Char)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f8c-278">
            <see cref="T:System.IO.StreamWriter" /> に強制的にバッファーをフラッシュさせる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-278">
              <see langword="true" /> to force <see cref="T:System.IO.StreamWriter" /> to flush its buffer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-279">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない<xref:System.IO.StreamWriter.Flush%2A>または<xref:System.IO.StreamWriter.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-279">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="92f8c-280">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データからフラッシュされるバッファー ストリームに書き込み操作の後、エンコーダーの状態はフラッシュされませんが、ことを意味します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-280">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="92f8c-281">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-281">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="92f8c-282">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-282">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="92f8c-283">ときに`AutoFlush`に設定されている`false`、`StreamWriter`バッファリングのどちらも内部的に、可能性のあるで渡されるエンコーディングから、エンコーダーでは、限られた量の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="92f8c-283">When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in.</span></span> <span data-ttu-id="92f8c-284">パフォーマンスの向上を設定して取得できます`AutoFlush`に`false`常に呼び出すことを前提と`Close`(または、少なくとも`Flush`) 完了したら書き込みの`StreamWriter`します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-284">You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.</span></span>  
  
 <span data-ttu-id="92f8c-285">たとえば、設定`AutoFlush`に`true`ユーザーに迅速なフィードバックが必要ですが、デバイスを作成する場合。</span><span class="sxs-lookup"><span data-stu-id="92f8c-285">For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback.</span></span> <span data-ttu-id="92f8c-286">`Console.Out` このような場合の 1 つです。`StreamWriter`への書き込みに内部的に使用`Console`に呼び出されるたびにエンコーダー状態以外のすべての内部状態をフラッシュ<xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-286">`Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f8c-287">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-287">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-288">次の例を使用する構文を示しています、`AutoFlush`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-288">The following example shows the syntax for using the `AutoFlush` property.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#5)]
 [!code-csharp[System.IO.StreamWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#5)]
 [!code-vb[System.IO.StreamWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.StreamWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-289">バッキング ストアと連結する、基になるストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-289">Gets the underlying stream that interfaces with a backing store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f8c-290">この <see langword="StreamWriter" /> が書き込むストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-290">The stream this <see langword="StreamWriter" /> is writing to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-291">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-291">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="streamWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-292">現在の <see langword="StreamWriter" /> オブジェクトと基になるストリームを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-292">Closes the current <see langword="StreamWriter" /> object and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-293">このメソッドは、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-293">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f8c-294">この実装の<xref:System.IO.StreamWriter.Close%2A>呼び出し、<xref:System.IO.StreamWriter.Dispose%2A>メソッドに渡して、`true`値。</span><span class="sxs-lookup"><span data-stu-id="92f8c-294">This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="92f8c-295">呼び出す必要があります<xref:System.IO.StreamWriter.Close%2A>を基になるストリームに、のすべてのデータを正しく書き込むことを確認します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-295">You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream.</span></span> <span data-ttu-id="92f8c-296">呼び出しに続く<xref:System.IO.StreamWriter.Close%2A>でその操作、<xref:System.IO.StreamWriter>例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92f8c-296">Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions.</span></span> <span data-ttu-id="92f8c-297">ディスクに十分な空き領域がある場合は、呼び出す<xref:System.IO.StreamWriter.Close%2A>で例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-297">If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.</span></span>  
  
 <span data-ttu-id="92f8c-298">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない<xref:System.IO.StreamWriter.Flush%2A>または<xref:System.IO.StreamWriter.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-298">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="92f8c-299">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-299">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="92f8c-300">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-300">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="92f8c-301">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-301">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-302">次のコード例に示します、`Close`メソッド。</span><span class="sxs-lookup"><span data-stu-id="92f8c-302">The following code example demonstrates the `Close` method.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#17)]
 [!code-csharp[System.IO.StreamWriter#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#17)]
 [!code-vb[System.IO.StreamWriter#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="92f8c-303">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-303">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="streamWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="92f8c-304">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-304">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-305">
            <see cref="T:System.IO.StreamWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-305">Releases the unmanaged resources used by the <see cref="T:System.IO.StreamWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-306">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StreamWriter> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-306">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references.</span></span> <span data-ttu-id="92f8c-307">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-307">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="92f8c-308">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-308">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="92f8c-309">
            <para>
              <see langword="Dispose" /> 他のオブジェクトで何度も呼び出せます。オーバーライドするときに<see langword="Dispose" />を以前の呼び出しで破棄されたオブジェクトを参照しないように注意、<see langword="Dispose" />します。このメソッドは、基底クラスの dispose メソッド<see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-309">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.  This method calls the dispose method of the base class, <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.StreamWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-310">出力の書き込みに使用する <see cref="T:System.Text.Encoding" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-310">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f8c-311">現在のインスタンスのコンストラクターで指定した <see cref="T:System.Text.Encoding" />。エンコーディングを指定しなかった場合は、<see cref="T:System.Text.UTF8Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-311">The <see cref="T:System.Text.Encoding" /> specified in the constructor for the current instance, or <see cref="T:System.Text.UTF8Encoding" /> if an encoding was not specified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-312">このプロパティは、いくつか XML のシナリオで使用されるエンコーディングを格納しているヘッダーを記述する必要があります、ために必要な<xref:System.IO.StreamWriter>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-312">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>.</span></span> <span data-ttu-id="92f8c-313">これにより、任意で使用する XML コード<xref:System.IO.StreamWriter>し、正しい XML ヘッダーを生成します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-313">This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="92f8c-314">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-314">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-315">次の例では、指定したエンコーディングを取得します<xref:System.IO.StreamWriter>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="92f8c-315">The following example retrieves the encoding of the specified <xref:System.IO.StreamWriter> instance.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#11)]
 [!code-csharp[System.IO.StreamWriter#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#11)]
 [!code-vb[System.IO.StreamWriter#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~StreamWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!StreamWriter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="streamWriter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="streamWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-316">現在のライターで使用したすべてのバッファーをクリアし、バッファー内のすべてのデータを基になるストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-316">Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-317">このメソッドは、<xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-317">This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f8c-318">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない`Flush`または<xref:System.IO.StreamWriter.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-318">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="92f8c-319">設定<xref:System.IO.StreamWriter.AutoFlush%2A>に`true`データからフラッシュされるバッファー ストリームに書き込み操作の後、エンコーダーの状態はフラッシュされませんが、ことを意味します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-319">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="92f8c-320">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-320">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="92f8c-321">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-321">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="92f8c-322">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-322">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-323">現在のライターがクローズされています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-323">The current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-324">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-324">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="92f8c-325">現在のエンコードは、Unicode サロゲート ペアの片方の表示をサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-325">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.Close" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="streamWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-326">このストリームのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-326">Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f8c-327">非同期のフラッシュ操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-327">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-328">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-328">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.StreamWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.StreamWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.StreamWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As StreamWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::StreamWriter ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.StreamWriter" Usage="System.IO.StreamWriter.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-329">バッキング ストアを持たない書き込み専用の <see langword="StreamWriter" /> を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-329">Provides a <see langword="StreamWriter" /> with no backing store that can be written to, but not read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-330">使用`Null`への出力をリダイレクトする、`StreamWriter`オペレーティング システムのリソースを使いません。</span><span class="sxs-lookup"><span data-stu-id="92f8c-330">Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="92f8c-331">ときに、`StreamWriter.Write`でメソッドが呼び出された`Null`、単に呼び出しを返します、および実際にデータは任意のバッキング ストアに書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="92f8c-331">When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="92f8c-332">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-332">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-333">次の例を使用して、`Null`フィールド。</span><span class="sxs-lookup"><span data-stu-id="92f8c-333">The following example demonstrates a use of the `Null` field.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#6)]
 [!code-csharp[System.IO.StreamWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#6)]
 [!code-vb[System.IO.StreamWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-334">ストリームにデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-334">Writes data to the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="streamWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92f8c-335">ストリームに書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-335">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-336">ストリームに文字を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-336">Writes a character to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-337">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-337">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f8c-338">指定した文字は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-338">The specified character is written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="92f8c-339">場合<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`、<xref:System.IO.StreamWriter.Flush%2A>が自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-339">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="92f8c-340">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-340">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-341">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-341">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-342">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-342">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92f8c-343">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-343">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] -&gt; unit" Usage="streamWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="92f8c-344">書き込むデータを格納する文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-344">A character array containing the data to write.</span>
          </span>
          <span data-ttu-id="92f8c-345">
            <c>buffer</c> が <see langword="null" /> の場合は、何も書き込まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-345">If <c>buffer</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-346">ストリームに文字配列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-346">Writes a character array to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-347">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-347">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f8c-348">指定された文字は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-348">The specified characters are written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="92f8c-349">場合<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`、<xref:System.IO.StreamWriter.Flush%2A>が自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-349">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="92f8c-350">このメソッドが高速なパフォーマンスを提供`Write`(`char[],``int,``int`) を確認する引数が少ないためです。</span><span class="sxs-lookup"><span data-stu-id="92f8c-350">This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check.</span></span>  
  
 <span data-ttu-id="92f8c-351">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-351">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-352">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-352">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-353">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-353">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92f8c-354">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-354">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="streamWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="streamWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92f8c-355">ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-355">The string to write to the stream.</span>
          </span>
          <span data-ttu-id="92f8c-356">
            <c>value</c> が null の場合は、何も書き込まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-356">If <c>value</c> is null, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-357">ストリームに文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-357">Writes a string to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-358">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-358">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f8c-359">指定した<xref:System.String>は、ストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-359">The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.</span></span>  
  
 <span data-ttu-id="92f8c-360"><xref:System.IO.StreamWriter.Flush%2A> 場合に自動的に呼び出される<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-360"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span> <span data-ttu-id="92f8c-361">場合`value`は`null`エントリは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="92f8c-361">If `value` is `null`, no entries are written.</span></span>  
  
 <span data-ttu-id="92f8c-362">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-362">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-363">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-363">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92f8c-364">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-364">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-365">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-365">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="streamWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="92f8c-366">書き込むデータを格納する文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-366">A character array that contains the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="92f8c-367">データの読み取りを開始する、バッファー内の文字位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-367">The character position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f8c-368">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-368">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-369">ストリームに文字配列の一部を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-369">Writes a subarray of characters to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-370">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="92f8c-370">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f8c-371">文字を読み取る`buffer`から始まる`index`まで`index`+ (`count` - 1)。</span><span class="sxs-lookup"><span data-stu-id="92f8c-371">The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1).</span></span> <span data-ttu-id="92f8c-372">すべての文字は、基になるストリームの末尾に到達しない限り、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-372">All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely.</span></span> <span data-ttu-id="92f8c-373"><xref:System.IO.StreamWriter.Flush%2A> 場合に自動的に呼び出される<xref:System.IO.StreamWriter.AutoFlush%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-373"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span>  
  
 <span data-ttu-id="92f8c-374">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="92f8c-374">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-375">この例では、ファイル、3 番目の要素配列の先頭に 13 要素配列から 8 文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="92f8c-375">This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.</span></span>  
  
 [!code-cpp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic StreamWriter.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-376">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-376">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-377">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-377">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f8c-378">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-378">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="92f8c-379">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-379">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-380">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、現在のライターが閉じられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-380">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92f8c-381">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> が true または <see cref="T:System.IO.StreamWriter" /> バッファーがいっぱいで、<see cref="T:System.IO.StreamWriter" /> がストリームの末尾にあるため、基になる固定サイズのストリームにバッファーの内容を書き込むことができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-381">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-382">ストリームにデータを非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-382">Writes data to the stream asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92f8c-383">ストリームに書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-383">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-384">文字を非同期でストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-384">Writes a character to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f8c-385">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-385">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="92f8c-386">次の例では、1 つの文字を書き込む方法を示しています (文字"a") を使用してテキスト ファイルに、<xref:System.IO.StreamWriter.WriteAsync%28System.Char%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92f8c-386">The following example shows how to write a single character (the letter "a") to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example20.cs#20)]
 [!code-vb[System.IO.StreamWriter#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example20.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-387">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-387">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f8c-388">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-388">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92f8c-389">ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-389">The string to write to the stream.</span>
          </span>
          <span data-ttu-id="92f8c-390">
            <c>value</c> が <see langword="null" /> の場合は、何も書き込まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-390">If <c>value</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-391">文字列をストリームに非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-391">Writes a string to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f8c-392">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-392">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="92f8c-393">次の例を使用して、テキスト ファイルに文字列を書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteAsync%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92f8c-393">The following example shows how to write a string to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example21.cs#21)]
 [!code-vb[System.IO.StreamWriter#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example21.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-394">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-394">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f8c-395">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-395">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="92f8c-396">書き込むデータを格納する文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-396">A character array that contains the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="92f8c-397">データの読み取りを開始する、バッファー内の文字位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-397">The character position in the buffer at which to begin reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f8c-398">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-398">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-399">文字の部分配列をストリームに非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-399">Writes a subarray of characters to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f8c-400">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-400">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="92f8c-401">次の例を使用して、テキスト ファイルに複数の文字を書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92f8c-401">The following example shows how to write multiple characters to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example24.cs#24)]
 [!code-vb[System.IO.StreamWriter#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example24.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-402">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-402">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-403">
            <paramref name="index" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-403">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f8c-404">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-404">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-405">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-405">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f8c-406">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-406">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="streamWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="streamWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-407">データを非同期でストリームに書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-407">Writes data followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : unit -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f8c-408">行終端記号をストリームに非同期で書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-408">Writes a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f8c-409">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-409">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-410">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-410">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-411">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-411">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f8c-412">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-412">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92f8c-413">ストリームに書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-413">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-414">非同期でストリームに文字を書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-414">Writes a character followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f8c-415">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-415">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-416">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-416">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-417">次の例では、1 つの文字を書き込む方法を示しています (文字"a") テキスト ファイルの行に続く別の行を使用して単一の文字 (文字"b") を含む、<xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92f8c-417">The following example shows how to write a single character (the letter "a") to a line in a text file, followed by another line that contains a single character (the letter "b"), by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example22.cs#22)]
 [!code-vb[System.IO.StreamWriter#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example22.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-418">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-418">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f8c-419">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-419">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92f8c-420">書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-420">The string to write.</span>
          </span>
          <span data-ttu-id="92f8c-421">値が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-421">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-422">文字列を非同期でストリームに書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-422">Writes a string followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f8c-423">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-423">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-424">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-424">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-425">次の例を使用してテキスト ファイルに文字列値で構成される 2 つの行を記述する方法を示しています、<xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92f8c-425">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-426">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-426">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f8c-427">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-427">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="streamWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="92f8c-428">データの書き込み元の文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-428">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="92f8c-429">データの読み取りを開始する、バッファー内の文字位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-429">The character position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f8c-430">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-430">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f8c-431">文字の部分配列をストリームに非同期で書き込み、続けて行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-431">Writes a subarray of characters followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f8c-432">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-432">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f8c-433">によって、行終端記号が定義されている、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92f8c-433">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f8c-434">次の例を使用して、テキスト ファイルで 2 つの別々 の行に文字を書き込む方法を示しています、<xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92f8c-434">The following example shows how to write characters to two separate lines in a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="92f8c-435">最初の行には、文字列 (「最初の行」とそれに続く空白文字) から最初の 11 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="92f8c-435">The first line contains the first 11 characters from the string (the letters "First line" followed by a space).</span></span> <span data-ttu-id="92f8c-436">2 番目の行には、文字列から残りの文字が含まれています (文字「と 2 番目の行」)。</span><span class="sxs-lookup"><span data-stu-id="92f8c-436">The second line contains the remaining characters from the string (the letters "and second line").</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example25.cs#25)]
 [!code-vb[System.IO.StreamWriter#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example25.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f8c-437">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-437">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f8c-438">
            <paramref name="index" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-438">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f8c-439">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-439">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="92f8c-440">ストリーム ライターは破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-440">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f8c-441">ストリーム ライターは現在、前の書き込み操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f8c-441">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>