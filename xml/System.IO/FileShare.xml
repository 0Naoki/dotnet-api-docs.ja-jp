<Type Name="FileShare" FullName="System.IO.FileShare">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b45bf1c24acf5500e8e576190a757ea0d73ed524" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37652280" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum FileShare" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FileShare extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileShare" />
  <TypeSignature Language="VB.NET" Value="Public Enum FileShare" />
  <TypeSignature Language="C++ CLI" Value="public enum class FileShare" />
  <TypeSignature Language="F#" Value="type FileShare = " />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="20b75-101">同一のファイルに対して他の <see cref="T:System.IO.FileStream" /> オブジェクトが保有できるアクセスの種類を制御する定数を格納します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="20b75-101">Contains constants for controlling the kind of access other <see cref="T:System.IO.FileStream" /> objects can have to the same file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b75-102">ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。[方法: テキスト ファイルを書き込む](~/docs/standard/io/how-to-write-text-to-a-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="20b75-102">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="20b75-103">ファイルからテキストの読み取りの例は、次を参照してください。[方法: テキスト ファイルからの読み取り](~/docs/standard/io/how-to-read-text-from-a-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="20b75-103">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="20b75-104">読み取りと書き込みをバイナリ ファイルの例は、次を参照してください。[方法: 新しく作成されたデータ ファイルを読み書き](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)します。</span><span class="sxs-lookup"><span data-stu-id="20b75-104">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="20b75-105">この列挙体の一般的な用途では、2 つのプロセスを同時に同じファイルから読み取れるかどうかを定義します。</span><span class="sxs-lookup"><span data-stu-id="20b75-105">A typical use of this enumeration is to define whether two processes can simultaneously read from the same file.</span></span> <span data-ttu-id="20b75-106">たとえば、ファイルを開く、読み取りが指定した場合は、他のユーザーによって書き込みではなく読み取り用のファイルが開きます。</span><span class="sxs-lookup"><span data-stu-id="20b75-106">For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.</span></span>  
  
 <span data-ttu-id="20b75-107">A<xref:System.IO.FileShare.Read>でいくつかのコンス トラクターのパラメーターが指定されて<xref:System.IO.FileStream>、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>の一部で、`Open`メソッドの<xref:System.IO.File>と<xref:System.IO.FileInfo>ファイルを開く方法を制御します。</span><span class="sxs-lookup"><span data-stu-id="20b75-107">A <xref:System.IO.FileShare.Read> parameter is specified in some of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in some of the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20b75-108">次<xref:System.IO.FileStream>コンス トラクターが、既存のファイルを開き、(読み取り) の他のユーザーに読み取り専用のアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="20b75-108">The following <xref:System.IO.FileStream> constructor opens an existing file and grants read-only access to other users (Read).</span></span>  
  
 [!code-cpp[Classic FileAccess Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileAccess Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileAccess Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileAccess Example/CS/source.cs#1)]
 [!code-vb[Classic FileAccess Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileAccess Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.IO.File.Open(System.String,System.IO.FileMode)" />
    <altmember cref="M:System.IO.FileInfo.Open(System.IO.FileMode)" />
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />
  </Docs>
  <Members>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="Delete" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare Delete = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.Delete" />
      <MemberSignature Language="VB.NET" Value="Delete" />
      <MemberSignature Language="C++ CLI" Value="Delete" />
      <MemberSignature Language="F#" Value="Delete = 4" Usage="System.IO.FileShare.Delete" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="20b75-109">後続のファイルの削除を許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-109">Allows subsequent deleting of a file.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Inheritable">
      <MemberSignature Language="C#" Value="Inheritable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare Inheritable = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.Inheritable" />
      <MemberSignature Language="VB.NET" Value="Inheritable" />
      <MemberSignature Language="C++ CLI" Value="Inheritable" />
      <MemberSignature Language="F#" Value="Inheritable = 16" Usage="System.IO.FileShare.Inheritable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="20b75-110">ファイル ハンドルを子プロセスで継承できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-110">Makes the file handle inheritable by child processes.</span>
          </span>
          <span data-ttu-id="20b75-111">Win32 では、直接サポートされません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-111">This is not directly supported by Win32.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.IO.FileShare.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="20b75-112">現在のファイルの共有を解除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-112">Declines sharing of the current file.</span>
          </span>
          <span data-ttu-id="20b75-113">ファイルを閉じるまで、このプロセスまたは別のプロセスがファイルを開く要求をしても失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-113">Any request to open the file (by this process or another process) will fail until the file is closed.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="Read" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare Read = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.Read" />
      <MemberSignature Language="VB.NET" Value="Read" />
      <MemberSignature Language="C++ CLI" Value="Read" />
      <MemberSignature Language="F#" Value="Read = 1" Usage="System.IO.FileShare.Read" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="20b75-114">後続の読み取り用のファイルを開くことを許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-114">Allows subsequent opening of the file for reading.</span>
          </span>
          <span data-ttu-id="20b75-115">このフラグが指定されていない場合は、ファイルを閉じるまで、このプロセスまたは別のプロセスが読み取り用のファイルを開く要求をしても失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-115">If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed.</span>
          </span>
          <span data-ttu-id="20b75-116">ただし、このフラグが指定されていても、ファイルにアクセスするために追加のアクセス許可が必要になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-116">However, even if this flag is specified, additional permissions might still be needed to access the file.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadWrite">
      <MemberSignature Language="C#" Value="ReadWrite" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare ReadWrite = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.ReadWrite" />
      <MemberSignature Language="VB.NET" Value="ReadWrite" />
      <MemberSignature Language="C++ CLI" Value="ReadWrite" />
      <MemberSignature Language="F#" Value="ReadWrite = 3" Usage="System.IO.FileShare.ReadWrite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="20b75-117">後続の読み取り用または書き込み用のファイルを開くことを許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-117">Allows subsequent opening of the file for reading or writing.</span>
          </span>
          <span data-ttu-id="20b75-118">このフラグが指定されていない場合は、ファイルを閉じるまで、このプロセスまたは別のプロセスが読み取り用または書き込み用のファイルを開く要求をしても失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-118">If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed.</span>
          </span>
          <span data-ttu-id="20b75-119">ただし、このフラグが指定されていても、ファイルにアクセスするために追加のアクセス許可が必要になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-119">However, even if this flag is specified, additional permissions might still be needed to access the file.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="Write" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare Write = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.Write" />
      <MemberSignature Language="VB.NET" Value="Write" />
      <MemberSignature Language="C++ CLI" Value="Write" />
      <MemberSignature Language="F#" Value="Write = 2" Usage="System.IO.FileShare.Write" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="20b75-120">後続の書き込み用のファイルを開くことを許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-120">Allows subsequent opening of the file for writing.</span>
          </span>
          <span data-ttu-id="20b75-121">このフラグが指定されていない場合は、ファイルを閉じるまで、このプロセスまたは別のプロセスが書き込み用のファイルを開く要求をしても失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-121">If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed.</span>
          </span>
          <span data-ttu-id="20b75-122">ただし、このフラグが指定されていても、ファイルにアクセスするために追加のアクセス許可が必要になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="20b75-122">However, even if this flag is specified, additional permissions might still be needed to access the file.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>