<Type Name="WindowsRuntimeStorageExtensions" FullName="System.IO.WindowsRuntimeStorageExtensions">
  <TypeSignature Language="C#" Value="public static class WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeStorageExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeStorageExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeStorageExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37827-101">Windows ストア アプリ開発時の Windows ランタイム内の <see cref="T:Windows.Storage.IStorageFile" /> インターフェイスおよび <see cref="T:Windows.Storage.IStorageFolder" /> インターフェイス用の拡張メソッドを格納します。</span><span class="sxs-lookup"><span data-stu-id="37827-101">Contains extension methods for the <see cref="T:Windows.Storage.IStorageFile" /> and <see cref="T:Windows.Storage.IStorageFolder" /> interfaces in the Windows Runtime when developing Windows Store apps.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="37827-102">これらの拡張メソッドは、Windows ストアアプリを開発する場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="37827-102">These extension methods are available only when you develop Windows Store apps.</span></span> <span data-ttu-id="37827-103">これらのメソッドは、Windows ストアアプリで読み取りまたは書き込みを行うためにファイルを開く便利な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="37827-103">The methods provide convenient ways of opening files for reading or writing in Windows Store apps.</span></span> <span data-ttu-id="37827-104">`WindowsRuntimeStorageExtensions`クラスのインスタンスを作成するのではなく、インターフェイス<xref:Windows.Storage.IStorageFile>と<xref:Windows.Storage.IStorageFolder>インターフェイスのインスタンスからこれらのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="37827-104">You do not create an instance of the `WindowsRuntimeStorageExtensions` class; instead, you use these methods from instances of the <xref:Windows.Storage.IStorageFile> and <xref:Windows.Storage.IStorageFolder> interfaces.</span></span>

<span data-ttu-id="37827-105">クラス`WindowsRuntimeStorageExtensions`には、読み取りまたは<xref:Windows.Storage.IStorageFile>書き込みのためにを拡張する2つのメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="37827-105">The `WindowsRuntimeStorageExtensions` class contains two methods that extend <xref:Windows.Storage.IStorageFile> for reading or writing:</span></span>

  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)>

<span data-ttu-id="37827-106">Windowsruntimestorageextensions クラスには、読み取りと書き込み<xref:Windows.Storage.IStorageFolder>のためにを拡張する2つのメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="37827-106">The WindowsRuntimeStorageExtensions class contains two methods that extend <xref:Windows.Storage.IStorageFolder> for reading and writing:</span></span>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)>

## Examples

<span data-ttu-id="37827-107">次の例は、Windows ストアアプリ<xref:System.IO.Stream>でアプリケーションデータのファイルをとして開き、 <xref:System.IO.StreamWriter>クラスのインスタンスを使用してそのファイルに書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-107">The following example shows how to open a file in the application data as a <xref:System.IO.Stream> in a Windows Store app, and write to it by using an instance of the <xref:System.IO.StreamWriter> class.</span></span> <span data-ttu-id="37827-108">次に、 <xref:System.IO.StreamReader>クラスのインスタンスを使用して、ファイルの内容を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="37827-108">It then reads the contents for the file by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

<span data-ttu-id="37827-109">次の例は、前の例に関連付けられている XAML コードを示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-109">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateSafeFileHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37827-110">拡張される IStorage インスタンスのセーフ ファイル ハンドルへの参照を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="37827-110">Creates and returns a reference to a safe file handle for the IStorage instance that is being extended.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="37827-111">Windows 10 の記念日更新では<xref:Windows.Storage.IStorageFolder> 、および`IStorageFolderHandleAccess`と<xref:Windows.Storage.IStorageFile> `IStorageItemHandleAccess`いう標準の Win32 ファイルハンドルの作成を可能にする新しいインターフェイスがに追加されました。</span><span class="sxs-lookup"><span data-stu-id="37827-111">With the Windows 10 Anniversary Update, new interfaces were added to <xref:Windows.Storage.IStorageFolder> and <xref:Windows.Storage.IStorageFile> that allow creating a standard Win32 file handle: `IStorageFolderHandleAccess` and `IStorageItemHandleAccess`.</span></span> <span data-ttu-id="37827-112">拡張`CreateSafeFileHandle`メソッドのグループは、これらのインターフェイス`Create`のメソッドを利用します。</span><span class="sxs-lookup"><span data-stu-id="37827-112">The `CreateSafeFileHandle` group of extension methods take advantage of the `Create` methods of these interfaces.</span></span>

<span data-ttu-id="37827-113">API の主な利点は、仲介`SafeFileHandle`型にアクセスすることです。</span><span class="sxs-lookup"><span data-stu-id="37827-113">The key benefit of the API is access to a brokered `SafeFileHandle`.</span></span> <span data-ttu-id="37827-114">これは、 [AppContainer](https://docs.microsoft.com/en-us/windows/win32/secauthz/appcontainer-isolation)でを実行している<xref:System.IO.FileStream>ときに<xref:Windows.Storage.IStorageItem>また<xref:Windows.Storage.IStorageFolder>はの周りでを作成する場合に非常に重要です。</span><span class="sxs-lookup"><span data-stu-id="37827-114">This is critically important if you want to create a <xref:System.IO.FileStream> around an <xref:Windows.Storage.IStorageItem> or <xref:Windows.Storage.IStorageFolder> when you are running in an [AppContainer](https://docs.microsoft.com/en-us/windows/win32/secauthz/appcontainer-isolation).</span></span> <span data-ttu-id="37827-115">AppContainer で実行する場合、アプリケーションにはファイルアクセス権が非常に制限されています。</span><span class="sxs-lookup"><span data-stu-id="37827-115">When running in an AppContainer, the application has very limited file access rights.</span></span> <span data-ttu-id="37827-116">画像やドキュメントフォルダーなどでは、アプリケーションプロセス自体がほとんどのファイル`RuntimeBroker.exe`に対する権限を持っていないため、ネイティブファイルハンドルは経由でプロキシされる必要があります。</span><span class="sxs-lookup"><span data-stu-id="37827-116">Things like picture and document folders require the native file handle to be proxied via `RuntimeBroker.exe`, as the application process itself doesn't have rights to most files.</span></span> <span data-ttu-id="37827-117">この API は、プロキシ処理されたハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="37827-117">This API gets the proxied handle.</span></span> <span data-ttu-id="37827-118">ユーザーデータフォルダーにアクセスする場合、またはファイルピッカーを使用する場合、この API <xref:System.IO.FileStream>は常にを作成するために使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="37827-118">If accessing user data folders or using a file picker, this API should always be used to create <xref:System.IO.FileStream>.</span></span> <span data-ttu-id="37827-119">多くの場合、パスを<xref:System.AccessViolationException>使用すると、このような場合にがスローされます。</span><span class="sxs-lookup"><span data-stu-id="37827-119">Using a path will often throw <xref:System.AccessViolationException> in these cases.</span></span>

             </format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode) As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Win32::SafeHandles::SafeFileHandle ^ CreateSafeFileHandle(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="rootDirectory"><span data-ttu-id="37827-120">現在のストレージ フォルダー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="37827-120">The current storage folder instance.</span></span></param>
        <param name="relativePath"><span data-ttu-id="37827-121">ハンドルを取得する対象のファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="37827-121">The name of the file that you want to get a handle to.</span></span></param>
        <param name="mode"><span data-ttu-id="37827-122">オペレーティング システムでファイルを開く必要があるモード。</span><span class="sxs-lookup"><span data-stu-id="37827-122">The mode in which the operating system should open the file.</span></span></param>
        <summary><span data-ttu-id="37827-123">現在のストレージ フォルダー インスタンス内にあるファイルのセーフ ファイル ハンドルを作成します。</span><span class="sxs-lookup"><span data-stu-id="37827-123">Creates a safe file handle for a file that is in the current storage folder instance.</span></span></summary>
        <returns><span data-ttu-id="37827-124">操作が成功した場合は、セーフ ファイル ハンドル インスタンス。<paramref name="rootDirectory" /> の IStorageFolderHandleAccess への変換で <see langword="null" /> が返された場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="37827-124">A safe file handle instance if the operation succeeds; <see langword="null" /> if the conversion of the <paramref name="rootDirectory" /> to an IStorageFolderHandleAccess returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="37827-125">このメソッドを呼び出すと、指定され<xref:System.IO.FileMode.Append?displayProperty=nameWithType>たモードがの場合、ファイル<xref:System.IO.FileAccess.Read?displayProperty=nameWithType>はアクセス許可で開かれます。</span><span class="sxs-lookup"><span data-stu-id="37827-125">When calling this method, if the specified mode is <xref:System.IO.FileMode.Append?displayProperty=nameWithType>, the file will be opened with <xref:System.IO.FileAccess.Read?displayProperty=nameWithType> access permission.</span></span> <span data-ttu-id="37827-126">その他のモードでは、ファイルはアクセス許可<xref:System.IO.FileAccess.ReadWrite?displayProperty=nameWithType>を使用して開かれます。</span><span class="sxs-lookup"><span data-stu-id="37827-126">For any other modes, the file will be opened with <xref:System.IO.FileAccess.ReadWrite?displayProperty=nameWithType> access permission.</span></span>

<span data-ttu-id="37827-127">さらに、このメソッドは、ストリーム共有<xref:System.IO.FileShare.Read?displayProperty=nameWithType>アクセス<xref:System.IO.FileOptions.None?displayProperty=nameWithType>および高度なファイル作成オプションを使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="37827-127">Additionally, this method will open the file with <xref:System.IO.FileShare.Read?displayProperty=nameWithType> stream sharing access and with <xref:System.IO.FileOptions.None?displayProperty=nameWithType> advanced file creation options.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37827-128"><paramref name="rootDirectory" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-128"><paramref name="rootDirectory" /> is <see langword="null" />.</span></span>

<span data-ttu-id="37827-129">- または -</span><span class="sxs-lookup"><span data-stu-id="37827-129">-or-</span></span>

<span data-ttu-id="37827-130"><paramref name="relativePath" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="37827-130"><paramref name="relativePath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFile windowsRuntimeFile, System.IO.FileAccess access = System.IO.FileAccess.ReadWrite, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFile windowsRuntimeFile, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFile,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (windowsRuntimeFile As IStorageFile, Optional access As FileAccess = System.IO.FileAccess.ReadWrite, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFile * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (windowsRuntimeFile, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile"><span data-ttu-id="37827-131">ストレージ ファイル インスタンス。</span><span class="sxs-lookup"><span data-stu-id="37827-131">A storage file instance.</span></span></param>
        <param name="access"><span data-ttu-id="37827-132">ファイルを開くときに使用する必要があるアクセスの種類。</span><span class="sxs-lookup"><span data-stu-id="37827-132">The kind of access that should be used when opening the file.</span></span> <span data-ttu-id="37827-133">既定値は <see cref="F:System.IO.FileAccess.ReadWrite" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-133">The default value is <see cref="F:System.IO.FileAccess.ReadWrite" />.</span></span></param>
        <param name="share"><span data-ttu-id="37827-134">同じファイルに対して他の <see cref="T:System.IO.FileStream" /> オブジェクトから可能なストリーム共有アクセスの種類。</span><span class="sxs-lookup"><span data-stu-id="37827-134">The kind of stream sharing access other <see cref="T:System.IO.FileStream" /> objects can have to the same file.</span></span> <span data-ttu-id="37827-135">既定値は <see cref="F:System.IO.FileShare.Read" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-135">The default value is <see cref="F:System.IO.FileShare.Read" />.</span></span></param>
        <param name="options"><span data-ttu-id="37827-136"><see cref="T:System.IO.FileStream" /> オブジェクトを作成するための詳細オプション。</span><span class="sxs-lookup"><span data-stu-id="37827-136">Advanced options for creating the <see cref="T:System.IO.FileStream" /> object.</span></span> <span data-ttu-id="37827-137">既定値は <see cref="F:System.IO.FileOptions.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-137">The default value is <see cref="F:System.IO.FileOptions.None" />.</span></span></param>
        <summary><span data-ttu-id="37827-138">現在のストレージ ファイル インスタンスのセーフ ファイル ハンドルを作成します。</span><span class="sxs-lookup"><span data-stu-id="37827-138">Creates a safe file handle for a the current storage file instance.</span></span></summary>
        <returns><span data-ttu-id="37827-139">操作が成功した場合は、セーフ ファイル ハンドル インスタンス。<paramref name="windowsRuntimeFile" /> の IStorageItemHandleAccess への変換で <see langword="null" /> が返された場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="37827-139">A safe file handle instance if the operation succeeds; <see langword="null" /> if the conversion of the <paramref name="windowsRuntimeFile" /> to an IStorageItemHandleAccess returns <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37827-140"><paramref name="windowsRuntimeFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="37827-140"><paramref name="windowsRuntimeFile" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode, access As FileAccess, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="rootDirectory"><span data-ttu-id="37827-141">現在のストレージ フォルダー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="37827-141">The current storage folder instance.</span></span></param>
        <param name="relativePath"><span data-ttu-id="37827-142">ハンドルを取得する対象のファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="37827-142">The name of the file that you want to get a handle to.</span></span></param>
        <param name="mode"><span data-ttu-id="37827-143">オペレーティング システムでファイルを開く必要があるモード。</span><span class="sxs-lookup"><span data-stu-id="37827-143">The mode in which the operating system should open the file.</span></span></param>
        <param name="access"><span data-ttu-id="37827-144">ファイルを開くときに使用する必要があるアクセスの種類。</span><span class="sxs-lookup"><span data-stu-id="37827-144">The kind of access that should be used when opening the file.</span></span></param>
        <param name="share"><span data-ttu-id="37827-145">同じファイルに対して他の <see cref="T:System.IO.FileStream" /> オブジェクトから可能なストリーム共有アクセスの種類。</span><span class="sxs-lookup"><span data-stu-id="37827-145">The kind of stream sharing access other <see cref="T:System.IO.FileStream" /> objects can have to the same file.</span></span> <span data-ttu-id="37827-146">既定値は <see cref="F:System.IO.FileShare.Read" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-146">The default value is <see cref="F:System.IO.FileShare.Read" />.</span></span></param>
        <param name="options"><span data-ttu-id="37827-147"><see cref="T:System.IO.FileStream" /> オブジェクトを作成するための詳細オプション。</span><span class="sxs-lookup"><span data-stu-id="37827-147">Advanced options for creating the <see cref="T:System.IO.FileStream" /> object.</span></span> <span data-ttu-id="37827-148">既定値は <see cref="F:System.IO.FileOptions.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-148">The default value is <see cref="F:System.IO.FileOptions.None" />.</span></span></param>
        <summary><span data-ttu-id="37827-149">現在のストレージ フォルダー インスタンス内にあるファイルのセーフ ファイル ハンドルを作成します。</span><span class="sxs-lookup"><span data-stu-id="37827-149">Creates a safe file handle for a file that is in the current storage folder instance.</span></span></summary>
        <returns><span data-ttu-id="37827-150">操作が成功した場合は、セーフ ファイル ハンドル インスタンス。<paramref name="rootDirectory" /> の IStorageFolderHandleAccess への変換で <see langword="null" /> が返された場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="37827-150">A safe file handle instance if the operation succeeds; <see langword="null" /> if the conversion of the <paramref name="rootDirectory" /> to an IStorageFolderHandleAccess returns <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37827-151"><paramref name="rootDirectory" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="37827-151"><paramref name="rootDirectory" /> is <see langword="null" />.</span></span>

<span data-ttu-id="37827-152">- または -</span><span class="sxs-lookup"><span data-stu-id="37827-152">-or-</span></span>

<span data-ttu-id="37827-153"><paramref name="relativePath" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="37827-153"><paramref name="relativePath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile"><span data-ttu-id="37827-154">読み取り元の Windows ランタイム <see cref="T:Windows.Storage.IStorageFile" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="37827-154">The Windows Runtime <see cref="T:Windows.Storage.IStorageFile" /> object to read from.</span></span></param>
        <summary><span data-ttu-id="37827-155">指定したファイルから読み取るストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="37827-155">Retrieves a stream for reading from a specified file.</span></span></summary>
        <returns><span data-ttu-id="37827-156">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="37827-156">A task that represents the asynchronous read operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> <span data-ttu-id="37827-157">Visual Basic とC#では、このメソッドを型<xref:Windows.Storage.IStorageFile>の任意のオブジェクトのインスタンスメソッドとして呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="37827-157">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:Windows.Storage.IStorageFile>.</span></span> <span data-ttu-id="37827-158">インスタンス メソッド構文を使用してこのメソッドを呼び出す場合は、最初のパラメーターを省略します。</span><span class="sxs-lookup"><span data-stu-id="37827-158">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="37827-159">詳細については、「[拡張メソッド (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) 」または「[拡張メソッド (C#プログラミングガイド)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="37827-159">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="37827-160">次の例は、Windows ストアアプリ<xref:System.IO.Stream>でファイルをとして開き、 <xref:System.IO.StreamReader>クラスのインスタンスを使用してその内容を読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-160">The following example shows how to open a file as a <xref:System.IO.Stream> in a Windows Store app, and read its contents by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestorageextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage.xaml.vb#2)]

<span data-ttu-id="37827-161">次の例は、前の例に関連付けられている XAML コードを示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-161">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37827-162"><paramref name="windowsRuntimeFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="37827-162"><paramref name="windowsRuntimeFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37827-163">ファイルを開くことができなかったか、ストリームとして取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="37827-163">The file could not be opened or retrieved as a stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (rootDirectory As IStorageFolder, relativePath As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFolder * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync (rootDirectory, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootDirectory"><span data-ttu-id="37827-164">読み取り元のファイルが含まれる Windows ランタイム <see cref="T:Windows.Storage.IStorageFile" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="37827-164">The Windows Runtime <see cref="T:Windows.Storage.IStorageFile" /> object that contains the file to read from.</span></span></param>
        <param name="relativePath"><span data-ttu-id="37827-165">ルート フォルダーを基準とした、読み取りファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="37827-165">The path, relative to the root folder, to the file to read from.</span></span></param>
        <summary><span data-ttu-id="37827-166">指定された親フォルダーのファイルから読み取るストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="37827-166">Retrieves a stream for reading from a file in the specified parent folder.</span></span></summary>
        <returns><span data-ttu-id="37827-167">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="37827-167">A task that represents the asynchronous read operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="37827-168">Visual Basic とC#では、IStorageFolder 型のオブジェクトのインスタンスメソッドとしてこのメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="37827-168">In Visual Basic and C#, you can call this method as an instance method on any object of type IStorageFolder.</span></span> <span data-ttu-id="37827-169">インスタンス メソッド構文を使用してこのメソッドを呼び出す場合は、最初のパラメーターを省略します。</span><span class="sxs-lookup"><span data-stu-id="37827-169">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="37827-170">詳細については、「[拡張メソッド (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) 」または「[拡張メソッド (C#プログラミングガイド)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="37827-170">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="37827-171">次の例は、Windows ストアアプリ<xref:System.IO.Stream>でファイルをとして開き、 <xref:System.IO.StreamReader>クラスのインスタンスを使用してその内容を読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-171">The following example shows how to open a file as a <xref:System.IO.Stream> in a Windows Store app, and read its contents by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestorageextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage2.xaml.vb#4)]

<span data-ttu-id="37827-172">次の例は、前の例に関連付けられている XAML コードを示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-172">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37827-173"><paramref name="rootDirectory" /> または <paramref name="relativePath" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-173"><paramref name="rootDirectory" /> or <paramref name="relativePath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37827-174"><paramref name="relativePath" /> が空であるか、空白文字だけで構成されています。</span><span class="sxs-lookup"><span data-stu-id="37827-174"><paramref name="relativePath" /> is empty or contains only white-space characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37827-175">ファイルを開くことができなかったか、ストリームとして取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="37827-175">The file could not be opened or retrieved as a stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForWriteAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile"><span data-ttu-id="37827-176">書き込み先の Windows ランタイム <see cref="T:Windows.Storage.IStorageFile" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="37827-176">The Windows Runtime <see cref="T:Windows.Storage.IStorageFile" /> object to write to.</span></span></param>
        <summary><span data-ttu-id="37827-177">指定したファイルへ書き込むストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="37827-177">Retrieves a stream for writing to a specified file.</span></span></summary>
        <returns><span data-ttu-id="37827-178">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="37827-178">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> <span data-ttu-id="37827-179">Visual Basic とC#では、このメソッドを型<xref:Windows.Storage.IStorageFile>の任意のオブジェクトのインスタンスメソッドとして呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="37827-179">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:Windows.Storage.IStorageFile>.</span></span> <span data-ttu-id="37827-180">インスタンス メソッド構文を使用してこのメソッドを呼び出す場合は、最初のパラメーターを省略します。</span><span class="sxs-lookup"><span data-stu-id="37827-180">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="37827-181">詳細については、「[拡張メソッド (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) 」または「[拡張メソッド (C#プログラミングガイド)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="37827-181">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="37827-182">次の例は、Windows ストアアプリ<xref:System.IO.Stream>でファイルをとして開き、 <xref:System.IO.StreamReader>クラスのインスタンスを使用してファイルに書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-182">The following example shows how to open a file as a <xref:System.IO.Stream> in a Windows Store app, and write to it by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml.cs#6)]
[!code-vb[windowsruntimestorageextensions#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage3.xaml.vb#6)]

<span data-ttu-id="37827-183">次の例は、前の例に関連付けられている XAML コードを示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-183">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml#5)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37827-184"><paramref name="windowsRuntimeFile" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-184"><paramref name="windowsRuntimeFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37827-185">ファイルを開くことができなかったか、ストリームとして取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="37827-185">The file could not be opened or retrieved as a stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, Windows.Storage.CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype Windows.Storage.CreationCollisionOption creationCollisionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, Windows::Storage::CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFolder * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync (rootDirectory, relativePath, creationCollisionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
        <Parameter Name="creationCollisionOption" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="rootDirectory"><span data-ttu-id="37827-186">書き込み先のファイルが含まれる Windows ランタイム <see cref="T:Windows.Storage.IStorageFile" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="37827-186">The Windows Runtime <see cref="T:Windows.Storage.IStorageFile" /> object that contains the file to write to.</span></span></param>
        <param name="relativePath"><span data-ttu-id="37827-187">ルート フォルダーを基準とした、書き込み先のファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="37827-187">The path, relative to the root folder, to the file to write to.</span></span></param>
        <param name="creationCollisionOption"><span data-ttu-id="37827-188">作成するファイルの名前が既存のファイルの名前と同じになるときに使用する動作を指定する Windows ランタイム <see cref="T:Windows.Storage.CreationCollisionOption" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="37827-188">The Windows Runtime <see cref="T:Windows.Storage.CreationCollisionOption" /> enumeration value that specifies the behavior to use when the name of the file to create is the same as the name of an existing file.</span></span></param>
        <summary><span data-ttu-id="37827-189">指定された親フォルダーのファイルへ書き込むストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="37827-189">Retrieves a stream for writing to a file in the specified parent folder.</span></span></summary>
        <returns><span data-ttu-id="37827-190">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="37827-190">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="37827-191">Visual Basic とC#では、このメソッドを型<xref:Windows.Storage.IStorageFolder>の任意のオブジェクトのインスタンスメソッドとして呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="37827-191">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:Windows.Storage.IStorageFolder>.</span></span> <span data-ttu-id="37827-192">インスタンス メソッド構文を使用してこのメソッドを呼び出す場合は、最初のパラメーターを省略します。</span><span class="sxs-lookup"><span data-stu-id="37827-192">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="37827-193">詳細については、「[拡張メソッド (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) 」または「[拡張メソッド (C#プログラミングガイド)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="37827-193">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="37827-194">次の例は、Windows ストアアプリ<xref:System.IO.Stream>でファイルをとして開き、 <xref:System.IO.StreamReader>クラスのインスタンスを使用してファイルに書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-194">The following example shows how to open a file as a <xref:System.IO.Stream> in a Windows Store app, and write to it by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

<span data-ttu-id="37827-195">次の例は、前の例に関連付けられている XAML コードを示しています。</span><span class="sxs-lookup"><span data-stu-id="37827-195">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37827-196"><paramref name="rootDirectory" /> または <paramref name="relativePath" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="37827-196"><paramref name="rootDirectory" /> or <paramref name="relativePath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37827-197"><paramref name="relativePath" /> が空であるか、空白文字だけで構成されています。</span><span class="sxs-lookup"><span data-stu-id="37827-197"><paramref name="relativePath" /> is empty or contains only white-space characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37827-198">ファイルを開くことができなかったか、ストリームとして取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="37827-198">The file could not be opened or retrieved as a stream.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
