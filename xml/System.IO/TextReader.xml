<Type Name="TextReader" FullName="System.IO.TextReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f894bbe9ba9e2e52475204b9487175d41f1319d" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52614022" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextReader : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextReader extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReader abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a47e-101">一連の文字を読み取ることができるリーダーを表します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-101">Represents a reader that can read a sequential series of characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-102"><xref:System.IO.TextReader> 抽象基本クラスは、<xref:System.IO.StreamReader>と<xref:System.IO.StringReader>、それぞれストリームと、文字列から文字を読み取るします。</span><span class="sxs-lookup"><span data-stu-id="8a47e-102"><xref:System.IO.TextReader> is the abstract base class of <xref:System.IO.StreamReader> and <xref:System.IO.StringReader>, which read characters from streams and strings, respectively.</span></span> <span data-ttu-id="8a47e-103">これらの派生クラスを使用して、指定された範囲の文字を読み取るためのテキスト ファイルを開くか、既存のストリームに基づくリーダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-103">Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a47e-104">この型は、<xref:System.IDisposable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="8a47e-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="8a47e-105">この型から派生した任意の型を使用してが完了したらを直接または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-105">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="8a47e-106">型の直接 dispose を呼び出してその<xref:System.IO.TextReader.Dispose%2A>メソッド、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="8a47e-106">To dispose of the type directly, call its <xref:System.IO.TextReader.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="8a47e-107">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(で C# の場合) または`Using`(Visual Basic) でします。</span><span class="sxs-lookup"><span data-stu-id="8a47e-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="8a47e-108">詳細については、Dispose と"を使用して、オブジェクトを実装する IDisposable"」セクションを参照してください、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="8a47e-108">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a47e-109"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-109">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-110">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-110">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-111"><xref:System.IO.StreamReader>クラスから派生<xref:System.IO.TextReader>し、ストリームから読み取るのために、メンバーの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-111">The <xref:System.IO.StreamReader> class derives from <xref:System.IO.TextReader> and provides implementations of the members for reading from a stream.</span></span> <span data-ttu-id="8a47e-112">次の例を使用して、ファイル内のすべての文字を読み取る方法を示しています、<xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-112">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8a47e-113">インスタンスに文字を追加する前に、文字、数字、または空白文字に各文字かどうかを確認します、<xref:System.Text.StringBuilder>クラス。</span><span class="sxs-lookup"><span data-stu-id="8a47e-113">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="8a47e-114">派生クラスで実装する必要があります最小、<see cref="M:System.IO.TextReader.Peek" />と<see cref="M:System.IO.TextReader.Read" />メソッドの便利なインスタンスを<see cref="T:System.IO.TextReader" />します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-114">A derived class must minimally implement the <see cref="M:System.IO.TextReader.Peek" /> and <see cref="M:System.IO.TextReader.Read" /> methods to make a useful instance of <see cref="T:System.IO.TextReader" />.</span></span></para></block>
    <altmember cref="T:System.IO.StringReader" />
    <altmember cref="T:System.IO.StreamReader" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-115">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-115">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-116">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-116">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-117">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-117">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="8a47e-118">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8a47e-118">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-119"><see cref="T:System.IO.TextReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-119">Initializes a new instance of the <see cref="T:System.IO.TextReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-120">派生クラスのこのコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-120">Use this constructor for derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-121">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-121">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-122">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-122">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-123">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-123">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-124"><see cref="T:System.IO.TextReader" /> を閉じ、その <see langword="TextReader" /> と関連付けられているシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-124">Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the <see langword="TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-125">この実装の`Close`呼び出し、<xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType>メソッドを渡します、`true`値。</span><span class="sxs-lookup"><span data-stu-id="8a47e-125">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="8a47e-126">フラッシュされたテキスト リーダーを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない`Close`します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-126">Flushing the text reader will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="8a47e-127">設定、<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>プロパティを`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-127">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="8a47e-128">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-128">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="8a47e-129">このシナリオでは、UTF8、UTF7、エンコーダーは、隣接する文字または文字列を受信した後にのみ特定の文字をエンコードすることができますに影響します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-129">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a47e-130">派生クラスでオーバーライドしないでください、<xref:System.IO.TextReader.Close%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-130">In derived classes, do not override the <xref:System.IO.TextReader.Close%2A> method.</span></span> <span data-ttu-id="8a47e-131">代わりに、オーバーライド、<xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType>リソースを解放するためのコードを追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-131">Instead, override the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-132">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-132">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-133">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-133">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-134">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-134">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a47e-135">この <see cref="T:System.IO.TextReader" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-135">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-136">この <see cref="T:System.IO.TextReader" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-136">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-137"><xref:System.IO.TextReader> を使い終わったら、<xref:System.IO.TextReader.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-137">Call <xref:System.IO.TextReader.Dispose%2A> when you are finished using the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="8a47e-138"><xref:System.IO.TextReader.Dispose%2A>メソッドによって、<xref:System.IO.TextReader> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-138">The <xref:System.IO.TextReader.Dispose%2A> method leaves the <xref:System.IO.TextReader> in an unusable state.</span></span> <span data-ttu-id="8a47e-139"><xref:System.IO.TextReader.Dispose%2A>呼び出し後は、<xref:System.IO.TextReader>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.IO.TextReader> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-139">After calling <xref:System.IO.TextReader.Dispose%2A>, you must release all references to the <xref:System.IO.TextReader> so the garbage collector can reclaim the memory that the <xref:System.IO.TextReader> was occupying.</span></span>  
  
 <span data-ttu-id="8a47e-140">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8a47e-140">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a47e-141"><xref:System.IO.TextReader>への最後の参照を解放する前に、必ず<xref:System.IO.TextReader.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="8a47e-141">Always call <xref:System.IO.TextReader.Dispose%2A> before you release your last reference to the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="8a47e-142">そうしないと、ガベージ コレクターが <xref:System.IO.TextReader> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-142">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextReader> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8a47e-143">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8a47e-143"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8a47e-144"><see cref="T:System.IO.TextReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-144">Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-145">このメソッドは、パブリック`Dispose`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-145">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8a47e-146">既定では、このメソッドを指定します、`disposing`パラメーターとして`true`します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-146">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="8a47e-147"><xref:System.Object.Finalize%2A> 指定します、`disposing`パラメーターとして`false`します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-147"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="8a47e-148">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.TextReader> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-148">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextReader> references.</span></span> <span data-ttu-id="8a47e-149">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-149">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8a47e-150">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-150">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8a47e-151">このメソッドをオーバーライドする場合は、への以前の呼び出しで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-151">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="8a47e-152">このメソッドを実装する方法の詳細については、次を参照してください。 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-152">For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="8a47e-153">詳細については<see cref="M:System.IDisposable.Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-153">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-154">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-154">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-155">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-155">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-156">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-156">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextReader ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextReader" Usage="System.IO.TextReader.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a47e-157">読み取り対象のデータを <see langword="TextReader" /> に提供しません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-157">Provides a <see langword="TextReader" /> with no data to read from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-158">読み取り、<xref:System.IO.TextReader.Null>テキスト リーダーは、ストリームの末尾からの読み取りと似ています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-158">Reading from the <xref:System.IO.TextReader.Null> text reader is similar to reading from the end of a stream:</span></span>  
  
-   <span data-ttu-id="8a47e-159"><xref:System.IO.TextReader.Read%2A>と<xref:System.IO.TextReader.Peek%2A>メソッドは-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-159">The <xref:System.IO.TextReader.Read%2A> and <xref:System.IO.TextReader.Peek%2A> methods return -1.</span></span>  
  
-   <span data-ttu-id="8a47e-160"><xref:System.IO.TextReader.ReadBlock%2A>メソッドは 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-160">The <xref:System.IO.TextReader.ReadBlock%2A> method returns zero.</span></span>  
  
-   <span data-ttu-id="8a47e-161"><xref:System.IO.TextReader.ReadLine%2A>メソッドを返します。`null`します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-161">The <xref:System.IO.TextReader.ReadLine%2A> method returns `null`.</span></span>  
  
-   <span data-ttu-id="8a47e-162"><xref:System.IO.TextReader.ReadToEnd%2A>メソッドは空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-162">The <xref:System.IO.TextReader.ReadToEnd%2A> method returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-163">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-163">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-164">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-164">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-165">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-165">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; int&#xA;override this.Peek : unit -&gt; int" Usage="textReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-166">リーダーや文字の読み取り元の状態を変更せずに、次の文字を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-166">Reads the next character without changing the state of the reader or the character source.</span></span> <span data-ttu-id="8a47e-167">リーダーから実際に文字を読み取らずに次の文字を返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-167">Returns the next available character without actually reading it from the reader.</span></span></summary>
        <returns><span data-ttu-id="8a47e-168">読み取り対象の次の文字を表す整数。使用できる文字がないか、リーダーがシークをサポートしていない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="8a47e-168">An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-169"><xref:System.IO.TextReader.Peek%2A>メソッドは、ファイル、または別のエラーの終了が発生したかどうかを確認するには整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-169">The <xref:System.IO.TextReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="8a47e-170">これにより、ユーザーをまず確認かどうか、返される値は-1 にキャストする前に、<xref:System.Char>型。</span><span class="sxs-lookup"><span data-stu-id="8a47e-170">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="8a47e-171">現在の位置、<xref:System.IO.TextReader>この操作では変更されません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-171">The current position of the <xref:System.IO.TextReader> is not changed by this operation.</span></span> <span data-ttu-id="8a47e-172">可能な文字がない場合、返される値は-1 です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-172">The returned value is -1 if no more characters are available.</span></span> <span data-ttu-id="8a47e-173">既定の実装では、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-173">The default implementation returns -1.</span></span>  
  
 <span data-ttu-id="8a47e-174"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-174">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-175">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-175">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-176">使用する例については、<xref:System.IO.TextReader.Peek%2A>メソッドを参照してください、<xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-176">For an example of using the <xref:System.IO.TextReader.Peek%2A> method, see the <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-177"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-177">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a47e-178">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-178">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Peek" />
        <altmember cref="M:System.IO.StringReader.Peek" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-179">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-179">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-180">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-180">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-181">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-181">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a47e-182">テキスト リーダーからデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-182">Reads data from the text reader.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="textReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-183">テキスト リーダーから次の文字を読み取り、1 文字分だけ文字位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-183">Reads the next character from the text reader and advances the character position by one character.</span></span></summary>
        <returns><span data-ttu-id="8a47e-184">テキスト リーダーからの次の文字。それ以上読み取り可能な文字がない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="8a47e-184">The next character from the text reader, or -1 if no more characters are available.</span></span> <span data-ttu-id="8a47e-185">既定の実装では、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-185">The default implementation returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-186"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-186">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-187">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-187">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-188">使用する例については、<xref:System.IO.TextReader.Read%2A>メソッドを参照してください、<xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-188">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-189"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-189">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a47e-190">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-190">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Read" />
        <altmember cref="M:System.IO.StringReader.Read" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-191">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-191">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-192">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-192">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-193">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-193">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="textReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="textReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8a47e-194">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-194">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="8a47e-195">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="8a47e-195">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="8a47e-196">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="8a47e-196">The maximum number of characters to read.</span></span> <span data-ttu-id="8a47e-197">指定された文字数をバッファーに読み取る前にリーダーの末尾に到達した場合、メソッドは制御を返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-197">If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="8a47e-198">指定した最大文字数を現在のリーダーから読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-198">Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="8a47e-199">読み取られた文字数。</span><span class="sxs-lookup"><span data-stu-id="8a47e-199">The number of characters that have been read.</span></span> <span data-ttu-id="8a47e-200">この数値は、リーダー内に使用できるデータがあるかどうかによって異なりますが、<paramref name="count" /> 以下の数値になります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-200">The number will be less than or equal to <paramref name="count" />, depending on whether the data is available within the reader.</span></span> <span data-ttu-id="8a47e-201">読み取り対象の文字がない場合にこのメソッドを呼び出すと、0 (ゼロ) が返されます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-201">This method returns 0 (zero) if it is called when no more characters are left to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-202">いずれかの後にこのメソッドが戻る`count`文字が読み取られたまたはファイルの末尾に到達します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-202">This method returns after either `count` characters are read or the end of the file is reached.</span></span> <span data-ttu-id="8a47e-203"><xref:System.IO.TextReader.ReadBlock%2A> このメソッドのブロックのバージョンです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-203"><xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of this method.</span></span>  
  
 <span data-ttu-id="8a47e-204"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-204">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-205">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-205">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-206">使用する例については、<xref:System.IO.TextReader.Read%2A>メソッドを参照してください、<xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-206">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a47e-207"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-207"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a47e-208">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-208">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a47e-209"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-209"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-210"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-210">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a47e-211">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-211">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-212">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-212">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-213">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-213">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-214">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-214">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8a47e-215">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-215">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="8a47e-216">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="8a47e-216">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="8a47e-217">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="8a47e-217">The maximum number of characters to read.</span></span> <span data-ttu-id="8a47e-218">指定された文字数をバッファーに読み取る前にテキストの末尾に到達した場合は、現在のメソッドが返ります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-218">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span></span></param>
        <summary><span data-ttu-id="8a47e-219">指定した最大文字数を現在のテキスト リーダーから非同期に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-219">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="8a47e-220">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8a47e-220">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="8a47e-221"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-221">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="8a47e-222">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、テキストの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-222">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-223">タスクの完了後にいずれかで指定された文字の数、`count`パラメーターが読み取り専用またはファイルの末尾に到達します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-223">The task completes after either the number of characters specified by the `count` parameter are read or the end of the file is reached.</span></span>  
  
 <span data-ttu-id="8a47e-224"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-224">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-225">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-225">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-226">使用する例については、<xref:System.IO.TextReader.ReadAsync%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-226">For an example of using the <xref:System.IO.TextReader.ReadAsync%2A> method, see the <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a47e-227"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-227"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a47e-228"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-228"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a47e-229"><paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-229">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-230">テキスト リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-230">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8a47e-231">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-231">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-232">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-232">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-233">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-233">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-234">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-234">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : Span&lt;char&gt; -&gt; int&#xA;override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="textReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : char[] * int * int -&gt; int&#xA;override this.ReadBlock : char[] * int * int -&gt; int" Usage="textReader.ReadBlock (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8a47e-235">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> -1) までの値が、現在のソースから読み取られた文字に置き換えられています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-235">When this method returns, this parameter contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> -1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="8a47e-236">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="8a47e-236">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="8a47e-237">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="8a47e-237">The maximum number of characters to read.</span></span></param>
        <summary><span data-ttu-id="8a47e-238">指定した最大文字数を現在のテキスト リーダーから読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-238">Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="8a47e-239">読み取られた文字数。</span><span class="sxs-lookup"><span data-stu-id="8a47e-239">The number of characters that have been read.</span></span> <span data-ttu-id="8a47e-240">この数値は、すべての入力文字が読み取られたかどうかによって異なりますが、<paramref name="count" /> 以下の数値になります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-240">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-241">基になるテキスト リーダーの位置が読み込まれた文字数による高度な`buffer`します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-241">The position of the underlying text reader is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="8a47e-242">メソッドは、いずれかまでブロック`count`文字が読み取られた、またはすべての文字が読み取られました。</span><span class="sxs-lookup"><span data-stu-id="8a47e-242">The method blocks until either `count` characters are read, or all characters have been read.</span></span> <span data-ttu-id="8a47e-243">これは、ブロックしているバージョンの<xref:System.IO.TextReader.Read%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-243">This is a blocking version of <xref:System.IO.TextReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a47e-244"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-244"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a47e-245">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-245">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a47e-246"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-246"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-247"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-247">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a47e-248">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-248">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-249">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-249">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-250">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-250">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-251">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-251">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8a47e-252">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-252">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="8a47e-253">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="8a47e-253">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="8a47e-254">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="8a47e-254">The maximum number of characters to read.</span></span> <span data-ttu-id="8a47e-255">指定された文字数をバッファーに読み取る前にテキストの末尾に到達した場合は、現在のメソッドが返ります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-255">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span></span></param>
        <summary><span data-ttu-id="8a47e-256">指定した最大文字数を現在のテキスト リーダーから非同期に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-256">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="8a47e-257">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8a47e-257">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="8a47e-258"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-258">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="8a47e-259">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、テキストの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-259">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-260">タスクが完了しないまでで指定された文字の数、`count`パラメーターは読み取り専用、またはテキストの末尾に達しています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-260">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the text has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a47e-261"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-261"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a47e-262"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-262"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a47e-263"><paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-263">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-264">テキスト リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-264">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8a47e-265">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-265">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-266">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-266">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-267">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-267">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-268">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-268">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="textReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-269">テキスト リーダーから 1 行分の文字を読み取り、そのデータを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-269">Reads a line of characters from the text reader and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="8a47e-270">リーダーの次の行。またはすべての文字が読み取られた場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8a47e-270">The next line from the reader, or <see langword="null" /> if all characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-271">行は、一連の文字の後にキャリッジ リターン (0x000d)、ライン フィード (0x000a) として定義されます、キャリッジ リターン、ライン フィード、その後に<xref:System.Environment.NewLine%2A?displayProperty=nameWithType>、またはストリームの終わりのマーカー。</span><span class="sxs-lookup"><span data-stu-id="8a47e-271">A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, or the end-of-stream marker.</span></span> <span data-ttu-id="8a47e-272">返される文字列は、終端のキャリッジ リターン、改行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-272">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="8a47e-273">戻り値は`null`入力ストリームの末尾に達している場合。</span><span class="sxs-lookup"><span data-stu-id="8a47e-273">The return value is `null` if the end of the input stream has been reached.</span></span>  
  
 <span data-ttu-id="8a47e-274">メソッドがスローした場合、<xref:System.OutOfMemoryException>例外を基になるリーダーの位置<xref:System.IO.Stream>の文字を読み取るには、メソッドができましたが、内部に既に読み取られた文字数では、高度な<xref:System.IO.TextReader.ReadLine%2A>バッファーには破棄されます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-274">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="8a47e-275">既に読み取られた文字は復旧できませんし、再初期化によってのみアクセスできるストリーム内のリーダーの位置を変更できないため、<xref:System.IO.TextReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8a47e-275">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader> object.</span></span> <span data-ttu-id="8a47e-276">ストリーム内の初期位置が不明またはストリームがシークを基になるをサポートしていない場合<xref:System.IO.Stream>も再初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-276">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="8a47e-277">このような状況を回避し、使用する必要があります、堅牢なコードを生成、<xref:System.IO.TextReader.Read%2A>メソッドとストア、読み取りが事前に割り当てられるバッファーの文字します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-277">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="8a47e-278"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-278">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-279">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-279">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-280">使用する例については、<xref:System.IO.TextReader.ReadLine%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-280">For an example of using the <xref:System.IO.TextReader.ReadLine%2A> method, see the <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a47e-281">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-281">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8a47e-282">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-282">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-283"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-283">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a47e-284">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-284">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadLine" />
        <altmember cref="M:System.IO.StringReader.ReadLine" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-285">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-285">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-286">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-286">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-287">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-287">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-288">1 行分の文字を非同期的に読み取り、そのデータを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-288">Reads a line of characters asynchronously and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="8a47e-289">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8a47e-289">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="8a47e-290"><paramref name="TResult" /> パラメーターの値には、テキスト リーダーの次の行が含まれます。または、すべての文字が読み取られた場合は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-290">The value of the <paramref name="TResult" /> parameter contains the next line from the text reader, or is <see langword="null" /> if all of the characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-291"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-291">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-292">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-292">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-293">使用する例については、<xref:System.IO.TextReader.ReadLineAsync%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-293">For an example of using the <xref:System.IO.TextReader.ReadLineAsync%2A> method, see the <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8a47e-294">場合、現在<xref:System.IO.TextReader>によって返される標準入力ストリームを表す、<xref:System.Console.In%2A?displayProperty=nameWithType>プロパティ、<xref:System.IO.TextReader.ReadLineAsync%2A>メソッドを非同期的にではなく同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-294">If the current <xref:System.IO.TextReader> represents the standard input stream returned by the <xref:System.Console.In%2A?displayProperty=nameWithType> property, the <xref:System.IO.TextReader.ReadLineAsync%2A> method executes synchronously rather than asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a47e-295">次の行に含まれる文字数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-295">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-296">テキスト リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-296">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8a47e-297">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-297">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadLineAsync" />
        <altmember cref="M:System.IO.StringReader.ReadLineAsync" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-298">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-298">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-299">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-299">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-300">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-300">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public virtual string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEnd : unit -&gt; string&#xA;override this.ReadToEnd : unit -&gt; string" Usage="textReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-301">テキスト リーダーの現在位置から末尾まですべての文字を読み取り、1 つの文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-301">Reads all characters from the current position to the end of the text reader and returns them as one string.</span></span></summary>
        <returns><span data-ttu-id="8a47e-302">テキスト リーダーの現在位置から末尾までのすべての文字を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="8a47e-302">A string that contains all characters from the current position to the end of the text reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-303">メソッドがスローした場合、<xref:System.OutOfMemoryException>例外を基になるリーダーの位置<xref:System.IO.Stream>の文字を読み取るには、メソッドができましたが、内部に既に読み取られた文字数では、高度な<xref:System.IO.TextReader.ReadToEnd%2A>バッファーには破棄されます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-303">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="8a47e-304">既に読み取られた文字は復旧できませんし、再初期化によってのみアクセスできるストリーム内のリーダーの位置を変更できないため、<xref:System.IO.TextReader>します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-304">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="8a47e-305">ストリーム内の初期位置が不明またはストリームがシークを基になるをサポートしていない場合<xref:System.IO.Stream>も再初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-305">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="8a47e-306">このような状況を回避し、使用する必要があります、堅牢なコードを生成、<xref:System.IO.TextReader.Read%2A>メソッドとストア、読み取りが事前に割り当てられるバッファーの文字します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-306">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="8a47e-307"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-307">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-308">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-308">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-309">使用する例については、<xref:System.IO.TextReader.ReadToEnd%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-309">For an example of using the <xref:System.IO.TextReader.ReadToEnd%2A> method, see the <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a47e-310">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-310">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-311"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-311">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8a47e-312">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-312">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a47e-313">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-313">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEnd" />
        <altmember cref="M:System.IO.StringReader.ReadToEnd" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-314">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-314">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-315">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-315">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-316">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-316">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-317">テキスト リーダーの現在位置から末尾まですべての文字を非同期的に読み取り、1 つの文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-317">Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.</span></span></summary>
        <returns><span data-ttu-id="8a47e-318">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8a47e-318">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="8a47e-319"><paramref name="TResult" /> パラメーターの値には、現在位置からテキスト リーダーの末尾までの文字から成る文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-319">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the text reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-320"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="8a47e-320">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="8a47e-321">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="8a47e-321">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="8a47e-322">使用する例については、<xref:System.IO.TextReader.ReadToEndAsync%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8a47e-322">For an example of using the <xref:System.IO.TextReader.ReadToEndAsync%2A> method, see the <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a47e-323">文字数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-323">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a47e-324">テキスト リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-324">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8a47e-325">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="8a47e-325">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEndAsync" />
        <altmember cref="M:System.IO.StringReader.ReadToEndAsync" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-326">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-326">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-327">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-327">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-328">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-328">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader Synchronized (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader Synchronized(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Synchronized(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (reader As TextReader) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextReader ^ Synchronized(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextReader -&gt; System.IO.TextReader" Usage="System.IO.TextReader.Synchronized reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="8a47e-329">同期する <see langword="TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="8a47e-329">The <see langword="TextReader" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="8a47e-330">指定した <see langword="TextReader" /> をラップするスレッド セーフ ラッパーを作成します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-330">Creates a thread-safe wrapper around the specified <see langword="TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="8a47e-331">スレッド セーフな <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="8a47e-331">A thread-safe <see cref="T:System.IO.TextReader" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a47e-332">現在のメソッドは、指定されたをラップするクラスを返します<xref:System.IO.TextReader>インスタンス化し、複数のスレッドによってへのアクセスを制限します。</span><span class="sxs-lookup"><span data-stu-id="8a47e-332">The current method returns a class that wraps around the specified <xref:System.IO.TextReader> instance and restricts access to it by multiple threads.</span></span> <span data-ttu-id="8a47e-333">返されるラッパーからのすべての読み取りは、スレッド セーフになります。</span><span class="sxs-lookup"><span data-stu-id="8a47e-333">All reads from the returned wrapper will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a47e-334"><paramref name="reader" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-334"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8a47e-335">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8a47e-335">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8a47e-336">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8a47e-336">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8a47e-337">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8a47e-337">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a47e-338">このメンバーの詳細については、「<see cref="M:System.IDisposable.Dispose" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8a47e-338">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="8a47e-339">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8a47e-339">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8a47e-340">これは、<xref:System.IO.TextReader> のインスタンスが <xref:System.IDisposable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8a47e-340">It can be used only when the <xref:System.IO.TextReader> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>