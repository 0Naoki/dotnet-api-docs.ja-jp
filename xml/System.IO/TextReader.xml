<Type Name="TextReader" FullName="System.IO.TextReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f882ff5bcd2b51c7c701fc49a7f165f88dda3ccf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69242861" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextReader : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextReader extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReader abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e3bf9-101">一連の文字を読み取ることができるリーダーを表します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-101">Represents a reader that can read a sequential series of characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-102"><xref:System.IO.TextReader>は、および<xref:System.IO.StreamReader> <xref:System.IO.StringReader>の抽象基本クラスであり、ストリームと文字列から文字を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-102"><xref:System.IO.TextReader> is the abstract base class of <xref:System.IO.StreamReader> and <xref:System.IO.StringReader>, which read characters from streams and strings, respectively.</span></span> <span data-ttu-id="e3bf9-103">これらの派生クラスを使用して、指定された範囲の文字を読み取るためのテキストファイルを開くか、既存のストリームに基づいてリーダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-103">Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e3bf9-104">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="e3bf9-105">この型から派生した任意の型の使用が完了したら、直接または間接的に破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-105">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="e3bf9-106">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IO.TextReader.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-106">To dispose of the type directly, call its <xref:System.IO.TextReader.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="e3bf9-107">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="e3bf9-108">詳細については、「Dispose」および「 <xref:System.IDisposable>インターフェイス」の「IDisposable を実装するオブジェクトの使用」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-108">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3bf9-109"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-109">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-110">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-110">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-111">クラス<xref:System.IO.StreamReader>はから<xref:System.IO.TextReader>派生し、ストリームから読み取るためのメンバーの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-111">The <xref:System.IO.StreamReader> class derives from <xref:System.IO.TextReader> and provides implementations of the members for reading from a stream.</span></span> <span data-ttu-id="e3bf9-112">次の例は、 <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>メソッドを使用してファイル内のすべての文字を読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-112">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e3bf9-113">このメソッドは、文字を<xref:System.Text.StringBuilder>クラスのインスタンスに追加する前に、各文字がアルファベット、数字、または空白であるかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-113">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="e3bf9-114">の<see cref="M:System.IO.TextReader.Read" /> <see cref="M:System.IO.TextReader.Peek" /> 便利なインスタンスを作成するには、派生クラスでメソッドとメソッドを最小限実装する必要があります。<see cref="T:System.IO.TextReader" /></span><span class="sxs-lookup"><span data-stu-id="e3bf9-114">A derived class must minimally implement the <see cref="M:System.IO.TextReader.Peek" /> and <see cref="M:System.IO.TextReader.Read" /> methods to make a useful instance of <see cref="T:System.IO.TextReader" />.</span></span></para></block>
    <altmember cref="T:System.IO.StringReader" />
    <altmember cref="T:System.IO.StreamReader" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-115">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-115">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-116">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-116">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-117">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-117">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e3bf9-118">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e3bf9-118">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-119"><see cref="T:System.IO.TextReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-119">Initializes a new instance of the <see cref="T:System.IO.TextReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-120">派生クラスには、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-120">Use this constructor for derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-121">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-121">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-122">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-122">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-123">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-123">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-124"><see cref="T:System.IO.TextReader" /> を閉じ、その <see langword="TextReader" /> と関連付けられているシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-124">Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the <see langword="TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-125">このの`Close`実装は、 <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType>メソッドを呼び出し、値`true`を渡します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-125">This implementation of `Close` calls the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3bf9-126">派生クラスでは、 <xref:System.IO.TextReader.Close%2A>メソッドをオーバーライドしないでください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-126">In derived classes, do not override the <xref:System.IO.TextReader.Close%2A> method.</span></span> <span data-ttu-id="e3bf9-127">代わりに、 <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType>メソッドをオーバーライドして、リソースを解放するためのコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-127">Instead, override the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-128">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-128">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-129">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-129">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-130">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-130">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e3bf9-131">この <see cref="T:System.IO.TextReader" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-131">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-132">この <see cref="T:System.IO.TextReader" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-132">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-133"><xref:System.IO.TextReader> を使い終わったら、<xref:System.IO.TextReader.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-133">Call <xref:System.IO.TextReader.Dispose%2A> when you are finished using the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="e3bf9-134"><xref:System.IO.TextReader.Dispose%2A>メソッドによって、<xref:System.IO.TextReader> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-134">The <xref:System.IO.TextReader.Dispose%2A> method leaves the <xref:System.IO.TextReader> in an unusable state.</span></span> <span data-ttu-id="e3bf9-135"><xref:System.IO.TextReader.Dispose%2A>呼び出し後は、<xref:System.IO.TextReader>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.IO.TextReader> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-135">After calling <xref:System.IO.TextReader.Dispose%2A>, you must release all references to the <xref:System.IO.TextReader> so the garbage collector can reclaim the memory that the <xref:System.IO.TextReader> was occupying.</span></span>  
  
 <span data-ttu-id="e3bf9-136">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-136">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3bf9-137"><xref:System.IO.TextReader>への最後の参照を解放する前に、必ず<xref:System.IO.TextReader.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-137">Always call <xref:System.IO.TextReader.Dispose%2A> before you release your last reference to the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="e3bf9-138">そうしないと、ガベージ コレクターが <xref:System.IO.TextReader> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-138">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextReader> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="e3bf9-139">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-139"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="e3bf9-140"><see cref="T:System.IO.TextReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-140">Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-141">このメソッドは、パブリック`Dispose`メソッド<xref:System.Object.Finalize%2A>とメソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-141">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e3bf9-142">既定では`disposing` 、このメソッドはパラメーターを`true`として指定します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-142">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="e3bf9-143"><xref:System.Object.Finalize%2A>パラメーターをとし`false`て指定します。 `disposing`</span><span class="sxs-lookup"><span data-stu-id="e3bf9-143"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="e3bf9-144">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.TextReader> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-144">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextReader> references.</span></span> <span data-ttu-id="e3bf9-145">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-145">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e3bf9-146">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-146">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="e3bf9-147">このメソッドをオーバーライドする場合は、以前にを<see langword="Dispose" />呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-147">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="e3bf9-148">このメソッドの実装方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-148">For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="e3bf9-149"><see cref="M:System.IDisposable.Dispose" /> および<see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-149">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-150">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-150">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-151">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-151">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-152">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-152">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextReader ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextReader" Usage="System.IO.TextReader.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3bf9-153">読み取り対象のデータを <see langword="TextReader" /> に提供しません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-153">Provides a <see langword="TextReader" /> with no data to read from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-154"><xref:System.IO.TextReader.Null>テキストリーダーからの読み取りは、ストリームの末尾からの読み取りに似ています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-154">Reading from the <xref:System.IO.TextReader.Null> text reader is similar to reading from the end of a stream:</span></span>  
  
-   <span data-ttu-id="e3bf9-155">メソッド<xref:System.IO.TextReader.Read%2A> と<xref:System.IO.TextReader.Peek%2A>メソッドは、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-155">The <xref:System.IO.TextReader.Read%2A> and <xref:System.IO.TextReader.Peek%2A> methods return -1.</span></span>  
  
-   <span data-ttu-id="e3bf9-156">この<xref:System.IO.TextReader.ReadBlock%2A>メソッドは0を返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-156">The <xref:System.IO.TextReader.ReadBlock%2A> method returns zero.</span></span>  
  
-   <span data-ttu-id="e3bf9-157">メソッド<xref:System.IO.TextReader.ReadLine%2A>はを`null`返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-157">The <xref:System.IO.TextReader.ReadLine%2A> method returns `null`.</span></span>  
  
-   <span data-ttu-id="e3bf9-158">メソッド<xref:System.IO.TextReader.ReadToEnd%2A>は、空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-158">The <xref:System.IO.TextReader.ReadToEnd%2A> method returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-159">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-159">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-160">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-160">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-161">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-161">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; int&#xA;override this.Peek : unit -&gt; int" Usage="textReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-162">リーダーや文字の読み取り元の状態を変更せずに、次の文字を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-162">Reads the next character without changing the state of the reader or the character source.</span></span> <span data-ttu-id="e3bf9-163">リーダーから実際に文字を読み取らずに次の文字を返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-163">Returns the next available character without actually reading it from the reader.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-164">読み取り対象の次の文字を表す整数。使用できる文字がないか、リーダーがシークをサポートしていない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-164">An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-165">メソッド<xref:System.IO.TextReader.Peek%2A>は、ファイルの終わりまたは別のエラーが発生したかどうかを判断するために、整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-165">The <xref:System.IO.TextReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="e3bf9-166">これにより、ユーザーは最初に、返された値が-1 であるか<xref:System.Char>どうかを、型にキャストする前に確認できます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-166">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="e3bf9-167">の現在の<xref:System.IO.TextReader>位置は、この操作によって変更されません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-167">The current position of the <xref:System.IO.TextReader> is not changed by this operation.</span></span> <span data-ttu-id="e3bf9-168">使用できる文字がない場合、戻り値は-1 になります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-168">The returned value is -1 if no more characters are available.</span></span> <span data-ttu-id="e3bf9-169">既定の実装では、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-169">The default implementation returns -1.</span></span>  
  
 <span data-ttu-id="e3bf9-170"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-170">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-171">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-171">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-172"><xref:System.IO.TextReader.Peek%2A>メソッドの使用例については、 <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-172">For an example of using the <xref:System.IO.TextReader.Peek%2A> method, see the <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-173"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-173">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e3bf9-174">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-174">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Peek" />
        <altmember cref="M:System.IO.StringReader.Peek" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-175">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-175">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-176">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-176">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-177">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-177">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e3bf9-178">テキスト リーダーからデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-178">Reads data from the text reader.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="textReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-179">テキスト リーダーから次の文字を読み取り、1 文字分だけ文字位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-179">Reads the next character from the text reader and advances the character position by one character.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-180">テキスト リーダーからの次の文字。それ以上読み取り可能な文字がない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-180">The next character from the text reader, or -1 if no more characters are available.</span></span> <span data-ttu-id="e3bf9-181">既定の実装では、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-181">The default implementation returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-182"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-182">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-183">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-183">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-184"><xref:System.IO.TextReader.Read%2A>メソッドの使用例については、 <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-184">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-185"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-185">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e3bf9-186">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-186">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Read" />
        <altmember cref="M:System.IO.StringReader.Read" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-187">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-187">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-188">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-188">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-189">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-189">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="textReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="textReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e3bf9-190">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-190">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="e3bf9-191">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-191">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="e3bf9-192">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-192">The maximum number of characters to read.</span></span> <span data-ttu-id="e3bf9-193">指定された文字数をバッファーに読み取る前にリーダーの末尾に到達した場合、メソッドは制御を返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-193">If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="e3bf9-194">指定した最大文字数を現在のリーダーから読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-194">Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-195">読み取られた文字数。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-195">The number of characters that have been read.</span></span> <span data-ttu-id="e3bf9-196">この数値は、リーダー内に使用できるデータがあるかどうかによって異なりますが、<paramref name="count" /> 以下の数値になります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-196">The number will be less than or equal to <paramref name="count" />, depending on whether the data is available within the reader.</span></span> <span data-ttu-id="e3bf9-197">読み取り対象の文字がない場合にこのメソッドを呼び出すと、0 (ゼロ) が返されます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-197">This method returns 0 (zero) if it is called when no more characters are left to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-198">このメソッドは、いずれ`count`かの文字が読み取られた後、またはファイルの末尾に到達した後に戻ります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-198">This method returns after either `count` characters are read or the end of the file is reached.</span></span> <span data-ttu-id="e3bf9-199"><xref:System.IO.TextReader.ReadBlock%2A>は、このメソッドのブロッキングバージョンです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-199"><xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of this method.</span></span>  
  
 <span data-ttu-id="e3bf9-200"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-200">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-201">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-201">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-202"><xref:System.IO.TextReader.Read%2A>メソッドの使用例については、 <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-202">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3bf9-203"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-203"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e3bf9-204">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-204">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3bf9-205"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-205"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-206"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-206">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e3bf9-207">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-207">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-208">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-208">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-209">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-209">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-210">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-210">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e3bf9-211">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-211">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="e3bf9-212">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-212">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="e3bf9-213">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-213">The maximum number of characters to read.</span></span> <span data-ttu-id="e3bf9-214">指定された文字数をバッファーに読み取る前にテキストの末尾に到達した場合は、現在のメソッドが返ります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-214">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span></span></param>
        <summary><span data-ttu-id="e3bf9-215">指定した最大文字数を現在のテキスト リーダーから非同期に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-215">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-216">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-216">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="e3bf9-217"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-217">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="e3bf9-218">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、テキストの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-218">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-219">`count`パラメーターで指定された文字数が読み取られるか、ファイルの末尾に到達すると、タスクが完了します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-219">The task completes after either the number of characters specified by the `count` parameter are read or the end of the file is reached.</span></span>  
  
 <span data-ttu-id="e3bf9-220"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-220">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-221">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-221">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-222"><xref:System.IO.TextReader.ReadAsync%2A>メソッドの使用例については、 <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-222">For an example of using the <xref:System.IO.TextReader.ReadAsync%2A> method, see the <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3bf9-223"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-223"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3bf9-224"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-224"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e3bf9-225"><paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-225">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-226">テキスト リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-226">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e3bf9-227">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-227">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-228">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-228">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-229">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-229">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-230">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-230">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : Span&lt;char&gt; -&gt; int&#xA;override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="textReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : char[] * int * int -&gt; int&#xA;override this.ReadBlock : char[] * int * int -&gt; int" Usage="textReader.ReadBlock (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e3bf9-231">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> -1) までの値が、現在のソースから読み取られた文字に置き換えられています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-231">When this method returns, this parameter contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> -1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="e3bf9-232">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-232">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="e3bf9-233">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-233">The maximum number of characters to read.</span></span></param>
        <summary><span data-ttu-id="e3bf9-234">指定した最大文字数を現在のテキスト リーダーから読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-234">Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-235">読み取られた文字数。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-235">The number of characters that have been read.</span></span> <span data-ttu-id="e3bf9-236">この数値は、すべての入力文字が読み取られたかどうかによって異なりますが、<paramref name="count" /> 以下の数値になります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-236">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-237">基になるテキストリーダーの位置は、に`buffer`読み込まれた文字数だけ進んでいます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-237">The position of the underlying text reader is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="e3bf9-238">メソッドは、いずれか`count`の文字が読み込まれるか、すべての文字が読み取られるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-238">The method blocks until either `count` characters are read, or all characters have been read.</span></span> <span data-ttu-id="e3bf9-239">これは、の<xref:System.IO.TextReader.Read%2A>ブロッキングバージョンです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-239">This is a blocking version of <xref:System.IO.TextReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3bf9-240"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-240"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e3bf9-241">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-241">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3bf9-242"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-242"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-243"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-243">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e3bf9-244">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-244">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-245">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-245">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-246">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-246">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-247">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-247">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e3bf9-248">このメソッドが戻るとき、指定した文字配列の <paramref name="index" /> から (<paramref name="index" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られた文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-248">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="e3bf9-249">書き込みを開始する <paramref name="buffer" /> 内の位置。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-249">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="e3bf9-250">読み取り対象の最大文字数。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-250">The maximum number of characters to read.</span></span> <span data-ttu-id="e3bf9-251">指定された文字数をバッファーに読み取る前にテキストの末尾に到達した場合は、現在のメソッドが返ります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-251">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span></span></param>
        <summary><span data-ttu-id="e3bf9-252">指定した最大文字数を現在のテキスト リーダーから非同期に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-252">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-253">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-253">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="e3bf9-254"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-254">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="e3bf9-255">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、テキストの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-255">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-256">`count`パラメーターで指定された文字数が読み込まれるか、テキストの末尾に到達するまで、タスクは完了しません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-256">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the text has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3bf9-257"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-257"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3bf9-258"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-258"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e3bf9-259"><paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-259">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-260">テキスト リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-260">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e3bf9-261">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-261">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-262">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-262">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-263">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-263">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-264">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-264">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="textReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-265">テキスト リーダーから 1 行分の文字を読み取り、そのデータを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-265">Reads a line of characters from the text reader and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-266">リーダーの次の行。またはすべての文字が読み取られた場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-266">The next line from the reader, or <see langword="null" /> if all characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-267">行は、一連の文字として定義され、その後に復帰 (0x000d)、改行 (0x000d)、キャリッジリターンの後にラインフィード、 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>、またはストリームの末尾マーカーとして定義されます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-267">A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, or the end-of-stream marker.</span></span> <span data-ttu-id="e3bf9-268">返される文字列には、終端の復帰またはラインフィードは含まれません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-268">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="e3bf9-269">入力ストリームの末尾`null`に到達した場合、戻り値はになります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-269">The return value is `null` if the end of the input stream has been reached.</span></span>  
  
 <span data-ttu-id="e3bf9-270">メソッドが<xref:System.OutOfMemoryException>例外をスローした場合、基になる<xref:System.IO.Stream>のリーダーの位置は、メソッドが読み取ることができた文字数だけ進んでいますが、既に内部<xref:System.IO.TextReader.ReadLine%2A>バッファーに読み込まれていた文字は、あっ.</span><span class="sxs-lookup"><span data-stu-id="e3bf9-270">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="e3bf9-271">ストリーム内のリーダーの位置は変更できないため、既に読み取られた文字は回復不能であり、オブジェクトを<xref:System.IO.TextReader>再初期化することによってのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-271">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader> object.</span></span> <span data-ttu-id="e3bf9-272">ストリーム内の最初の位置が不明な場合、またはストリームがシークをサポートし<xref:System.IO.Stream>ていない場合は、基になるも再初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-272">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="e3bf9-273">このような状況を回避し、堅牢なコードを生成<xref:System.IO.TextReader.Read%2A>するには、メソッドを使用して、事前に割り当てられたバッファーに読み取り文字を格納する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-273">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="e3bf9-274"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-274">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-275">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-275">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-276"><xref:System.IO.TextReader.ReadLine%2A>メソッドの使用例については、 <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-276">For an example of using the <xref:System.IO.TextReader.ReadLine%2A> method, see the <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e3bf9-277">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-277">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e3bf9-278">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-278">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-279"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-279">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3bf9-280">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-280">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadLine" />
        <altmember cref="M:System.IO.StringReader.ReadLine" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-281">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-281">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-282">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-282">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-283">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-283">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-284">1 行分の文字を非同期的に読み取り、そのデータを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-284">Reads a line of characters asynchronously and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-285">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-285">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="e3bf9-286"><paramref name="TResult" /> パラメーターの値には、テキスト リーダーの次の行が含まれます。または、すべての文字が読み取られた場合は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-286">The value of the <paramref name="TResult" /> parameter contains the next line from the text reader, or is <see langword="null" /> if all of the characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-287"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-287">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-288">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-288">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-289"><xref:System.IO.TextReader.ReadLineAsync%2A>メソッドの使用例については、 <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-289">For an example of using the <xref:System.IO.TextReader.ReadLineAsync%2A> method, see the <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e3bf9-290">現在<xref:System.IO.TextReader>のが、 <xref:System.Console.In%2A?displayProperty=nameWithType>プロパティによって返される標準入力ストリームを<xref:System.IO.TextReader.ReadLineAsync%2A>表している場合、メソッドは非同期ではなく同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-290">If the current <xref:System.IO.TextReader> represents the standard input stream returned by the <xref:System.Console.In%2A?displayProperty=nameWithType> property, the <xref:System.IO.TextReader.ReadLineAsync%2A> method executes synchronously rather than asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3bf9-291">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-291">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-292">テキスト リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-292">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e3bf9-293">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-293">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadLineAsync" />
        <altmember cref="M:System.IO.StringReader.ReadLineAsync" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-294">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-294">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-295">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-295">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-296">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-296">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public virtual string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEnd : unit -&gt; string&#xA;override this.ReadToEnd : unit -&gt; string" Usage="textReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-297">テキスト リーダーの現在位置から末尾まですべての文字を読み取り、1 つの文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-297">Reads all characters from the current position to the end of the text reader and returns them as one string.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-298">テキスト リーダーの現在位置から末尾までのすべての文字を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-298">A string that contains all characters from the current position to the end of the text reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-299">メソッドが<xref:System.OutOfMemoryException>例外をスローした場合、基になる<xref:System.IO.Stream>のリーダーの位置は、メソッドが読み取ることができた文字数だけ進んでいますが、既に内部<xref:System.IO.TextReader.ReadToEnd%2A>バッファーに読み込まれていた文字は、あっ.</span><span class="sxs-lookup"><span data-stu-id="e3bf9-299">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="e3bf9-300">ストリーム内のリーダーの位置は変更できないため、既に読み取られた文字は回復不能であり、を<xref:System.IO.TextReader>再初期化することによってのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-300">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="e3bf9-301">ストリーム内の最初の位置が不明な場合、またはストリームがシークをサポートし<xref:System.IO.Stream>ていない場合は、基になるも再初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-301">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="e3bf9-302">このような状況を回避し、堅牢なコードを生成<xref:System.IO.TextReader.Read%2A>するには、メソッドを使用して、事前に割り当てられたバッファーに読み取り文字を格納する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-302">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="e3bf9-303"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-303">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-304">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-304">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-305"><xref:System.IO.TextReader.ReadToEnd%2A>メソッドの使用例については、 <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-305">For an example of using the <xref:System.IO.TextReader.ReadToEnd%2A> method, see the <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e3bf9-306">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-306">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-307"><see cref="T:System.IO.TextReader" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-307">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e3bf9-308">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-308">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3bf9-309">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-309">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEnd" />
        <altmember cref="M:System.IO.StringReader.ReadToEnd" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-310">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-310">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-311">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-311">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-312">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-312">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-313">テキスト リーダーの現在位置から末尾まですべての文字を非同期的に読み取り、1 つの文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-313">Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-314">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-314">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="e3bf9-315"><paramref name="TResult" /> パラメーターの値には、現在位置からテキスト リーダーの末尾までの文字から成る文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-315">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the text reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-316"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-316">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="e3bf9-317">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-317">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="e3bf9-318"><xref:System.IO.TextReader.ReadToEndAsync%2A>メソッドの使用例については、 <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-318">For an example of using the <xref:System.IO.TextReader.ReadToEndAsync%2A> method, see the <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3bf9-319">文字数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-319">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e3bf9-320">テキスト リーダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-320">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e3bf9-321">リーダーは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-321">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEndAsync" />
        <altmember cref="M:System.IO.StringReader.ReadToEndAsync" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-322">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-322">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-323">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-323">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-324">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-324">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader Synchronized (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader Synchronized(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Synchronized(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (reader As TextReader) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextReader ^ Synchronized(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextReader -&gt; System.IO.TextReader" Usage="System.IO.TextReader.Synchronized reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="e3bf9-325">同期する <see langword="TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-325">The <see langword="TextReader" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="e3bf9-326">指定した <see langword="TextReader" /> をラップするスレッド セーフ ラッパーを作成します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-326">Creates a thread-safe wrapper around the specified <see langword="TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="e3bf9-327">スレッド セーフな <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-327">A thread-safe <see cref="T:System.IO.TextReader" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3bf9-328">現在のメソッドは、指定された<xref:System.IO.TextReader>インスタンスをラップして、複数のスレッドによるアクセスを制限するクラスを返します。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-328">The current method returns a class that wraps around the specified <xref:System.IO.TextReader> instance and restricts access to it by multiple threads.</span></span> <span data-ttu-id="e3bf9-329">返されたラッパーからのすべての読み取りは、スレッドセーフになります。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-329">All reads from the returned wrapper will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e3bf9-330"><paramref name="reader" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-330"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e3bf9-331">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e3bf9-331">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e3bf9-332">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e3bf9-332">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e3bf9-333">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e3bf9-333">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3bf9-334">このメンバーの詳細については、「<see cref="M:System.IDisposable.Dispose" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-334">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="e3bf9-335">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-335">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e3bf9-336">これは、<xref:System.IO.TextReader> のインスタンスが <xref:System.IDisposable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e3bf9-336">It can be used only when the <xref:System.IO.TextReader> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
