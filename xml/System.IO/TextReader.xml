<Type Name="TextReader" FullName="System.IO.TextReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2f79a742483a86c96360b1aba43d917aabe91d4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39910911" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextReader : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextReader extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReader abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f2725-101">一連の文字を読み取ることができるリーダーを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2725-101">Represents a reader that can read a sequential series of characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-102"><xref:System.IO.TextReader> 抽象基本クラスは、<xref:System.IO.StreamReader>と<xref:System.IO.StringReader>、それぞれストリームと、文字列から文字を読み取るします。</span><span class="sxs-lookup"><span data-stu-id="f2725-102"><xref:System.IO.TextReader> is the abstract base class of <xref:System.IO.StreamReader> and <xref:System.IO.StringReader>, which read characters from streams and strings, respectively.</span></span> <span data-ttu-id="f2725-103">これらの派生クラスを使用して、指定された範囲の文字を読み取るためのテキスト ファイルを開くか、既存のストリームに基づくリーダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2725-103">Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f2725-104">この型は、<xref:System.IDisposable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="f2725-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="f2725-105">この型から派生した任意の型を使用してが完了したらを直接または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2725-105">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="f2725-106">型の直接 dispose を呼び出してその<xref:System.IO.TextReader.Dispose%2A>メソッド、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="f2725-106">To dispose of the type directly, call its <xref:System.IO.TextReader.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="f2725-107">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(で C# の場合) または`Using`(Visual Basic) でします。</span><span class="sxs-lookup"><span data-stu-id="f2725-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="f2725-108">詳細については、Dispose と"を使用して、オブジェクトを実装する IDisposable"」セクションを参照してください、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="f2725-108">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2725-109"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-109">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-110">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-110">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-111"><xref:System.IO.StreamReader>クラスから派生<xref:System.IO.TextReader>し、ストリームから読み取るのために、メンバーの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="f2725-111">The <xref:System.IO.StreamReader> class derives from <xref:System.IO.TextReader> and provides implementations of the members for reading from a stream.</span></span> <span data-ttu-id="f2725-112">次の例を使用して、ファイル内のすべての文字を読み取る方法を示しています、<xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-112">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f2725-113">インスタンスに文字を追加する前に、文字、数字、または空白文字に各文字かどうかを確認します、<xref:System.Text.StringBuilder>クラス。</span><span class="sxs-lookup"><span data-stu-id="f2725-113">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="f2725-114">
        <para>派生クラスで実装する必要があります最小、<see cref="M:System.IO.TextReader.Peek" />と<see cref="M:System.IO.TextReader.Read" />メソッドの便利なインスタンスを<see cref="T:System.IO.TextReader" />します。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="f2725-114">
          <para>A derived class must minimally implement the <see cref="M:System.IO.TextReader.Peek" /> and <see cref="M:System.IO.TextReader.Read" /> methods to make a useful instance of <see cref="T:System.IO.TextReader" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IO.StringReader" />
    <altmember cref="T:System.IO.StreamReader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-115">
            <see cref="T:System.IO.TextReader" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-115">Initializes a new instance of the <see cref="T:System.IO.TextReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-116">派生クラスのこのコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="f2725-116">Use this constructor for derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-117">
            <see cref="T:System.IO.TextReader" /> を閉じ、その <see langword="TextReader" /> と関連付けられているシステム リソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-117">Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the <see langword="TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-118">この実装の`Close`呼び出し、<xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType>メソッドを渡します、`true`値。</span><span class="sxs-lookup"><span data-stu-id="f2725-118">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="f2725-119">フラッシュされたテキスト リーダーを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない`Close`します。</span><span class="sxs-lookup"><span data-stu-id="f2725-119">Flushing the text reader will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="f2725-120">設定、<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>プロパティを`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="f2725-120">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="f2725-121">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="f2725-121">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="f2725-122">このシナリオでは、UTF8、UTF7、エンコーダーは、隣接する文字または文字列を受信した後にのみ特定の文字をエンコードすることができますに影響します。</span><span class="sxs-lookup"><span data-stu-id="f2725-122">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2725-123">派生クラスでオーバーライドしないでください、<xref:System.IO.TextReader.Close%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-123">In derived classes, do not override the <xref:System.IO.TextReader.Close%2A> method.</span></span> <span data-ttu-id="f2725-124">代わりに、オーバーライド、<xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType>リソースを解放するためのコードを追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-124">Instead, override the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2725-125">この <see cref="T:System.IO.TextReader" /> オブジェクトによって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-125">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-126">この <see cref="T:System.IO.TextReader" /> オブジェクトによって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-126">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-127"><xref:System.IO.TextReader.Dispose%2A> を使い終わったら <xref:System.IO.TextReader> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f2725-127">Call <xref:System.IO.TextReader.Dispose%2A> when you are finished using the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="f2725-128"><xref:System.IO.TextReader.Dispose%2A> メソッドによって、<xref:System.IO.TextReader> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="f2725-128">The <xref:System.IO.TextReader.Dispose%2A> method leaves the <xref:System.IO.TextReader> in an unusable state.</span></span> <span data-ttu-id="f2725-129">呼び出した後<xref:System.IO.TextReader.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.IO.TextReader>ガベージ コレクターがメモリをクリアできるようにする、<xref:System.IO.TextReader>によって占有されていた。</span><span class="sxs-lookup"><span data-stu-id="f2725-129">After calling <xref:System.IO.TextReader.Dispose%2A>, you must release all references to the <xref:System.IO.TextReader> so the garbage collector can reclaim the memory that the <xref:System.IO.TextReader> was occupying.</span></span>  
  
 <span data-ttu-id="f2725-130">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2725-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2725-131"><xref:System.IO.TextReader.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.IO.TextReader> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f2725-131">Always call <xref:System.IO.TextReader.Dispose%2A> before you release your last reference to the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="f2725-132">そうしないと、ガベージ コレクターが <xref:System.IO.TextReader> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="f2725-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextReader> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f2725-133">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-133">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2725-134">
            <see cref="T:System.IO.TextReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-134">Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-135">このメソッドは、パブリック`Dispose`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-135">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f2725-136">既定では、このメソッドを指定します、`disposing`パラメーターとして`true`します。</span><span class="sxs-lookup"><span data-stu-id="f2725-136">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="f2725-137"><xref:System.Object.Finalize%2A> 指定します、`disposing`パラメーターとして`false`します。</span><span class="sxs-lookup"><span data-stu-id="f2725-137"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="f2725-138">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.TextReader> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="f2725-138">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextReader> references.</span></span> <span data-ttu-id="f2725-139">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f2725-139">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f2725-140">
            <para>
              <see langword="Dispose" /> 他のオブジェクトで何度も呼び出せます。このメソッドをオーバーライドする場合は、への以前の呼び出しで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。このメソッドを実装する方法の詳細については、次を参照してください。 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。詳細については<see cref="M:System.IDisposable.Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-140">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextReader ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextReader" Usage="System.IO.TextReader.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2725-141">読み取り対象のデータを <see langword="TextReader" /> に提供しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-141">Provides a <see langword="TextReader" /> with no data to read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-142">読み取り、<xref:System.IO.TextReader.Null>テキスト リーダーは、ストリームの末尾からの読み取りと似ています。</span><span class="sxs-lookup"><span data-stu-id="f2725-142">Reading from the <xref:System.IO.TextReader.Null> text reader is similar to reading from the end of a stream:</span></span>  
  
-   <span data-ttu-id="f2725-143"><xref:System.IO.TextReader.Read%2A>と<xref:System.IO.TextReader.Peek%2A>メソッドは-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="f2725-143">The <xref:System.IO.TextReader.Read%2A> and <xref:System.IO.TextReader.Peek%2A> methods return -1.</span></span>  
  
-   <span data-ttu-id="f2725-144"><xref:System.IO.TextReader.ReadBlock%2A>メソッドは 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="f2725-144">The <xref:System.IO.TextReader.ReadBlock%2A> method returns zero.</span></span>  
  
-   <span data-ttu-id="f2725-145"><xref:System.IO.TextReader.ReadLine%2A>メソッドを返します。`null`します。</span><span class="sxs-lookup"><span data-stu-id="f2725-145">The <xref:System.IO.TextReader.ReadLine%2A> method returns `null`.</span></span>  
  
-   <span data-ttu-id="f2725-146"><xref:System.IO.TextReader.ReadToEnd%2A>メソッドは空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="f2725-146">The <xref:System.IO.TextReader.ReadToEnd%2A> method returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; int&#xA;override this.Peek : unit -&gt; int" Usage="textReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-147">リーダーや文字の読み取り元の状態を変更せずに、次の文字を読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-147">Reads the next character without changing the state of the reader or the character source.</span>
          </span>
          <span data-ttu-id="f2725-148">リーダーから実際に文字を読み取らずに次の文字を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-148">Returns the next available character without actually reading it from the reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-149">読み取り対象の次の文字を表す整数。使用できる文字がないか、リーダーがシークをサポートしていない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-149">An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-150"><xref:System.IO.TextReader.Peek%2A>メソッドは、ファイル、または別のエラーの終了が発生したかどうかを確認するには整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="f2725-150">The <xref:System.IO.TextReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="f2725-151">これにより、ユーザーをまず確認かどうか、返される値は-1 にキャストする前に、<xref:System.Char>型。</span><span class="sxs-lookup"><span data-stu-id="f2725-151">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="f2725-152">現在の位置、<xref:System.IO.TextReader>この操作では変更されません。</span><span class="sxs-lookup"><span data-stu-id="f2725-152">The current position of the <xref:System.IO.TextReader> is not changed by this operation.</span></span> <span data-ttu-id="f2725-153">可能な文字がない場合、返される値は-1 です。</span><span class="sxs-lookup"><span data-stu-id="f2725-153">The returned value is -1 if no more characters are available.</span></span> <span data-ttu-id="f2725-154">既定の実装では、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="f2725-154">The default implementation returns -1.</span></span>  
  
 <span data-ttu-id="f2725-155"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-155">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-156">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-156">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-157">使用する例については、<xref:System.IO.TextReader.Peek%2A>メソッドを参照してください、<xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-157">For an example of using the <xref:System.IO.TextReader.Peek%2A> method, see the <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-158">
            <see cref="T:System.IO.TextReader" /> が閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-158">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f2725-159">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-159">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Peek" />
        <altmember cref="M:System.IO.StringReader.Peek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2725-160">テキスト リーダーからデータを読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-160">Reads data from the text reader.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="textReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-161">テキスト リーダーから次の文字を読み取り、1 文字分だけ文字位置を進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-161">Reads the next character from the text reader and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-162">テキスト リーダーからの次の文字。それ以上読み取り可能な文字がない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-162">The next character from the text reader, or -1 if no more characters are available.</span>
          </span>
          <span data-ttu-id="f2725-163">既定の実装では、-1 が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-163">The default implementation returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-164"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-164">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-165">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-165">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-166">使用する例については、<xref:System.IO.TextReader.Read%2A>メソッドを参照してください、<xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-166">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-167">
            <see cref="T:System.IO.TextReader" /> が閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-167">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f2725-168">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-168">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Read" />
        <altmember cref="M:System.IO.StringReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="textReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="textReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f2725-169">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-169">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f2725-170">書き込みを開始する <c>buffer</c> 内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-170">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f2725-171">読み取り対象の最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-171">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="f2725-172">指定された文字数をバッファーに読み取る前にリーダーの末尾に到達した場合、メソッドは制御を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-172">If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2725-173">指定した最大文字数を現在のリーダーから読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-173">Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-174">読み取られた文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-174">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="f2725-175">この数値は、リーダー内に使用できるデータがあるかどうかによって異なりますが、<paramref name="count" /> 以下の数値になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-175">The number will be less than or equal to <paramref name="count" />, depending on whether the data is available within the reader.</span>
          </span>
          <span data-ttu-id="f2725-176">読み取り対象の文字がない場合にこのメソッドを呼び出すと、0 (ゼロ) が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-176">This method returns 0 (zero) if it is called when no more characters are left to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-177">いずれかの後にこのメソッドが戻る`count`文字が読み取られたまたはファイルの末尾に到達します。</span><span class="sxs-lookup"><span data-stu-id="f2725-177">This method returns after either `count` characters are read or the end of the file is reached.</span></span> <span data-ttu-id="f2725-178"><xref:System.IO.TextReader.ReadBlock%2A> このメソッドのブロックのバージョンです。</span><span class="sxs-lookup"><span data-stu-id="f2725-178"><xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of this method.</span></span>  
  
 <span data-ttu-id="f2725-179"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-179">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-180">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-180">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-181">使用する例については、<xref:System.IO.TextReader.Read%2A>メソッドを参照してください、<xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-181">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f2725-182">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-182">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f2725-183">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-183">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f2725-184">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-184">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-185">
            <see cref="T:System.IO.TextReader" /> が閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-185">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f2725-186">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-186">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f2725-187">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-187">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f2725-188">書き込みを開始する <c>buffer</c> 内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-188">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f2725-189">読み取り対象の最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-189">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="f2725-190">指定された文字数をバッファーに読み取る前にテキストの末尾に到達した場合は、現在のメソッドが返ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-190">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2725-191">指定した最大文字数を現在のテキスト リーダーから非同期に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-191">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-192">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-192">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="f2725-193">
            <paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-193">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="f2725-194">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、テキストの末尾に到達した場合は 0 になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-194">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-195">タスクの完了後にいずれかで指定された文字の数、`count`パラメーターが読み取り専用またはファイルの末尾に到達します。</span><span class="sxs-lookup"><span data-stu-id="f2725-195">The task completes after either the number of characters specified by the `count` parameter are read or the end of the file is reached.</span></span>  
  
 <span data-ttu-id="f2725-196"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-196">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-197">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-197">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-198">使用する例については、<xref:System.IO.TextReader.ReadAsync%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-198">For an example of using the <xref:System.IO.TextReader.ReadAsync%2A> method, see the <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f2725-199">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-199">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f2725-200">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-200">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f2725-201">
            <paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-201">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-202">テキスト リーダーは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-202">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f2725-203">リーダーは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-203">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : Span&lt;char&gt; -&gt; int&#xA;override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="textReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : char[] * int * int -&gt; int&#xA;override this.ReadBlock : char[] * int * int -&gt; int" Usage="textReader.ReadBlock (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f2725-204">このメソッドが返るときに、このパラメーターには、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-204">When this method returns, this parameter contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> -1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f2725-205">書き込みを開始する <c>buffer</c> 内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-205">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f2725-206">読み取り対象の最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-206">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2725-207">指定した最大文字数を現在のテキスト リーダーから読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-207">Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-208">読み取られた文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-208">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="f2725-209">この数値は、すべての入力文字が読み取られたかどうかによって異なりますが、<paramref name="count" /> 以下の数値になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-209">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-210">基になるテキスト リーダーの位置が読み込まれた文字数による高度な`buffer`します。</span><span class="sxs-lookup"><span data-stu-id="f2725-210">The position of the underlying text reader is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="f2725-211">メソッドは、いずれかまでブロック`count`文字が読み取られた、またはすべての文字が読み取られました。</span><span class="sxs-lookup"><span data-stu-id="f2725-211">The method blocks until either `count` characters are read, or all characters have been read.</span></span> <span data-ttu-id="f2725-212">これは、ブロックしているバージョンの<xref:System.IO.TextReader.Read%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2725-212">This is a blocking version of <xref:System.IO.TextReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f2725-213">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-213">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f2725-214">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-214">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f2725-215">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-215">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-216">
            <see cref="T:System.IO.TextReader" /> が閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-216">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f2725-217">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-217">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f2725-218">このメソッドが返るときに、指定した文字配列のうち、<c>index</c> から (<c>index</c> + <c>count</c> - 1) までの値を、現在のソースから読み取られた文字に置き換えられたものが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-218">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f2725-219">書き込みを開始する <c>buffer</c> 内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-219">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f2725-220">読み取り対象の最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-220">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="f2725-221">指定された文字数をバッファーに読み取る前にテキストの末尾に到達した場合は、現在のメソッドが返ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-221">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2725-222">指定した最大文字数を現在のテキスト リーダーから非同期に読み取り、バッファーの指定したインデックス位置にそのデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-222">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-223">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-223">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="f2725-224">
            <paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-224">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="f2725-225">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、テキストの末尾に到達した場合は 0 になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-225">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-226">タスクが完了しないまでで指定された文字の数、`count`パラメーターは読み取り専用、またはテキストの末尾に達しています。</span><span class="sxs-lookup"><span data-stu-id="f2725-226">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the text has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f2725-227">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-227">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f2725-228">
            <paramref name="index" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-228">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f2725-229">
            <paramref name="index" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-229">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-230">テキスト リーダーは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-230">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f2725-231">リーダーは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-231">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="textReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-232">テキスト リーダーから 1 行分の文字を読み取り、そのデータを文字列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-232">Reads a line of characters from the text reader and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-233">リーダーの次の行。またはすべての文字が読み取られた場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-233">The next line from the reader, or <see langword="null" /> if all characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-234">行は、一連の文字の後にキャリッジ リターン (0x000d)、ライン フィード (0x000a) として定義されます、キャリッジ リターン、ライン フィード、その後に<xref:System.Environment.NewLine%2A?displayProperty=nameWithType>、またはストリームの終わりのマーカー。</span><span class="sxs-lookup"><span data-stu-id="f2725-234">A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, or the end-of-stream marker.</span></span> <span data-ttu-id="f2725-235">返される文字列は、終端のキャリッジ リターン、改行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f2725-235">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="f2725-236">戻り値は`null`入力ストリームの末尾に達している場合。</span><span class="sxs-lookup"><span data-stu-id="f2725-236">The return value is `null` if the end of the input stream has been reached.</span></span>  
  
 <span data-ttu-id="f2725-237">メソッドがスローした場合、<xref:System.OutOfMemoryException>例外を基になるリーダーの位置<xref:System.IO.Stream>の文字を読み取るには、メソッドができましたが、内部に既に読み取られた文字数では、高度な<xref:System.IO.TextReader.ReadLine%2A>バッファーには破棄されます。</span><span class="sxs-lookup"><span data-stu-id="f2725-237">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="f2725-238">既に読み取られた文字は復旧できませんし、再初期化によってのみアクセスできるストリーム内のリーダーの位置を変更できないため、<xref:System.IO.TextReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2725-238">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader> object.</span></span> <span data-ttu-id="f2725-239">ストリーム内の初期位置が不明またはストリームがシークを基になるをサポートしていない場合<xref:System.IO.Stream>も再初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2725-239">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="f2725-240">このような状況を回避し、使用する必要があります、堅牢なコードを生成、<xref:System.IO.TextReader.Read%2A>メソッドとストア、読み取りが事前に割り当てられるバッファーの文字します。</span><span class="sxs-lookup"><span data-stu-id="f2725-240">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="f2725-241"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-241">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-242">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-242">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-243">使用する例については、<xref:System.IO.TextReader.ReadLine%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-243">For an example of using the <xref:System.IO.TextReader.ReadLine%2A> method, see the <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f2725-244">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-244">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="f2725-245">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-245">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-246">
            <see cref="T:System.IO.TextReader" /> が閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-246">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f2725-247">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-247">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadLine" />
        <altmember cref="M:System.IO.StringReader.ReadLine" />
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-248">1 行分の文字を非同期的に読み取り、そのデータを文字列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-248">Reads a line of characters asynchronously and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-249">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-249">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="f2725-250">
            <paramref name="TResult" /> パラメーターの値には、テキスト リーダーの次の行が含まれます。または、すべての文字が読み取られた場合は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-250">The value of the <paramref name="TResult" /> parameter contains the next line from the text reader, or is <see langword="null" /> if all of the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-251"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-251">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-252">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-252">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-253">使用する例については、<xref:System.IO.TextReader.ReadLineAsync%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-253">For an example of using the <xref:System.IO.TextReader.ReadLineAsync%2A> method, see the <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f2725-254">場合、現在<xref:System.IO.TextReader>によって返される標準入力ストリームを表す、<xref:System.Console.In%2A?displayProperty=nameWithType>プロパティ、<xref:System.IO.TextReader.ReadLineAsync%2A>メソッドを非同期的にではなく同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="f2725-254">If the current <xref:System.IO.TextReader> represents the standard input stream returned by the <xref:System.Console.In%2A?displayProperty=nameWithType> property, the <xref:System.IO.TextReader.ReadLineAsync%2A> method executes synchronously rather than asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f2725-255">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-255">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-256">テキスト リーダーは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-256">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f2725-257">リーダーは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-257">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadLineAsync" />
        <altmember cref="M:System.IO.StringReader.ReadLineAsync" />
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public virtual string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEnd : unit -&gt; string&#xA;override this.ReadToEnd : unit -&gt; string" Usage="textReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-258">テキスト リーダーの現在位置から末尾まですべての文字を読み取り、1 つの文字列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-258">Reads all characters from the current position to the end of the text reader and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-259">テキスト リーダーの現在位置から末尾までのすべての文字を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-259">A string that contains all characters from the current position to the end of the text reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-260">メソッドがスローした場合、<xref:System.OutOfMemoryException>例外を基になるリーダーの位置<xref:System.IO.Stream>の文字を読み取るには、メソッドができましたが、内部に既に読み取られた文字数では、高度な<xref:System.IO.TextReader.ReadToEnd%2A>バッファーには破棄されます。</span><span class="sxs-lookup"><span data-stu-id="f2725-260">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="f2725-261">既に読み取られた文字は復旧できませんし、再初期化によってのみアクセスできるストリーム内のリーダーの位置を変更できないため、<xref:System.IO.TextReader>します。</span><span class="sxs-lookup"><span data-stu-id="f2725-261">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="f2725-262">ストリーム内の初期位置が不明またはストリームがシークを基になるをサポートしていない場合<xref:System.IO.Stream>も再初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2725-262">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="f2725-263">このような状況を回避し、使用する必要があります、堅牢なコードを生成、<xref:System.IO.TextReader.Read%2A>メソッドとストア、読み取りが事前に割り当てられるバッファーの文字します。</span><span class="sxs-lookup"><span data-stu-id="f2725-263">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="f2725-264"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-264">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-265">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-265">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-266">使用する例については、<xref:System.IO.TextReader.ReadToEnd%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-266">For an example of using the <xref:System.IO.TextReader.ReadToEnd%2A> method, see the <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f2725-267">I/O エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-267">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-268">
            <see cref="T:System.IO.TextReader" /> が閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-268">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="f2725-269">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-269">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f2725-270">次の行の文字数が、<see cref="F:System.Int32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-270">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEnd" />
        <altmember cref="M:System.IO.StringReader.ReadToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2725-271">テキスト リーダーの現在位置から末尾まですべての文字を非同期的に読み取り、1 つの文字列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-271">Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-272">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-272">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="f2725-273">
            <paramref name="TResult" /> パラメーターの値には、現在位置からテキスト リーダーの末尾までの文字から成る文字列が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-273">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the text reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-274"><xref:System.IO.TextReader> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="f2725-274">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="f2725-275">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="f2725-275">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="f2725-276">使用する例については、<xref:System.IO.TextReader.ReadToEndAsync%2A>メソッドを参照してください、<xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2725-276">For an example of using the <xref:System.IO.TextReader.ReadToEndAsync%2A> method, see the <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f2725-277">文字数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-277">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f2725-278">テキスト リーダーは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-278">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f2725-279">リーダーは、前の読み取り操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-279">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEndAsync" />
        <altmember cref="M:System.IO.StringReader.ReadToEndAsync" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader Synchronized (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader Synchronized(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Synchronized(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (reader As TextReader) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextReader ^ Synchronized(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextReader -&gt; System.IO.TextReader" Usage="System.IO.TextReader.Synchronized reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f2725-280">同期する <see langword="TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-280">The <see langword="TextReader" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2725-281">指定した <see langword="TextReader" /> をラップするスレッド セーフ ラッパーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-281">Creates a thread-safe wrapper around the specified <see langword="TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2725-282">スレッド セーフな <see cref="T:System.IO.TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-282">A thread-safe <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2725-283">現在のメソッドは、指定されたをラップするクラスを返します<xref:System.IO.TextReader>インスタンス化し、複数のスレッドによってへのアクセスを制限します。</span><span class="sxs-lookup"><span data-stu-id="f2725-283">The current method returns a class that wraps around the specified <xref:System.IO.TextReader> instance and restricts access to it by multiple threads.</span></span> <span data-ttu-id="f2725-284">返されるラッパーからのすべての読み取りは、スレッド セーフになります。</span><span class="sxs-lookup"><span data-stu-id="f2725-284">All reads from the returned wrapper will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f2725-285">
            <paramref name="reader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2725-285">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>