<Type Name="BufferedStream" FullName="System.IO.BufferedStream">
  <TypeSignature Language="C#" Value="public sealed class BufferedStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.BufferedStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedStream sealed : System::IO::Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ad789-101">他のストリームの読み取りおよび書き込み操作に対してバッファリング レイヤーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ad789-101">Adds a buffering layer to read and write operations on another stream.</span></span> <span data-ttu-id="ad789-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="ad789-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-103">バッファーは、データをキャッシュに使用されたメモリ内のバイトのブロックです。</span><span class="sxs-lookup"><span data-stu-id="ad789-103">A buffer is a block of bytes in memory used to cache data, thereby reducing the number of calls to the operating system.</span></span> <span data-ttu-id="ad789-104">バッファーを使用して、読み取りを改善する、書き込みのパフォーマンス。</span><span class="sxs-lookup"><span data-stu-id="ad789-104">Buffers improve read and write performance.</span></span> <span data-ttu-id="ad789-105">バッファーは、いずれかの読み取りまたは書き込みは同時に使用できます。</span><span class="sxs-lookup"><span data-stu-id="ad789-105">A buffer can be used for either reading or writing, but never both simultaneously.</span></span> <span data-ttu-id="ad789-106"><xref:System.IO.BufferedStream.Read%2A>と<xref:System.IO.BufferedStream.Write%2A>メソッドの`BufferedStream`バッファーを自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="ad789-106">The <xref:System.IO.BufferedStream.Read%2A> and <xref:System.IO.BufferedStream.Write%2A> methods of `BufferedStream` automatically maintain the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ad789-107">この型は、<xref:System.IDisposable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="ad789-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="ad789-108">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad789-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="ad789-109">型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="ad789-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="ad789-110">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="ad789-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="ad789-111">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="ad789-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="ad789-112">`BufferedStream` ストリームの特定の種類を構成できます。</span><span class="sxs-lookup"><span data-stu-id="ad789-112">`BufferedStream` can be composed around certain types of streams.</span></span> <span data-ttu-id="ad789-113">読み取りや、基になるデータ ソースまたはリポジトリにバイトを書き込むの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="ad789-113">It provides implementations for reading and writing bytes to an underlying data source or repository.</span></span> <span data-ttu-id="ad789-114">使用して<xref:System.IO.BinaryReader>と<xref:System.IO.BinaryWriter>の他のデータ型の読み書きにします。</span><span class="sxs-lookup"><span data-stu-id="ad789-114">Use <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> for reading and writing other data types.</span></span> <span data-ttu-id="ad789-115">`BufferedStream` バッファーが、バッファーが不要な場合、入力呼び出し力に低下するを防ぐために設計されています。</span><span class="sxs-lookup"><span data-stu-id="ad789-115">`BufferedStream` is designed to prevent the buffer from slowing down input and output when the buffer is not needed.</span></span> <span data-ttu-id="ad789-116">場合は、常に読み書き可能な内部バッファー サイズよりも大きいサイズの場合、`BufferedStream`でも内部バッファーを割り当てる可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="ad789-116">If you always read and write for sizes greater than the internal buffer size, then `BufferedStream` might not even allocate the internal buffer.</span></span> <span data-ttu-id="ad789-117">`BufferedStream` またバッファーの読み取りと共有バッファーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad789-117">`BufferedStream` also buffers reads and writes in a shared buffer.</span></span> <span data-ttu-id="ad789-118">ほとんどの場合、一連の読み取りまたは書き込みを行うがそれらの 2 つの別のほとんどと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ad789-118">It is assumed that you will almost always be doing a series of reads or writes, but rarely alternate between the two of them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad789-119">次のコード例を使用する方法を示して、`BufferedStream`経由でクラス、`NetworkStream`クラスを特定の I/O 操作のパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="ad789-119">The following code examples show how to use the `BufferedStream` class over the `NetworkStream` class to increase the performance of certain I/O operations.</span></span> <span data-ttu-id="ad789-120">クライアントを開始する前に、リモート コンピューター上のサーバーを起動します。</span><span class="sxs-lookup"><span data-stu-id="ad789-120">Start the server on a remote computer before starting the client.</span></span> <span data-ttu-id="ad789-121">クライアントを開始するときに、リモート コンピューターの名前、コマンドライン引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="ad789-121">Specify the remote computer name as a command-line argument when starting the client.</span></span> <span data-ttu-id="ad789-122">異なる、`dataArraySize`と`streamBufferSize`パフォーマンスへの影響を表示する定数。</span><span class="sxs-lookup"><span data-stu-id="ad789-122">Vary the `dataArraySize` and `streamBufferSize` constants to view their effect on performance.</span></span>  
  
 <span data-ttu-id="ad789-123">最初の例は、クライアントで実行されるコードを示し、2 番目の例は、サーバー上で実行されるコードを示しています。</span><span class="sxs-lookup"><span data-stu-id="ad789-123">The first example shows the code that runs on the client, and the second example shows the code that runs on the server.</span></span>  
  
 <span data-ttu-id="ad789-124">**クライアントで実行される例 1: コード**</span><span class="sxs-lookup"><span data-stu-id="ad789-124">**Example 1: Code that runs on the client**</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#1)]
 [!code-csharp[System.IO.BufferedStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#1)]
 [!code-vb[System.IO.BufferedStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#1)]  
  
 <span data-ttu-id="ad789-125">**サーバーで実行される例 2: コード**</span><span class="sxs-lookup"><span data-stu-id="ad789-125">**Example 2: Code that runs on the server**</span></span>  
  
 [!code-cpp[System.IO.BufferedStream2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream2/CPP/server.cpp#1)]
 [!code-csharp[System.IO.BufferedStream2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream2/CS/server.cs#1)]
 [!code-vb[System.IO.BufferedStream2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream2/VB/server.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad789-126"><see cref="T:System.IO.BufferedStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ad789-126">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedStream(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="ad789-127">現在のストリーム。</span><span class="sxs-lookup"><span data-stu-id="ad789-127">The current stream.</span></span></param>
        <summary><span data-ttu-id="ad789-128"><see cref="T:System.IO.BufferedStream" /> クラスの新しいインスタンスを、4,096 バイトの既定のバッファー サイズを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="ad789-128">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class with a default buffer size of 4096 bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-129">共有の読み取り/書き込みバッファーは最初に割り当てられている、`BufferedStream`オブジェクトはこのコンス トラクターで初期化します。</span><span class="sxs-lookup"><span data-stu-id="ad789-129">A shared read/write buffer is allocated the first time a `BufferedStream` object is initialized with this constructor.</span></span> <span data-ttu-id="ad789-130">すべての読み取りと書き込みがより大きいか等しい場合、共有バッファーは使用されません`bufferSize`です。</span><span class="sxs-lookup"><span data-stu-id="ad789-130">The shared buffer is not used if all reads and writes are greater than or equal to `bufferSize`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-131"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-131"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedStream (System.IO.Stream stream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedStream(System::IO::Stream ^ stream, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="ad789-132">現在のストリーム。</span><span class="sxs-lookup"><span data-stu-id="ad789-132">The current stream.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="ad789-133">バイト単位のバッファー サイズ。</span><span class="sxs-lookup"><span data-stu-id="ad789-133">The buffer size in bytes.</span></span></param>
        <summary><span data-ttu-id="ad789-134"><see cref="T:System.IO.BufferedStream" /> クラスの新しいインスタンスを、指定したバッファー サイズを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="ad789-134">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class with the specified buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-135">共有の読み取り/書き込みバッファーは最初に割り当てられている、`BufferedStream`オブジェクトはこのコンス トラクターで初期化します。</span><span class="sxs-lookup"><span data-stu-id="ad789-135">A shared read/write buffer is allocated the first time a `BufferedStream` object is initialized with this constructor.</span></span> <span data-ttu-id="ad789-136">すべての読み取りと書き込みがより大きいか等しい場合、共有バッファーは使用されません`bufferSize`です。</span><span class="sxs-lookup"><span data-stu-id="ad789-136">The shared buffer is not used if all reads and writes are greater than or equal to `bufferSize`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad789-137">このコード例に示されている例の一部である、<xref:System.IO.BufferedStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ad789-137">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#2)]
 [!code-csharp[System.IO.BufferedStream1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#2)]
 [!code-vb[System.IO.BufferedStream1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-138"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-138"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ad789-139"><paramref name="bufferSize" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-139"><paramref name="bufferSize" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ad789-140">データを読み込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="ad789-140">The buffer to read the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="ad789-141">ストリームから読み込んだデータの書き込み開始位置を示す <c>buffer</c> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="ad789-141">The byte offset in <c>buffer</c> at which to begin writing data read from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad789-142">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="ad789-142">The maximum number of bytes to read.</span></span></param>
        <param name="callback"><span data-ttu-id="ad789-143">読み取り完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="ad789-143">An optional asynchronous callback, to be called when the read is complete.</span></span></param>
        <param name="state"><span data-ttu-id="ad789-144">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ad789-144">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="ad789-145">非同期の読み込み動作を開始します。</span><span class="sxs-lookup"><span data-stu-id="ad789-145">Begins an asynchronous read operation.</span></span> <span data-ttu-id="ad789-146">(代わりに、<see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="ad789-146">(Consider using <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="ad789-147">まだ保留中である可能性がある非同期読み取りを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ad789-147">An object that represents the asynchronous read, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-148">.NET Framework 4 以前のバージョンはなどのメソッドを使用する必要がある<xref:System.IO.Stream.BeginRead%2A>と<xref:System.IO.Stream.EndRead%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="ad789-148">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="ad789-149">これらのメソッドでは使用できます、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするただし、新しい非同期メソッドなど<xref:System.IO.BufferedStream.ReadAsync%2A>、 <xref:System.IO.BufferedStream.WriteAsync%2A>、および<xref:System.IO.BufferedStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="ad789-149">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="ad789-150"><xref:System.IO.BufferedStream.EndWrite%2A> 呼び出しごとに 1 回だけ呼び出す必要があります<xref:System.IO.BufferedStream.BeginRead%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ad789-150"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once for every call to <xref:System.IO.BufferedStream.BeginRead%2A>.</span></span> <span data-ttu-id="ad789-151">別の読み取りを開始する前に読み取りプロセスを終了に失敗すると、デッドロックなど、望ましくない動作可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ad789-151">Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ad789-152">使用して、<xref:System.IO.BufferedStream.CanRead%2A>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ad789-152">Use the <xref:System.IO.BufferedStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="ad789-153"><xref:System.IO.BufferedStream.EndRead%2A> これを呼び出す必要があります<xref:System.IAsyncResult>に読み取られたバイト数を確認します。</span><span class="sxs-lookup"><span data-stu-id="ad789-153"><xref:System.IO.BufferedStream.EndRead%2A> must be called with this <xref:System.IAsyncResult> to find out how many bytes were read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-154"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-154"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ad789-155"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-155"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-156">ストリームの末尾を越える位置で非同期読み取りを実行しようとしました。</span><span class="sxs-lookup"><span data-stu-id="ad789-156">Attempted an asynchronous read past the end of the stream.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad789-157">バッファーの長さから <paramref name="offset" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="ad789-157">The buffer length minus <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-158">現在のストリームは、読み取り操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="ad789-158">The current stream does not support the read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ad789-159">現在のストリームに書き込むデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="ad789-159">The buffer containing data to write to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ad789-160">現在のストリームへのバイトのコピーを開始する位置を示す <c>buffer</c> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="ad789-160">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad789-161">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="ad789-161">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="ad789-162">非同期の書き込み操作が完了したときに呼び出されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="ad789-162">The method to be called when the asynchronous write operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="ad789-163">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ad789-163">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="ad789-164">非同期の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="ad789-164">Begins an asynchronous write operation.</span></span> <span data-ttu-id="ad789-165">(代わりに、<see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="ad789-165">(Consider using <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="ad789-166">まだ保留中である可能性がある非同期書き込みを参照するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ad789-166">An object that references the asynchronous write which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-167">.NET Framework 4 以前のバージョンはなどのメソッドを使用する必要がある<xref:System.IO.Stream.BeginWrite%2A>と<xref:System.IO.Stream.EndWrite%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="ad789-167">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="ad789-168">これらのメソッドでは使用できます、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするただし、新しい非同期メソッドなど<xref:System.IO.BufferedStream.ReadAsync%2A>、 <xref:System.IO.BufferedStream.WriteAsync%2A>、および<xref:System.IO.BufferedStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="ad789-168">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="ad789-169"><xref:System.IO.BufferedStream.EndWrite%2A> 1 回だけ呼び出す必要がありますすべて<xref:System.IAsyncResult>から<xref:System.IO.BufferedStream.BeginWrite%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ad789-169"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.BufferedStream.BeginWrite%2A>.</span></span> <span data-ttu-id="ad789-170"><xref:System.IO.BufferedStream.EndWrite%2A> I/O 操作が完了するまでブロックされます。</span><span class="sxs-lookup"><span data-stu-id="ad789-170"><xref:System.IO.BufferedStream.EndWrite%2A> will block until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ad789-171"><paramref name="buffer" /> の長さから <paramref name="offset" /> を引いた長さが <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="ad789-171"><paramref name="buffer" /> length minus <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-172"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-172"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ad789-173"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-173"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-174">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ad789-174">The stream does not support writing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad789-175">現在のストリームが読み取りをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad789-175">Gets a value indicating whether the current stream supports reading.</span></span></summary>
        <value>
          <span data-ttu-id="ad789-176">ストリームが読み取りをサポートしている場合は <see langword="true" />。ストリームが閉じているか、書き込み専用アクセスで開かれた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad789-176"><see langword="true" /> if the stream supports reading; <see langword="false" /> if the stream is closed or was opened with write-only access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-177">派生したクラスの場合<xref:System.IO.Stream>読み取りをサポートしませんへの呼び出し、 <xref:System.IO.BufferedStream.Read%2A>、 <xref:System.IO.BufferedStream.ReadByte%2A>、 <xref:System.IO.Stream.BeginRead%2A>、 <xref:System.IO.Stream.EndRead%2A>、および`Peek`のメソッド<xref:System.IO.StreamReader>、 <xref:System.IO.StringReader>、および<xref:System.IO.TextReader>スロー、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="ad789-177">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.BufferedStream.Read%2A>, <xref:System.IO.BufferedStream.ReadByte%2A>, <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.EndRead%2A>, and the `Peek` methods of <xref:System.IO.StreamReader>, <xref:System.IO.StringReader>, and <xref:System.IO.TextReader> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="ad789-178">ストリームが閉じられたかどうか、このプロパティを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="ad789-178">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad789-179">このコード例に示されている例の一部である、<xref:System.IO.BufferedStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ad789-179">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#5)]
 [!code-csharp[System.IO.BufferedStream1#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#5)]
 [!code-vb[System.IO.BufferedStream1#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad789-180">現在のストリームがシークをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad789-180">Gets a value indicating whether the current stream supports seeking.</span></span></summary>
        <value>
          <span data-ttu-id="ad789-181">ストリームがシークをサポートしている場合は <see langword="true" />。ストリームが閉じているか、ストリームがパイプまたはコンソールへの出力などのオペレーティング システム ハンドルから構築された場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad789-181"><see langword="true" /> if the stream supports seeking; <see langword="false" /> if the stream is closed or if the stream was constructed from an operating system handle such as a pipe or output to the console.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-182">派生したクラス場合<xref:System.IO.Stream>への呼び出しをシークをサポートしていない<xref:System.IO.BufferedStream.Length%2A>、 <xref:System.IO.BufferedStream.SetLength%2A>、 <xref:System.IO.BufferedStream.Position%2A>、および<xref:System.IO.BufferedStream.Seek%2A>スロー、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="ad789-182">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.BufferedStream.Length%2A>, <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Position%2A>, and <xref:System.IO.BufferedStream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="ad789-183">ストリームが閉じられたかどうか、このプロパティを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="ad789-183">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad789-184">このコード例に示されている例の一部である、<xref:System.IO.BufferedStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ad789-184">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#3)]
 [!code-csharp[System.IO.BufferedStream1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#3)]
 [!code-vb[System.IO.BufferedStream1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.SetLength(System.Int64)" />
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad789-185">現在のストリームが書き込みをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad789-185">Gets a value indicating whether the current stream supports writing.</span></span></summary>
        <value>
          <span data-ttu-id="ad789-186">ストリームが書き込みをサポートしている場合は <see langword="true" />。ストリームが閉じているか、読み取り専用アクセスで開かれた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad789-186"><see langword="true" /> if the stream supports writing; <see langword="false" /> if the stream is closed or was opened with read-only access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-187">派生したクラス場合<xref:System.IO.Stream>への呼び出しの書き込みをサポートしていません<xref:System.IO.BufferedStream.SetLength%2A>、 <xref:System.IO.BufferedStream.Write%2A>、または<xref:System.IO.BufferedStream.WriteByte%2A>をスロー、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="ad789-187">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Write%2A>, or <xref:System.IO.BufferedStream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="ad789-188">ストリームが閉じられたかどうか、このプロパティを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="ad789-188">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad789-189">このコード例に示されている例の一部である、<xref:System.IO.BufferedStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ad789-189">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#4)]
 [!code-csharp[System.IO.BufferedStream1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#4)]
 [!code-vb[System.IO.BufferedStream1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ad789-190">待機する保留状態の非同期要求への参照。</span><span class="sxs-lookup"><span data-stu-id="ad789-190">The reference to the pending asynchronous request to wait for.</span></span></param>
        <summary><span data-ttu-id="ad789-191">保留中の非同期の読み取り操作が完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="ad789-191">Waits for the pending asynchronous read operation to complete.</span></span> <span data-ttu-id="ad789-192">(代わりに、<see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="ad789-192">(Consider using <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="ad789-193">ストリームから読み取ったバイト数 (0 ～要求したバイト数の数値)。</span><span class="sxs-lookup"><span data-stu-id="ad789-193">The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</span></span> <span data-ttu-id="ad789-194">ストリームの末尾では 0 が返されるだけです、それ以外の場合は、少なくとも 1 バイトが読み込み可能になるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="ad789-194">Streams only return 0 only at the end of the stream, otherwise, they should block until at least 1 byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-195">.NET Framework 4 以前のバージョンはなどのメソッドを使用する必要がある<xref:System.IO.Stream.BeginRead%2A>と<xref:System.IO.Stream.EndRead%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="ad789-195">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="ad789-196">これらのメソッドでは使用できます、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするただし、新しい非同期メソッドなど<xref:System.IO.BufferedStream.ReadAsync%2A>、 <xref:System.IO.BufferedStream.WriteAsync%2A>、および<xref:System.IO.BufferedStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="ad789-196">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="ad789-197"><xref:System.IO.BufferedStream.EndRead%2A> これを呼び出す必要があります<xref:System.IAsyncResult>に読み取られたバイト数を確認します。</span><span class="sxs-lookup"><span data-stu-id="ad789-197"><xref:System.IO.BufferedStream.EndRead%2A> must be called with this <xref:System.IAsyncResult> to find out how many bytes were read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-198"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-198"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad789-199">この <see cref="T:System.IAsyncResult" /> オブジェクトは、このクラスで <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出すことによって作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="ad789-199">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ad789-200">保留中の非同期の要求。</span><span class="sxs-lookup"><span data-stu-id="ad789-200">The pending asynchronous request.</span></span></param>
        <summary><span data-ttu-id="ad789-201">非同期の書き込み操作を終了し、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="ad789-201">Ends an asynchronous write operation and blocks until the I/O operation is complete.</span></span> <span data-ttu-id="ad789-202">(代わりに、<see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="ad789-202">(Consider using <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-203">.NET Framework 4 以前のバージョンはなどのメソッドを使用する必要がある<xref:System.IO.Stream.BeginWrite%2A>と<xref:System.IO.Stream.EndWrite%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="ad789-203">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="ad789-204">これらのメソッドでは使用できます、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするただし、新しい非同期メソッドなど<xref:System.IO.BufferedStream.ReadAsync%2A>、 <xref:System.IO.BufferedStream.WriteAsync%2A>、および<xref:System.IO.BufferedStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="ad789-204">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="ad789-205"><xref:System.IO.BufferedStream.EndWrite%2A> 呼び出しごとに 1 回だけ呼び出す必要があります<xref:System.IO.BufferedStream.BeginRead%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ad789-205"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once for every call to <xref:System.IO.BufferedStream.BeginRead%2A>.</span></span> <span data-ttu-id="ad789-206">開始する前に読み取りプロセスを終了する別の読み取り操作できますと、デッドロックまたは他の望ましくない動作します。</span><span class="sxs-lookup"><span data-stu-id="ad789-206">Failing to end a read process before beginning another read operation can cause deadlock or other undesirable behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-207"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-207"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad789-208">この <see cref="T:System.IAsyncResult" /> オブジェクトは、このクラスで <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出すことによって作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="ad789-208">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad789-209">このストリームに対応するすべてのバッファーをクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad789-209">Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-210">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません`Flush`または<xref:System.IO.Stream.Close%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ad789-210">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.Stream.Close%2A>.</span></span>  
  
 <span data-ttu-id="ad789-211">使用する場合、<xref:System.IO.BufferedStream.%23ctor%2A>コンス トラクターを作成中にバッファー サイズを指定するため、`BufferedStream`オブジェクト、バッファー サイズに達したときに、コンテンツをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="ad789-211">If you use the <xref:System.IO.BufferedStream.%23ctor%2A> constructor, thus specifying the buffer size while creating the `BufferedStream` object, the content is flushed when it reaches the buffer size.</span></span> <span data-ttu-id="ad789-212">たとえばなどのコード`BufferedStream bs = new BufferedStream(bs, 5)`バッファー サイズが 5 のバイト数に達すると、コンテンツが消去されます。</span><span class="sxs-lookup"><span data-stu-id="ad789-212">For example, code such as `BufferedStream bs = new BufferedStream(bs, 5)` will flush the content when the buffer size reaches 5 bytes.</span></span>  
  
 <span data-ttu-id="ad789-213">すべての読み取りと書き込みメソッドの`BufferedStream`を呼び出す必要はありませんので、バッファーを自動的に維持`Flush`読み取りと書き込みの前後に切り替えるときにします。</span><span class="sxs-lookup"><span data-stu-id="ad789-213">All the read and write methods of `BufferedStream` automatically maintain the buffer, so there is no need to invoke `Flush` when switching back and forth between reading and writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad789-214">このコード例に示されている例の一部である、<xref:System.IO.BufferedStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ad789-214">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#6)]
 [!code-csharp[System.IO.BufferedStream1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#6)]
 [!code-vb[System.IO.BufferedStream1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-215">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="ad789-215">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-216">データ ソースまたはリポジトリが開いていません。</span><span class="sxs-lookup"><span data-stu-id="ad789-216">The data source or repository is not open.</span></span></exception>
        <altmember cref="M:System.IO.Stream.Close" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="ad789-217">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="ad789-217">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="ad789-218">ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="ad789-218">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="ad789-219">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="ad789-219">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-220">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="ad789-220">The stream has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad789-221">ストリームの長さ (バイト単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad789-221">Gets the stream length in bytes.</span></span></summary>
        <value><span data-ttu-id="ad789-222">バイト単位のストリーム長。</span><span class="sxs-lookup"><span data-stu-id="ad789-222">The stream length in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-223">基になるストリームが <see langword="null" /> であるか、閉じています。</span><span class="sxs-lookup"><span data-stu-id="ad789-223">The underlying stream is <see langword="null" /> or closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-224">このストリームはシークをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="ad789-224">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-225">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ad789-225">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad789-226">現在のストリーム内の位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="ad789-226">Gets the position within the current stream.</span></span></summary>
        <value><span data-ttu-id="ad789-227">現在のストリーム内の位置。</span><span class="sxs-lookup"><span data-stu-id="ad789-227">The position within the current stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-228">`get`アクセサーを呼び出す<xref:System.IO.BufferedStream.Seek%2A>を基になるストリーム内の現在位置を取得し、バッファー内の現在の位置に従って、この値を調整します。</span><span class="sxs-lookup"><span data-stu-id="ad789-228">The `get` accessor invokes <xref:System.IO.BufferedStream.Seek%2A> to obtain the current position within the underlying stream and then adjusts this value according to the current position within the buffer.</span></span>  
  
 <span data-ttu-id="ad789-229">`set`アクセサーは、以前に、基になるストリーム バッファーに書き込まれたデータをコピーしが呼び出され、<xref:System.IO.BufferedStream.Seek%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ad789-229">The `set` accessor copies any data previously written to the buffer to the underlying stream, and then invokes <xref:System.IO.BufferedStream.Seek%2A>.</span></span>  
  
 <span data-ttu-id="ad789-230">ストリームの長さを超えた位置へのシークはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ad789-230">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad789-231"><see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /> に渡される値が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-231">The value passed to <see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-232">ストリームが閉じられているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ad789-232">An I/O error occurs, such as the stream being closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-233">このストリームはシークをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="ad789-233">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-234">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ad789-234">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="P:System.IO.BufferedStream.CanSeek" />
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (array As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ad789-235">バイトをコピーするバッファー。</span><span class="sxs-lookup"><span data-stu-id="ad789-235">The buffer to which bytes are to be copied.</span></span></param>
        <param name="offset"><span data-ttu-id="ad789-236">バイトの読み取りを開始するバッファーのバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="ad789-236">The byte offset in the buffer at which to begin reading bytes.</span></span></param>
        <param name="count"><span data-ttu-id="ad789-237">読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="ad789-237">The number of bytes to be read.</span></span></param>
        <summary><span data-ttu-id="ad789-238">現在のバッファー ストリームから配列にバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="ad789-238">Copies bytes from the current buffered stream to an array.</span></span></summary>
        <returns><span data-ttu-id="ad789-239"><paramref name="array" /> に読み取る合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="ad789-239">The total number of bytes read into <paramref name="array" />.</span></span> <span data-ttu-id="ad789-240">要求しただけのバイト数を読み取れなかった場合、この値は要求したバイト数より小さくなります。データを読み取る前にストリームの末尾に到達した場合は 0 になります。</span><span class="sxs-lookup"><span data-stu-id="ad789-240">This can be less than the number of bytes requested if that many bytes are not currently available, or 0 if the end of the stream has been reached before any data can be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-241">`Read`ストリームの末尾に達した場合にのみ、メソッドは 0 に戻ります。</span><span class="sxs-lookup"><span data-stu-id="ad789-241">The `Read` method will return 0 only if the end of the stream is reached.</span></span> <span data-ttu-id="ad789-242">その他のすべてのケースで`Read`常に返す前に、ストリームから、少なくとも 1 バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ad789-242">In all other cases, `Read` always reads at least one byte from the stream before returning.</span></span> <span data-ttu-id="ad789-243">定義上、ストリームへの呼び出し時にデータがない場合`Read`、`Read`メソッド (自動的に、ストリームの末尾に到達) 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="ad789-243">By definition, if no data is available from the stream upon a call to `Read`, the `Read` method returns 0 (the end of the stream is reached automatically).</span></span> <span data-ttu-id="ad789-244">実装は、ストリームの末尾に達していない場合でも、要求されたより少ないバイト数を返すことです。</span><span class="sxs-lookup"><span data-stu-id="ad789-244">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="ad789-245">使用して<xref:System.IO.BinaryReader>プリミティブ データ型を読み取るためです。</span><span class="sxs-lookup"><span data-stu-id="ad789-245">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad789-246">このコード例に示されている例の一部である、<xref:System.IO.BufferedStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ad789-246">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#7)]
 [!code-csharp[System.IO.BufferedStream1#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#7)]
 [!code-vb[System.IO.BufferedStream1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad789-247"><paramref name="array" /> の長さから <paramref name="offset" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="ad789-247">Length of <paramref name="array" /> minus <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-248"><paramref name="array" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-248"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ad789-249"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-249"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-250">ストリームが開いていないか、<see langword="null" /> になっています。</span><span class="sxs-lookup"><span data-stu-id="ad789-250">The stream is not open or is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-251">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ad789-251">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-252">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ad789-252">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="P:System.IO.BufferedStream.CanRead" />
        <altmember cref="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ad789-253">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="ad789-253">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="ad789-254">ストリームからのデータの書き込み開始位置を示す <c>buffer</c> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="ad789-254">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad789-255">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="ad789-255">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ad789-256">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="ad789-256">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="ad789-257">現在のストリームからバイト シーケンスを非同期に読み取り、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="ad789-257">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="ad789-258">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="ad789-258">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="ad789-259"><paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ad789-259">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="ad789-260">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="ad789-260">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-261">インスタンスを作成することで、キャンセル トークンを作成することができます、<xref:System.Threading.CancellationTokenSource>クラスを渡して、<xref:System.Threading.CancellationTokenSource.Token%2A>プロパティとして、`cancellationToken`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ad789-261">You can create a cancellation token by creating an instance of the <xref:System.Threading.CancellationTokenSource> class and passing the <xref:System.Threading.CancellationTokenSource.Token%2A> property as the `cancellationToken` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-262"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-262"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ad789-263"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-263"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad789-264"><paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="ad789-264">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-265">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ad789-265">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-266">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="ad789-266">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad789-267">ストリームは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="ad789-267">The stream is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad789-268">基になるストリームからバイトを読み取り、<see langword="int" /> にキャストしたバイトを返すか、ストリームの末尾から読み取る場合は -1 を返します。</span><span class="sxs-lookup"><span data-stu-id="ad789-268">Reads a byte from the underlying stream and returns the byte cast to an <see langword="int" />, or returns -1 if reading from the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="ad789-269"><see langword="int" /> にキャストしたバイト。またはストリームの末尾から読み取る場合は -1。</span><span class="sxs-lookup"><span data-stu-id="ad789-269">The byte cast to an <see langword="int" />, or -1 if reading from the end of the stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-270">ストリームが閉じられているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ad789-270">An I/O error occurs, such as the stream being closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-271">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ad789-271">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-272">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ad789-272">Methods were called after the stream was closed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ad789-273">既定の実装<see langword="Stream" />新しいシングル バイト配列を作成し、呼び出して<see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-273">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="ad789-274">これは、正しい正式には、効率的なことはできません。</span><span class="sxs-lookup"><span data-stu-id="ad789-274">While this is formally correct, it is inefficient.</span></span> <span data-ttu-id="ad789-275">内部バッファーと共にストリームは、このメソッドをオーバーライドし、読み取りバッファーを直接呼び出しごとに余分な配列の割り当てを回避するバージョンをはるかに効率的に提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad789-275">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="ad789-276"><c>origin</c> からのバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="ad789-276">A byte offset relative to <c>origin</c>.</span></span></param>
        <param name="origin"><span data-ttu-id="ad789-277">新しい位置を取得するための参照ポイントを示す <see cref="T:System.IO.SeekOrigin" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="ad789-277">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point from which to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="ad789-278">現在のバッファー ストリーム内の位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="ad789-278">Sets the position within the current buffered stream.</span></span></summary>
        <returns><span data-ttu-id="ad789-279">現在のバッファー ストリーム内の新しい位置。</span><span class="sxs-lookup"><span data-stu-id="ad789-279">The new position within the current buffered stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-280">`offset`が負の値の場合は、`origin`で指定した位置から `offset` で指定したバイト数だけさかのぼった位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="ad789-280">If `offset` is negative, the new position will precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="ad789-281">場合`offset`が 0 の場合、新しい位置で指定した位置になります`origin`です。</span><span class="sxs-lookup"><span data-stu-id="ad789-281">If `offset` is 0, the new position will be the position specified by `origin`.</span></span> <span data-ttu-id="ad789-282">`offset`が正の値の場合は、`origin`で指定した位置から `offset` で指定したバイト数だけ進んだ位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="ad789-282">If `offset` is positive, the new position will follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="ad789-283">ときに、<xref:System.IO.BufferedStream>オブジェクトの基本ストリームは、<xref:System.IO.StreamReader>オブジェクトを呼び出し、<xref:System.IO.BufferedStream.Seek%2A>メソッドには、不要になったリーダー内の内部バッファーの位置を一致するようにストリームの位置可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ad789-283">When a <xref:System.IO.BufferedStream> object is the base stream for a <xref:System.IO.StreamReader> object, calling the <xref:System.IO.BufferedStream.Seek%2A> method can cause the position of the stream to no longer match the position of the internal buffer in the reader.</span></span> <span data-ttu-id="ad789-284">内部バッファーをリセットするには、呼び出し、<xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=nameWithType>メソッドです。 ただし、このメソッドは、パフォーマンスが低下し、どうしても必要な場合にのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad789-284">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=nameWithType> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="ad789-285">ストリームの長さを超えた位置へのシークはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ad789-285">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-286">ストリームが開いていないか、<see langword="null" /> になっています。</span><span class="sxs-lookup"><span data-stu-id="ad789-286">The stream is not open or is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-287">このストリームはシークをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="ad789-287">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-288">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ad789-288">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="T:System.IO.SeekOrigin" />
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad789-289">必要な現在のバッファー ストリーム長を示す整数 (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="ad789-289">An integer indicating the desired length of the current buffered stream in bytes.</span></span></param>
        <summary><span data-ttu-id="ad789-290">バッファー ストリーム長を設定します。</span><span class="sxs-lookup"><span data-stu-id="ad789-290">Sets the length of the buffered stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-291">バッファーは、基になるデータ ソースまたはリポジトリの長さを設定する前にフラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="ad789-291">The buffer is flushed before setting the length of the underlying data source or repository.</span></span> <span data-ttu-id="ad789-292">指定した値がバッファー済みストリームの現在の長さよりも小さい場合は、バッファー済みストリームは切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="ad789-292">If the specified value is less than the current length of the buffered stream, the buffered stream is truncated.</span></span> <span data-ttu-id="ad789-293">指定した値がバッファー済みストリームの現在の長さよりも大きい場合は、バッファー済みストリームを拡張します。</span><span class="sxs-lookup"><span data-stu-id="ad789-293">If the specified value is larger than the current length of the buffered stream, the buffered stream is expanded.</span></span> <span data-ttu-id="ad789-294">バッファー済みストリームを展開すると、古いと新しい長さのバッファー済みストリームの内容は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="ad789-294">If the buffered stream is expanded, the contents of the buffered stream between the old and the new lengths are not defined.</span></span>  
  
 <span data-ttu-id="ad789-295">`SetLength` 必要な場合は、バッファー内の書き込みをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="ad789-295">`SetLength` flushes any buffered writes if necessary.</span></span>  
  
 <span data-ttu-id="ad789-296">ストリームは書き込みとシークの両方をサポートする必要があります`SetLength`動作をします。</span><span class="sxs-lookup"><span data-stu-id="ad789-296">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ad789-297"><paramref name="value" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-297"><paramref name="value" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-298">ストリームが開いていないか、<see langword="null" /> になっています。</span><span class="sxs-lookup"><span data-stu-id="ad789-298">The stream is not open or is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-299">ストリームでは、書き込みとシークの両方は使用できません。</span><span class="sxs-lookup"><span data-stu-id="ad789-299">The stream does not support both writing and seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-300">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ad789-300">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream UnderlyingStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream UnderlyingStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.UnderlyingStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ UnderlyingStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (array As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ad789-301">現在のバッファー ストリームに対する <c>count</c> バイトのコピー元のバイト配列。</span><span class="sxs-lookup"><span data-stu-id="ad789-301">The byte array from which to copy <c>count</c> bytes to the current buffered stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ad789-302">現在のバッファー ストリームへのバイトのコピーを開始する位置のバッファーのオフセット。</span><span class="sxs-lookup"><span data-stu-id="ad789-302">The offset in the buffer at which to begin copying bytes to the current buffered stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad789-303">現在のバッファー ストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="ad789-303">The number of bytes to be written to the current buffered stream.</span></span></param>
        <summary><span data-ttu-id="ad789-304">バッファー ストリームにバイトをコピーし、書き込んだバイト数だけバッファー ストリーム内の現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="ad789-304">Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ad789-305">このコード例に示されている例の一部である、<xref:System.IO.BufferedStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ad789-305">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#6)]
 [!code-csharp[System.IO.BufferedStream1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#6)]
 [!code-vb[System.IO.BufferedStream1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad789-306"><paramref name="array" /> の長さから <paramref name="offset" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="ad789-306">Length of <paramref name="array" /> minus <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-307"><paramref name="array" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-307"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ad789-308"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-308"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad789-309">ストリームが閉じているか、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ad789-309">The stream is closed or <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-310">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ad789-310">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-311">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ad789-311">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="P:System.IO.BufferedStream.CanWrite" />
        <altmember cref="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ad789-312">データの書き込み元となるバッファー。</span><span class="sxs-lookup"><span data-stu-id="ad789-312">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="ad789-313">ストリームへのバイトのコピーを開始する位置を示す <c>buffer</c> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="ad789-313">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad789-314">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="ad789-314">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ad789-315">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="ad789-315">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="ad789-316">現在のストリームにバイト シーケンスを非同期に書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="ad789-316">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="ad789-317">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="ad789-317">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad789-318">インスタンスを作成することで、キャンセル トークンを作成することができます、<xref:System.Threading.CancellationTokenSource>クラスを渡して、<xref:System.Threading.CancellationTokenSource.Token%2A>プロパティとして、`cancellationToken`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ad789-318">You can create a cancellation token by creating an instance of the <xref:System.Threading.CancellationTokenSource> class and passing the <xref:System.Threading.CancellationTokenSource.Token%2A> property as the `cancellationToken` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-319"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-319"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ad789-320"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="ad789-320"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad789-321"><paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="ad789-321">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-322">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ad789-322">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-323">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="ad789-323">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad789-324">ストリームは、前の書き込み操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="ad789-324">The stream is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad789-325">ストリームに書き込むバイト。</span><span class="sxs-lookup"><span data-stu-id="ad789-325">A byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="ad789-326">バッファー ストリームの現在位置にバイトを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad789-326">Writes a byte to the current position in the buffered stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad789-327">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ad789-327">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad789-328"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ad789-328"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad789-329">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ad789-329">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>