<Type Name="BufferedStream" FullName="System.IO.BufferedStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="844e045e034922791bd6f5c66770ed7166f90a00" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52255082" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.BufferedStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedStream sealed : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type BufferedStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d165c-101">他のストリームの読み取りおよび書き込み操作に対しバッファリング層を追加します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d165c-101">Adds a buffering layer to read and write operations on another stream.</span>
      </span>
      <span data-ttu-id="d165c-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d165c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-103">バッファーは、データをキャッシュに使用するメモリ内のバイトのブロックです。</span><span class="sxs-lookup"><span data-stu-id="d165c-103">A buffer is a block of bytes in memory used to cache data, thereby reducing the number of calls to the operating system.</span></span> <span data-ttu-id="d165c-104">バッファーは読み取りを向上させ、書き込みのパフォーマンス。</span><span class="sxs-lookup"><span data-stu-id="d165c-104">Buffers improve read and write performance.</span></span> <span data-ttu-id="d165c-105">バッファーは、いずれかの読み取りまたは書き込みは同時に使用できます。</span><span class="sxs-lookup"><span data-stu-id="d165c-105">A buffer can be used for either reading or writing, but never both simultaneously.</span></span> <span data-ttu-id="d165c-106"><xref:System.IO.BufferedStream.Read%2A>と<xref:System.IO.BufferedStream.Write%2A>メソッドの`BufferedStream`自動的にバッファーを維持します。</span><span class="sxs-lookup"><span data-stu-id="d165c-106">The <xref:System.IO.BufferedStream.Read%2A> and <xref:System.IO.BufferedStream.Write%2A> methods of `BufferedStream` automatically maintain the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d165c-107">この型は、<xref:System.IDisposable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="d165c-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="d165c-108">型の使用が完了したら、直接的または間接的にそれを破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d165c-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="d165c-109">型の直接 dispose を呼び出してその<xref:System.IDisposable.Dispose%2A>メソッド、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="d165c-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="d165c-110">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(で C# の場合) または`Using`(Visual Basic) でします。</span><span class="sxs-lookup"><span data-stu-id="d165c-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="d165c-111">詳細については、"を使用して、オブジェクトを実装する IDisposable"のセクションを参照してください、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="d165c-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="d165c-112">`BufferedStream` ストリームの特定の種類を構成できます。</span><span class="sxs-lookup"><span data-stu-id="d165c-112">`BufferedStream` can be composed around certain types of streams.</span></span> <span data-ttu-id="d165c-113">読み取りとバイトを書き込み、基になるデータ ソースまたはリポジトリの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="d165c-113">It provides implementations for reading and writing bytes to an underlying data source or repository.</span></span> <span data-ttu-id="d165c-114">使用<xref:System.IO.BinaryReader>と<xref:System.IO.BinaryWriter>の読み取りと書き込みの他のデータ型。</span><span class="sxs-lookup"><span data-stu-id="d165c-114">Use <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> for reading and writing other data types.</span></span> <span data-ttu-id="d165c-115">`BufferedStream` バッファーのバッファーが必要ない場合に、入力と出力低下を防ぐために設計されています。</span><span class="sxs-lookup"><span data-stu-id="d165c-115">`BufferedStream` is designed to prevent the buffer from slowing down input and output when the buffer is not needed.</span></span> <span data-ttu-id="d165c-116">常に読み取りし、し、内部バッファーのサイズより大きいサイズの書き込みを実行する場合`BufferedStream`も内部バッファーを割り当てる可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="d165c-116">If you always read and write for sizes greater than the internal buffer size, then `BufferedStream` might not even allocate the internal buffer.</span></span> <span data-ttu-id="d165c-117">`BufferedStream` バッファーの読み取りと共有バッファーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d165c-117">`BufferedStream` also buffers reads and writes in a shared buffer.</span></span> <span data-ttu-id="d165c-118">一連の読み取りまたは書き込みを行う、ほぼ必ずがこれらの 2 つの別のほとんどと見なされます。</span><span class="sxs-lookup"><span data-stu-id="d165c-118">It is assumed that you will almost always be doing a series of reads or writes, but rarely alternate between the two of them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d165c-119">次のコード例を使用する方法を表示する、`BufferedStream`経由でクラス、`NetworkStream`クラスの特定の I/O 操作のパフォーマンスを向上させる。</span><span class="sxs-lookup"><span data-stu-id="d165c-119">The following code examples show how to use the `BufferedStream` class over the `NetworkStream` class to increase the performance of certain I/O operations.</span></span> <span data-ttu-id="d165c-120">リモート コンピューターにクライアントを開始する前に、サーバーを起動します。</span><span class="sxs-lookup"><span data-stu-id="d165c-120">Start the server on a remote computer before starting the client.</span></span> <span data-ttu-id="d165c-121">クライアントを開始するときに、コマンドライン引数として、リモート コンピューター名を指定します。</span><span class="sxs-lookup"><span data-stu-id="d165c-121">Specify the remote computer name as a command-line argument when starting the client.</span></span> <span data-ttu-id="d165c-122">異なる、`dataArraySize`と`streamBufferSize`パフォーマンスに対する影響度を表示するための定数。</span><span class="sxs-lookup"><span data-stu-id="d165c-122">Vary the `dataArraySize` and `streamBufferSize` constants to view their effect on performance.</span></span>  
  
 <span data-ttu-id="d165c-123">最初の例は、クライアントで実行されるコードと、2 番目の例は、サーバーで実行されるコードを示しています。</span><span class="sxs-lookup"><span data-stu-id="d165c-123">The first example shows the code that runs on the client, and the second example shows the code that runs on the server.</span></span>  
  
 <span data-ttu-id="d165c-124">**クライアントで実行される例 1: コード**</span><span class="sxs-lookup"><span data-stu-id="d165c-124">**Example 1: Code that runs on the client**</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#1)]
 [!code-csharp[System.IO.BufferedStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#1)]
 [!code-vb[System.IO.BufferedStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#1)]  
  
 <span data-ttu-id="d165c-125">**サーバーで実行される例 2: コード**</span><span class="sxs-lookup"><span data-stu-id="d165c-125">**Example 2: Code that runs on the server**</span></span>  
  
 [!code-cpp[System.IO.BufferedStream2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream2/CPP/server.cpp#1)]
 [!code-csharp[System.IO.BufferedStream2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream2/CS/server.cs#1)]
 [!code-vb[System.IO.BufferedStream2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream2/VB/server.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.Stream" />
    <related type="Article" href="~/docs/standard/io/index.md">
      <span data-ttu-id="d165c-126">ファイルおよびストリーム入出力</span>
      <span class="sxs-lookup">
        <span data-stu-id="d165c-126">File and Stream I/O</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
      <span data-ttu-id="d165c-127">方法 : ファイルからテキストを読み取る</span>
      <span class="sxs-lookup">
        <span data-stu-id="d165c-127">How to: Read Text from a File</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
      <span data-ttu-id="d165c-128">方法 : ファイルにテキストを書き込む</span>
      <span class="sxs-lookup">
        <span data-stu-id="d165c-128">How to: Write Text to a File</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d165c-129">
            <see cref="T:System.IO.BufferedStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-129">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.BufferedStream : System.IO.Stream -&gt; System.IO.BufferedStream" Usage="new System.IO.BufferedStream stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d165c-130">現在のストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-130">The current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-131">
            <see cref="T:System.IO.BufferedStream" /> クラスの新しいインスタンスを、4,096 バイトの既定のバッファー サイズを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-131">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class with a default buffer size of 4096 bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-132">共有の読み取り/書き込みバッファーは最初に割り当てられている、`BufferedStream`オブジェクトは、このコンス トラクターで初期化されます。</span><span class="sxs-lookup"><span data-stu-id="d165c-132">A shared read/write buffer is allocated the first time a `BufferedStream` object is initialized with this constructor.</span></span> <span data-ttu-id="d165c-133">すべての読み取りと書き込みがより大きいか等しい場合、共有バッファーは使用されません`bufferSize`します。</span><span class="sxs-lookup"><span data-stu-id="d165c-133">The shared buffer is not used if all reads and writes are greater than or equal to `bufferSize`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-134">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-134">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-135">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-135">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-136">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-136">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-137">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-137">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedStream (System.IO.Stream stream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedStream(System::IO::Stream ^ stream, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.BufferedStream : System.IO.Stream * int -&gt; System.IO.BufferedStream" Usage="new System.IO.BufferedStream (stream, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d165c-138">現在のストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-138">The current stream.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="d165c-139">バイト単位のバッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-139">The buffer size in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-140">
            <see cref="T:System.IO.BufferedStream" /> クラスの新しいインスタンスを、指定したバッファー サイズを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-140">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class with the specified buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-141">共有の読み取り/書き込みバッファーは最初に割り当てられている、`BufferedStream`オブジェクトは、このコンス トラクターで初期化されます。</span><span class="sxs-lookup"><span data-stu-id="d165c-141">A shared read/write buffer is allocated the first time a `BufferedStream` object is initialized with this constructor.</span></span> <span data-ttu-id="d165c-142">すべての読み取りと書き込みがより大きいか等しい場合、共有バッファーは使用されません`bufferSize`します。</span><span class="sxs-lookup"><span data-stu-id="d165c-142">The shared buffer is not used if all reads and writes are greater than or equal to `bufferSize`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d165c-143">このコード例が示されている例の一部、<xref:System.IO.BufferedStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d165c-143">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#2)]
 [!code-csharp[System.IO.BufferedStream1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#2)]
 [!code-vb[System.IO.BufferedStream1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-144">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-144">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-145">
            <paramref name="bufferSize" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-145">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-146">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-146">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-147">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-147">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-148">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-148">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="bufferedStream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d165c-149">データを読み込むバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-149">The buffer to read the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d165c-150">ストリームから読み込んだデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-150">The byte offset in <paramref name="buffer" /> at which to begin writing data read from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d165c-151">読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-151">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d165c-152">読み取り完了時に呼び出されるオプションの非同期コールバック。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-152">An optional asynchronous callback, to be called when the read is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d165c-153">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-153">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-154">非同期の読み込み動作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-154">Begins an asynchronous read operation.</span>
          </span>
          <span data-ttu-id="d165c-155">(代わりに、<see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-155">(Consider using <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-156">まだ保留中である可能性がある非同期読み込みを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-156">An object that represents the asynchronous read, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-157">.NET Framework 4 と以前のバージョンでは、メソッドを使用する必要がある<xref:System.IO.Stream.BeginRead%2A>と<xref:System.IO.Stream.EndRead%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="d165c-157">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="d165c-158">これらのメソッドはでまだ使用できる、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするために、新しい非同期メソッドなど<xref:System.IO.BufferedStream.ReadAsync%2A>、<xref:System.IO.BufferedStream.WriteAsync%2A>と<xref:System.IO.BufferedStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="d165c-158">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="d165c-159"><xref:System.IO.BufferedStream.EndWrite%2A> 呼び出しごとに 1 回だけ呼び出す必要があります<xref:System.IO.BufferedStream.BeginRead%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d165c-159"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once for every call to <xref:System.IO.BufferedStream.BeginRead%2A>.</span></span> <span data-ttu-id="d165c-160">別の読み取りを開始する前に読み取りのプロセスを終了に失敗すると、デッドロックなどの動作が望ましくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d165c-160">Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d165c-161">使用して、<xref:System.IO.BufferedStream.CanRead%2A>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d165c-161">Use the <xref:System.IO.BufferedStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="d165c-162"><xref:System.IO.BufferedStream.EndRead%2A> これを呼び出す必要があります<xref:System.IAsyncResult>読み取られたバイト数を確認します。</span><span class="sxs-lookup"><span data-stu-id="d165c-162"><xref:System.IO.BufferedStream.EndRead%2A> must be called with this <xref:System.IAsyncResult> to find out how many bytes were read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-163">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-163">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-164">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-164">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-165">ストリームの末尾を越える位置で非同期の読み取りを実行しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-165">Attempted an asynchronous read past the end of the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d165c-166">バッファーの長さから <paramref name="offset" /> を引いた値が <paramref name="count" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-166">The buffer length minus <paramref name="offset" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-167">現在のストリームは、読み取り操作をサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-167">The current stream does not support the read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="bufferedStream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d165c-168">現在のストリームに書き込むデータを格納しているバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-168">The buffer containing data to write to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d165c-169">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-169">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d165c-170">書き込む最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-170">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d165c-171">非同期の書き込み操作が完了したときに呼び出されるメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-171">The method to be called when the asynchronous write operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d165c-172">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-172">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-173">非同期の書き込み操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-173">Begins an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="d165c-174">(代わりに、<see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-174">(Consider using <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-175">まだ保留中である可能性がある非同期書き込みを参照するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-175">An object that references the asynchronous write which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-176">.NET Framework 4 と以前のバージョンでは、メソッドを使用する必要がある<xref:System.IO.Stream.BeginWrite%2A>と<xref:System.IO.Stream.EndWrite%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="d165c-176">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="d165c-177">これらのメソッドはでまだ使用できる、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするために、新しい非同期メソッドなど<xref:System.IO.BufferedStream.ReadAsync%2A>、<xref:System.IO.BufferedStream.WriteAsync%2A>と<xref:System.IO.BufferedStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="d165c-177">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="d165c-178"><xref:System.IO.BufferedStream.EndWrite%2A> 1 回だけ呼び出す必要がありますすべて<xref:System.IAsyncResult>から<xref:System.IO.BufferedStream.BeginWrite%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d165c-178"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.BufferedStream.BeginWrite%2A>.</span></span> <span data-ttu-id="d165c-179"><xref:System.IO.BufferedStream.EndWrite%2A> I/O 操作が完了するまでブロックされます。</span><span class="sxs-lookup"><span data-stu-id="d165c-179"><xref:System.IO.BufferedStream.EndWrite%2A> will block until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d165c-180">
            <paramref name="buffer" /> から <paramref name="offset" /> を差し引いた値が <paramref name="count" /> より小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-180">
              <paramref name="buffer" /> length minus <paramref name="offset" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-181">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-181">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-182">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-182">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-183">ストリームは書き込みをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-183">The stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int" Usage="System.IO.BufferedStream.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.BufferedStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d165c-184">現在のストリームが読み取りをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-184">Gets a value indicating whether the current stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d165c-185">ストリームが読み取りをサポートしている場合は <see langword="true" />。ストリームが閉じているか、書き込み専用アクセスで開かれた場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-185">
              <see langword="true" /> if the stream supports reading; <see langword="false" /> if the stream is closed or was opened with write-only access.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-186">派生したクラスの場合<xref:System.IO.Stream>読み取りをサポートしませんへの呼び出し、 <xref:System.IO.BufferedStream.Read%2A>、 <xref:System.IO.BufferedStream.ReadByte%2A>、 <xref:System.IO.Stream.BeginRead%2A>、 <xref:System.IO.Stream.EndRead%2A>、および`Peek`メソッドの<xref:System.IO.StreamReader>、 <xref:System.IO.StringReader>、および<xref:System.IO.TextReader>をスロー<xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="d165c-186">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.BufferedStream.Read%2A>, <xref:System.IO.BufferedStream.ReadByte%2A>, <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.EndRead%2A>, and the `Peek` methods of <xref:System.IO.StreamReader>, <xref:System.IO.StringReader>, and <xref:System.IO.TextReader> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="d165c-187">このプロパティを返しますのかどうかは、ストリームが閉じている、`false`します。</span><span class="sxs-lookup"><span data-stu-id="d165c-187">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d165c-188">このコード例が示されている例の一部、<xref:System.IO.BufferedStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d165c-188">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#5)]
 [!code-csharp[System.IO.BufferedStream1#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#5)]
 [!code-vb[System.IO.BufferedStream1#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-189">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-189">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-190">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-190">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-191">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-191">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.BufferedStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d165c-192">現在のストリームがシークをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-192">Gets a value indicating whether the current stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d165c-193">ストリームがシークをサポートしている場合は <see langword="true" />。ストリームが閉じているか、ストリームがパイプまたはコンソールへの出力などのオペレーティング システム ハンドルから構築された場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-193">
              <see langword="true" /> if the stream supports seeking; <see langword="false" /> if the stream is closed or if the stream was constructed from an operating system handle such as a pipe or output to the console.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-194">派生したクラスの場合<xref:System.IO.Stream>への呼び出しをシークをサポートしていない<xref:System.IO.BufferedStream.Length%2A>、 <xref:System.IO.BufferedStream.SetLength%2A>、 <xref:System.IO.BufferedStream.Position%2A>、および<xref:System.IO.BufferedStream.Seek%2A>スロー、<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="d165c-194">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.BufferedStream.Length%2A>, <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Position%2A>, and <xref:System.IO.BufferedStream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="d165c-195">このプロパティを返しますのかどうかは、ストリームが閉じている、`false`します。</span><span class="sxs-lookup"><span data-stu-id="d165c-195">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d165c-196">このコード例が示されている例の一部、<xref:System.IO.BufferedStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d165c-196">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#3)]
 [!code-csharp[System.IO.BufferedStream1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#3)]
 [!code-vb[System.IO.BufferedStream1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.SetLength(System.Int64)" />
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-197">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-197">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-198">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-198">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-199">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-199">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.BufferedStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d165c-200">現在のストリームが書き込みをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-200">Gets a value indicating whether the current stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d165c-201">ストリームが書き込みをサポートしている場合は <see langword="true" />。ストリームが閉じているか、読み取り専用アクセスで開かれた場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-201">
              <see langword="true" /> if the stream supports writing; <see langword="false" /> if the stream is closed or was opened with read-only access.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-202">派生したクラスの場合<xref:System.IO.Stream>への呼び出しの書き込みをサポートしていません<xref:System.IO.BufferedStream.SetLength%2A>、 <xref:System.IO.BufferedStream.Write%2A>、または<xref:System.IO.BufferedStream.WriteByte%2A>スロー、<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="d165c-202">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Write%2A>, or <xref:System.IO.BufferedStream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="d165c-203">このプロパティを返しますのかどうかは、ストリームが閉じている、`false`します。</span><span class="sxs-lookup"><span data-stu-id="d165c-203">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d165c-204">このコード例が示されている例の一部、<xref:System.IO.BufferedStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d165c-204">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#4)]
 [!code-csharp[System.IO.BufferedStream1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#4)]
 [!code-vb[System.IO.BufferedStream1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-205">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-205">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-206">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-206">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-207">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-207">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="bufferedStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="bufferedStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="bufferedStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d165c-208">待機する保留状態の非同期要求への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-208">The reference to the pending asynchronous request to wait for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-209">保留中の非同期の読み取り操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-209">Waits for the pending asynchronous read operation to complete.</span>
          </span>
          <span data-ttu-id="d165c-210">(代わりに、<see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-210">(Consider using <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-211">ストリームから読み取ったバイト数 (0 ～要求したバイト数の数値)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-211">The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</span>
          </span>
          <span data-ttu-id="d165c-212">ストリームの末尾では 0 が返されるだけです。それ以外の場合は、少なくとも 1 バイトが読み込み可能になるまでブロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-212">Streams only return 0 only at the end of the stream, otherwise, they should block until at least 1 byte is available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-213">.NET Framework 4 と以前のバージョンでは、メソッドを使用する必要がある<xref:System.IO.Stream.BeginRead%2A>と<xref:System.IO.Stream.EndRead%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="d165c-213">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="d165c-214">これらのメソッドはでまだ使用できる、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするために、新しい非同期メソッドなど<xref:System.IO.BufferedStream.ReadAsync%2A>、<xref:System.IO.BufferedStream.WriteAsync%2A>と<xref:System.IO.BufferedStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="d165c-214">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="d165c-215"><xref:System.IO.BufferedStream.EndRead%2A> これを呼び出す必要があります<xref:System.IAsyncResult>読み取られたバイト数を確認します。</span><span class="sxs-lookup"><span data-stu-id="d165c-215"><xref:System.IO.BufferedStream.EndRead%2A> must be called with this <xref:System.IAsyncResult> to find out how many bytes were read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-216">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-216">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d165c-217">この <see cref="T:System.IAsyncResult" /> オブジェクトは、このクラスでの <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出して作成されたオブジェクトではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-217">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="bufferedStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d165c-218">保留中の非同期の要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-218">The pending asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-219">非同期の書き込み操作を終了し、I/O 操作が完了するまでブロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-219">Ends an asynchronous write operation and blocks until the I/O operation is complete.</span>
          </span>
          <span data-ttu-id="d165c-220">(代わりに、<see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-220">(Consider using <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-221">.NET Framework 4 と以前のバージョンでは、メソッドを使用する必要がある<xref:System.IO.Stream.BeginWrite%2A>と<xref:System.IO.Stream.EndWrite%2A>ファイルの非同期操作を実装します。</span><span class="sxs-lookup"><span data-stu-id="d165c-221">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="d165c-222">これらのメソッドはでまだ使用できる、[!INCLUDE[net_v45](~/includes/net-v45-md.md)]レガシ コードをサポートするために、新しい非同期メソッドなど<xref:System.IO.BufferedStream.ReadAsync%2A>、<xref:System.IO.BufferedStream.WriteAsync%2A>と<xref:System.IO.BufferedStream.FlushAsync%2A>、ヘルプ ファイルの非同期操作をより簡単に実装します。</span><span class="sxs-lookup"><span data-stu-id="d165c-222">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="d165c-223"><xref:System.IO.BufferedStream.EndWrite%2A> 呼び出しごとに 1 回だけ呼び出す必要があります<xref:System.IO.BufferedStream.BeginRead%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d165c-223"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once for every call to <xref:System.IO.BufferedStream.BeginRead%2A>.</span></span> <span data-ttu-id="d165c-224">開始する前に読み取りプロセスを終了するもう 1 つの読み取り操作可能性がありますデッドロックまたはその他の望ましくない動作します。</span><span class="sxs-lookup"><span data-stu-id="d165c-224">Failing to end a read process before beginning another read operation can cause deadlock or other undesirable behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-225">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-225">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d165c-226">この <see cref="T:System.IAsyncResult" /> オブジェクトは、このクラスでの <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出して作成されたオブジェクトではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-226">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="bufferedStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d165c-227">ストリームに対応するすべてのバッファーをクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-227">Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-228">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない`Flush`または<xref:System.IO.Stream.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d165c-228">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.Stream.Close%2A>.</span></span>  
  
 <span data-ttu-id="d165c-229">使用する場合、<xref:System.IO.BufferedStream.%23ctor%2A>コンス トラクターを作成するときにバッファー サイズを指定するため、`BufferedStream`オブジェクト、バッファーのサイズに達したときに、コンテンツがフラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="d165c-229">If you use the <xref:System.IO.BufferedStream.%23ctor%2A> constructor, thus specifying the buffer size while creating the `BufferedStream` object, the content is flushed when it reaches the buffer size.</span></span> <span data-ttu-id="d165c-230">たとえば、コードなど`BufferedStream bs = new BufferedStream(bs, 5)`5 バイトのバッファー サイズに達するにコンテンツをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="d165c-230">For example, code such as `BufferedStream bs = new BufferedStream(bs, 5)` will flush the content when the buffer size reaches 5 bytes.</span></span>  
  
 <span data-ttu-id="d165c-231">すべての読み取りと書き込みのメソッド`BufferedStream`を呼び出す必要はありませんので、バッファーを自動的に維持`Flush`読み取りと書き込みの間の切り替え時にします。</span><span class="sxs-lookup"><span data-stu-id="d165c-231">All the read and write methods of `BufferedStream` automatically maintain the buffer, so there is no need to invoke `Flush` when switching back and forth between reading and writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d165c-232">このコード例が示されている例の一部、<xref:System.IO.BufferedStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d165c-232">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#6)]
 [!code-csharp[System.IO.BufferedStream1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#6)]
 [!code-vb[System.IO.BufferedStream1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-233">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-233">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-234">データ ソースまたはリポジトリが開いていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-234">The data source or repository is not open.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.Close" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-235">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-235">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-236">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-236">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-237">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-237">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="bufferedStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="d165c-238">キャンセル要求を監視するためのトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-238">The token to monitor for cancellation requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-239">ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-239">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-240">非同期のフラッシュ操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-240">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-241">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-241">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.BufferedStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d165c-242">バイト単位のストリーム長を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-242">Gets the stream length in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d165c-243">バイト単位のストリーム長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-243">The stream length in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-244">基になるストリームが <see langword="null" /> であるか、閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-244">The underlying stream is <see langword="null" /> or closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-245">ストリームがシークをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-245">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-246">ストリームが閉じられた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-246">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-247">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-247">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-248">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-248">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-249">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-249">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.BufferedStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d165c-250">現在のストリーム内の位置を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-250">Gets the position within the current stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d165c-251">現在のストリーム内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-251">The position within the current stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-252">`get`アクセサーを呼び出す<xref:System.IO.BufferedStream.Seek%2A>を基になるストリーム内の現在位置を取得し、バッファー内の現在の位置に従って、この値を調整します。</span><span class="sxs-lookup"><span data-stu-id="d165c-252">The `get` accessor invokes <xref:System.IO.BufferedStream.Seek%2A> to obtain the current position within the underlying stream and then adjusts this value according to the current position within the buffer.</span></span>  
  
 <span data-ttu-id="d165c-253">`set`アクセサーは、以前に、基になるストリームにバッファーに書き込まれたデータをコピーして呼び出します<xref:System.IO.BufferedStream.Seek%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d165c-253">The `set` accessor copies any data previously written to the buffer to the underlying stream, and then invokes <xref:System.IO.BufferedStream.Seek%2A>.</span></span>  
  
 <span data-ttu-id="d165c-254">ストリームの長さを超える任意の場所にシークがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="d165c-254">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-255">
            <see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /> に渡される値が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-255">The value passed to <see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-256">I/O エラーが発生しました。たとえば、ストリームが終了されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-256">An I/O error occurs, such as the stream being closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-257">ストリームがシークをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-257">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-258">ストリームが閉じられた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-258">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.BufferedStream.CanSeek" />
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-259">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-259">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-260">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-260">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-261">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-261">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (array As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="bufferedStream.Read (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="d165c-262">バイトをコピーするバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-262">The buffer to which bytes are to be copied.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d165c-263">バイトの読み取りを開始するバッファーのバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-263">The byte offset in the buffer at which to begin reading bytes.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d165c-264">読み取るバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-264">The number of bytes to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-265">現在のバッファー ストリームから配列にバイトをコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-265">Copies bytes from the current buffered stream to an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-266">
            <paramref name="array" /> に読み取る合計バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-266">The total number of bytes read into <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="d165c-267">要求しただけのバイト数を読み込むことができなかった場合、この値は要求したバイト数より小さくなります。データを読み取る前にストリームの末尾に到達した場合は 0 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-267">This can be less than the number of bytes requested if that many bytes are not currently available, or 0 if the end of the stream has been reached before any data can be read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-268">`Read`ストリームの末尾に達した場合にのみ、メソッドは 0 に戻ります。</span><span class="sxs-lookup"><span data-stu-id="d165c-268">The `Read` method will return 0 only if the end of the stream is reached.</span></span> <span data-ttu-id="d165c-269">その他のすべてのケースで`Read`常に少なくとも 1 バイトを返す前に、ストリームから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="d165c-269">In all other cases, `Read` always reads at least one byte from the stream before returning.</span></span> <span data-ttu-id="d165c-270">定義上、ストリームへの呼び出し時にデータがない場合`Read`、`Read`メソッド (自動的にストリームの末尾に到達) 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="d165c-270">By definition, if no data is available from the stream upon a call to `Read`, the `Read` method returns 0 (the end of the stream is reached automatically).</span></span> <span data-ttu-id="d165c-271">実装は自由に、ストリームの末尾に達していない場合でも、要求されたより少ないバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="d165c-271">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="d165c-272">使用<xref:System.IO.BinaryReader>プリミティブ データ型を読み取るためです。</span><span class="sxs-lookup"><span data-stu-id="d165c-272">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d165c-273">このコード例が示されている例の一部、<xref:System.IO.BufferedStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d165c-273">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#7)]
 [!code-csharp[System.IO.BufferedStream1#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#7)]
 [!code-vb[System.IO.BufferedStream1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d165c-274">
            <paramref name="array" /> 長から <paramref name="offset" /> を引いた値が <paramref name="count" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-274">Length of <paramref name="array" /> minus <paramref name="offset" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-275">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-275">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-276">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-276">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-277">ストリームが開いていないか、<see langword="null" /> になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-277">The stream is not open or is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-278">ストリームは読み取りをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-278">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-279">ストリームが閉じられた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-279">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="P:System.IO.BufferedStream.CanRead" />
        <altmember cref="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-280">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-280">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-281">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-281">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-282">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-282">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="bufferedStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d165c-283">データを書き込むバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-283">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d165c-284">ストリームからのデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-284">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d165c-285">読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-285">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="d165c-286">キャンセル要求を監視するためのトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-286">The token to monitor for cancellation requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-287">現在のストリームからバイト シーケンスを非同期に読み取り、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-287">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-288">非同期の読み取り操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-288">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="d165c-289">
            <paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-289">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="d165c-290">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-290">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-291">インスタンスを作成して、キャンセル トークンを作成することができます、<xref:System.Threading.CancellationTokenSource>クラスを渡して、<xref:System.Threading.CancellationTokenSource.Token%2A>プロパティとして、`cancellationToken`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d165c-291">You can create a cancellation token by creating an instance of the <xref:System.Threading.CancellationTokenSource> class and passing the <xref:System.Threading.CancellationTokenSource.Token%2A> property as the `cancellationToken` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-292">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-292">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-293">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-293">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d165c-294">
            <paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-294">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-295">ストリームは読み取りをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-295">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-296">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-296">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d165c-297">ストリームは現在、前の読み取り操作で使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-297">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="bufferedStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d165c-298">基になるストリームからバイトを読み取り、<see langword="int" /> にキャストしたバイトを返すか、ストリームの末尾から読み取る場合は -1 を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-298">Reads a byte from the underlying stream and returns the byte cast to an <see langword="int" />, or returns -1 if reading from the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-299">
            <see langword="int" /> にキャストしたバイト。またはストリームの末尾から読み取る場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-299">The byte cast to an <see langword="int" />, or -1 if reading from the end of the stream.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-300">I/O エラーが発生しました。たとえば、ストリームが終了されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-300">An I/O error occurs, such as the stream being closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-301">ストリームは読み取りをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-301">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-302">ストリームが閉じられた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-302">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d165c-303">既定の実装で<see langword="Stream" />新しい 1 バイトの配列を作成し、呼び出して<see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d165c-303">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="d165c-304">これは正式には正しいが、効率的です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d165c-304">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="d165c-305">内部バッファーを備えた任意のストリームは、このメソッドをオーバーライドし、バッファーを直接読み込む呼び出しごとに余分な配列の割り当てを回避するはるかに効率的バージョンを提供する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d165c-305">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-306">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-306">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-307">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-307">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-308">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-308">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="bufferedStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="d165c-309">
            <paramref name="origin" /> からのバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-309">A byte offset relative to <paramref name="origin" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="d165c-310">新しい位置を取得するための参照ポイントを示す <see cref="T:System.IO.SeekOrigin" /> 型の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-310">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point from which to obtain the new position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-311">現在のバッファー ストリーム内の位置を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-311">Sets the position within the current buffered stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-312">現在のバッファー ストリーム内の新しい位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-312">The new position within the current buffered stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-313">`offset`が負の値の場合は、`origin`で指定した位置から `offset` で指定したバイト数だけさかのぼった位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="d165c-313">If `offset` is negative, the new position will precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="d165c-314">場合`offset`が 0 の場合、新しい位置で指定した位置になります`origin`します。</span><span class="sxs-lookup"><span data-stu-id="d165c-314">If `offset` is 0, the new position will be the position specified by `origin`.</span></span> <span data-ttu-id="d165c-315">`offset`が正の値の場合は、`origin`で指定した位置から `offset` で指定したバイト数だけ進んだ位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="d165c-315">If `offset` is positive, the new position will follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="d165c-316">ときに、<xref:System.IO.BufferedStream>オブジェクトは、基本ストリームの<xref:System.IO.StreamReader>オブジェクトを呼び出す、<xref:System.IO.BufferedStream.Seek%2A>メソッドが一致しなくなった、リーダー内の内部バッファーの位置をストリームの位置が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="d165c-316">When a <xref:System.IO.BufferedStream> object is the base stream for a <xref:System.IO.StreamReader> object, calling the <xref:System.IO.BufferedStream.Seek%2A> method can cause the position of the stream to no longer match the position of the internal buffer in the reader.</span></span> <span data-ttu-id="d165c-317">内部バッファーをリセットするには、呼び出し、<xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=nameWithType>メソッドです。 ただし、このメソッドはパフォーマンスが低下し、どうしても必要な場合にのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d165c-317">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=nameWithType> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="d165c-318">ストリームの長さを超える任意の場所にシークがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="d165c-318">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-319">ストリームが開いていないか、<see langword="null" /> になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-319">The stream is not open or is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-320">ストリームがシークをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-320">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-321">ストリームが閉じられた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-321">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.SeekOrigin" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-322">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-322">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-323">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-323">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-324">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-324">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="bufferedStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d165c-325">必要な現在のバッファー ストリーム長を示す整数 (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-325">An integer indicating the desired length of the current buffered stream in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-326">バッファー ストリーム長を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-326">Sets the length of the buffered stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-327">基になるデータ ソースまたはリポジトリの長さを設定する前に、バッファーがフラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="d165c-327">The buffer is flushed before setting the length of the underlying data source or repository.</span></span> <span data-ttu-id="d165c-328">指定した値が現在のバッファー ストリームの長さよりも小さい場合は、バッファー済みストリームは切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="d165c-328">If the specified value is less than the current length of the buffered stream, the buffered stream is truncated.</span></span> <span data-ttu-id="d165c-329">指定した値がバッファー済みストリームの現在の長さより大きい場合は、バッファー済みストリームが展開されます。</span><span class="sxs-lookup"><span data-stu-id="d165c-329">If the specified value is larger than the current length of the buffered stream, the buffered stream is expanded.</span></span> <span data-ttu-id="d165c-330">バッファー済みストリームを展開すると、古いバージョンと新しい長さのバッファー済みストリームの内容は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="d165c-330">If the buffered stream is expanded, the contents of the buffered stream between the old and the new lengths are not defined.</span></span>  
  
 <span data-ttu-id="d165c-331">`SetLength` 必要な場合は、バッファー内の書き込みをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="d165c-331">`SetLength` flushes any buffered writes if necessary.</span></span>  
  
 <span data-ttu-id="d165c-332">ストリームが書き込みとシークの両方をサポートする必要があります`SetLength`させる。</span><span class="sxs-lookup"><span data-stu-id="d165c-332">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-333">
            <paramref name="value" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-333">
              <paramref name="value" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-334">ストリームが開いていないか、<see langword="null" /> になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-334">The stream is not open or is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-335">ストリームが書き込みもシークもサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-335">The stream does not support both writing and seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-336">ストリームが閉じられた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-336">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-337">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-337">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-338">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-338">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-339">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-339">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream UnderlyingStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream UnderlyingStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.UnderlyingStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ UnderlyingStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingStream : System.IO.Stream" Usage="System.IO.BufferedStream.UnderlyingStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (array As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="bufferedStream.Write (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="d165c-340">現在のバッファー ストリームに対する <paramref name="count" /> バイトのコピー元のバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-340">The byte array from which to copy <paramref name="count" /> bytes to the current buffered stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d165c-341">現在のバッファー ストリームへのバイトのコピーを開始する位置のバッファーのオフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-341">The offset in the buffer at which to begin copying bytes to the current buffered stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d165c-342">現在のバッファー ストリームに書き込むバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-342">The number of bytes to be written to the current buffered stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-343">バッファー ストリームにバイトをコピーし、書き込んだバイト数だけバッファー ストリームの現在位置を進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-343">Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d165c-344">このコード例が示されている例の一部、<xref:System.IO.BufferedStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d165c-344">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#6)]
 [!code-csharp[System.IO.BufferedStream1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#6)]
 [!code-vb[System.IO.BufferedStream1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d165c-345">
            <paramref name="array" /> 長から <paramref name="offset" /> を引いた値が <paramref name="count" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-345">Length of <paramref name="array" /> minus <paramref name="offset" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-346">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-346">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-347">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-347">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d165c-348">ストリームが閉じているか、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-348">The stream is closed or <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-349">ストリームは書き込みをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-349">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-350">ストリームが閉じられた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-350">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.BufferedStream.CanWrite" />
        <altmember cref="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-351">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-351">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-352">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-352">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-353">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-353">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="bufferedStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d165c-354">データの書き込み元となるバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-354">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d165c-355">ストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-355">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d165c-356">書き込む最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-356">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="d165c-357">キャンセル要求を監視するためのトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-357">The token to monitor for cancellation requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-358">現在のストリームにバイト シーケンスを非同期に書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-358">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d165c-359">非同期の書き込み操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-359">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d165c-360">インスタンスを作成して、キャンセル トークンを作成することができます、<xref:System.Threading.CancellationTokenSource>クラスを渡して、<xref:System.Threading.CancellationTokenSource.Token%2A>プロパティとして、`cancellationToken`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d165c-360">You can create a cancellation token by creating an instance of the <xref:System.Threading.CancellationTokenSource> class and passing the <xref:System.Threading.CancellationTokenSource.Token%2A> property as the `cancellationToken` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-361">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-361">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d165c-362">
            <paramref name="offset" /> または <paramref name="count" /> が負の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-362">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d165c-363">
            <paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-363">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-364">ストリームは書き込みをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-364">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-365">ストリームは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-365">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d165c-366">ストリームは、前の書き込み操作によって現在使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-366">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="bufferedStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d165c-367">ストリームに書き込むバイト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-367">A byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d165c-368">バッファー ストリームの現在位置にバイトを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-368">Writes a byte to the current position in the buffered stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d165c-369">ストリームは書き込みをサポートしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-369">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d165c-370">
            <paramref name="value" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-370">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d165c-371">ストリームが閉じられた後でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-371">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="d165c-372">ファイルおよびストリーム入出力</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-372">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="d165c-373">方法 : ファイルからテキストを読み取る</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-373">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="d165c-374">方法 : ファイルにテキストを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d165c-374">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>