<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DirectoryInfo.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59d77ffa90a7c6c644f21fab1107585ed64b93ce1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d77ffa90a7c6c644f21fab1107585ed64b93ce1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</source>
          <target state="translated">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>コピー、移動、名前変更、作成、およびディレクトリを削除するなどの一般的な操作のクラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>If you are going to reuse an object several times, consider using the instance method of <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> instead of the corresponding static methods of the <ph id="ph2">&lt;xref:System.IO.Directory&gt;</ph> class, because a security check will not always be necessary.</source>
          <target state="translated">オブジェクトを何度も再利用しようとする場合は、インスタンス メソッドを使用することを検討してください<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>の対応する静的メソッドではなく、<ph id="ph2">&lt;xref:System.IO.Directory&gt;</ph>クラス、セキュリティ チェックは必ずしも必要であるためです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>In members that accept a path as an input string, that path must be well-formed or an exception is raised.</source>
          <target state="translated">入力文字列とパスをそのまま使用するメンバー、そのパスは、整形式である必要がありますか、例外が発生します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</source>
          <target state="translated">たとえば、パスは完全修飾では、スペースで始まり場合、パスは、クラスのメソッドで切り捨てられません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Therefore, the path is malformed and an exception is raised.</source>
          <target state="translated">そのため、パスが正しくないと、例外が発生します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Similarly, a path or a combination of paths cannot be fully qualified twice.</source>
          <target state="translated">同様に、パスまたはパスの組み合わせ完全修飾できない 2 回クリックします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, "c:\temp c:\windows" also raises an exception in most cases.</source>
          <target state="translated">たとえば、"c:\temp c:\windows"では、ほとんどの場合、例外も発生します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Ensure that your paths are well-formed when using methods that accept a path string.</source>
          <target state="translated">パス文字列を受け取るメソッドを使用する場合、パスが整形式であることを確認します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>In members that accept a path, the path can refer to a file or just a directory.</source>
          <target state="translated">パスを受け入れるメンバー ボックスで、パスは、ファイルまたはディレクトリを参照できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</source>
          <target state="translated">指定されたパスは相対パスまたは汎用名前付け規則 (UNC) パスのサーバーと共有名にも参照できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, all the following are acceptable paths:</source>
          <target state="translated">たとえば、次のすべては、有効なパスは。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt"C# の場合、または Visual Basic では、"c:\MyDir\MyFile.txt"です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"c:<ph id="ph1">\\</ph>\MyDir" in C#, or "c:\MyDir" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir"C# の場合、または Visual Basic では、"c:\MyDir"です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"MyDir<ph id="ph1">\\</ph>\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</source>
          <target state="translated">"MyDir<ph id="ph1">\\</ph>\MySubdir"C# の場合、または Visual Basic では、"MyDir\MySubDir"です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare" in C#, or "<ph id="ph5">\\</ph>\MyServer\MyShare" in Visual Basic.</source>
          <target state="translated">"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare"C# の場合、または"<ph id="ph5">\\</ph>\MyServer\MyShare"Visual Basic でします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>By default, full read/write access to new directories is granted to all users.</source>
          <target state="translated">既定では、新しいディレクトリへの完全な読み取り/書き込みアクセスは、すべてのユーザーに与えられます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The following example demonstrates some of the main members of the <ph id="ph1">`DirectoryInfo`</ph> class.</source>
          <target state="translated">次の例では、メインのメンバーの一部を示しています、<ph id="ph1">`DirectoryInfo`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The following example demonstrates how to copy a directory and its contents.</source>
          <target state="translated">次の例では、ディレクトリ、およびその内容をコピーする方法を示します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>A string specifying the path on which to create the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> を作成する対象のパスを指定する文字列。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class on the specified path.</source>
          <target state="translated">指定したパスに対する、<ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>This constructor does not check if a directory exists.</source>
          <target state="translated">このコンス トラクターでは、ディレクトリが存在するかどうかはチェックされません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</source>
          <target state="translated">このコンス トラクターとは、後の操作でディスクにアクセスするために使用される文字列にプレース ホルダーです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph>パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</source>
          <target state="translated">次の例では、このコンス トラクターを使用して、指定されたディレクトリとサブディレクトリを作成し、サブディレクトリを格納するディレクトリを削除できないことを示します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains invalid characters such as ", <ph id="ph2">&amp;lt;</ph>, <ph id="ph3">&amp;gt;</ph>, or |.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> に、"、<ph id="ph2">&amp;lt;</ph>、<ph id="ph3">&amp;gt;</ph>、| など、無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">指定されたパスかファイル名、またはその両方が長すぎます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>for reading from files and directories.</source>
          <target state="translated">読み取りにファイルとディレクトリ。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Creates a directory.</source>
          <target state="translated">ディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create">
          <source>Creates a directory.</source>
          <target state="translated">ディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>If the directory already exists, this method does nothing.</source>
          <target state="translated">ディレクトリが既に存在する場合は、このメソッドは何も行いません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</source>
          <target state="translated">次の例のチェック指定されたディレクトリが存在するかどうかを作成、ディレクトリが存在しない場合、ディレクトリを削除します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create">
          <source>The directory cannot be created.</source>
          <target state="translated">ディレクトリを作成できません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>for writing files.</source>
          <target state="translated">ファイルを出力します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The access control to apply to the directory.</source>
          <target state="translated">ディレクトリに適用するアクセス制御。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Creates a directory using a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> オブジェクトを使用してディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</source>
          <target state="translated">このメソッドのオーバー ロードを使用すると、セキュリティが適用される前に、ディレクトリにアクセスできる可能性がないように、アクセス制御のディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>If the directory already exists, this method does nothing.</source>
          <target state="translated">ディレクトリが既に存在する場合は、このメソッドは何も行いません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only or is not empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> によって指定されたディレクトリが、読み取り専用であるか、空ではありません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id="ph2">&lt;see cref="F:System.IO.Path.InvalidPathChars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は長さ 0 の文字列であるか、空白のみで構成されるか、または <ph id="ph2">&lt;see cref="F:System.IO.Path.InvalidPathChars" /&gt;</ph> で定義される 1 つ以上の使用できない文字を含んでいます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">マップされていないドライブにあるなど、指定されたパスが無効です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Creating a directory with only the colon (:) character was attempted.</source>
          <target state="translated">コロン (:) 文字だけで、ディレクトリを作成しようとしました。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>for permission to create a directory.</source>
          <target state="translated">ディレクトリを作成する権限です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">セキュリティ アクション:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Creates a subdirectory or subdirectories on the specified path.</source>
          <target state="translated">指定したパスに 1 つ以上のサブディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">パスは、この <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> クラスのインスタンスに対する相対パスで指定できます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path.</source>
          <target state="translated">指定するパス。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>This cannot be a different disk volume or Universal Naming Convention (UNC) name.</source>
          <target state="translated">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Creates a subdirectory or subdirectories on the specified path.</source>
          <target state="translated">指定したパスに 1 つ以上のサブディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">パスは、この <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> クラスのインスタンスに対する相対パスで指定できます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The last directory specified in <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> に指定された最後のディレクトリ。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Any and all directories specified in <ph id="ph1">`path`</ph> are created, unless some part of <ph id="ph2">`path`</ph> is invalid.</source>
          <target state="translated">指定されていると、すべてのディレクトリ<ph id="ph1">`path`</ph>しない限り、作成の一部<ph id="ph2">`path`</ph>が無効です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter specifies a directory path, not a file path.</source>
          <target state="translated"><ph id="ph1">`path`</ph>ファイル パスではなく、ディレクトリのパスを指定します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>If the subdirectory already exists, this method does nothing.</source>
          <target state="translated">サブディレクトリに既に存在する場合、このメソッドは何も行いません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Path names are limited to 248 characters.</source>
          <target state="translated">パス名は 248 文字に制限されます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The following example demonstrates creating a subdirectory.</source>
          <target state="translated">次の例では、サブディレクトリを作成するを示します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>In this example, the created directories are removed once created.</source>
          <target state="translated">この例では、いったん作成された後、作成されたディレクトリが削除されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Therefore, to test this sample, comment out the delete lines in the code.</source>
          <target state="translated">そのため、このサンプルをテストするには、コメント アウト、コード内の行の削除します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not specify a valid file path or contains invalid <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は有効なファイル パスを指定していないか、または無効な <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> 文字を含んでいます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">マップされていないドライブにあるなど、指定されたパスが無効です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The subdirectory cannot be created.</source>
          <target state="translated">サブディレクトリを作成できません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>A file or directory already has the name specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> で指定された名前がファイルまたはディレクトリに既にあります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">指定されたパスかファイル名、またはその両方が長すぎます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The caller does not have code access permission to create the directory.</source>
          <target state="translated">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The caller does not have code access permission to read the directory described by the returned <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">呼び出し元には、返された <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>This can occur when the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter describes an existing directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains a colon character (:) that is not part of a drive label ("C:<ph id="ph2">\\</ph>").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> に、ドライブ ラベル ("C:<ph id="ph2">\\</ph>") の一部ではないコロン文字 (:) が含まれています。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">読み取りや、ファイルを出力します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path.</source>
          <target state="translated">指定するパス。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>This cannot be a different disk volume or Universal Naming Convention (UNC) name.</source>
          <target state="translated">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The security to apply.</source>
          <target state="translated">適用するセキュリティ。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Creates a subdirectory or subdirectories on the specified path with the specified security.</source>
          <target state="translated">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">パスは、この <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> クラスのインスタンスに対する相対パスで指定できます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The last directory specified in <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> に指定された最後のディレクトリ。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Any and all directories specified in <ph id="ph1">`path`</ph> are created, unless some part of <ph id="ph2">`path`</ph> is invalid.</source>
          <target state="translated">指定されていると、すべてのディレクトリ<ph id="ph1">`path`</ph>しない限り、作成の一部<ph id="ph2">`path`</ph>が無効です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">`path`</ph> parameter specifies a directory path, not a file path.</source>
          <target state="translated"><ph id="ph1">`path`</ph>ファイル パスではなく、ディレクトリのパスを指定します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>If the subdirectory already exists, this method does nothing.</source>
          <target state="translated">サブディレクトリに既に存在する場合、このメソッドは何も行いません。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Path names are limited to 248 characters.</source>
          <target state="translated">パス名は 248 文字に制限されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not specify a valid file path or contains invalid <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は有効なファイル パスを指定していないか、または無効な <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> 文字を含んでいます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">マップされていないドライブにあるなど、指定されたパスが無効です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The subdirectory cannot be created.</source>
          <target state="translated">サブディレクトリを作成できません。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>A file or directory already has the name specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> で指定された名前がファイルまたはディレクトリに既にあります。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">指定されたパスかファイル名、またはその両方が長すぎます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have code access permission to create the directory.</source>
          <target state="translated">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have code access permission to read the directory described by the returned <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">呼び出し元には、返された <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>This can occur when the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter describes an existing directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains a colon character (:) that is not part of a drive label ("C:<ph id="ph2">\\</ph>").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> に、ドライブ ラベル ("C:<ph id="ph2">\\</ph>") の一部ではないコロン文字 (:) が含まれています。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>for reading and writing files.</source>
          <target state="translated">読み取りや、ファイルを出力します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Deletes a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> and its contents from a path.</source>
          <target state="translated">パスから <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> とその内容を削除します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>Deletes this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> if it is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> が空の場合に、そのインスタンスを削除します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The following example throws an exception if you attempt to delete a directory that is not empty.</source>
          <target state="translated">次の例は、ディレクトリが空でないを削除しようとする場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory contains a read-only file.</source>
          <target state="translated">ディレクトリに読み取り専用のファイルが含まれています。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory described by this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object does not exist or could not be found.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory is not empty.</source>
          <target state="translated">ディレクトリが空ではありません。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory is the application's current working directory.</source>
          <target state="translated">ディレクトリはアプリケーションの現在の作業ディレクトリです。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>There is an open handle on the directory, and the operating system is Windows XP or earlier.</source>
          <target state="translated">ディレクトリに開いているハンドルがあり、オペレーティング システムが Windows XP かそれ以前のバージョンです。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>This open handle can result from enumerating directories.</source>
          <target state="translated">このハンドルが開いている原因は、ディレクトリを列挙したことにある可能性があります。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>方法: ディレクトリとファイルを列挙する<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>for writing directories.</source>
          <target state="translated">ディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to delete this directory, its subdirectories, and all files; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Deletes this instance of a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph>, specifying whether to delete subdirectories and files.</source>
          <target state="translated">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> のインスタンスを削除します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>If the <ph id="ph1">`DirectoryInfo`</ph> has no files or subdirectories, this method deletes the <ph id="ph2">`DirectoryInfo`</ph> even if <ph id="ph3">`recursive`</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`DirectoryInfo`</ph>ファイルやサブディレクトリを含まない、このメソッドは、削除、<ph id="ph2">`DirectoryInfo`</ph>場合でも<ph id="ph3">`recursive`</ph>は<ph id="ph4">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Attempting to delete a <ph id="ph1">`DirectoryInfo`</ph> that is not empty when <ph id="ph2">`recursive`</ph> is <ph id="ph3">`false`</ph> throws an <ph id="ph4">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">削除しようとすると、<ph id="ph1">`DirectoryInfo`</ph>が空でない場合に<ph id="ph2">`recursive`</ph>は<ph id="ph3">`false`</ph>スロー、<ph id="ph4">&lt;xref:System.IO.IOException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The following example demonstrates deleting a directory.</source>
          <target state="translated">次の例では、ディレクトリを削除するを示しています。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Because the directory is removed, first comment out the <ph id="ph1">`Delete`</ph> line to test that the directory exists.</source>
          <target state="translated">ディレクトリが削除されるためコメント アウト、<ph id="ph1">`Delete`</ph>ディレクトリが存在するかをテストするには行です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Then uncomment the same line of code to test that the directory was removed successfully.</source>
          <target state="translated">ディレクトリが正常に削除されたことをテストするコードの同じ行のコメントを解除します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory contains a read-only file.</source>
          <target state="translated">ディレクトリに読み取り専用のファイルが含まれています。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory described by this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object does not exist or could not be found.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory is read-only.</source>
          <target state="translated">ディレクトリが読み取り専用です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory contains one or more files or subdirectories and <ph id="ph1">&lt;paramref name="recursive" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、かつ <ph id="ph1">&lt;paramref name="recursive" /&gt;</ph> が <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory is the application's current working directory.</source>
          <target state="translated">ディレクトリはアプリケーションの現在の作業ディレクトリです。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</source>
          <target state="translated">ディレクトリまたはそのファイルのうちの 1 つについて開かれているハンドルがあり、かつオペレーティング システムが Windows XP 以前です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>This open handle can result from enumerating directories and files.</source>
          <target state="translated">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>方法: ディレクトリとファイルを列挙する<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Write flag required for write permission to the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> and subdirectories to be deleted.</source>
          <target state="translated">書き込み権限の必要なフラグの書き込み、<ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph>とサブディレクトリを削除します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of directory information in the current directory.</source>
          <target state="translated">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>Returns an enumerable collection of directory information in the current directory.</source>
          <target state="translated">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>An enumerable collection of directories in the current directory.</source>
          <target state="translated">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph> property.</source>
          <target state="translated">次の例は、C:\Program Files ディレクトリ下のサブディレクトリを列挙しの値をチェックして 2009年以前に作成されたすべてのディレクトリの名前を取得する LINQ クエリを使用して、<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>If you only need the names of the subdirectories, use the static <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class for better performance.</source>
          <target state="translated">サブディレクトリの名前のみ必要がある場合は、静的なを使用して<ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph>パフォーマンス向上のためのクラスです。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%29&gt;</ph> method.</source>
          <target state="translated">例については、次を参照してください。、<ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">ディレクトリの名前と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Returns an enumerable collection of directory information that matches a specified search pattern.</source>
          <target state="translated">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>An enumerable collection of directories that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に一致する列挙可能なディレクトリのコレクション。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">ディレクトリの名前と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of directories that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> と <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph> に一致する列挙可能なディレクトリのコレクション。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The following example, starting from a specified directory, uses this method and the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</source>
          <target state="translated">指定されたディレクトリから次の例では、このメソッドを使用して、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>開始ディレクトリ内のディレクトリとファイルを列挙し、いずれかの詳細を表示する方法を超えるファイル 10 MB のサイズ。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> は正しい <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of file information in the current directory.</source>
          <target state="translated">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>Returns an enumerable collection of file information in the current directory.</source>
          <target state="translated">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>An enumerable collection of the files in the current directory.</source>
          <target state="translated">現在のディレクトリ内の列挙可能なファイルのコレクション。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph> property.</source>
          <target state="translated">次の例は、指定したディレクトリの下にファイルを列挙しの値をチェックして 2009年以前に作成されたすべてのファイルの名前を取得する LINQ クエリを使用して、<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>If you only need the names of the files, use the static <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class for better performance.</source>
          <target state="translated">ファイルの名前のみ必要がある場合、静的なを使用して<ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph>パフォーマンス向上のためのクラスです。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">例については、次を参照してください。、<ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">ファイル名と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Returns an enumerable collection of file information that matches a search pattern.</source>
          <target state="translated">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>An enumerable collection of files that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に一致する列挙可能なファイルのコレクション。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid, (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">ファイル名と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of files that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> と <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph> に一致する列挙可能なファイルのコレクション。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> は正しい <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of file system information in the current directory.</source>
          <target state="translated">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>Returns an enumerable collection of file system information in the current directory.</source>
          <target state="translated">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>An enumerable collection of file system information in the current directory.</source>
          <target state="translated">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">ディレクトリの名前と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Returns an enumerable collection of file system information that matches a specified search pattern.</source>
          <target state="translated">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>An enumerable collection of file system information objects that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">ディレクトリの名前と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of file system information objects that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> および <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">返されるコレクションはキャッシュされません。呼び出しごとに、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>コレクションのメソッドは新しい列挙を開始します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> は正しい <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Exists">
          <source>Gets a value indicating whether the directory exists.</source>
          <target state="translated">ディレクトリが存在するかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the directory exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ディレクトリが存在する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> if any error occurs while trying to determine if the specified file exists.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph>プロパティから返される<ph id="ph2">`false`</ph>指定したファイルが存在するかどうかを判断するときにエラーが発生した場合。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</source>
          <target state="translated">これは無効な文字または文字が多すぎます、失敗、または見つからないディスクでは、ファイル名を渡すなどの例外が発生する状況で発生する、呼び出し元には、ファイルの読み取りアクセス許可がない場合またはします。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>The following example demonstrates a use of the <ph id="ph1">`Exists`</ph> property in the context of copying a source directory to a target directory.</source>
          <target state="translated">次の例での使用、<ph id="ph1">`Exists`</ph>ターゲット ディレクトリにコピーして、ソース ディレクトリのコンテキストのプロパティです。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.FullName">
          <source>Gets the full path of the directory.</source>
          <target state="translated">ディレクトリの絶対パスを取得します。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.FullName">
          <source>A string containing the full path.</source>
          <target state="translated">絶対パスを含んでいる文字列。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Gets the access control list (ACL) entries for the current directory.</source>
          <target state="translated">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> methods to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>アクセス権を取得するメソッドが現在のファイルのリスト (ACL) エントリを制御します。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>方法: アクセス制御リスト エントリを追加または削除する<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> オブジェクトが示すディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control rules for the directory.</source>
          <target state="translated">ディレクトリのアクセス制御規則をカプセル化する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Calling this method overload is equivalent to calling the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method overload and specifying the access control sections <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph4">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> (<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph><ph id="ph6">`Or`</ph><ph id="ph7">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph><ph id="ph8">`Or`</ph><ph id="ph9">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> in Visual Basic).</source>
          <target state="translated">呼び出すことと同じではこのメソッドのオーバー ロードを呼び出して、<ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph>メソッドのオーバー ロードと、アクセスを指定するコントロールでのセクションでは<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph4">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> (<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> <ph id="ph6">`Or`</ph> <ph id="ph7">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> <ph id="ph8">`Or`</ph> <ph id="ph9">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>を現在のファイルのアクセス制御リスト (ACL) エントリを取得する方法です。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>方法: アクセス制御リスト エントリを追加または削除する<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> methods to add and then remove an access control list (ACL) entry from a directory.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>メソッドを追加し、削除、アクセス制御リスト (ACL) エントリをディレクトリからです。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The directory could not be found or modified.</source>
          <target state="translated">ディレクトリが見つからないか、または変更されています。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The directory is read-only.</source>
          <target state="translated">ディレクトリが読み取り専用です。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">この操作は、現在のプラットフォームではサポートされていません。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>An I/O error occurred while opening the directory.</source>
          <target state="translated">ディレクトリを開くときに、I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>for permission to enumerate an access control list (ACL) for a directory.</source>
          <target state="translated">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">セキュリティ アクション:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> values that specifies the type of access control list (ACL) information to receive.</source>
          <target state="translated">取得するアクセス制御リスト (ACL) の情報の型を指定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 値のいずれか。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> オブジェクトが示すディレクトリに関する指定された型のアクセス制御リスト (ACL) エントリをカプセル化する <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control rules for the file described by the <ph id="ph2">&lt;paramref name="path" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> パラメーターが示すファイルのアクセス制御規則をカプセル化する <ph id="ph2">&lt;paramref name="path" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Exceptions</source>
          <target state="translated">例外</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Exception type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 例外の種類</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>条件</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.SystemException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The directory could not be found or modified.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.SystemException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> ディレクトリが見つからないか、または変更されています。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current process does not have access to open the directory.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.IO.IOException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> An I/O error occurred while opening the directory.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.IO.IOException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> ディレクトリを開くときに、I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.PlatformNotSupportedException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.PlatformNotSupportedException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The directory is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> ディレクトリが読み取り専用です。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">この操作は、現在のプラットフォームではサポートされていません。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>を現在のファイルのアクセス制御リスト (ACL) エントリを取得する方法です。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>方法: アクセス制御リスト エントリを追加または削除する<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>for permission to enumerate an access control list (ACL) for a directory.</source>
          <target state="translated">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">セキュリティ アクション:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns the subdirectories of the current directory.</source>
          <target state="translated">現在のディレクトリのサブディレクトリを返します。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>Returns the subdirectories of the current directory.</source>
          <target state="translated">現在のディレクトリのサブディレクトリを返します。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>If there are no subdirectories, this method returns an empty array.</source>
          <target state="translated">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>This method is not recursive.</source>
          <target state="translated">このメソッドは、再帰的ではありません。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The following example retrieves all the directories in the root directory and displays the directory names.</source>
          <target state="translated">次の例では、ルート ディレクトリ内のすべてのディレクトリを取得し、ディレクトリ名を表示します。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid, such as being on an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトにカプセル化されているパスが無効です (割り当てられていないドライブが指定されている場合など)。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>for reading directories.</source>
          <target state="translated">ディレクトリを読み取る。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">ディレクトリの名前と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Returns an array of directories in the current <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> matching the given search criteria.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>An array of type <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> matching <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> に一致する <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The following example counts the directories in a path that contain the specified letter.</source>
          <target state="translated">次の例では、パス内の指定した文字を含むディレクトリをカウントします。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に、<ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">ファイルとディレクトリとパスにアクセスするための読み取り。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">ディレクトリの名前と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Returns an array of directories in the current <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> matching the given search criteria and using a value to determine whether to search subdirectories.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 内にある、指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つディレクトリの配列を返します。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>An array of type <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> matching <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> に一致する <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>If there are no subdirectories, or no subdirectories match the <ph id="ph1">`searchPattern`</ph> parameter, this method returns an empty array.</source>
          <target state="translated">サブディレクトリがないかに一致するサブディレクトリのかどうか、<ph id="ph1">`searchPattern`</ph>パラメーター、このメソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The following example lists all of the directories and files that begin with the letter "c" in "c:<ph id="ph1">\\</ph>".</source>
          <target state="translated">次の例では、すべてのディレクトリおよび文字"c"で始まるファイルを示してで"c:<ph id="ph1">\\</ph>"です。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に、<ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> は正しい <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">ファイルとディレクトリとパスにアクセスするための読み取り。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns a file list from the current directory.</source>
          <target state="translated">現在のディレクトリからファイル一覧を返します。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Returns a file list from the current directory.</source>
          <target state="translated">現在のディレクトリからファイル一覧を返します。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">内のファイルがない場合、 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>、このメソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">返されるファイル名の順序は保証されません。使用して、<ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph>メソッドの特定の並べ替え順序が必要な場合です。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">マップされていないドライブにあるなど、パスが正しくありません。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>for reading directories.</source>
          <target state="translated">ディレクトリを読み取る。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">ファイル名と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Returns a file list from the current directory matching the given search pattern.</source>
          <target state="translated">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">内のファイルがない場合、 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>、このメソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following wildcard specifiers are permitted in the <ph id="ph1">`searchPattern`</ph> parameter.</source>
          <target state="translated">次のワイルドカードの指定子が許可される、<ph id="ph1">`searchPattern`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcard character</source>
          <target state="translated">ワイルドカード文字</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or more characters.</source>
          <target state="translated">0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Exactly zero or one character.</source>
          <target state="translated">正確に 0 個または 1 つの文字です。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">返されるファイル名の順序は保証されません。使用して、<ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph>メソッドの特定の並べ替え順序が必要な場合です。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcards are permitted.</source>
          <target state="translated">ワイルドカードを使用します。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*.txt" searches for all file names having an extension of "txt".</source>
          <target state="translated">たとえば、 <ph id="ph1">`searchPattern`</ph> "*.txt"検索のすべてのファイル名"txt"の拡張機能を含む文字列します。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all file names beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"すべて"s"で始まる名前のファイルを検索します。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>If there are no files, or no files that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">ファイルと一致するファイル、または いいえがある場合、<ph id="ph1">`searchPattern`</ph>内の文字列、 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>、このメソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When using the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> (for example, "*.txt"), the matching behavior varies depending on the length of the specified file extension.</source>
          <target state="translated">アスタリスクのワイルドカード文字を使用する場合、 <ph id="ph1">`searchPattern`</ph> (たとえば、"*.txt")、一致の動作は指定されたファイル拡張子の長さによって異なります。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A<ph id="ph1">`searchPattern`</ph>ちょうど 3 文字の拡張機能が最初の 3 文字で指定されたファイル拡張子が一致する 3 つ以上の文字の拡張子を持つファイルを返すファイルを使用して、<ph id="ph2">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A<ph id="ph1">`searchPattern`</ph>ファイルを使用して 1 つ、2 つ、または 4 つ以上の文字の拡張機能がその長さだけで指定されたファイル拡張子に一致する拡張子を持つファイルのみを返す、<ph id="ph2">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When using the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">疑問符 (?) のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">たとえば、2 つのファイル ディレクトリ、"file1.txt"および"file1.txtother"の検索パターンで指定された"ファイルか。txt"には、検索パターンの中に、最初のファイルのみが返されます"ファイル<ph id="ph1">\*</ph>.txt"ファイル ファイルの両方を返します。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1<ph id="ph1">\*</ph>.txt" may return unexpected file names.</source>
          <target state="translated">検索パターンに似ていますので、このメソッドは、8.3 ファイル名の形式と長いファイル名の形式の両方でのファイル名をチェックして、"* 1<ph id="ph1">\*</ph>.txt"予期しないファイル名を返す可能性があります。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, using a search pattern of "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</source>
          <target state="translated">などの検索パターンを使用して"<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt"と同等の 8.3 ファイル名の形式が"longf~1.txt"になるので"longfilename.txt"が返されます。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に、<ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>for access to the path and for reading from files and directories.</source>
          <target state="translated">パスにファイルとディレクトリからの読み取りにアクセスします。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">ファイル名と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</source>
          <target state="translated">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>メソッドが次のように異なります。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>のコレクションの列挙を開始する<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>オブジェクトのコレクション全体が返される前にします。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">使用すると<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>の配列全体を待つ必要があります<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>配列にアクセスする前に返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">そのためとを扱う多くのファイルとディレクトリ、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>効率的であることができます。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">内のファイルがない場合、 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>、このメソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Wildcard character</source>
          <target state="translated">ワイルドカード文字</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Zero or more characters.</source>
          <target state="translated">0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Exactly zero or one character.</source>
          <target state="translated">正確に 0 個または 1 つの文字です。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">返されるファイル名の順序は保証されません。使用して、<ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph>メソッドの特定の並べ替え順序が必要な場合です。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Wildcards are permitted.</source>
          <target state="translated">ワイルドカードを使用します。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*.txt" searches for all file names having an extension of "txt".</source>
          <target state="translated">たとえば、 <ph id="ph1">`searchPattern`</ph> "*.txt"検索のすべてのファイル名"txt"の拡張機能を含む文字列します。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all file names beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"すべて"s"で始まる名前のファイルを検索します。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>If there are no files, or no files that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">ファイルと一致するファイル、または いいえがある場合、<ph id="ph1">`searchPattern`</ph>内の文字列、 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>、このメソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When using the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> (for example, "*.txt"), the matching behavior varies depending on the length of the specified file extension.</source>
          <target state="translated">アスタリスクのワイルドカード文字を使用する場合、 <ph id="ph1">`searchPattern`</ph> (たとえば、"*.txt")、一致の動作は指定されたファイル拡張子の長さによって異なります。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A<ph id="ph1">`searchPattern`</ph>ちょうど 3 文字の拡張機能が最初の 3 文字で指定されたファイル拡張子が一致する 3 つ以上の文字の拡張子を持つファイルを返すファイルを使用して、<ph id="ph2">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A<ph id="ph1">`searchPattern`</ph>ファイルを使用して 1 つ、2 つ、または 4 つ以上の文字の拡張機能がその長さだけで指定されたファイル拡張子に一致する拡張子を持つファイルのみを返す、<ph id="ph2">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When using the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">疑問符 (?) のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">たとえば、2 つのファイル ディレクトリ、"file1.txt"および"file1.txtother"の検索パターンで指定された"ファイルか。txt"には、検索パターンの中に、最初のファイルのみが返されます"ファイル<ph id="ph1">\*</ph>.txt"ファイル ファイルの両方を返します。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following list shows the behavior of different lengths for the <ph id="ph1">`searchPattern`</ph> parameter:</source>
          <target state="translated">次の一覧の長さが異なるの動作を示しています、<ph id="ph1">`searchPattern`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</source>
          <target state="translated">"* .abc"、拡張機能 of.abc,.abcd,.abcde,.abcdef を持つファイルを返すにします。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcd" returns only files having an extension of.abcd.</source>
          <target state="translated">"*.abcd"では、拡張子 of.abcd を持つファイルのみを返します。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcde" returns only files having an extension of.abcde.</source>
          <target state="translated">"*.abcde"では、拡張子 of.abcde を持つファイルのみを返します。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcdef" returns only files having an extension of.abcdef.</source>
          <target state="translated">"*.abcdef"では、拡張子 of.abcdef を持つファイルのみを返します。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1<ph id="ph1">\*</ph>.txt" may return unexpected file names.</source>
          <target state="translated">検索パターンに似ていますので、このメソッドは、8.3 ファイル名の形式と長いファイル名の形式の両方でのファイル名をチェックして、"* 1<ph id="ph1">\*</ph>.txt"予期しないファイル名を返す可能性があります。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, using a search pattern of "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</source>
          <target state="translated">などの検索パターンを使用して"<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt"と同等の 8.3 ファイル名の形式が"longf~1.txt"になるので"longfilename.txt"が返されます。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に、<ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>for access to the path and for reading from files and directories.</source>
          <target state="translated">パスにファイルとディレクトリからの読み取りにアクセスします。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Retrieves an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects representing files and subdirectories of the current directory.</source>
          <target state="translated">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> オブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>Returns an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> entries representing all the files and subdirectories in a directory.</source>
          <target state="translated">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> エントリの配列を返します。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>An array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> entries.</source>
          <target state="translated">厳密に型指定された <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> エントリの配列。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>If there are no files or directories in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">ファイルまたはディレクトリがない場合、 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>、このメソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>This method is not recursive.</source>
          <target state="translated">このメソッドは、再帰的ではありません。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">サブディレクトリを<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph>によって返される値、<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph>プロパティを決定するかどうか、<ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph>ファイルまたはディレクトリを表します。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>The following example counts the files and directories under the specified directory.</source>
          <target state="translated">次の例では、ファイルと、指定したディレクトリの下のディレクトリをカウントします。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The search string to match against the names of directories and files.</source>
          <target state="translated">ディレクトリおよびファイルの名前と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Retrieves an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects representing the files and subdirectories that match the specified search criteria.</source>
          <target state="translated">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> オブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>An array of strongly typed <ph id="ph1">&lt;see langword="FileSystemInfo" /&gt;</ph> objects matching the search criteria.</source>
          <target state="translated">検索基準に一致する、厳密に型指定された <ph id="ph1">&lt;see langword="FileSystemInfo" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This method is not recursive.</source>
          <target state="translated">このメソッドは、再帰的ではありません。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">サブディレクトリを<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph>によって返される値、<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph>プロパティを決定するかどうか、<ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph>ファイルまたはディレクトリを表します。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Wild cards are permitted.</source>
          <target state="translated">ワイルドカードを使用します。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*t" searches for all directory names in <ph id="ph2">`path`</ph> ending with the letter "t".</source>
          <target state="translated">たとえば、<ph id="ph1">`searchPattern`</ph>文字列"* t"内のすべてのディレクトリ名の検索<ph id="ph2">`path`</ph>文字"t"で終了します。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all directory names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"内のすべてのディレクトリ名の検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The string ".." can only be used in <ph id="ph1">`searchPattern`</ph> if it is specified as a part of a valid directory name, such as in the directory name "a..b".</source>
          <target state="translated">文字列".."でのみ使用できます<ph id="ph1">`searchPattern`</ph>指定されている場合、有効なディレクトリ名の一部としてなど、ディレクトリ名に"、。 します。b"です。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>It cannot be used to move up the directory hierarchy.</source>
          <target state="translated">ディレクトリ階層を移動する使用することはできません。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>If there are no files or directories, or no files or directories that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">ファイルまたはディレクトリ、またはファイルやに一致するディレクトリがある場合、<ph id="ph1">`searchPattern`</ph>内の文字列、 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>、このメソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The following example counts the files and directories that match the specified search pattern.</source>
          <target state="translated">次の例では、ファイルおよび指定した検索パターンに一致するディレクトリをカウントします。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に、<ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">ファイルとディレクトリとパスにアクセスするための読み取り。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories and filesa.</source>
          <target state="translated">ディレクトリおよびファイルの名前と照合する検索文字列。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">このパラメーターには有効なリテラルのパスとワイルドカード (* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects that represent the files and subdirectories matching the specified search criteria.</source>
          <target state="translated">指定した検索条件に一致するファイルおよびサブディレクトリを表す <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> オブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>An array of file system entries that match the search criteria.</source>
          <target state="translated">検索条件に一致するファイル システム エントリの配列。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">次のワイルドカードの指定子が許可される<ph id="ph1">`searchPattern`</ph>です。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">ワイルドカードの指定子</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">一致件数</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">* (アスタリスク)</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">その位置に 0 個以上の文字です。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(疑問符 (?))</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">その位置の 0 個または 1 つの文字。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">以外のワイルドカード文字は、リテラル文字です。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">たとえば、文字列"* t"、文字"t"で終わるすべての名前を検索します。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>文字列"s<ph id="ph2">\*</ph>"のすべての名前を検索<ph id="ph3">`path`</ph>"s"で開始します。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">サブディレクトリを<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph>によって返される値、<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph>プロパティを決定するかどうか、<ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph>ファイルまたはディレクトリを表します。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">このメソッドは、次の値を事前に入力<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> に、<ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The name and path to which to move this directory.</source>
          <target state="translated">このディレクトリの移動先の名前とパス。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The destination cannot be another disk volume or a directory with the identical name.</source>
          <target state="translated">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>It can be an existing directory to which you want to add this directory as a subdirectory.</source>
          <target state="translated">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Moves a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> instance and its contents to a new path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> のインスタンスとその内容を新しいパスに移動します。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>This method throws an <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph>場合、たとえば、c:\mydir を c:\public に移動しようとして、c:\public が既に存在します。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>You must specify "c:<ph id="ph1">\\</ph>\public<ph id="ph2">\\</ph>\mydir" as the <ph id="ph3">`destDirName`</ph> parameter, or specify a new directory name such as "c:<ph id="ph4">\\</ph>\newdir".</source>
          <target state="translated">指定する必要があります"c:<ph id="ph1">\\</ph>\public<ph id="ph2">\\</ph>\mydir"として、<ph id="ph3">`destDirName`</ph>パラメーターなど、新しいディレクトリ名を指定または"c:<ph id="ph4">\\</ph>\newdir"です。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>This method permits moving a directory to a read-only directory.</source>
          <target state="translated">このメソッドは、読み取り専用のディレクトリにディレクトリを移動を許可します。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The read/write attribute of neither directory is affected.</source>
          <target state="translated">いずれのディレクトリの読み取り/書き込み属性が影響を受けます。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The following example demonstrates moving a directory.</source>
          <target state="translated">次の例では、ディレクトリを移動を示しています。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> is an empty string (''").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> が空の文字列 (''") です。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>An attempt was made to move a directory to a different volume.</source>
          <target state="translated">ディレクトリを別のボリュームに移動しようとしました。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> が既に存在します。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>You are not authorized to access this path.</source>
          <target state="translated">このパスへのアクセスが許可されていません。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The directory being moved and the destination directory have the same name.</source>
          <target state="translated">移動するディレクトリと対象のディレクトリの名前が同じです。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The destination directory cannot be found.</source>
          <target state="translated">対象のディレクトリが見つかりません。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>for reading and writing files and directories and for access to the destination directory.</source>
          <target state="translated">読み取りや書き込みファイルとディレクトリとコピー先ディレクトリにアクセスするためです。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">セキュリティ アクション:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Name">
          <source>Gets the name of this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> の現在のインスタンスの名前を取得します。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The directory name.</source>
          <target state="translated">ディレクトリ名。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>This <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> property returns only the name of the directory, such as "Bin".</source>
          <target state="translated">これは、 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> "Bin"などのディレクトリの名前のみを返します。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>To get the full path, such as "c:\public\Bin", use the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.FullName%2A&gt;</ph> property.</source>
          <target state="translated">"C:\public\Bin"など、完全なパスを取得する、<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.FullName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> requires no permission (beyond the read permission to the directory necessary to construct the <ph id="ph3">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph>) but can give out the directory name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>権限は必要ありません (を構築するために必要なディレクトリに読み取りアクセス許可を超える、 <ph id="ph3">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph>) ディレクトリの名前を与えることができますが、します。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>If it is necessary to hand out a <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</source>
          <target state="translated">渡す必要がある場合は、out、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>暗号強度が高い名前を持つ保護されたディレクトリに、信頼されていないコードの使用のダミー ディレクトリを作成します。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The following example displays the name of the current <ph id="ph1">`DirectoryInfo`</ph> instance only.</source>
          <target state="translated">次の例には、現在の名前が表示されます。<ph id="ph1">`DirectoryInfo`</ph>だけをインスタンス化します。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Parent">
          <source>Gets the parent directory of a specified subdirectory.</source>
          <target state="translated">指定されたサブディレクトリの親ディレクトリを取得します。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The parent directory, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the path is null or if the file path denotes a root (such as "<ph id="ph2">\\</ph>", "C:", or * "<ph id="ph3">\\</ph>\server\share").</source>
          <target state="translated">親ディレクトリ。 または<ph id="ph1">&lt;see langword="null" /&gt;</ph>パスが null の場合、またはファイル パスがルートを表す場合 (など"<ph id="ph2">\\</ph>"、"c:"、または *"<ph id="ph3">\\</ph>\server\share") です。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">共通 I/O タスクの一覧は、次を参照してください。<bpt id="p1">[</bpt>共通 I/O タスク<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The following example demonstrates referring to the parent directory of a specified directory.</source>
          <target state="translated">次の例では、指定したディレクトリの親ディレクトリを参照するを示しています。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">ファイルとディレクトリとパスにアクセスするための読み取り。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>、 <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Root">
          <source>Gets the root portion of the directory.</source>
          <target state="translated">ディレクトリのルート部分を取得します。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>An object that represents the root of the directory.</source>
          <target state="translated">ディレクトリのルートを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>The following example displays root locations for specified directories.</source>
          <target state="translated">次の例では、指定したディレクトリのルートの場所を表示します。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Root">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">ファイルとディレクトリとパスにアクセスするための読み取り。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>、 <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>An object that describes an ACL entry to apply to the directory described by the <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Applies access control list (ACL) entries described by a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object to the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の<ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> オブジェクトが示すディレクトリに適用します。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">アクセス制御リスト (ACL) には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>方法: アクセス制御リスト エントリを追加または削除する<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method applies ACL entries to a file that represents the noninherited ACL list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>メソッドが継承されない ACL リストを表すファイルに ACL エントリを適用します。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The ACL specified for <ph id="ph1">`directorySecurity`</ph> replaces the existing ACL for the directory.</source>
          <target state="translated">ACL に指定された<ph id="ph1">`directorySecurity`</ph>ディレクトリの既存の ACL を置き換えます。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>To add permissions for a new user, use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL, and modify it.</source>
          <target state="translated">新しいユーザーのアクセス許可を追加するには、使用、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>メソッドを既存の ACL を取得し、それを変更します。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method persists only <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> objects that have been modified after object creation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>メソッドにのみが引き続き発生する<ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>オブジェクトがオブジェクトの作成後に変更されました。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>If a <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object has not been modified, it will not be persisted to a file.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>オブジェクトが変更されていない、ファイルに永続化はできません。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Therefore, it is not possible to retrieve a <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object from one file and reapply the same object to another file.</source>
          <target state="translated">したがって、取得することはありません、 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 1 つのファイルからオブジェクトを別のファイルを同じオブジェクトを再適用します。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>To copy ACL information from one file to another:</source>
          <target state="translated">ACL の情報を別の 1 つのファイルにコピー: する</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object from the source file.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>を取得する方法、<ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>ソース ファイルからのオブジェクト。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Create a new <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object for the destination file.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>先のファイル オブジェクト。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method of the source <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object to retrieve the ACL information.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph>メソッドのソースの<ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>ACL 情報を取得するオブジェクト。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to copy the information retrieved in step 3 to the destination <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph>に情報をコピーする方法は、先には、手順 3. で取得<ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Set the destination <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object to the destination file using the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">出力先を設定<ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>、変換先を使用してファイル オブジェクト、<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> methods to add and then remove an access control list (ACL) entry from a directory.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>メソッドを追加し、削除、アクセス制御リスト (ACL) エントリをディレクトリからです。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;paramref name="directorySecurity" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="directorySecurity" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The file could not be found or modified.</source>
          <target state="translated">ファイルを検出または変更できませんでした。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The current process does not have access to open the file.</source>
          <target state="translated">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>for permission to enumerate access control list (ACL) for a directory.</source>
          <target state="translated">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">セキュリティ アクション:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">関連する列挙: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>、 <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.ToString">
          <source>Returns the original path that was passed by the user.</source>
          <target state="translated">ユーザーから渡された元のパスを返します。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.ToString">
          <source>Returns the original path that was passed by the user.</source>
          <target state="translated">ユーザーから渡された元のパスを返します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>