<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="386d4-101">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="386d4-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="386d4-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="386d4-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-103">使用して、<xref:System.IO.DirectoryInfo>コピー、移動、名前変更、作成、およびディレクトリを削除するなどの一般的な操作のクラスです。</span><span class="sxs-lookup"><span data-stu-id="386d4-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="386d4-104">オブジェクトを何度も再利用しようとする場合は、インスタンス メソッドを使用することを検討してください<xref:System.IO.DirectoryInfo>の対応する静的メソッドではなく、<xref:System.IO.Directory>クラス、セキュリティ チェックは必ずしも必要であるためです。</span><span class="sxs-lookup"><span data-stu-id="386d4-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="386d4-105">入力文字列とパスをそのまま使用するメンバー、そのパスは、整形式である必要がありますか、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="386d4-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="386d4-106">たとえば、パスは完全修飾では、スペースで始まり場合、パスは、クラスのメソッドで切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="386d4-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="386d4-107">そのため、パスが正しくないと、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="386d4-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="386d4-108">同様に、パスまたはパスの組み合わせ完全修飾できない 2 回クリックします。</span><span class="sxs-lookup"><span data-stu-id="386d4-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="386d4-109">たとえば、"c:\temp c:\windows"では、ほとんどの場合、例外も発生します。</span><span class="sxs-lookup"><span data-stu-id="386d4-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="386d4-110">パス文字列を受け取るメソッドを使用する場合、パスが整形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="386d4-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="386d4-111">パスを受け入れるメンバー ボックスで、パスは、ファイルまたはディレクトリを参照できます。</span><span class="sxs-lookup"><span data-stu-id="386d4-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="386d4-112">指定されたパスは相対パスまたは汎用名前付け規則 (UNC) パスのサーバーと共有名にも参照できます。</span><span class="sxs-lookup"><span data-stu-id="386d4-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="386d4-113">たとえば、次のすべては、有効なパスは。</span><span class="sxs-lookup"><span data-stu-id="386d4-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="386d4-114">"c:\\\MyDir\\\MyFile.txt"C# の場合、または Visual Basic では、"c:\MyDir\MyFile.txt"です。</span><span class="sxs-lookup"><span data-stu-id="386d4-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="386d4-115">"c:\\\MyDir"C# の場合、または Visual Basic では、"c:\MyDir"です。</span><span class="sxs-lookup"><span data-stu-id="386d4-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="386d4-116">"MyDir\\\MySubdir"C# の場合、または Visual Basic では、"MyDir\MySubDir"です。</span><span class="sxs-lookup"><span data-stu-id="386d4-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="386d4-117">"\\\\\\\MyServer\\\MyShare"C# の場合、または"\\\MyServer\MyShare"Visual Basic でします。</span><span class="sxs-lookup"><span data-stu-id="386d4-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="386d4-118">既定では、新しいディレクトリへの完全な読み取り/書き込みアクセスは、すべてのユーザーに与えられます。</span><span class="sxs-lookup"><span data-stu-id="386d4-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="386d4-119">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-120">次の例では、メインのメンバーの一部を示しています、`DirectoryInfo`クラスです。</span><span class="sxs-lookup"><span data-stu-id="386d4-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="386d4-121">次の例では、ディレクトリ、およびその内容をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="386d4-122"><see langword="DirectoryInfo" /> を作成する対象のパスを指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-122">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="386d4-123">指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="386d4-123">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-124">このコンス トラクターでは、ディレクトリが存在するかどうかはチェックされません。</span><span class="sxs-lookup"><span data-stu-id="386d4-124">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="386d4-125">このコンス トラクターとは、後の操作でディスクにアクセスするために使用される文字列にプレース ホルダーです。</span><span class="sxs-lookup"><span data-stu-id="386d4-125">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="386d4-126">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="386d4-126">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="386d4-127">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="386d4-128">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-129">次の例では、このコンス トラクターを使用して、指定されたディレクトリとサブディレクトリを作成し、サブディレクトリを格納するディレクトリを削除できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-129">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-130"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-130"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-131">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-131">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-132"><paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-132"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="386d4-133">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="386d4-133">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="386d4-134">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-134">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span> <span data-ttu-id="386d4-135">指定されたパスかファイル名、またはその両方が長すぎます。</span><span class="sxs-lookup"><span data-stu-id="386d4-135">The specified path, file name, or both are too long.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-136">読み取りにファイルとディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="386d4-136">for reading from files and directories.</span></span> <span data-ttu-id="386d4-137">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="386d4-137">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-138">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-138">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-139">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-139">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-140">ディレクトリが既に存在する場合は、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="386d4-140">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="386d4-141">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-141">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-142">次の例のチェック指定されたディレクトリが存在するかどうかを作成、ディレクトリが存在しない場合、ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="386d4-142">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="386d4-143">ディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="386d4-143">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-144">ファイルを出力します。</span><span class="sxs-lookup"><span data-stu-id="386d4-144">for writing files.</span></span> <span data-ttu-id="386d4-145">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="386d4-145">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="386d4-146">ディレクトリに適用するアクセス制御。</span><span class="sxs-lookup"><span data-stu-id="386d4-146">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="386d4-147"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトを使用してディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-147">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-148">このメソッドのオーバー ロードを使用すると、セキュリティが適用される前に、ディレクトリにアクセスできる可能性がないように、アクセス制御のディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-148">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="386d4-149">ディレクトリが既に存在する場合は、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="386d4-149">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="386d4-150">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-150">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="386d4-151"><paramref name="path" /> によって指定されたディレクトリが、読み取り専用であるか、空ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-151">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="386d4-152">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-152">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-153"><paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="386d4-153"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-154"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-154"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="386d4-155">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="386d4-155">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="386d4-156">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-156">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-157">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="386d4-157">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="386d4-158">コロン (:) 文字だけで、ディレクトリを作成しようとしました。</span><span class="sxs-lookup"><span data-stu-id="386d4-158">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-159">ディレクトリを作成する権限です。</span><span class="sxs-lookup"><span data-stu-id="386d4-159">for permission to create a directory.</span></span> <span data-ttu-id="386d4-160">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-160">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="386d4-161">関連する列挙。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="386d4-161">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-162">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-162">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="386d4-163">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="386d4-163">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="386d4-164">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="386d4-164">The specified path.</span></span> <span data-ttu-id="386d4-165">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="386d4-165">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="386d4-166">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-166">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="386d4-167">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="386d4-167">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="386d4-168"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="386d4-168">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-169">指定されていると、すべてのディレクトリ`path`しない限り、作成の一部`path`が無効です。</span><span class="sxs-lookup"><span data-stu-id="386d4-169">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="386d4-170">`path`ファイル パスではなく、ディレクトリのパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="386d4-170">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="386d4-171">サブディレクトリに既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="386d4-171">If the subdirectory already exists, this method does nothing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="386d4-172">パス名は 248 文字に制限されます。</span><span class="sxs-lookup"><span data-stu-id="386d4-172">Path names are limited to 248 characters.</span></span>  
  
 <span data-ttu-id="386d4-173">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-173">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-174">次の例では、サブディレクトリを作成するを示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-174">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="386d4-175">この例では、いったん作成された後、作成されたディレクトリが削除されます。</span><span class="sxs-lookup"><span data-stu-id="386d4-175">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="386d4-176">そのため、このサンプルをテストするには、コメント アウト、コード内の行の削除します。</span><span class="sxs-lookup"><span data-stu-id="386d4-176">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-177"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="386d4-177"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-178"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-178"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-179">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="386d4-179">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="386d4-180">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="386d4-180">The subdirectory cannot be created.</span></span>  
  
 <span data-ttu-id="386d4-181">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-181">-or-</span></span>  
  
 <span data-ttu-id="386d4-182"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="386d4-182">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="386d4-183">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="386d4-183">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="386d4-184">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-184">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span> <span data-ttu-id="386d4-185">指定されたパスかファイル名、またはその両方が長すぎます。</span><span class="sxs-lookup"><span data-stu-id="386d4-185">The specified path, file name, or both are too long.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-186">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-186">The caller does not have code access permission to create the directory.</span></span>  
  
 <span data-ttu-id="386d4-187">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-187">-or-</span></span>  
  
 <span data-ttu-id="386d4-188">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-188">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="386d4-189"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-189">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="386d4-190"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-190"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-191">読み取りや、ファイルを出力します。</span><span class="sxs-lookup"><span data-stu-id="386d4-191">for reading and writing files.</span></span> <span data-ttu-id="386d4-192">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="386d4-192">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="386d4-193">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="386d4-193">The specified path.</span></span> <span data-ttu-id="386d4-194">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="386d4-194">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="386d4-195">適用するセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-195">The security to apply.</span></span></param>
        <summary><span data-ttu-id="386d4-196">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-196">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="386d4-197">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="386d4-197">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="386d4-198"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="386d4-198">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-199">指定されていると、すべてのディレクトリ`path`しない限り、作成の一部`path`が無効です。</span><span class="sxs-lookup"><span data-stu-id="386d4-199">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="386d4-200">`path`ファイル パスではなく、ディレクトリのパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="386d4-200">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="386d4-201">サブディレクトリに既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="386d4-201">If the subdirectory already exists, this method does nothing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="386d4-202">パス名は 248 文字に制限されます。</span><span class="sxs-lookup"><span data-stu-id="386d4-202">Path names are limited to 248 characters.</span></span>  
  
 <span data-ttu-id="386d4-203">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-203">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-204"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="386d4-204"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-205"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-205"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-206">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="386d4-206">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="386d4-207">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="386d4-207">The subdirectory cannot be created.</span></span>  
  
 <span data-ttu-id="386d4-208">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-208">-or-</span></span>  
  
 <span data-ttu-id="386d4-209"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="386d4-209">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="386d4-210">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="386d4-210">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="386d4-211">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-211">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span> <span data-ttu-id="386d4-212">指定されたパスかファイル名、またはその両方が長すぎます。</span><span class="sxs-lookup"><span data-stu-id="386d4-212">The specified path, file name, or both are too long.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-213">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-213">The caller does not have code access permission to create the directory.</span></span>  
  
 <span data-ttu-id="386d4-214">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-214">-or-</span></span>  
  
 <span data-ttu-id="386d4-215">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-215">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="386d4-216"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-216">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="386d4-217"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-217"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-218">読み取りや、ファイルを出力します。</span><span class="sxs-lookup"><span data-stu-id="386d4-218">for reading and writing files.</span></span> <span data-ttu-id="386d4-219">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="386d4-219">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-220">パスから <see cref="T:System.IO.DirectoryInfo" /> とその内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="386d4-220">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-221"><see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="386d4-221">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-222">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-222">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-223">次の例は、ディレクトリが空でないを削除しようとする場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="386d4-223">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="386d4-224">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-224">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-225">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="386d4-225">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="386d4-226">ディレクトリが空ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-226">The directory is not empty.</span></span>  
  
 <span data-ttu-id="386d4-227">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-227">-or-</span></span>  
  
 <span data-ttu-id="386d4-228">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="386d4-228">The directory is the application's current working directory.</span></span>  
  
 <span data-ttu-id="386d4-229">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-229">-or-</span></span>  
  
 <span data-ttu-id="386d4-230">ディレクトリに開いているハンドルがあり、オペレーティング システムが Windows XP かそれ以前のバージョンです。</span><span class="sxs-lookup"><span data-stu-id="386d4-230">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="386d4-231">このハンドルが開いている原因は、ディレクトリを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-231">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="386d4-232">詳細については、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="386d4-232">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-233">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-233">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-234">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-234">for writing directories.</span></span> <span data-ttu-id="386d4-235">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="386d4-235">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="386d4-236">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="386d4-236"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="386d4-237">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="386d4-237">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-238">場合、`DirectoryInfo`ファイルやサブディレクトリを含まない、このメソッドは、削除、`DirectoryInfo`場合でも`recursive`は`false`します。</span><span class="sxs-lookup"><span data-stu-id="386d4-238">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="386d4-239">削除しようとすると、`DirectoryInfo`が空でない場合に`recursive`は`false`スロー、<xref:System.IO.IOException>です。</span><span class="sxs-lookup"><span data-stu-id="386d4-239">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="386d4-240">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-240">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-241">次の例では、ディレクトリを削除するを示しています。</span><span class="sxs-lookup"><span data-stu-id="386d4-241">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="386d4-242">ディレクトリが削除されるためコメント アウト、`Delete`ディレクトリが存在するかをテストするには行です。</span><span class="sxs-lookup"><span data-stu-id="386d4-242">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="386d4-243">ディレクトリが正常に削除されたことをテストするコードの同じ行のコメントを解除します。</span><span class="sxs-lookup"><span data-stu-id="386d4-243">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="386d4-244">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-244">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-245">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="386d4-245">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="386d4-246">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="386d4-246">The directory is read-only.</span></span>  
  
 <span data-ttu-id="386d4-247">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-247">-or-</span></span>  
  
 <span data-ttu-id="386d4-248">ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、かつ <paramref name="recursive" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="386d4-248">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="386d4-249">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-249">-or-</span></span>  
  
 <span data-ttu-id="386d4-250">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="386d4-250">The directory is the application's current working directory.</span></span>  
  
 <span data-ttu-id="386d4-251">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-251">-or-</span></span>  
  
 <span data-ttu-id="386d4-252">ディレクトリまたはそのファイルのうちの 1 つについて開かれているハンドルがあり、かつオペレーティング システムが Windows XP 以前です。</span><span class="sxs-lookup"><span data-stu-id="386d4-252">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="386d4-253">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-253">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="386d4-254">詳細については、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="386d4-254">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-255">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-255">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="386d4-256">書き込み権限の必要なフラグの書き込み、<see langword="DirectoryInfo" />とサブディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="386d4-256">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-257">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-257">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-258">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-258">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="386d4-259">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-259">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-260"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-260">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-261">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションの列挙を開始する<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-261">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-262">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>の配列全体を待つ必要があります<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-262">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-263">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-263">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-264">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-264">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="386d4-265">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-265">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-266">次の例は、C:\Program Files ディレクトリ下のサブディレクトリを列挙しの値をチェックして 2009年以前に作成されたすべてのディレクトリの名前を取得する LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="386d4-266">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="386d4-267">サブディレクトリの名前のみ必要がある場合は、静的なを使用して<xref:System.IO.Directory>パフォーマンス向上のためのクラスです。</span><span class="sxs-lookup"><span data-stu-id="386d4-267">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="386d4-268">例については、次を参照してください。、<xref:System.IO.Directory.EnumerateDirectories%28System.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="386d4-268">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-269"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-269">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-270">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-270">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-271">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-271">The search string to match against the names of directories.</span></span>  <span data-ttu-id="386d4-272">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-272">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="386d4-273">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-273">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="386d4-274"><paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-274">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-275">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-275">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-276">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-276">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-277">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-277">Wildcard specifier</span></span>|<span data-ttu-id="386d4-278">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-278">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-279">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-279">\* (asterisk)</span></span>|<span data-ttu-id="386d4-280">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-280">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-281">?</span><span class="sxs-lookup"><span data-stu-id="386d4-281">?</span></span> <span data-ttu-id="386d4-282">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-282">(question mark)</span></span>|<span data-ttu-id="386d4-283">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-283">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-284">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-284">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-285">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-285">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-286">".</span><span class="sxs-lookup"><span data-stu-id="386d4-286">".</span></span> <span data-ttu-id="386d4-287">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-287">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-288"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-288">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-289">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションの列挙を開始する<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-289">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-290">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>の配列全体を待つ必要があります<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-290">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-291">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-291">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-292">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-292">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="386d4-293">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-293">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-294"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-294"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-295"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-295">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-296">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-296">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-297">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-297">The search string to match against the names of directories.</span></span>  <span data-ttu-id="386d4-298">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-298">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="386d4-299">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="386d4-299">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="386d4-300">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="386d4-300">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="386d4-301">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-301">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="386d4-302"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-302">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-303">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-303">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-304">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-304">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-305">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-305">Wildcard specifier</span></span>|<span data-ttu-id="386d4-306">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-306">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-307">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-307">\* (asterisk)</span></span>|<span data-ttu-id="386d4-308">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-308">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-309">?</span><span class="sxs-lookup"><span data-stu-id="386d4-309">?</span></span> <span data-ttu-id="386d4-310">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-310">(question mark)</span></span>|<span data-ttu-id="386d4-311">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-311">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-312">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-312">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-313">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-313">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-314">".</span><span class="sxs-lookup"><span data-stu-id="386d4-314">".</span></span> <span data-ttu-id="386d4-315">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-315">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-316"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-316">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-317">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションの列挙を開始する<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-317">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-318">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>の配列全体を待つ必要があります<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-318">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-319">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-319">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-320">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-320">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="386d4-321">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-321">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-322">指定されたディレクトリから次の例では、このメソッドを使用して、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>開始ディレクトリ内のディレクトリとファイルを列挙し、いずれかの詳細を表示する方法を超えるファイル 10 MB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="386d4-322">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-323"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-323"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="386d4-324"><paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-324"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-325"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-325">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-326">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-326">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-327">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-327">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-328">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-328">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="386d4-329">現在のディレクトリ内の列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-329">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-330"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-330">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-331">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-331">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-332">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-332">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-333">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-333">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-334">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-334">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="386d4-335">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-335">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-336">次の例は、指定したディレクトリの下にファイルを列挙しの値をチェックして 2009年以前に作成されたすべてのファイルの名前を取得する LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="386d4-336">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="386d4-337">ファイルの名前のみ必要がある場合、静的なを使用して<xref:System.IO.Directory>パフォーマンス向上のためのクラスです。</span><span class="sxs-lookup"><span data-stu-id="386d4-337">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="386d4-338">例については、次を参照してください。、<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="386d4-338">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="386d4-339">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-339">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="386d4-340">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-340">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-341"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-341">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-342">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-342">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-343">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-343">The search string to match against the names of files.</span></span>  <span data-ttu-id="386d4-344">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-344">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="386d4-345">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-345">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="386d4-346"><paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-346">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-347">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-347">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-348">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-348">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-349">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-349">Wildcard specifier</span></span>|<span data-ttu-id="386d4-350">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-350">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-351">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-351">\* (asterisk)</span></span>|<span data-ttu-id="386d4-352">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-352">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-353">?</span><span class="sxs-lookup"><span data-stu-id="386d4-353">?</span></span> <span data-ttu-id="386d4-354">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-354">(question mark)</span></span>|<span data-ttu-id="386d4-355">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-355">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-356">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-356">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-357">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-357">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-358">".</span><span class="sxs-lookup"><span data-stu-id="386d4-358">".</span></span> <span data-ttu-id="386d4-359">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-359">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-360"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-360">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-361">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-361">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-362">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-362">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-363">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-363">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-364">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-364">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="386d4-365">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-365">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-366">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-366">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="386d4-367">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-367">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-368"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-368"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-369"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-369">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-370">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-370">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-371">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-371">The search string to match against the names of files.</span></span>  <span data-ttu-id="386d4-372">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-372">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="386d4-373">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="386d4-373">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="386d4-374">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="386d4-374">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="386d4-375">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-375">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="386d4-376"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-376">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-377">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-377">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-378">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-378">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-379">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-379">Wildcard specifier</span></span>|<span data-ttu-id="386d4-380">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-380">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-381">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-381">\* (asterisk)</span></span>|<span data-ttu-id="386d4-382">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-382">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-383">?</span><span class="sxs-lookup"><span data-stu-id="386d4-383">?</span></span> <span data-ttu-id="386d4-384">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-384">(question mark)</span></span>|<span data-ttu-id="386d4-385">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-385">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-386">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-386">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-387">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-387">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-388">".</span><span class="sxs-lookup"><span data-stu-id="386d4-388">".</span></span> <span data-ttu-id="386d4-389">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-389">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-390"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-390">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-391">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-391">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-392">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-392">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-393">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-393">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-394">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-394">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="386d4-395">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-395">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-396">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-396">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="386d4-397">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-397">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-398"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-398"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="386d4-399"><paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-399"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-400"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-400">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-401">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-401">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-402">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-402">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-403">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-403">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="386d4-404">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-404">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-405"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-405">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-406">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションの列挙を開始する<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-406">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-407">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>の配列全体を待つ必要があります<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-407">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-408">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-408">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-409">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-409">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="386d4-410">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-410">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-411"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-411">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-412">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-412">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-413">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-413">The search string to match against the names of directories.</span></span>  <span data-ttu-id="386d4-414">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-414">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="386d4-415">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-415">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="386d4-416"><paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-416">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-417">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-417">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-418">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-418">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-419">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-419">Wildcard specifier</span></span>|<span data-ttu-id="386d4-420">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-420">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-421">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-421">\* (asterisk)</span></span>|<span data-ttu-id="386d4-422">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-422">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-423">?</span><span class="sxs-lookup"><span data-stu-id="386d4-423">?</span></span> <span data-ttu-id="386d4-424">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-424">(question mark)</span></span>|<span data-ttu-id="386d4-425">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-425">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-426">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-426">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-427">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-427">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-428">".</span><span class="sxs-lookup"><span data-stu-id="386d4-428">".</span></span> <span data-ttu-id="386d4-429">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-429">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-430"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-430">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-431">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションの列挙を開始する<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-431">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-432">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>の配列全体を待つ必要があります<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-432">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-433">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-433">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-434">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-434">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="386d4-435">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-435">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-436"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-436"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-437"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-437">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-438">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-438">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-439">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-439">The search string to match against the names of directories.</span></span>  <span data-ttu-id="386d4-440">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-440">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="386d4-441">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="386d4-441">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="386d4-442">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="386d4-442">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="386d4-443">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-443">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="386d4-444"><paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="386d4-444">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-445">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-445">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-446">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-446">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-447">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-447">Wildcard specifier</span></span>|<span data-ttu-id="386d4-448">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-448">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-449">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-449">\* (asterisk)</span></span>|<span data-ttu-id="386d4-450">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-450">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-451">?</span><span class="sxs-lookup"><span data-stu-id="386d4-451">?</span></span> <span data-ttu-id="386d4-452">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-452">(question mark)</span></span>|<span data-ttu-id="386d4-453">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-453">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-454">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-454">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-455">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-455">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-456">".</span><span class="sxs-lookup"><span data-stu-id="386d4-456">".</span></span> <span data-ttu-id="386d4-457">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-457">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-458"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-458">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-459">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションの列挙を開始する<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-459">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-460">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>の配列全体を待つ必要があります<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-460">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-461">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-461">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-462">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-462">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="386d4-463">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-463">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-464"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-464"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="386d4-465"><paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-465"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-466"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-466">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-467">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-467">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="386d4-468">ディレクトリが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-468">Gets a value indicating whether the directory exists.</span></span></summary>
        <value>
          <span data-ttu-id="386d4-469">ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="386d4-469"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-470"><xref:System.IO.DirectoryInfo.Exists%2A>プロパティから返される`false`指定したファイルが存在するかどうかを判断するときにエラーが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="386d4-470">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="386d4-471">これは無効な文字または文字が多すぎます、失敗、または見つからないディスクでは、ファイル名を渡すなどの例外が発生する状況で発生する、呼び出し元には、ファイルの読み取りアクセス許可がない場合またはします。</span><span class="sxs-lookup"><span data-stu-id="386d4-471">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-472">次の例での使用、`Exists`ターゲット ディレクトリにコピーして、ソース ディレクトリのコンテキストのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="386d4-472">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="386d4-473">ディレクトリの絶対パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-473">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="386d4-474">絶対パスを含んでいる文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-474">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-475">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-475">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-476">使用して<xref:System.IO.DirectoryInfo.GetAccessControl%2A>アクセス権を取得するメソッドが現在のファイルのリスト (ACL) エントリを制御します。</span><span class="sxs-lookup"><span data-stu-id="386d4-476">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="386d4-477">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="386d4-477">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-478">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-478">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="386d4-479">ディレクトリのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-479">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-480">呼び出すことと同じではこのメソッドのオーバー ロードを呼び出して、<xref:System.IO.Directory.GetAccessControl%2A>メソッドのオーバー ロードと、アクセスを指定するコントロールでのセクションでは<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="386d4-480">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="386d4-481">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を現在のファイルのアクセス制御リスト (ACL) エントリを取得する方法です。</span><span class="sxs-lookup"><span data-stu-id="386d4-481">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="386d4-482">ACL には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="386d4-482">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="386d4-483">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="386d4-483">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-484">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>と<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドを追加し、削除、アクセス制御リスト (ACL) エントリをディレクトリからです。</span><span class="sxs-lookup"><span data-stu-id="386d4-484">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="386d4-485">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="386d4-485">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="386d4-486">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="386d4-486">The directory is read-only.</span></span>  
  
 <span data-ttu-id="386d4-487">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-487">-or-</span></span>  
  
 <span data-ttu-id="386d4-488">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-488">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="386d4-489">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-489">-or-</span></span>  
  
 <span data-ttu-id="386d4-490">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-490">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="386d4-491">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="386d4-491">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="386d4-492">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-492">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-493">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</span><span class="sxs-lookup"><span data-stu-id="386d4-493">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="386d4-494">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-494">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="386d4-495">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="386d4-495">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="386d4-496">取得するアクセス制御リスト (ACL) の情報の型を指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="386d4-496">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="386d4-497">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリに関する指定された型のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-497">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="386d4-498"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> パラメーターが示すファイルのアクセス制御規則をカプセル化する <paramref name="path" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-498">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
 <span data-ttu-id="386d4-499">例外</span><span class="sxs-lookup"><span data-stu-id="386d4-499">Exceptions</span></span>  
  
 <span data-ttu-id="386d4-500"><list type="table"><listheader><term> 例外の種類</span><span class="sxs-lookup"><span data-stu-id="386d4-500"><list type="table"><listheader><term> Exception type</span></span>  
  
 <span data-ttu-id="386d4-501"></term><description>条件</span><span class="sxs-lookup"><span data-stu-id="386d4-501"></term><description> Condition</span></span>  
  
 <span data-ttu-id="386d4-502"></description></listheader><item><term><see cref="T:System.SystemException" /></term><description> ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="386d4-502"></description></listheader><item><term><see cref="T:System.SystemException" /></term><description> The directory could not be found or modified.</span></span>  
  
 <span data-ttu-id="386d4-503"></description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> 現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-503"></description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The current process does not have access to open the directory.</span></span>  
  
 <span data-ttu-id="386d4-504"></description></item><item><term><see cref="T:System.IO.IOException" /></term><description> ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="386d4-504"></description></item><item><term><see cref="T:System.IO.IOException" /></term><description> An I/O error occurred while opening the directory.</span></span>  
  
 <span data-ttu-id="386d4-505"></description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> 現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-505"></description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 <span data-ttu-id="386d4-506"></description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="386d4-506"></description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The directory is read-only.</span></span>  
  
 <span data-ttu-id="386d4-507">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-507">-or-</span></span>  
  
 <span data-ttu-id="386d4-508">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-508">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="386d4-509">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-509">-or-</span></span>  
  
 <span data-ttu-id="386d4-510">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-510">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-511">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を現在のファイルのアクセス制御リスト (ACL) エントリを取得する方法です。</span><span class="sxs-lookup"><span data-stu-id="386d4-511">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="386d4-512">ACL には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="386d4-512">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="386d4-513">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="386d4-513">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-514">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</span><span class="sxs-lookup"><span data-stu-id="386d4-514">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="386d4-515">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-515">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="386d4-516">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="386d4-516">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-517">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-517">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-518">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-518">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="386d4-519"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-519">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-520">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-520">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="386d4-521">このメソッドは、再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-521">This method is not recursive.</span></span>  
  
 <span data-ttu-id="386d4-522">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-522">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-523">次の例では、ルート ディレクトリ内のすべてのディレクトリを取得し、ディレクトリ名を表示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-523">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-524"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトにカプセル化されているパスが無効です (割り当てられていないドライブが指定されている場合など)。</span><span class="sxs-lookup"><span data-stu-id="386d4-524">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-525">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-525">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="386d4-526">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-526">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-527">ディレクトリを読み取る。</span><span class="sxs-lookup"><span data-stu-id="386d4-527">for reading directories.</span></span> <span data-ttu-id="386d4-528">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="386d4-528">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-529">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-529">The search string to match against the names of directories.</span></span>  <span data-ttu-id="386d4-530">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-530">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="386d4-531">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-531">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="386d4-532"><see langword="DirectoryInfo" /> に一致する <paramref name="searchPattern" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-532">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-533">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-533">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-534">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-534">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-535">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-535">Wildcard specifier</span></span>|<span data-ttu-id="386d4-536">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-536">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-537">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-537">\* (asterisk)</span></span>|<span data-ttu-id="386d4-538">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-538">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-539">?</span><span class="sxs-lookup"><span data-stu-id="386d4-539">?</span></span> <span data-ttu-id="386d4-540">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-540">(question mark)</span></span>|<span data-ttu-id="386d4-541">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-541">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-542">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-542">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-543">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-543">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-544">".</span><span class="sxs-lookup"><span data-stu-id="386d4-544">".</span></span> <span data-ttu-id="386d4-545">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-545">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-546">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-546">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-547">次の例では、パス内の指定した文字を含むディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="386d4-547">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-548"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-548"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-549"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-549"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-550"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-550">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="386d4-551">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-551">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-552">ファイルとディレクトリとパスにアクセスするための読み取り。</span><span class="sxs-lookup"><span data-stu-id="386d4-552">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="386d4-553">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="386d4-553">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-554">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-554">The search string to match against the names of directories.</span></span>  <span data-ttu-id="386d4-555">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-555">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="386d4-556">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="386d4-556">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="386d4-557">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にある、指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-557">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="386d4-558"><see langword="DirectoryInfo" /> に一致する <paramref name="searchPattern" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-558">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-559">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-559">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-560">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-560">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-561">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-561">Wildcard specifier</span></span>|<span data-ttu-id="386d4-562">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-562">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-563">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-563">\* (asterisk)</span></span>|<span data-ttu-id="386d4-564">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-564">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-565">?</span><span class="sxs-lookup"><span data-stu-id="386d4-565">?</span></span> <span data-ttu-id="386d4-566">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-566">(question mark)</span></span>|<span data-ttu-id="386d4-567">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-567">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-568">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-568">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-569">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-569">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-570">".</span><span class="sxs-lookup"><span data-stu-id="386d4-570">".</span></span> <span data-ttu-id="386d4-571">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-571">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-572">サブディレクトリがないかに一致するサブディレクトリのかどうか、`searchPattern`パラメーター、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-572">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="386d4-573">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-573">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-574">次の例では、すべてのディレクトリおよび文字"c"で始まるファイルを示してで"c:\\"です。</span><span class="sxs-lookup"><span data-stu-id="386d4-574">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-575"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-575"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-576"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-576"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="386d4-577"><paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-577"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-578"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-578">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="386d4-579">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-579">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-580">ファイルとディレクトリとパスにアクセスするための読み取り。</span><span class="sxs-lookup"><span data-stu-id="386d4-580">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="386d4-581">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="386d4-581">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-582">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-582">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-583">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-583">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="386d4-584"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-584">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-585"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-585">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-586">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-586">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-587">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-587">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-588">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-588">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-589">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-589">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="386d4-590">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの特定の並べ替え順序が必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="386d4-590">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="386d4-591">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-591">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-592">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-592">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="386d4-593">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-593">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-594">マップされていないドライブにあるなど、パスが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-594">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-595">ディレクトリを読み取る。</span><span class="sxs-lookup"><span data-stu-id="386d4-595">for reading directories.</span></span> <span data-ttu-id="386d4-596">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="386d4-596">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-597">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-597">The search string to match against the names of files.</span></span>  <span data-ttu-id="386d4-598">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-598">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="386d4-599">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-599">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="386d4-600"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-600">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-601">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-601">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-602">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-602">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-603">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-603">Wildcard specifier</span></span>|<span data-ttu-id="386d4-604">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-604">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-605">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-605">\* (asterisk)</span></span>|<span data-ttu-id="386d4-606">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-606">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-607">?</span><span class="sxs-lookup"><span data-stu-id="386d4-607">?</span></span> <span data-ttu-id="386d4-608">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-608">(question mark)</span></span>|<span data-ttu-id="386d4-609">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-609">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-610">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-610">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-611">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-611">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-612">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-612">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-613"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-613">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-614">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-614">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-615">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-615">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-616">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-616">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-617">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-617">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="386d4-618">次のワイルドカードの指定子が許可される、`searchPattern`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="386d4-618">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="386d4-619">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="386d4-619">Wildcard character</span></span>|<span data-ttu-id="386d4-620">説明</span><span class="sxs-lookup"><span data-stu-id="386d4-620">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="386d4-621">0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-621">Zero or more characters.</span></span>|  
|<span data-ttu-id="386d4-622">?</span><span class="sxs-lookup"><span data-stu-id="386d4-622">?</span></span>|<span data-ttu-id="386d4-623">正確に 0 個または 1 つの文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-623">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="386d4-624">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの特定の並べ替え順序が必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="386d4-624">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="386d4-625">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-625">Wildcards are permitted.</span></span> <span data-ttu-id="386d4-626">たとえば、 `searchPattern` "\*.txt"検索のすべてのファイル名"txt"の拡張機能を含む文字列します。</span><span class="sxs-lookup"><span data-stu-id="386d4-626">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="386d4-627">`searchPattern`文字列"s\*"すべて"s"で始まる名前のファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-627">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="386d4-628">ファイルと一致するファイル、または いいえがある場合、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-628">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="386d4-629">アスタリスクのワイルドカード文字を使用する場合、 `searchPattern` (たとえば、"\*.txt")、一致の動作は指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-629">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="386d4-630">A`searchPattern`ちょうど 3 文字の拡張機能が最初の 3 文字で指定されたファイル拡張子が一致する 3 つ以上の文字の拡張子を持つファイルを返すファイルを使用して、`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-630">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="386d4-631">A`searchPattern`ファイルを使用して 1 つ、2 つ、または 4 つ以上の文字の拡張機能がその長さだけで指定されたファイル拡張子に一致する拡張子を持つファイルのみを返す、`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-631">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="386d4-632">疑問符 (?) のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-632">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="386d4-633">たとえば、2 つのファイル ディレクトリ、"file1.txt"および"file1.txtother"の検索パターンで指定された"ファイルか。txt"には、検索パターンの中に、最初のファイルのみが返されます"ファイル\*.txt"ファイル ファイルの両方を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-633">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="386d4-634">検索パターンに似ていますので、このメソッドは、8.3 ファイル名の形式と長いファイル名の形式の両方でのファイル名をチェックして、"* 1\*.txt"予期しないファイル名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-634">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="386d4-635">などの検索パターンを使用して"\*1\*.txt"と同等の 8.3 ファイル名の形式が"longf~1.txt"になるので"longfilename.txt"が返されます。</span><span class="sxs-lookup"><span data-stu-id="386d4-635">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="386d4-636">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-636">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-637">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-637">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="386d4-638">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-638">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-639"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-639"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-640"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-640"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-641">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-641">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-642">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-642">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-643">パスにファイルとディレクトリからの読み取りにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="386d4-643">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="386d4-644">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="386d4-644">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-645">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-645">The search string to match against the names of files.</span></span>  <span data-ttu-id="386d4-646">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-646">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="386d4-647">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="386d4-647">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="386d4-648">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-648">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="386d4-649"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-649">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-650"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-650">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="386d4-651">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="386d4-651">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="386d4-652">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-652">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="386d4-653">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="386d4-653">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="386d4-654">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-654">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="386d4-655">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-655">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-656">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="386d4-656">Wildcard character</span></span>|<span data-ttu-id="386d4-657">説明</span><span class="sxs-lookup"><span data-stu-id="386d4-657">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="386d4-658">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-658">\* (asterisk)</span></span>|<span data-ttu-id="386d4-659">0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-659">Zero or more characters.</span></span>|  
|<span data-ttu-id="386d4-660">?</span><span class="sxs-lookup"><span data-stu-id="386d4-660">?</span></span> <span data-ttu-id="386d4-661">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-661">(question mark)</span></span>|<span data-ttu-id="386d4-662">正確に 0 個または 1 つの文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-662">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="386d4-663">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの特定の並べ替え順序が必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="386d4-663">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="386d4-664">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-664">Wildcards are permitted.</span></span> <span data-ttu-id="386d4-665">たとえば、 `searchPattern` "\*.txt"検索のすべてのファイル名"txt"の拡張機能を含む文字列します。</span><span class="sxs-lookup"><span data-stu-id="386d4-665">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="386d4-666">`searchPattern`文字列"s\*"すべて"s"で始まる名前のファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-666">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="386d4-667">ファイルと一致するファイル、または いいえがある場合、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-667">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="386d4-668">アスタリスクのワイルドカード文字を使用する場合、 `searchPattern` (たとえば、"\*.txt")、一致の動作は指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="386d4-668">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="386d4-669">A`searchPattern`ちょうど 3 文字の拡張機能が最初の 3 文字で指定されたファイル拡張子が一致する 3 つ以上の文字の拡張子を持つファイルを返すファイルを使用して、`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-669">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="386d4-670">A`searchPattern`ファイルを使用して 1 つ、2 つ、または 4 つ以上の文字の拡張機能がその長さだけで指定されたファイル拡張子に一致する拡張子を持つファイルのみを返す、`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-670">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="386d4-671">疑問符 (?) のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-671">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="386d4-672">たとえば、2 つのファイル ディレクトリ、"file1.txt"および"file1.txtother"の検索パターンで指定された"ファイルか。txt"には、検索パターンの中に、最初のファイルのみが返されます"ファイル\*.txt"ファイル ファイルの両方を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-672">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="386d4-673">次の一覧の長さが異なるの動作を示しています、`searchPattern`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="386d4-673">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="386d4-674">"\* .abc"、拡張機能 of.abc,.abcd,.abcde,.abcdef を持つファイルを返すにします。</span><span class="sxs-lookup"><span data-stu-id="386d4-674">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="386d4-675">"\*.abcd"では、拡張子 of.abcd を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-675">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="386d4-676">"\*.abcde"では、拡張子 of.abcde を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-676">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="386d4-677">"\*.abcdef"では、拡張子 of.abcdef を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-677">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="386d4-678">検索パターンに似ていますので、このメソッドは、8.3 ファイル名の形式と長いファイル名の形式の両方でのファイル名をチェックして、"* 1\*.txt"予期しないファイル名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="386d4-678">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="386d4-679">などの検索パターンを使用して"\*1\*.txt"と同等の 8.3 ファイル名の形式が"longf~1.txt"になるので"longfilename.txt"が返されます。</span><span class="sxs-lookup"><span data-stu-id="386d4-679">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="386d4-680">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-680">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-681">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-681">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="386d4-682">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-682">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-683"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-683"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-684"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-684"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="386d4-685"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-685"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-686">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-686">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-687">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-687">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-688">パスにファイルとディレクトリからの読み取りにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="386d4-688">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="386d4-689">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="386d4-689">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="386d4-690">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-690">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-691">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-691">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="386d4-692">厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-692">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-693">ファイルまたはディレクトリがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-693">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="386d4-694">このメソッドは、再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-694">This method is not recursive.</span></span>  
  
 <span data-ttu-id="386d4-695">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>です。</span><span class="sxs-lookup"><span data-stu-id="386d4-695">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="386d4-696">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="386d4-696">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="386d4-697">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-697">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-698">次の例では、ファイルと、指定したディレクトリの下のディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="386d4-698">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-699">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-699">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-700">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-700">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="386d4-701">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-701">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="386d4-702">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-702">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="386d4-703">検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-703">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-704">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-704">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-705">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-705">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-706">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-706">Wildcard specifier</span></span>|<span data-ttu-id="386d4-707">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-707">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-708">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-708">\* (asterisk)</span></span>|<span data-ttu-id="386d4-709">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-709">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-710">?</span><span class="sxs-lookup"><span data-stu-id="386d4-710">?</span></span> <span data-ttu-id="386d4-711">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-711">(question mark)</span></span>|<span data-ttu-id="386d4-712">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-712">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-713">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-713">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-714">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-714">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-715">".</span><span class="sxs-lookup"><span data-stu-id="386d4-715">".</span></span> <span data-ttu-id="386d4-716">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-716">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-717">このメソッドは、再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-717">This method is not recursive.</span></span>  
  
 <span data-ttu-id="386d4-718">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>です。</span><span class="sxs-lookup"><span data-stu-id="386d4-718">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="386d4-719">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="386d4-719">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="386d4-720">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-720">Wild cards are permitted.</span></span> <span data-ttu-id="386d4-721">たとえば、`searchPattern`文字列"\* t"内のすべてのディレクトリ名の検索`path`文字"t"で終了します。</span><span class="sxs-lookup"><span data-stu-id="386d4-721">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="386d4-722">`searchPattern`文字列"s\*"内のすべてのディレクトリ名の検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-722">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-723">文字列".."でのみ使用できます`searchPattern`指定されている場合、有効なディレクトリ名の一部としてなど、ディレクトリ名に"、。 します。b"です。</span><span class="sxs-lookup"><span data-stu-id="386d4-723">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="386d4-724">ディレクトリ階層を移動する使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="386d4-724">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="386d4-725">ファイルまたはディレクトリ、またはファイルやに一致するディレクトリがある場合、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-725">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="386d4-726">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-726">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-727">次の例では、ファイルおよび指定した検索パターンに一致するディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="386d4-727">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-728"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-728"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-729"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-729"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-730">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-730">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-731">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-731">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-732">ファイルとディレクトリとパスにアクセスするための読み取り。</span><span class="sxs-lookup"><span data-stu-id="386d4-732">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="386d4-733">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="386d4-733">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="386d4-734">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="386d4-734">The search string to match against the names of directories and filesa.</span></span>  <span data-ttu-id="386d4-735">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-735">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="386d4-736">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="386d4-736">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="386d4-737">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="386d4-737">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="386d4-738">指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-738">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="386d4-739">検索条件に一致するファイル システム エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="386d4-739">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-740">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-740">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="386d4-741">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="386d4-741">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="386d4-742">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="386d4-742">Wildcard specifier</span></span>|<span data-ttu-id="386d4-743">一致件数</span><span class="sxs-lookup"><span data-stu-id="386d4-743">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="386d4-744">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="386d4-744">\* (asterisk)</span></span>|<span data-ttu-id="386d4-745">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-745">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="386d4-746">?</span><span class="sxs-lookup"><span data-stu-id="386d4-746">?</span></span> <span data-ttu-id="386d4-747">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="386d4-747">(question mark)</span></span>|<span data-ttu-id="386d4-748">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="386d4-748">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="386d4-749">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="386d4-749">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="386d4-750">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="386d4-750">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="386d4-751">".</span><span class="sxs-lookup"><span data-stu-id="386d4-751">".</span></span> <span data-ttu-id="386d4-752">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="386d4-752">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="386d4-753">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>です。</span><span class="sxs-lookup"><span data-stu-id="386d4-753">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="386d4-754">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="386d4-754">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="386d4-755">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="386d4-755">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-756"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="386d4-756"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-757"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-757"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="386d4-758"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-758"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-759">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="386d4-759">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-760">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-760">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="386d4-761">このディレクトリの移動先の名前とパス。</span><span class="sxs-lookup"><span data-stu-id="386d4-761">The name and path to which to move this directory.</span></span> <span data-ttu-id="386d4-762">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</span><span class="sxs-lookup"><span data-stu-id="386d4-762">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="386d4-763">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</span><span class="sxs-lookup"><span data-stu-id="386d4-763">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="386d4-764"><see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</span><span class="sxs-lookup"><span data-stu-id="386d4-764">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-765">このメソッドは、<xref:System.IO.IOException>場合、たとえば、c:\mydir を c:\public に移動しようとして、c:\public が既に存在します。</span><span class="sxs-lookup"><span data-stu-id="386d4-765">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="386d4-766">指定する必要があります"c:\\\public\\\mydir"として、`destDirName`パラメーターなど、新しいディレクトリ名を指定または"c:\\\newdir"です。</span><span class="sxs-lookup"><span data-stu-id="386d4-766">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="386d4-767">このメソッドは、読み取り専用のディレクトリにディレクトリを移動を許可します。</span><span class="sxs-lookup"><span data-stu-id="386d4-767">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="386d4-768">いずれのディレクトリの読み取り/書き込み属性が影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="386d4-768">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="386d4-769">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-769">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-770">次の例では、ディレクトリを移動を示しています。</span><span class="sxs-lookup"><span data-stu-id="386d4-770">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386d4-771"><paramref name="destDirName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-771"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="386d4-772"><paramref name="destDirName" /> が空の文字列 (''") です。</span><span class="sxs-lookup"><span data-stu-id="386d4-772"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="386d4-773">ディレクトリを別のボリュームに移動しようとしました。</span><span class="sxs-lookup"><span data-stu-id="386d4-773">An attempt was made to move a directory to a different volume.</span></span>  
  
 <span data-ttu-id="386d4-774">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-774">-or-</span></span>  
  
 <span data-ttu-id="386d4-775"><paramref name="destDirName" /> が既に存在します。</span><span class="sxs-lookup"><span data-stu-id="386d4-775"><paramref name="destDirName" /> already exists.</span></span>  
  
 <span data-ttu-id="386d4-776">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-776">-or-</span></span>  
  
 <span data-ttu-id="386d4-777">このパスへのアクセスが許可されていません。</span><span class="sxs-lookup"><span data-stu-id="386d4-777">You are not authorized to access this path.</span></span>  
  
 <span data-ttu-id="386d4-778">- または -</span><span class="sxs-lookup"><span data-stu-id="386d4-778">-or-</span></span>  
  
 <span data-ttu-id="386d4-779">移動するディレクトリと対象のディレクトリの名前が同じです。</span><span class="sxs-lookup"><span data-stu-id="386d4-779">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-780">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-780">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="386d4-781">対象のディレクトリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="386d4-781">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-782">読み取りや書き込みファイルとディレクトリとコピー先ディレクトリにアクセスするためです。</span><span class="sxs-lookup"><span data-stu-id="386d4-782">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="386d4-783">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-783">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="386d4-784">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="386d4-784">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="386d4-785"><see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-785">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="386d4-786">ディレクトリ名。</span><span class="sxs-lookup"><span data-stu-id="386d4-786">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-787">これは、 <xref:System.IO.DirectoryInfo.Name%2A> "Bin"などのディレクトリの名前のみを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-787">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="386d4-788">"C:\public\Bin"など、完全なパスを取得する、<xref:System.IO.FileSystemInfo.FullName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="386d4-788">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="386d4-789"><xref:System.IO.DirectoryInfo.Name%2A>のプロパティ、<xref:System.IO.DirectoryInfo>権限は必要ありません (を構築するために必要なディレクトリに読み取りアクセス許可を超える、 <xref:System.IO.DirectoryInfo.Exists%2A>) ディレクトリの名前を与えることができますが、します。</span><span class="sxs-lookup"><span data-stu-id="386d4-789">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="386d4-790">渡す必要がある場合は、out、<xref:System.IO.DirectoryInfo>暗号強度が高い名前を持つ保護されたディレクトリに、信頼されていないコードの使用のダミー ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="386d4-790">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</span></span>  
  
 <span data-ttu-id="386d4-791">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-791">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-792">次の例には、現在の名前が表示されます。`DirectoryInfo`だけをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="386d4-792">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="386d4-793">指定されたサブディレクトリの親ディレクトリを取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-793">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="386d4-794">親ディレクトリ。 または<see langword="null" />パスが null の場合、またはファイル パスがルートを表す場合 (など"\\"、"c:"、または \*"\\\server\share") です。</span><span class="sxs-lookup"><span data-stu-id="386d4-794">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-795">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="386d4-795">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-796">次の例では、指定したディレクトリの親ディレクトリを参照するを示しています。</span><span class="sxs-lookup"><span data-stu-id="386d4-796">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-797">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-797">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-798">ファイルとディレクトリとパスにアクセスするための読み取り。</span><span class="sxs-lookup"><span data-stu-id="386d4-798">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="386d4-799">関連する列挙: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="386d4-799">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="386d4-800">ディレクトリのルート部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="386d4-800">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="386d4-801">ディレクトリのルートを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-801">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="386d4-802">次の例では、指定したディレクトリのルートの場所を表示します。</span><span class="sxs-lookup"><span data-stu-id="386d4-802">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="386d4-803">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-803">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-804">ファイルとディレクトリとパスにアクセスするための読み取り。</span><span class="sxs-lookup"><span data-stu-id="386d4-804">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="386d4-805">関連する列挙: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="386d4-805">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="386d4-806"><c>path</c> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-806">An object that describes an ACL entry to apply to the directory described by the <c>path</c> parameter.</span></span></param>
        <summary><span data-ttu-id="386d4-807"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の<see cref="T:System.IO.DirectoryInfo" /> オブジェクトが示すディレクトリに適用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-807">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386d4-808">アクセス制御リスト (ACL) には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="386d4-808">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="386d4-809">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="386d4-809">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="386d4-810"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドが継承されない ACL リストを表すファイルに ACL エントリを適用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-810">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="386d4-811">ACL に指定された`directorySecurity`ディレクトリの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="386d4-811">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="386d4-812">新しいユーザーのアクセス許可を追加するには、使用、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドを既存の ACL を取得し、それを変更します。</span><span class="sxs-lookup"><span data-stu-id="386d4-812">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="386d4-813"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドにのみが引き続き発生する<xref:System.Security.AccessControl.DirectorySecurity>オブジェクトがオブジェクトの作成後に変更されました。</span><span class="sxs-lookup"><span data-stu-id="386d4-813">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="386d4-814">場合、<xref:System.Security.AccessControl.DirectorySecurity>オブジェクトが変更されていない、ファイルに永続化はできません。</span><span class="sxs-lookup"><span data-stu-id="386d4-814">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="386d4-815">したがって、取得することはありません、 <xref:System.Security.AccessControl.DirectorySecurity> 1 つのファイルからオブジェクトを別のファイルを同じオブジェクトを再適用します。</span><span class="sxs-lookup"><span data-stu-id="386d4-815">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="386d4-816">ACL の情報を別の 1 つのファイルにコピー: する</span><span class="sxs-lookup"><span data-stu-id="386d4-816">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="386d4-817">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を取得する方法、<xref:System.Security.AccessControl.DirectorySecurity>ソース ファイルからのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-817">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="386d4-818">新しい<xref:System.Security.AccessControl.DirectorySecurity>先のファイル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-818">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="386d4-819">使用して、<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>または<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>メソッドのソースの<xref:System.Security.AccessControl.DirectorySecurity>ACL 情報を取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-819">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="386d4-820">使用して、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>または<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>に情報をコピーする方法は、先には、手順 3. で取得<xref:System.Security.AccessControl.DirectorySecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="386d4-820">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="386d4-821">出力先を設定<xref:System.Security.AccessControl.DirectorySecurity>、変換先を使用してファイル オブジェクト、<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="386d4-821">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386d4-822">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>と<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドを追加し、削除、アクセス制御リスト (ACL) エントリをディレクトリからです。</span><span class="sxs-lookup"><span data-stu-id="386d4-822">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="386d4-823"><paramref name="directorySecurity" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="386d4-823">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="386d4-824">ファイルを検出または変更できませんでした。</span><span class="sxs-lookup"><span data-stu-id="386d4-824">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="386d4-825">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-825">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="386d4-826">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="386d4-826">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="386d4-827">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</span><span class="sxs-lookup"><span data-stu-id="386d4-827">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="386d4-828">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span><span class="sxs-lookup"><span data-stu-id="386d4-828">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="386d4-829">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="386d4-829">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="386d4-830">ユーザーから渡された元のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-830">Returns the original path that was passed by the user.</span></span></summary>
        <returns><span data-ttu-id="386d4-831">ユーザーから渡された元のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="386d4-831">Returns the original path that was passed by the user.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>