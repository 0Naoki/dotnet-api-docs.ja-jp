<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b20188d32caff36d11ff441632a04d34e6b4065" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56402930" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2157e-101">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="2157e-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="2157e-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="2157e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-103">使用して、<xref:System.IO.DirectoryInfo>のコピー、移動、名前変更、作成、およびディレクトリを削除するなどの一般的な操作のクラス。</span><span class="sxs-lookup"><span data-stu-id="2157e-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="2157e-104">オブジェクトを何度も再利用する場合は、検討のインスタンス メソッドを使用して<xref:System.IO.DirectoryInfo>の対応する静的メソッドではなく、<xref:System.IO.Directory>クラスのセキュリティ チェックを常に不要になります。</span><span class="sxs-lookup"><span data-stu-id="2157e-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2157e-105">入力文字列としてのパスを受け入れるメンバーの場合は、そのパスは、整形式である必要があります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="2157e-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="2157e-106">たとえば、パスが完全修飾されて、文字で始まる場合は、パスは、クラスのメソッドで切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="2157e-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="2157e-107">したがって、パスの形式が、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="2157e-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="2157e-108">同様に、パスまたはパスの組み合わせ完全修飾できない 2 回です。</span><span class="sxs-lookup"><span data-stu-id="2157e-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="2157e-109">たとえば、"c:\temp c:\windows"では、ほとんどの場合、例外も発生します。</span><span class="sxs-lookup"><span data-stu-id="2157e-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="2157e-110">パス文字列をそのまま使用するメソッドを使用する場合、パスが整形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="2157e-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="2157e-111">パスを受け入れるメンバーでは、パスがファイルまたはディレクトリを参照できます。</span><span class="sxs-lookup"><span data-stu-id="2157e-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="2157e-112">指定されたパスは相対パスまたはサーバーと共有名の汎用名前付け規則 (UNC) パスにも参照できます。</span><span class="sxs-lookup"><span data-stu-id="2157e-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="2157e-113">たとえば、次のすべてが許容可能なパスです。</span><span class="sxs-lookup"><span data-stu-id="2157e-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="2157e-114">"c:\\\MyDir\\\MyFile.txt"c# の場合、または Visual Basic では、"c:\MyDir\MyFile.txt"にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="2157e-115">"c:\\\MyDir"c# の場合、または Visual Basic では、"c:\MyDir"にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="2157e-116">"MyDir\\\MySubdir"c# の場合、または Visual Basic では、"MyDir\MySubDir"にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="2157e-117">"\\\\\\\MyServer\\\MyShare"c# の場合、または"\\\MyServer\MyShare"Visual Basic でします。</span><span class="sxs-lookup"><span data-stu-id="2157e-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="2157e-118">既定では、新しいディレクトリへの完全な読み取り/書き込みアクセスはすべてのユーザーに付与します。</span><span class="sxs-lookup"><span data-stu-id="2157e-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="2157e-119">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-120">次の例では、メインのメンバーの一部を示します、`DirectoryInfo`クラス。</span><span class="sxs-lookup"><span data-stu-id="2157e-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="2157e-121">次の例では、ディレクトリとその内容をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-122">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-122">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-123">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-124">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="2157e-125">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="2157e-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2157e-126"><see langword="DirectoryInfo" /> を作成する対象のパスを指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="2157e-127">指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2157e-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-128">このコンス トラクターでは、ディレクトリが存在するかどうかはチェックされません。</span><span class="sxs-lookup"><span data-stu-id="2157e-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="2157e-129">このコンス トラクターでは、以降の操作でディスクへのアクセスに使用される文字列のプレース ホルダーです。</span><span class="sxs-lookup"><span data-stu-id="2157e-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="2157e-130">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2157e-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2157e-131">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2157e-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="2157e-132">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-132">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-133">次の例では、このコンス トラクターを使用して、指定されたディレクトリとサブディレクトリを作成し、サブディレクトリを格納するディレクトリを削除できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-134"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-135">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-136"><paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="2157e-137">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="2157e-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-138">ファイルとディレクトリから読み取る。</span><span class="sxs-lookup"><span data-stu-id="2157e-138">for reading from files and directories.</span></span> <span data-ttu-id="2157e-139">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="2157e-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-140">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-140">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-141">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-141">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-142">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-142">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-143">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2157e-143">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-144">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2157e-144">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-145">ディレクトリが既に存在する場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="2157e-145">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="2157e-146">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-147">次の例のチェックが指定されたディレクトリが存在するかどうかを作成しますディレクトリが存在しない場合、ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="2157e-147">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2157e-148">ディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="2157e-148">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-149">ファイルを出力します。</span><span class="sxs-lookup"><span data-stu-id="2157e-149">for writing files.</span></span> <span data-ttu-id="2157e-150">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="2157e-150">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-151">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-151">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-152">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-152">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-153">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-153">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="2157e-154">ディレクトリに適用するアクセス制御。</span><span class="sxs-lookup"><span data-stu-id="2157e-154">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="2157e-155"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトを使用してディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2157e-155">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-156">このメソッドのオーバー ロードを使用すると、セキュリティが適用される前に、ディレクトリにアクセスできる可能性はありませんので、アクセス制御では、ディレクトリを作成できます。</span><span class="sxs-lookup"><span data-stu-id="2157e-156">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="2157e-157">ディレクトリが既に存在する場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="2157e-157">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="2157e-158">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2157e-159"><paramref name="path" /> によって指定されたディレクトリが、読み取り専用であるか、空ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-159">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2157e-160">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-160">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-161"><paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="2157e-161"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-162"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="2157e-163">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="2157e-163">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-164">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="2157e-164">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2157e-165">コロン (:) 文字だけでディレクトリを作成しようとしました。</span><span class="sxs-lookup"><span data-stu-id="2157e-165">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-166">ディレクトリを作成する権限。</span><span class="sxs-lookup"><span data-stu-id="2157e-166">for permission to create a directory.</span></span> <span data-ttu-id="2157e-167">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="2157e-167">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2157e-168">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="2157e-168">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-169">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2157e-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="2157e-170">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="2157e-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2157e-171">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="2157e-171">The specified path.</span></span> <span data-ttu-id="2157e-172">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="2157e-172">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="2157e-173">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2157e-173">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="2157e-174">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="2157e-174">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="2157e-175"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="2157e-175">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-176">指定されているすべてのディレクトリ`path`しない限り、作成の一部`path`が無効です。</span><span class="sxs-lookup"><span data-stu-id="2157e-176">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="2157e-177">`path`パラメーターをファイル パスではなく、ディレクトリ パスを指定します。</span><span class="sxs-lookup"><span data-stu-id="2157e-177">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="2157e-178">サブディレクトリが既に存在する場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="2157e-178">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="2157e-179">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-179">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-180">次の例では、サブディレクトリを作成を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-180">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="2157e-181">この例で作成すると、作成されたディレクトリが削除されます。</span><span class="sxs-lookup"><span data-stu-id="2157e-181">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="2157e-182">そのため、このサンプルをテストするコードで削除する行をコメントします。</span><span class="sxs-lookup"><span data-stu-id="2157e-182">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-183"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="2157e-183"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-184"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-184"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-185">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="2157e-185">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2157e-186">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="2157e-186">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="2157e-187">または</span><span class="sxs-lookup"><span data-stu-id="2157e-187">-or-</span></span> 
<span data-ttu-id="2157e-188"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="2157e-188">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="2157e-189">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="2157e-189">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-190">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-190">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="2157e-191">または</span><span class="sxs-lookup"><span data-stu-id="2157e-191">-or-</span></span> 
<span data-ttu-id="2157e-192">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-192">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="2157e-193"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2157e-193">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2157e-194"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-194"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-195">ファイルを読み書きします。</span><span class="sxs-lookup"><span data-stu-id="2157e-195">for reading and writing files.</span></span> <span data-ttu-id="2157e-196">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="2157e-196">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-197">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-197">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-198">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-198">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-199">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-199">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2157e-200">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="2157e-200">The specified path.</span></span> <span data-ttu-id="2157e-201">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="2157e-201">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="2157e-202">適用するセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-202">The security to apply.</span></span></param>
        <summary><span data-ttu-id="2157e-203">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2157e-203">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="2157e-204">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="2157e-204">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="2157e-205"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="2157e-205">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-206">指定されているすべてのディレクトリ`path`しない限り、作成の一部`path`が無効です。</span><span class="sxs-lookup"><span data-stu-id="2157e-206">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="2157e-207">`path`パラメーターをファイル パスではなく、ディレクトリ パスを指定します。</span><span class="sxs-lookup"><span data-stu-id="2157e-207">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="2157e-208">サブディレクトリが既に存在する場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="2157e-208">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="2157e-209">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-210"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="2157e-210"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-211"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-211"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-212">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="2157e-212">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2157e-213">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="2157e-213">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="2157e-214">または</span><span class="sxs-lookup"><span data-stu-id="2157e-214">-or-</span></span> 
<span data-ttu-id="2157e-215"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="2157e-215">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="2157e-216">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="2157e-216">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-217">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-217">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="2157e-218">または</span><span class="sxs-lookup"><span data-stu-id="2157e-218">-or-</span></span> 
<span data-ttu-id="2157e-219">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-219">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="2157e-220"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2157e-220">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2157e-221"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-221"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-222">ファイルを読み書きします。</span><span class="sxs-lookup"><span data-stu-id="2157e-222">for reading and writing files.</span></span> <span data-ttu-id="2157e-223">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="2157e-223">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-224">パスから <see cref="T:System.IO.DirectoryInfo" /> とその内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="2157e-224">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-225"><see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="2157e-225">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-226">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-226">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-227">次の例は、ディレクトリが空でないを削除しようとした場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="2157e-227">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2157e-228">ディレクトリに読み取り専用のファイルが保存されています。</span><span class="sxs-lookup"><span data-stu-id="2157e-228">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-229">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトに記述されているディレクトリが存在しないか、見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="2157e-229">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2157e-230">ディレクトリが空ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-230">The directory is not empty.</span></span>  
  
<span data-ttu-id="2157e-231">または</span><span class="sxs-lookup"><span data-stu-id="2157e-231">-or-</span></span> 
<span data-ttu-id="2157e-232">このディレクトリは、アプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="2157e-232">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="2157e-233">または</span><span class="sxs-lookup"><span data-stu-id="2157e-233">-or-</span></span> 
<span data-ttu-id="2157e-234">開いているハンドルがディレクトリに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。</span><span class="sxs-lookup"><span data-stu-id="2157e-234">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="2157e-235">開いているハンドルは、ディレクトリを列挙する際に発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2157e-235">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="2157e-236">詳細については、「[方法 : ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="2157e-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-237">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-237">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-238">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2157e-238">for writing directories.</span></span> <span data-ttu-id="2157e-239">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="2157e-239">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-240">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-240">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-241">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-241">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-242">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-242">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="2157e-243">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2157e-243"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2157e-244">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="2157e-244">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-245">場合、`DirectoryInfo`ファイルまたはサブディレクトリがありません、このメソッドは、削除、`DirectoryInfo`場合でも`recursive`は`false`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-245">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="2157e-246">削除しようとすると、`DirectoryInfo`が空でない場合に`recursive`は`false`がスローされます、<xref:System.IO.IOException>します。</span><span class="sxs-lookup"><span data-stu-id="2157e-246">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="2157e-247">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-247">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-248">次の例では、ディレクトリの削除を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-248">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="2157e-249">ディレクトリが削除されるため、最初にコメント アウト、`Delete`ディレクトリが存在するかをテストする行。</span><span class="sxs-lookup"><span data-stu-id="2157e-249">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="2157e-250">ディレクトリが正常に削除されたことをテストするコードの同じ行をコメント解除します。</span><span class="sxs-lookup"><span data-stu-id="2157e-250">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2157e-251">ディレクトリに読み取り専用のファイルが保存されています。</span><span class="sxs-lookup"><span data-stu-id="2157e-251">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-252">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトに記述されているディレクトリが存在しないか、見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="2157e-252">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2157e-253">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2157e-253">The directory is read-only.</span></span>  
  
<span data-ttu-id="2157e-254">または</span><span class="sxs-lookup"><span data-stu-id="2157e-254">-or-</span></span> 
<span data-ttu-id="2157e-255">ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、<paramref name="recursive" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="2157e-255">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="2157e-256">または</span><span class="sxs-lookup"><span data-stu-id="2157e-256">-or-</span></span> 
<span data-ttu-id="2157e-257">このディレクトリは、アプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="2157e-257">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="2157e-258">または</span><span class="sxs-lookup"><span data-stu-id="2157e-258">-or-</span></span> 
<span data-ttu-id="2157e-259">開いているハンドルがディレクトリまたはそのディレクトリ内のファイルに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。</span><span class="sxs-lookup"><span data-stu-id="2157e-259">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="2157e-260">開いているハンドルは、ディレクトリとファイルを列挙する際に発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2157e-260">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="2157e-261">詳細については、「[方法 : ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="2157e-261">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-262">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-262">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="2157e-263">書き込みアクセスを許可するために必要なフラグを書き込み、<see langword="DirectoryInfo" />とサブディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="2157e-263">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-264">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-264">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-265">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-265">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-266">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-266">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-267">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-267">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-268">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-268">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="2157e-269">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-269">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-270"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-271">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションを列挙することができます<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-272">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>、配列全体を待つ必要がある<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-273">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-274">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="2157e-275">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-276">次の例は、C:\Program Files ディレクトリのサブディレクトリを列挙しの値をチェックして 2009年前に作成されたすべてのディレクトリの名前を取得する LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-276">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="2157e-277">サブディレクトリの名前のみ必要がある場合は、静的なを使用して<xref:System.IO.Directory>パフォーマンス向上のためのクラス。</span><span class="sxs-lookup"><span data-stu-id="2157e-277">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="2157e-278">例については、次を参照してください。、<xref:System.IO.Directory.EnumerateDirectories%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2157e-278">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-279"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-279">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-280">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-280">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-281">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-281">The search string to match against the names of directories.</span></span>  <span data-ttu-id="2157e-282">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-282">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="2157e-283">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-283">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="2157e-284"><paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-284">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-285">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-286">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-287">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-287">Wildcard specifier</span></span>|<span data-ttu-id="2157e-288">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-289">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-289">\* (asterisk)</span></span>|<span data-ttu-id="2157e-290">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-291">?</span><span class="sxs-lookup"><span data-stu-id="2157e-291">?</span></span> <span data-ttu-id="2157e-292">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-292">(question mark)</span></span>|<span data-ttu-id="2157e-293">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-294">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-295">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-295">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-296">".</span><span class="sxs-lookup"><span data-stu-id="2157e-296">".</span></span> <span data-ttu-id="2157e-297">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-298"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-299">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションを列挙することができます<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-300">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>、配列全体を待つ必要がある<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-301">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-302">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="2157e-303">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-304"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-304"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-305"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-305">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-306">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-306">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-307">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-307">The search string to match against the names of directories.</span></span>  <span data-ttu-id="2157e-308">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-308">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="2157e-309">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2157e-309">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="2157e-310">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="2157e-310">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="2157e-311">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-311">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="2157e-312"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-312">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-313">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-313">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-314">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-314">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-315">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-315">Wildcard specifier</span></span>|<span data-ttu-id="2157e-316">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-316">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-317">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-317">\* (asterisk)</span></span>|<span data-ttu-id="2157e-318">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-318">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-319">?</span><span class="sxs-lookup"><span data-stu-id="2157e-319">?</span></span> <span data-ttu-id="2157e-320">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-320">(question mark)</span></span>|<span data-ttu-id="2157e-321">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-321">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-322">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-322">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-323">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-323">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-324">".</span><span class="sxs-lookup"><span data-stu-id="2157e-324">".</span></span> <span data-ttu-id="2157e-325">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-325">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-326"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-326">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-327">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションを列挙することができます<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-327">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-328">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>、配列全体を待つ必要がある<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-328">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-329">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-329">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-330">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-330">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="2157e-331">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-331">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-332">指定したディレクトリから次の例では、このメソッドを使用して、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>ファイルと開始ディレクトリ内のディレクトリを列挙し、いずれかの詳細を表示するメソッドを超えるファイルに 10 MB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="2157e-332">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-333"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-333"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2157e-334"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-334"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-335"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-335">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-336">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-336">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-337">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-337">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-338">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-338">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="2157e-339">現在のディレクトリ内の列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-339">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-340"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-340">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-341">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-341">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-342">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-342">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-343">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-343">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-344">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-344">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="2157e-345">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-345">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-346">次の例は、指定したディレクトリ内のファイルを列挙しの値をチェックして 2009年前に作成されたすべてのファイルの名前を取得する LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-346">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="2157e-347">ファイルの名前のみ必要がある場合は、静的なを使用して<xref:System.IO.Directory>パフォーマンス向上のためのクラス。</span><span class="sxs-lookup"><span data-stu-id="2157e-347">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="2157e-348">例については、次を参照してください。、<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2157e-348">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="2157e-349">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-349">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="2157e-350">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="2157e-350">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-351"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-352">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-353">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-353">The search string to match against the names of files.</span></span>  <span data-ttu-id="2157e-354">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-354">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="2157e-355">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-355">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="2157e-356"><paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-356">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-357">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-357">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-358">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-358">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-359">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-359">Wildcard specifier</span></span>|<span data-ttu-id="2157e-360">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-360">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-361">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-361">\* (asterisk)</span></span>|<span data-ttu-id="2157e-362">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-362">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-363">?</span><span class="sxs-lookup"><span data-stu-id="2157e-363">?</span></span> <span data-ttu-id="2157e-364">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-364">(question mark)</span></span>|<span data-ttu-id="2157e-365">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-365">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-366">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-366">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-367">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-367">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-368">".</span><span class="sxs-lookup"><span data-stu-id="2157e-368">".</span></span> <span data-ttu-id="2157e-369">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-369">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-370"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-370">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-371">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-371">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-372">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-372">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-373">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-373">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-374">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-374">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="2157e-375">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-375">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-376">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-376">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="2157e-377">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="2157e-377">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-378"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-378"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-379"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-379">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-380">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-380">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-381">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-381">The search string to match against the names of files.</span></span>  <span data-ttu-id="2157e-382">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-382">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="2157e-383">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2157e-383">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="2157e-384">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="2157e-384">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="2157e-385">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-385">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="2157e-386"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-386">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-387">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-387">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-388">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-388">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-389">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-389">Wildcard specifier</span></span>|<span data-ttu-id="2157e-390">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-390">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-391">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-391">\* (asterisk)</span></span>|<span data-ttu-id="2157e-392">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-392">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-393">?</span><span class="sxs-lookup"><span data-stu-id="2157e-393">?</span></span> <span data-ttu-id="2157e-394">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-394">(question mark)</span></span>|<span data-ttu-id="2157e-395">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-395">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-396">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-396">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-397">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-397">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-398">".</span><span class="sxs-lookup"><span data-stu-id="2157e-398">".</span></span> <span data-ttu-id="2157e-399">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-399">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-400"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-400">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-401">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-401">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-402">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-402">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-403">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-403">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-404">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-404">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="2157e-405">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-405">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-406">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-406">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="2157e-407">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="2157e-407">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-408"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-408"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2157e-409"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-409"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-410"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-410">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-411">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-411">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-412">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-412">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-413">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-413">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="2157e-414">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-414">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-415"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-415">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-416">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションを列挙することができます<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-416">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-417">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>、配列全体を待つ必要がある<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-417">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-418">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-418">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-419">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-419">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="2157e-420">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-420">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-421"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-421">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-422">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-422">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-423">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-423">The search string to match against the names of directories.</span></span>  <span data-ttu-id="2157e-424">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-424">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="2157e-425">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-425">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="2157e-426"><paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-426">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-427">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-427">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-428">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-428">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-429">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-429">Wildcard specifier</span></span>|<span data-ttu-id="2157e-430">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-430">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-431">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-431">\* (asterisk)</span></span>|<span data-ttu-id="2157e-432">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-432">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-433">?</span><span class="sxs-lookup"><span data-stu-id="2157e-433">?</span></span> <span data-ttu-id="2157e-434">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-434">(question mark)</span></span>|<span data-ttu-id="2157e-435">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-435">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-436">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-436">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-437">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-437">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-438">".</span><span class="sxs-lookup"><span data-stu-id="2157e-438">".</span></span> <span data-ttu-id="2157e-439">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-439">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-440"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-440">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-441">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションを列挙することができます<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-441">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-442">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>、配列全体を待つ必要がある<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-442">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-443">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-443">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-444">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-444">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="2157e-445">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-445">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-446"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-446"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-447"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-447">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-448">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-448">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-449">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-449">The search string to match against the names of directories.</span></span>  <span data-ttu-id="2157e-450">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-450">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="2157e-451">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2157e-451">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="2157e-452">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="2157e-452">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="2157e-453">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-453">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="2157e-454"><paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2157e-454">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-455">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-455">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-456">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-456">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-457">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-457">Wildcard specifier</span></span>|<span data-ttu-id="2157e-458">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-458">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-459">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-459">\* (asterisk)</span></span>|<span data-ttu-id="2157e-460">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-460">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-461">?</span><span class="sxs-lookup"><span data-stu-id="2157e-461">?</span></span> <span data-ttu-id="2157e-462">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-462">(question mark)</span></span>|<span data-ttu-id="2157e-463">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-463">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-464">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-464">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-465">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-465">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-466">".</span><span class="sxs-lookup"><span data-stu-id="2157e-466">".</span></span> <span data-ttu-id="2157e-467">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-467">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-468"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-468">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-469">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションを列挙することができます<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-469">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-470">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>、配列全体を待つ必要がある<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-470">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-471">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-471">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-472">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-472">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="2157e-473">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="2157e-473">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-474"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-474"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2157e-475"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-475"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-476"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-476">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-477">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-477">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2157e-478">ディレクトリが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-478">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="2157e-479">ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2157e-479"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-480"><xref:System.IO.DirectoryInfo.Exists%2A>プロパティが返す`false`を指定したファイルが存在するかどうかの確認中にエラーが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="2157e-480">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="2157e-481">これは無効な文字または文字が多すぎます、失敗したか、不足しているディスクとファイル名を渡すなどの例外が発生する状況で発生または呼び出し元がファイルの読み取りアクセス許可を持っていない場合。</span><span class="sxs-lookup"><span data-stu-id="2157e-481">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-482">次の例を使用して、`Exists`ターゲット ディレクトリにコピーしてソース ディレクトリのコンテキストのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-482">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-483">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-483">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-484">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-484">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-485">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-485">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2157e-486">ディレクトリの絶対パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-486">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="2157e-487">絶対パスを含んでいる文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-487">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>    
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-488">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-488">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-489">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>アクセス権を取得するメソッドは、現在のファイルのリスト (ACL) エントリを制御します。</span><span class="sxs-lookup"><span data-stu-id="2157e-489">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="2157e-490">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-490">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-491">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-491">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="2157e-492">ディレクトリのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-492">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-493">呼び出しと同じですがこのメソッドのオーバー ロードを呼び出し、<xref:System.IO.Directory.GetAccessControl%2A>メソッドのオーバー ロードとアクセスを指定してコントロールのセクションでは<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="2157e-493">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="2157e-494">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-494">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="2157e-495">ACL には、個人やグループがある、または権限がない、特定のファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="2157e-495">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="2157e-496">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-496">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-497">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>と<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドを追加して、アクセスを削除してディレクトリからのリスト (ACL) エントリを制御します。</span><span class="sxs-lookup"><span data-stu-id="2157e-497">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="2157e-498">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="2157e-498">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2157e-499">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2157e-499">The directory is read-only.</span></span>  
  
<span data-ttu-id="2157e-500">または</span><span class="sxs-lookup"><span data-stu-id="2157e-500">-or-</span></span> 
<span data-ttu-id="2157e-501">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-501">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="2157e-502">または</span><span class="sxs-lookup"><span data-stu-id="2157e-502">-or-</span></span> 
<span data-ttu-id="2157e-503">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-503">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2157e-504">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2157e-504">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="2157e-505">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-505">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-506">ディレクトリのアクセス制御リスト (ACL) を列挙する権限。</span><span class="sxs-lookup"><span data-stu-id="2157e-506">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="2157e-507">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="2157e-507">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2157e-508">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="2157e-508">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="2157e-509">取得するアクセス制御リスト (ACL) の情報の型を指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="2157e-509">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="2157e-510">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトで示されるディレクトリの、指定した種類のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-510">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="2157e-511"><paramref name="path" /> パラメーターが示すファイルのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-511">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="2157e-512">例外</span><span class="sxs-lookup"><span data-stu-id="2157e-512">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="2157e-513">例外の種類</span><span class="sxs-lookup"><span data-stu-id="2157e-513">Exception type</span></span> 
 </term><description> <span data-ttu-id="2157e-514">条件</span><span class="sxs-lookup"><span data-stu-id="2157e-514">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="2157e-515">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="2157e-515">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="2157e-516">現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-516">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="2157e-517">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2157e-517">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> <span data-ttu-id="2157e-518">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-518">The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="2157e-519">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2157e-519">The directory is read-only.</span></span>  
  
<span data-ttu-id="2157e-520">または</span><span class="sxs-lookup"><span data-stu-id="2157e-520">-or-</span></span> 
<span data-ttu-id="2157e-521">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-521">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="2157e-522">または</span><span class="sxs-lookup"><span data-stu-id="2157e-522">-or-</span></span> 
<span data-ttu-id="2157e-523">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-523">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-524">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-524">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="2157e-525">ACL には、個人やグループがある、または権限がない、特定のファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="2157e-525">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="2157e-526">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-526">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-527">ディレクトリのアクセス制御リスト (ACL) を列挙する権限。</span><span class="sxs-lookup"><span data-stu-id="2157e-527">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="2157e-528">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="2157e-528">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2157e-529">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="2157e-529">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-530">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-530">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-531">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-531">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="2157e-532"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-532">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-533">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-533">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="2157e-534">このメソッドは、再帰ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-534">This method is not recursive.</span></span>  
  
 <span data-ttu-id="2157e-535">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-535">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-536">次の例では、すべてのディレクトリのルート ディレクトリを取得し、ディレクトリ名が表示されます。</span><span class="sxs-lookup"><span data-stu-id="2157e-536">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-537"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトにカプセル化されているパスが無効です (割り当てられていないドライブが指定されている場合など)。</span><span class="sxs-lookup"><span data-stu-id="2157e-537">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-538">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-538">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2157e-539">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-539">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-540">ディレクトリを読み取る。</span><span class="sxs-lookup"><span data-stu-id="2157e-540">for reading directories.</span></span> <span data-ttu-id="2157e-541">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="2157e-541">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-542">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-542">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-543">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-543">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-544">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-544">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-545">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-545">The search string to match against the names of directories.</span></span>  <span data-ttu-id="2157e-546">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-546">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="2157e-547">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-547">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="2157e-548"><paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-548">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-549">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-549">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-550">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-550">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-551">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-551">Wildcard specifier</span></span>|<span data-ttu-id="2157e-552">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-552">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-553">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-553">\* (asterisk)</span></span>|<span data-ttu-id="2157e-554">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-554">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-555">?</span><span class="sxs-lookup"><span data-stu-id="2157e-555">?</span></span> <span data-ttu-id="2157e-556">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-556">(question mark)</span></span>|<span data-ttu-id="2157e-557">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-557">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-558">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-558">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-559">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-559">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-560">".</span><span class="sxs-lookup"><span data-stu-id="2157e-560">".</span></span> <span data-ttu-id="2157e-561">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-561">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-562">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-562">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-563">次の例では、パス内の指定した文字が含まれているディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="2157e-563">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-564"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-564"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-565"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-565"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-566"><see langword="DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-566">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2157e-567">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-567">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-568">パスへのアクセス、ファイルやディレクトリからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="2157e-568">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="2157e-569">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="2157e-569">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-570">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-570">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-571">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-571">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-572">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-572">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-573">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-573">The search string to match against the names of directories.</span></span>  <span data-ttu-id="2157e-574">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-574">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="2157e-575">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2157e-575">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="2157e-576">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にある、指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-576">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="2157e-577"><paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-577">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-578">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-578">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-579">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-579">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-580">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-580">Wildcard specifier</span></span>|<span data-ttu-id="2157e-581">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-581">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-582">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-582">\* (asterisk)</span></span>|<span data-ttu-id="2157e-583">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-583">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-584">?</span><span class="sxs-lookup"><span data-stu-id="2157e-584">?</span></span> <span data-ttu-id="2157e-585">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-585">(question mark)</span></span>|<span data-ttu-id="2157e-586">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-586">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-587">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-587">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-588">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-588">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-589">".</span><span class="sxs-lookup"><span data-stu-id="2157e-589">".</span></span> <span data-ttu-id="2157e-590">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-590">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-591">かどうか、サブディレクトリが存在しないか、一致するサブディレクトリ、`searchPattern`パラメーターでは、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-591">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="2157e-592">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-592">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-593">次の例の一覧のすべてのディレクトリと、文字"c"で始まるファイルで"c:\\"。</span><span class="sxs-lookup"><span data-stu-id="2157e-593">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-594"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-594"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-595"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-595"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2157e-596"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-596"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-597"><see langword="DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-597">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2157e-598">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-598">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-599">パスへのアクセス、ファイルやディレクトリからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="2157e-599">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="2157e-600">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="2157e-600">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-601">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-601">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-602">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-602">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-603">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-603">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-604">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-604">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-605">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-605">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="2157e-606"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-606">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-607"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-607">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-608">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-608">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-609">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-609">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-610">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-610">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-611">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-611">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="2157e-612">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの場合は、特定の並べ替え順序が必要です。</span><span class="sxs-lookup"><span data-stu-id="2157e-612">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="2157e-613">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-613">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-614">次の例では、別の検索オプションを使用して、ディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-614">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="2157e-615">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="2157e-615">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-616">割り当てられていないドライブであるなど、パスが無効です。</span><span class="sxs-lookup"><span data-stu-id="2157e-616">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-617">ディレクトリを読み取る。</span><span class="sxs-lookup"><span data-stu-id="2157e-617">for reading directories.</span></span> <span data-ttu-id="2157e-618">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="2157e-618">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-619">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-619">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-620">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-620">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-621">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-621">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-622">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-622">The search string to match against the names of files.</span></span>  <span data-ttu-id="2157e-623">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-623">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="2157e-624">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-624">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="2157e-625"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-625">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-626">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-626">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-627">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-627">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-628">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-628">Wildcard specifier</span></span>|<span data-ttu-id="2157e-629">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-629">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-630">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-630">\* (asterisk)</span></span>|<span data-ttu-id="2157e-631">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-631">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-632">?</span><span class="sxs-lookup"><span data-stu-id="2157e-632">?</span></span> <span data-ttu-id="2157e-633">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-633">(question mark)</span></span>|<span data-ttu-id="2157e-634">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-634">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-635">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-635">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-636">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-636">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-637">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-637">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-638"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-638">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-639">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-639">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-640">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-640">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-641">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-641">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-642">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-642">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="2157e-643">次のワイルドカードの指定子は許可されて、`searchPattern`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2157e-643">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="2157e-644">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="2157e-644">Wildcard character</span></span>|<span data-ttu-id="2157e-645">説明</span><span class="sxs-lookup"><span data-stu-id="2157e-645">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="2157e-646">0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-646">Zero or more characters.</span></span>|  
|<span data-ttu-id="2157e-647">?</span><span class="sxs-lookup"><span data-stu-id="2157e-647">?</span></span>|<span data-ttu-id="2157e-648">正確に 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-648">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="2157e-649">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの場合は、特定の並べ替え順序が必要です。</span><span class="sxs-lookup"><span data-stu-id="2157e-649">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="2157e-650">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="2157e-650">Wildcards are permitted.</span></span> <span data-ttu-id="2157e-651">たとえば、 `searchPattern` "\*.txt"の検索のすべてのファイル名の"txt"の拡張機能を持つ文字列します。</span><span class="sxs-lookup"><span data-stu-id="2157e-651">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="2157e-652">`searchPattern`文字列"s\*"すべて"s"で始まる名前のファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-652">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="2157e-653">ファイル、または いいえがある場合のファイルと一致する、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-653">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2157e-654">アスタリスクのワイルドカード文字を使用する場合、 `searchPattern` (たとえば、"\*.txt")、一致の動作が指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-654">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="2157e-655">A`searchPattern`ファイルには 3 つの文字の拡張子が最初の 3 つの文字で指定されたファイル拡張子が一致する次の 3 つ以上の文字の拡張子を持つファイルを返します、`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-655">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="2157e-656">A`searchPattern`ファイルを使用して 1 つ、2 つ、または 4 文字以上の拡張機能がファイルで指定されたファイル拡張子に一致する拡張機能の長さは、その長さと一致のみを返します、`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-656">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="2157e-657">疑問符 () のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-657">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="2157e-658">たとえば、ディレクトリ、"file1.txt"および"file1.txtother"、検索パターンの 2 つのファイルを指定された"ファイルですか? です。検索パターンの中に、最初のファイルだけを返します"txt"ファイル\*.txt"両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-658">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2157e-659">検索パターンのようなので、このメソッドは、8.3 形式のファイル名の形式と長いファイル名の形式の両方でファイル名をチェック、"\* 1\*.txt"予期しないファイル名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2157e-659">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="2157e-660">などの検索パターンを使用して"\*1\*.txt"同等の 8.3 ファイル名の形式が"longf~1.txt"になるので、"longfilename.txt"が返されます。</span><span class="sxs-lookup"><span data-stu-id="2157e-660">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="2157e-661">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-661">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-662">次の例では、別の検索オプションを使用して、ディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-662">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="2157e-663">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="2157e-663">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-664"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-664"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-665"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-665"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-666">パスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-666">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-667">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-667">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-668">パスにファイルとディレクトリからの読み取りにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="2157e-668">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="2157e-669">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="2157e-669">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-670">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-670">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-671">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-671">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-672">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-672">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-673">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-673">The search string to match against the names of files.</span></span>  <span data-ttu-id="2157e-674">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-674">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="2157e-675">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2157e-675">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="2157e-676">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-676">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="2157e-677"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-677">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-678"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-678">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="2157e-679">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="2157e-679">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="2157e-680">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-680">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="2157e-681">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-681">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="2157e-682">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-682">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="2157e-683">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-683">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-684">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="2157e-684">Wildcard character</span></span>|<span data-ttu-id="2157e-685">説明</span><span class="sxs-lookup"><span data-stu-id="2157e-685">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="2157e-686">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-686">\* (asterisk)</span></span>|<span data-ttu-id="2157e-687">0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-687">Zero or more characters.</span></span>|  
|<span data-ttu-id="2157e-688">?</span><span class="sxs-lookup"><span data-stu-id="2157e-688">?</span></span> <span data-ttu-id="2157e-689">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-689">(question mark)</span></span>|<span data-ttu-id="2157e-690">正確に 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-690">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="2157e-691">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの場合は、特定の並べ替え順序が必要です。</span><span class="sxs-lookup"><span data-stu-id="2157e-691">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="2157e-692">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="2157e-692">Wildcards are permitted.</span></span> <span data-ttu-id="2157e-693">たとえば、 `searchPattern` "\*.txt"の検索のすべてのファイル名の"txt"の拡張機能を持つ文字列します。</span><span class="sxs-lookup"><span data-stu-id="2157e-693">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="2157e-694">`searchPattern`文字列"s\*"すべて"s"で始まる名前のファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-694">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="2157e-695">ファイル、または いいえがある場合のファイルと一致する、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-695">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2157e-696">アスタリスクのワイルドカード文字を使用する場合、 `searchPattern` (たとえば、"\*.txt")、一致の動作が指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="2157e-696">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="2157e-697">A`searchPattern`ファイルには 3 つの文字の拡張子が最初の 3 つの文字で指定されたファイル拡張子が一致する次の 3 つ以上の文字の拡張子を持つファイルを返します、`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-697">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="2157e-698">A`searchPattern`ファイルを使用して 1 つ、2 つ、または 4 文字以上の拡張機能がファイルで指定されたファイル拡張子に一致する拡張機能の長さは、その長さと一致のみを返します、`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-698">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="2157e-699">疑問符 () のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-699">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="2157e-700">たとえば、ディレクトリ、"file1.txt"および"file1.txtother"、検索パターンの 2 つのファイルを指定された"ファイルですか? です。検索パターンの中に、最初のファイルだけを返します"txt"ファイル\*.txt"両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-700">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="2157e-701">次の一覧の異なる長さの動作を示しています、`searchPattern`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2157e-701">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="2157e-702">"\* .abc"、拡張機能 of.abc,.abcd,.abcde,.abcdef を持つファイルを返します、という具合です。</span><span class="sxs-lookup"><span data-stu-id="2157e-702">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="2157e-703">"\*.abcd"は、拡張機能 of.abcd を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-703">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="2157e-704">"\*.abcde"は、拡張機能 of.abcde を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-704">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="2157e-705">"\*.abcdef"は、拡張機能 of.abcdef を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-705">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2157e-706">検索パターンのようなので、このメソッドは、8.3 形式のファイル名の形式と長いファイル名の形式の両方でファイル名をチェック、"\* 1\*.txt"予期しないファイル名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2157e-706">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="2157e-707">などの検索パターンを使用して"\*1\*.txt"同等の 8.3 ファイル名の形式が"longf~1.txt"になるので、"longfilename.txt"が返されます。</span><span class="sxs-lookup"><span data-stu-id="2157e-707">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="2157e-708">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-708">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-709">次の例では、別の検索オプションを使用して、ディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-709">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="2157e-710">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="2157e-710">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-711"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-711"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-712"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-712"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2157e-713"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-713"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-714">パスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-714">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-715">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-715">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-716">パスにファイルとディレクトリからの読み取りにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="2157e-716">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="2157e-717">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="2157e-717">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-718">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-718">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-719">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-719">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-720">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-720">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2157e-721">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-721">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-722">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-722">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="2157e-723">厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-723">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-724">ファイルまたはディレクトリがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-724">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="2157e-725">このメソッドは、再帰ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-725">This method is not recursive.</span></span>  
  
 <span data-ttu-id="2157e-726">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>します。</span><span class="sxs-lookup"><span data-stu-id="2157e-726">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="2157e-727">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="2157e-727">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="2157e-728">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-728">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-729">次の例では、ファイルと、指定したディレクトリの下のディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="2157e-729">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-730">パスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-730">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-731">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-731">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-732">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-732">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-733">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-733">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-734">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-734">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="2157e-735">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-735">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="2157e-736">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-736">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="2157e-737">検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-737">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-738">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-738">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-739">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-739">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-740">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-740">Wildcard specifier</span></span>|<span data-ttu-id="2157e-741">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-741">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-742">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-742">\* (asterisk)</span></span>|<span data-ttu-id="2157e-743">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-743">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-744">?</span><span class="sxs-lookup"><span data-stu-id="2157e-744">?</span></span> <span data-ttu-id="2157e-745">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-745">(question mark)</span></span>|<span data-ttu-id="2157e-746">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-746">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-747">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-747">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-748">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-748">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-749">".</span><span class="sxs-lookup"><span data-stu-id="2157e-749">".</span></span> <span data-ttu-id="2157e-750">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-750">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-751">このメソッドは、再帰ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-751">This method is not recursive.</span></span>  
  
 <span data-ttu-id="2157e-752">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>します。</span><span class="sxs-lookup"><span data-stu-id="2157e-752">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="2157e-753">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="2157e-753">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="2157e-754">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="2157e-754">Wild cards are permitted.</span></span> <span data-ttu-id="2157e-755">たとえば、`searchPattern`文字列"\* t"内のすべてのディレクトリ名を検索`path`文字"t"で終了します。</span><span class="sxs-lookup"><span data-stu-id="2157e-755">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="2157e-756">`searchPattern`文字列"s\*"内のすべてのディレクトリ名を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-756">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-757">文字列"..."でのみ使用できます`searchPattern`指定されている場合、有効なディレクトリ名の一部としてなど、ディレクトリ名に"、。 します。b"です。</span><span class="sxs-lookup"><span data-stu-id="2157e-757">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="2157e-758">ディレクトリ階層を上へ移動は使用できません。</span><span class="sxs-lookup"><span data-stu-id="2157e-758">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="2157e-759">ファイルまたはディレクトリ、またはファイルやディレクトリに一致するがある場合、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-759">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="2157e-760">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-760">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-761">次の例では、ファイルと指定した検索パターンに一致するディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="2157e-761">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-762"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-762"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-763"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-763"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-764">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-764">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-765">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-765">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-766">パスへのアクセス、ファイルやディレクトリからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="2157e-766">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="2157e-767">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="2157e-767">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-768">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-768">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-769">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-769">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-770">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-770">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="2157e-771">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="2157e-771">The search string to match against the names of directories and filesa.</span></span>  <span data-ttu-id="2157e-772">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-772">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="2157e-773">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2157e-773">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="2157e-774">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="2157e-774">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="2157e-775">指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-775">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="2157e-776">検索条件に一致するファイル システム エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="2157e-776">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-777">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-777">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="2157e-778">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="2157e-778">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="2157e-779">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="2157e-779">Wildcard specifier</span></span>|<span data-ttu-id="2157e-780">一致件数</span><span class="sxs-lookup"><span data-stu-id="2157e-780">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="2157e-781">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="2157e-781">\* (asterisk)</span></span>|<span data-ttu-id="2157e-782">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-782">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="2157e-783">?</span><span class="sxs-lookup"><span data-stu-id="2157e-783">?</span></span> <span data-ttu-id="2157e-784">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="2157e-784">(question mark)</span></span>|<span data-ttu-id="2157e-785">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="2157e-785">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="2157e-786">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="2157e-786">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="2157e-787">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="2157e-787">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="2157e-788">".</span><span class="sxs-lookup"><span data-stu-id="2157e-788">".</span></span> <span data-ttu-id="2157e-789">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="2157e-789">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="2157e-790">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>します。</span><span class="sxs-lookup"><span data-stu-id="2157e-790">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="2157e-791">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="2157e-791">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="2157e-792">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-792">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-793"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2157e-793"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-794"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-794"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2157e-795"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-795"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-796">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="2157e-796">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-797">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-797">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="2157e-798">このディレクトリの移動先の名前とパス。</span><span class="sxs-lookup"><span data-stu-id="2157e-798">The name and path to which to move this directory.</span></span> <span data-ttu-id="2157e-799">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</span><span class="sxs-lookup"><span data-stu-id="2157e-799">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="2157e-800">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</span><span class="sxs-lookup"><span data-stu-id="2157e-800">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="2157e-801"><see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</span><span class="sxs-lookup"><span data-stu-id="2157e-801">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-802">このメソッドは、 <xref:System.IO.IOException> 、たとえば、c:\public、c:\mydir に移動しようとして、c:\public が既に存在する場合。</span><span class="sxs-lookup"><span data-stu-id="2157e-802">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="2157e-803">指定する必要があります"c:\\\public\\\mydir"として、`destDirName`パラメーター、新しいディレクトリ名を指定します。 または"c:\\\newdir"。</span><span class="sxs-lookup"><span data-stu-id="2157e-803">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="2157e-804">このメソッドは、読み取り専用のディレクトリにディレクトリを移動を許可します。</span><span class="sxs-lookup"><span data-stu-id="2157e-804">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="2157e-805">いずれのディレクトリの読み取り/書き込み属性が影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="2157e-805">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="2157e-806">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-806">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-807">次の例では、ディレクトリの移動を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-807">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-808"><paramref name="destDirName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2157e-808"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2157e-809"><paramref name="destDirName" /> が空の文字列 (''") です。</span><span class="sxs-lookup"><span data-stu-id="2157e-809"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2157e-810">ディレクトリを別のボリュームに移動しようとしました。</span><span class="sxs-lookup"><span data-stu-id="2157e-810">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="2157e-811">または</span><span class="sxs-lookup"><span data-stu-id="2157e-811">-or-</span></span> 
 <span data-ttu-id="2157e-812"><paramref name="destDirName" /> が既に存在します。</span><span class="sxs-lookup"><span data-stu-id="2157e-812"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="2157e-813">または</span><span class="sxs-lookup"><span data-stu-id="2157e-813">-or-</span></span> 
<span data-ttu-id="2157e-814">このパスへのアクセスが承認されていません。</span><span class="sxs-lookup"><span data-stu-id="2157e-814">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="2157e-815">または</span><span class="sxs-lookup"><span data-stu-id="2157e-815">-or-</span></span> 
<span data-ttu-id="2157e-816">移動しようとしているディレクトリと移動先のディレクトリが同じ名前です。</span><span class="sxs-lookup"><span data-stu-id="2157e-816">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-817">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-817">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2157e-818">移動先のディレクトリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="2157e-818">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-819">読み取りと書き込みのファイルとディレクトリおよびコピー先ディレクトリへのアクセス。</span><span class="sxs-lookup"><span data-stu-id="2157e-819">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="2157e-820">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="2157e-820">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2157e-821">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="2157e-821">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-822">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-822">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-823">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-823">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-824">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-824">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2157e-825"><see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-825">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="2157e-826">ディレクトリ名。</span><span class="sxs-lookup"><span data-stu-id="2157e-826">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-827">これは、<xref:System.IO.DirectoryInfo.Name%2A>プロパティ"Bin"などのディレクトリの名前のみを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-827">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="2157e-828">"C:\public\Bin"などの完全なパスを取得する、<xref:System.IO.FileSystemInfo.FullName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2157e-828">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="2157e-829"><xref:System.IO.DirectoryInfo.Name%2A>のプロパティを<xref:System.IO.DirectoryInfo>アクセス許可は必要ありません (を構築するために必要なディレクトリに読み取りアクセス許可を超える、 <xref:System.IO.DirectoryInfo.Exists%2A>) が、ディレクトリの名前を与えることができます。</span><span class="sxs-lookup"><span data-stu-id="2157e-829">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="2157e-830">渡すために必要な場合は、out、<xref:System.IO.DirectoryInfo>暗号的にセキュリティで保護された名前を持つ保護されたディレクトリに、信頼できないコードの使用のダミー ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2157e-830">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="2157e-831">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-831">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-832">次の例は、現在の名前を表示します。`DirectoryInfo`インスタンスのみです。</span><span class="sxs-lookup"><span data-stu-id="2157e-832">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-833">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-833">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-834">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-834">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-835">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-835">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2157e-836">指定されたサブディレクトリの親ディレクトリを取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-836">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="2157e-837">親ディレクトリ。 または<see langword="null" />パスが null の場合、またはファイル パスがルートを表す場合 (など"\\"、"c:"、または \*"\\\server\share")。</span><span class="sxs-lookup"><span data-stu-id="2157e-837">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-838">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-838">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-839">次の例では、指定したディレクトリの親ディレクトリへの参照を示します。</span><span class="sxs-lookup"><span data-stu-id="2157e-839">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-840">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-840">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-841">パスへのアクセス、ファイルやディレクトリからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="2157e-841">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="2157e-842">列挙体に関連付けられている: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="2157e-842">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-843">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-843">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-844">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-844">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-845">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-845">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2157e-846">ディレクトリのルート部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="2157e-846">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="2157e-847">ディレクトリのルートを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-847">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2157e-848">次の例では、指定されたディレクトリのルートの場所が表示されます。</span><span class="sxs-lookup"><span data-stu-id="2157e-848">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2157e-849">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-849">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-850">パスへのアクセス、ファイルやディレクトリからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="2157e-850">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="2157e-851">列挙体に関連付けられている: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="2157e-851">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-852">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-852">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-853">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-853">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-854">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-854">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="2157e-855"><paramref name="path" /> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-855">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="2157e-856"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の <see cref="T:System.IO.DirectoryInfo" /> オブジェクトが示すディレクトリに適用します。</span><span class="sxs-lookup"><span data-stu-id="2157e-856">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2157e-857">アクセス制御リスト (ACL) には、個人やグループがある、または権限がない、特定のファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="2157e-857">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="2157e-858">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2157e-858">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="2157e-859"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドが継承されない ACL リストを表すファイルに ACL エントリを適用します。</span><span class="sxs-lookup"><span data-stu-id="2157e-859">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2157e-860">ACL に指定された`directorySecurity`ディレクトリの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="2157e-860">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="2157e-861">新しいユーザーのアクセス許可を追加するには、使用、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドを既存の ACL を取得し、それを変更します。</span><span class="sxs-lookup"><span data-stu-id="2157e-861">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="2157e-862"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドにのみが解決しない<xref:System.Security.AccessControl.DirectorySecurity>オブジェクトの作成後に変更されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-862">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="2157e-863">場合、<xref:System.Security.AccessControl.DirectorySecurity>オブジェクトが変更されていない、ファイルに保存されません。</span><span class="sxs-lookup"><span data-stu-id="2157e-863">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="2157e-864">そのため、取得することはできません、 <xref:System.Security.AccessControl.DirectorySecurity> 1 つのファイルからオブジェクトし、別のファイルに同じオブジェクトを再適用します。</span><span class="sxs-lookup"><span data-stu-id="2157e-864">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="2157e-865">ACL の情報を別の 1 つのファイルにコピーします。 する</span><span class="sxs-lookup"><span data-stu-id="2157e-865">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="2157e-866">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を取得するメソッド、<xref:System.Security.AccessControl.DirectorySecurity>ソース ファイルからのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-866">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="2157e-867">新規作成<xref:System.Security.AccessControl.DirectorySecurity>先のファイル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-867">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="2157e-868">使用して、<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>または<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>メソッドのソースの<xref:System.Security.AccessControl.DirectorySecurity>ACL の情報を取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-868">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="2157e-869">使用して、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>または<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>、情報をコピーするメソッドは、先には、手順 3. で取得<xref:System.Security.AccessControl.DirectorySecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2157e-869">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="2157e-870">設定先<xref:System.Security.AccessControl.DirectorySecurity>変換先のファイルを使用するオブジェクト、<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2157e-870">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2157e-871">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>と<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドを追加して、アクセスを削除してディレクトリからのリスト (ACL) エントリを制御します。</span><span class="sxs-lookup"><span data-stu-id="2157e-871">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2157e-872"><paramref name="directorySecurity" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2157e-872">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="2157e-873">ファイルを検出または変更できませんでした。</span><span class="sxs-lookup"><span data-stu-id="2157e-873">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2157e-874">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-874">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="2157e-875">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="2157e-875">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2157e-876">ディレクトリのアクセス制御リスト (ACL) を列挙する権限。</span><span class="sxs-lookup"><span data-stu-id="2157e-876">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="2157e-877">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="2157e-877">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2157e-878">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="2157e-878">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2157e-879">ユーザーから渡された元のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="2157e-879">Returns the original path that was passed by the user.</span></span></summary>
        <returns><span data-ttu-id="2157e-880">ユーザーから渡された元のパス。</span><span class="sxs-lookup"><span data-stu-id="2157e-880">The original path that was passed by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="2157e-881">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="2157e-881">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="2157e-882">方法: ファイルからのテキストの読み取り</span><span class="sxs-lookup"><span data-stu-id="2157e-882">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="2157e-883">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="2157e-883">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>