<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad0784f971cfb919d9f1e6b7d1918d792bf594e8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36561408" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="97de8-101">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="97de8-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span>
      </span>
      <span data-ttu-id="97de8-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="97de8-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-103">使用して、<xref:System.IO.DirectoryInfo>コピー、移動、名前変更、作成、およびディレクトリを削除するなどの一般的な操作のクラスです。</span><span class="sxs-lookup"><span data-stu-id="97de8-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="97de8-104">オブジェクトを何度も再利用しようとする場合は、インスタンス メソッドを使用することを検討してください<xref:System.IO.DirectoryInfo>の対応する静的メソッドではなく、<xref:System.IO.Directory>クラス、セキュリティ チェックは必ずしも必要であるためです。</span><span class="sxs-lookup"><span data-stu-id="97de8-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97de8-105">入力文字列とパスをそのまま使用するメンバー、そのパスは、整形式である必要がありますか、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="97de8-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="97de8-106">たとえば、パスは完全修飾では、スペースで始まり場合、パスは、クラスのメソッドで切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="97de8-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="97de8-107">そのため、パスが正しくないと、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="97de8-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="97de8-108">同様に、パスまたはパスの組み合わせ完全修飾できない 2 回クリックします。</span><span class="sxs-lookup"><span data-stu-id="97de8-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="97de8-109">たとえば、"c:\temp c:\windows"では、ほとんどの場合、例外も発生します。</span><span class="sxs-lookup"><span data-stu-id="97de8-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="97de8-110">パス文字列を受け取るメソッドを使用する場合、パスが整形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="97de8-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="97de8-111">パスを受け入れるメンバー ボックスで、パスは、ファイルまたはディレクトリを参照できます。</span><span class="sxs-lookup"><span data-stu-id="97de8-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="97de8-112">指定されたパスは相対パスまたは汎用名前付け規則 (UNC) パスのサーバーと共有名にも参照できます。</span><span class="sxs-lookup"><span data-stu-id="97de8-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="97de8-113">たとえば、次のすべては、有効なパスは。</span><span class="sxs-lookup"><span data-stu-id="97de8-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="97de8-114">"c:\\\MyDir\\\MyFile.txt"C# の場合、または Visual Basic では、"c:\MyDir\MyFile.txt"です。</span><span class="sxs-lookup"><span data-stu-id="97de8-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="97de8-115">"c:\\\MyDir"C# の場合、または Visual Basic では、"c:\MyDir"です。</span><span class="sxs-lookup"><span data-stu-id="97de8-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="97de8-116">"MyDir\\\MySubdir"C# の場合、または Visual Basic では、"MyDir\MySubDir"です。</span><span class="sxs-lookup"><span data-stu-id="97de8-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="97de8-117">"\\\\\\\MyServer\\\MyShare"C# の場合、または"\\\MyServer\MyShare"Visual Basic でします。</span><span class="sxs-lookup"><span data-stu-id="97de8-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="97de8-118">既定では、新しいディレクトリへの完全な読み取り/書き込みアクセスは、すべてのユーザーに与えられます。</span><span class="sxs-lookup"><span data-stu-id="97de8-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="97de8-119">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-120">次の例では、メインのメンバーの一部を示しています、`DirectoryInfo`クラスです。</span><span class="sxs-lookup"><span data-stu-id="97de8-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="97de8-121">次の例では、ディレクトリ、およびその内容をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="97de8-122">
            <see langword="DirectoryInfo" /> を作成する対象のパスを指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-122">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-123">指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-123">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-124">このコンス トラクターでは、ディレクトリが存在するかどうかはチェックされません。</span><span class="sxs-lookup"><span data-stu-id="97de8-124">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="97de8-125">このコンス トラクターとは、後の操作でディスクにアクセスするために使用される文字列にプレース ホルダーです。</span><span class="sxs-lookup"><span data-stu-id="97de8-125">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="97de8-126">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="97de8-126">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="97de8-127">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="97de8-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="97de8-128">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-129">次の例では、このコンス トラクターを使用して、指定されたディレクトリとサブディレクトリを作成し、サブディレクトリを格納するディレクトリを削除できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-129">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-130">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-130">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-131">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-131">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-132">
            <paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-132">
              <paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="97de8-133">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-133">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-134">読み取りにファイルとディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-134">for reading from files and directories.</span>
          </span>
          <span data-ttu-id="97de8-135">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-135">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-136">ディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-136">Creates a directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-137">ディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-137">Creates a directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-138">ディレクトリが既に存在する場合は、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="97de8-138">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="97de8-139">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-140">次の例のチェック指定されたディレクトリが存在するかどうかを作成、ディレクトリが存在しない場合、ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="97de8-140">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97de8-141">ディレクトリを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-141">The directory cannot be created.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-142">ファイルを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-142">for writing files.</span>
          </span>
          <span data-ttu-id="97de8-143">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-143">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="97de8-144">ディレクトリに適用するアクセス制御。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-144">The access control to apply to the directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-145">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトを使用してディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-145">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-146">このメソッドのオーバー ロードを使用すると、セキュリティが適用される前に、ディレクトリにアクセスできる可能性がないように、アクセス制御のディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="97de8-146">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="97de8-147">ディレクトリが既に存在する場合は、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="97de8-147">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="97de8-148">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-148">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97de8-149">
            <paramref name="path" /> によって指定されたディレクトリが、読み取り専用であるか、空ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-149">The directory specified by <paramref name="path" /> is read-only or is not empty.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97de8-150">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-150">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-151">
            <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-151">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-152">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="97de8-153">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-153">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-154">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-154">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="97de8-155">コロン (:) 文字だけで、ディレクトリを作成しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-155">Creating a directory with only the colon (:) character was attempted.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-156">ディレクトリを作成する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-156">for permission to create a directory.</span>
          </span>
          <span data-ttu-id="97de8-157">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-157">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="97de8-158">関連する列挙。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-158">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-159">指定したパスに 1 つ以上のサブディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-159">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="97de8-160">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-160">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="97de8-161">指定するパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-161">The specified path.</span>
          </span>
          <span data-ttu-id="97de8-162">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-162">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-163">指定したパスに 1 つ以上のサブディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-163">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="97de8-164">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-164">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-165">
            <paramref name="path" /> に指定された最後のディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-165">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-166">指定されていると、すべてのディレクトリ`path`しない限り、作成の一部`path`が無効です。</span><span class="sxs-lookup"><span data-stu-id="97de8-166">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="97de8-167">`path`ファイル パスではなく、ディレクトリのパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="97de8-167">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="97de8-168">サブディレクトリに既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="97de8-168">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="97de8-169">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-169">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-170">次の例では、サブディレクトリを作成するを示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-170">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="97de8-171">この例では、いったん作成された後、作成されたディレクトリが削除されます。</span><span class="sxs-lookup"><span data-stu-id="97de8-171">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="97de8-172">そのため、このサンプルをテストするには、コメント アウト、コード内の行の削除します。</span><span class="sxs-lookup"><span data-stu-id="97de8-172">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-173">
            <paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-173">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-174">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-174">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-175">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-175">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97de8-176">サブディレクトリを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-176">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="97de8-177">または、<paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-177">-or-  A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="97de8-178">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-178">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-179">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-179">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="97de8-180">または、呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-180">-or-  The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="97de8-181">
            <paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-181">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="97de8-182">
            <paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-182">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-183">読み取りや、ファイルを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-183">for reading and writing files.</span>
          </span>
          <span data-ttu-id="97de8-184">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-184">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="97de8-185">指定するパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-185">The specified path.</span>
          </span>
          <span data-ttu-id="97de8-186">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-186">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <param name="directorySecurity">
          <span data-ttu-id="97de8-187">適用するセキュリティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-187">The security to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-188">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-188">Creates a subdirectory or subdirectories on the specified path with the specified security.</span>
          </span>
          <span data-ttu-id="97de8-189">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-189">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-190">
            <paramref name="path" /> に指定された最後のディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-190">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-191">指定されていると、すべてのディレクトリ`path`しない限り、作成の一部`path`が無効です。</span><span class="sxs-lookup"><span data-stu-id="97de8-191">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="97de8-192">`path`ファイル パスではなく、ディレクトリのパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="97de8-192">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="97de8-193">サブディレクトリに既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="97de8-193">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="97de8-194">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-194">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-195">
            <paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-195">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-196">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-196">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-197">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-197">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97de8-198">サブディレクトリを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-198">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="97de8-199">または、<paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-199">-or-  A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="97de8-200">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-200">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-201">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-201">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="97de8-202">または、呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-202">-or-  The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="97de8-203">
            <paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-203">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="97de8-204">
            <paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-204">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-205">読み取りや、ファイルを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-205">for reading and writing files.</span>
          </span>
          <span data-ttu-id="97de8-206">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-206">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-207">パスから <see cref="T:System.IO.DirectoryInfo" /> とその内容を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-207">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-208">
            <see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-208">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-209">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-210">次の例は、ディレクトリが空でないを削除しようとする場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="97de8-210">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97de8-211">ディレクトリに読み取り専用のファイルが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-211">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-212">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-212">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97de8-213">ディレクトリが空ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-213">The directory is not empty.</span>
          </span>
          <span data-ttu-id="97de8-214">または、ディレクトリはアプリケーションの現在の作業ディレクトリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-214">-or-  The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="97de8-215">または、ディレクトリに開いているハンドルがあり、オペレーティング システムが Windows XP 以前のものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-215">-or-  There is an open handle on the directory, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="97de8-216">このハンドルが開いている原因は、ディレクトリを列挙したことにある可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-216">This open handle can result from enumerating directories.</span>
          </span>
          <span data-ttu-id="97de8-217">詳しくは、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-217">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-218">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-218">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-219">ディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-219">for writing directories.</span>
          </span>
          <span data-ttu-id="97de8-220">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-220">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="97de8-221">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-221">
              <see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-222">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-222">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-223">場合、`DirectoryInfo`ファイルやサブディレクトリを含まない、このメソッドは、削除、`DirectoryInfo`場合でも`recursive`は`false`します。</span><span class="sxs-lookup"><span data-stu-id="97de8-223">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="97de8-224">削除しようとすると、`DirectoryInfo`が空でない場合に`recursive`は`false`スロー、<xref:System.IO.IOException>です。</span><span class="sxs-lookup"><span data-stu-id="97de8-224">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="97de8-225">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-225">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-226">次の例では、ディレクトリを削除するを示しています。</span><span class="sxs-lookup"><span data-stu-id="97de8-226">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="97de8-227">ディレクトリが削除されるためコメント アウト、`Delete`ディレクトリが存在するかをテストするには行です。</span><span class="sxs-lookup"><span data-stu-id="97de8-227">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="97de8-228">ディレクトリが正常に削除されたことをテストするコードの同じ行のコメントを解除します。</span><span class="sxs-lookup"><span data-stu-id="97de8-228">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97de8-229">ディレクトリに読み取り専用のファイルが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-229">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-230">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-230">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97de8-231">ディレクトリが読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-231">The directory is read-only.</span>
          </span>
          <span data-ttu-id="97de8-232">または、ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、<paramref name="recursive" /> が <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-232">-or-  The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="97de8-233">または、ディレクトリはアプリケーションの現在の作業ディレクトリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-233">-or-  The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="97de8-234">または、ディレクトリまたはそのファイルのうちの 1 つについて開かれているハンドルがあり、オペレーティング システムが Windows XP 以前のものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-234">-or-  There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="97de8-235">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-235">This open handle can result from enumerating directories and files.</span>
          </span>
          <span data-ttu-id="97de8-236">詳しくは、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-237">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-237">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="97de8-238">書き込み権限の必要なフラグの書き込み、<see langword="DirectoryInfo" />とサブディレクトリを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-238">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-239">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-239">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-240">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-240">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-241">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-241">An enumerable collection of directories in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-242"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-242">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-243">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションの列挙を開始する<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-243">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-244">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>の配列全体を待つ必要があります<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-244">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-245">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-245">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-246">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-246">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97de8-247">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-247">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-248">次の例は、C:\Program Files ディレクトリ下のサブディレクトリを列挙しの値をチェックして 2009年以前に作成されたすべてのディレクトリの名前を取得する LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="97de8-248">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="97de8-249">サブディレクトリの名前のみ必要がある場合は、静的なを使用して<xref:System.IO.Directory>パフォーマンス向上のためのクラスです。</span><span class="sxs-lookup"><span data-stu-id="97de8-249">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="97de8-250">例については、次を参照してください。、<xref:System.IO.Directory.EnumerateDirectories%28System.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="97de8-250">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-251">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-251">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-252">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-252">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-253">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-253">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="97de8-254">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-254">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-255">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-255">Returns an enumerable collection of directory information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-256">
            <paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-256">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-257">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-257">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-258">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-258">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-259">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-259">Wildcard specifier</span></span>|<span data-ttu-id="97de8-260">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-260">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-261">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-261">\* (asterisk)</span></span>|<span data-ttu-id="97de8-262">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-262">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-263">?</span><span class="sxs-lookup"><span data-stu-id="97de8-263">?</span></span> <span data-ttu-id="97de8-264">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-264">(question mark)</span></span>|<span data-ttu-id="97de8-265">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-265">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-266">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-266">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-267">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-267">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-268">".</span><span class="sxs-lookup"><span data-stu-id="97de8-268">".</span></span> <span data-ttu-id="97de8-269">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-269">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-270"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-271">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションの列挙を開始する<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-272">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>の配列全体を待つ必要があります<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-273">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-274">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97de8-275">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-276">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-276">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-277">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-277">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-278">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-278">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-279">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-279">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="97de8-280">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-280">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="97de8-281">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-281">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="97de8-282">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-282">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-283">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-283">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-284">
            <paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-284">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-285">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-286">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-287">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-287">Wildcard specifier</span></span>|<span data-ttu-id="97de8-288">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-289">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-289">\* (asterisk)</span></span>|<span data-ttu-id="97de8-290">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-291">?</span><span class="sxs-lookup"><span data-stu-id="97de8-291">?</span></span> <span data-ttu-id="97de8-292">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-292">(question mark)</span></span>|<span data-ttu-id="97de8-293">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-294">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-295">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-295">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-296">".</span><span class="sxs-lookup"><span data-stu-id="97de8-296">".</span></span> <span data-ttu-id="97de8-297">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-298"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-299">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションの列挙を開始する<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-300">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>の配列全体を待つ必要があります<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-301">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-302">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97de8-303">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-304">指定されたディレクトリから次の例では、このメソッドを使用して、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>開始ディレクトリ内のディレクトリとファイルを列挙し、いずれかの詳細を表示する方法を超えるファイル 10 MB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="97de8-304">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-305">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-305">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="97de8-306">
            <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-306">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-307">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-307">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-308">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-308">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-309">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-309">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-310">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-310">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-311">現在のディレクトリ内の列挙可能なファイルのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-311">An enumerable collection of the files in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-312"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-312">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-313">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-313">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-314">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-314">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-315">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-315">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-316">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-316">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="97de8-317">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-317">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-318">次の例は、指定したディレクトリの下にファイルを列挙しの値をチェックして 2009年以前に作成されたすべてのファイルの名前を取得する LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="97de8-318">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="97de8-319">ファイルの名前のみ必要がある場合、静的なを使用して<xref:System.IO.Directory>パフォーマンス向上のためのクラスです。</span><span class="sxs-lookup"><span data-stu-id="97de8-319">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="97de8-320">例については、次を参照してください。、<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="97de8-320">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="97de8-321">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-321">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="97de8-322">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-322">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-323">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-323">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-324">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-324">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-325">ファイル名と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-325">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="97de8-326">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-326">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-327">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-327">Returns an enumerable collection of file information that matches a search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-328">
            <paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-328">An enumerable collection of files that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-329">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-329">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-330">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-330">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-331">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-331">Wildcard specifier</span></span>|<span data-ttu-id="97de8-332">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-332">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-333">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-333">\* (asterisk)</span></span>|<span data-ttu-id="97de8-334">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-334">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-335">?</span><span class="sxs-lookup"><span data-stu-id="97de8-335">?</span></span> <span data-ttu-id="97de8-336">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-336">(question mark)</span></span>|<span data-ttu-id="97de8-337">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-337">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-338">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-338">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-339">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-339">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-340">".</span><span class="sxs-lookup"><span data-stu-id="97de8-340">".</span></span> <span data-ttu-id="97de8-341">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-341">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-342"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-342">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-343">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-343">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-344">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-344">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-345">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-345">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-346">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-346">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="97de8-347">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-347">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-348">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-348">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="97de8-349">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-349">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-350">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-350">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-351">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-352">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-352">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-353">ファイル名と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-353">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="97de8-354">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-354">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="97de8-355">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-355">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="97de8-356">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-356">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-357">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-357">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-358">
            <paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-358">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-359">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-359">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-360">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-360">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-361">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-361">Wildcard specifier</span></span>|<span data-ttu-id="97de8-362">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-362">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-363">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-363">\* (asterisk)</span></span>|<span data-ttu-id="97de8-364">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-364">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-365">?</span><span class="sxs-lookup"><span data-stu-id="97de8-365">?</span></span> <span data-ttu-id="97de8-366">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-366">(question mark)</span></span>|<span data-ttu-id="97de8-367">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-367">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-368">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-368">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-369">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-369">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-370">".</span><span class="sxs-lookup"><span data-stu-id="97de8-370">".</span></span> <span data-ttu-id="97de8-371">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-371">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-372"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-372">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-373">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-373">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-374">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-374">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-375">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-375">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-376">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-376">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="97de8-377">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-377">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-378">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-378">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="97de8-379">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-379">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-380">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-380">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="97de8-381">
            <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-381">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-382">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-382">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-383">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-383">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-384">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-384">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-385">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-385">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-386">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-386">An enumerable collection of file system information in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-387"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-387">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-388">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションの列挙を開始する<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-388">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-389">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>の配列全体を待つ必要があります<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-389">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-390">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-390">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-391">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-391">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97de8-392">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-392">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-393">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-393">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-394">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-394">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-395">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-395">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="97de8-396">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-396">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-397">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-397">Returns an enumerable collection of file system information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-398">
            <paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-398">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-399">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-399">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-400">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-400">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-401">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-401">Wildcard specifier</span></span>|<span data-ttu-id="97de8-402">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-402">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-403">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-403">\* (asterisk)</span></span>|<span data-ttu-id="97de8-404">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-404">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-405">?</span><span class="sxs-lookup"><span data-stu-id="97de8-405">?</span></span> <span data-ttu-id="97de8-406">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-406">(question mark)</span></span>|<span data-ttu-id="97de8-407">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-407">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-408">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-408">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-409">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-409">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-410">".</span><span class="sxs-lookup"><span data-stu-id="97de8-410">".</span></span> <span data-ttu-id="97de8-411">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-411">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-412"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-412">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-413">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションの列挙を開始する<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-413">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-414">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>の配列全体を待つ必要があります<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-414">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-415">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-415">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-416">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-416">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97de8-417">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-417">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-418">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-418">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-419">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-419">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-420">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-421">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-421">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="97de8-422">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-422">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="97de8-423">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-423">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="97de8-424">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-424">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-425">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-425">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-426">
            <paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-426">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-427">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-427">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-428">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-428">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-429">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-429">Wildcard specifier</span></span>|<span data-ttu-id="97de8-430">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-430">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-431">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-431">\* (asterisk)</span></span>|<span data-ttu-id="97de8-432">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-432">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-433">?</span><span class="sxs-lookup"><span data-stu-id="97de8-433">?</span></span> <span data-ttu-id="97de8-434">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-434">(question mark)</span></span>|<span data-ttu-id="97de8-435">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-435">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-436">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-436">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-437">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-437">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-438">".</span><span class="sxs-lookup"><span data-stu-id="97de8-438">".</span></span> <span data-ttu-id="97de8-439">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-439">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-440"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-440">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-441">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションの列挙を開始する<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-441">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-442">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>の配列全体を待つ必要があります<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-442">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-443">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-443">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-444">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-444">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97de8-445">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-445">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-446">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-446">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="97de8-447">
            <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-447">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-448">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-448">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-449">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-449">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-450">ディレクトリが存在するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-450">Gets a value indicating whether the directory exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97de8-451">ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-451">
              <see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-452"><xref:System.IO.DirectoryInfo.Exists%2A>プロパティから返される`false`指定したファイルが存在するかどうかを判断するときにエラーが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="97de8-452">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="97de8-453">これは無効な文字または文字が多すぎます、失敗、または見つからないディスクでは、ファイル名を渡すなどの例外が発生する状況で発生する、呼び出し元には、ファイルの読み取りアクセス許可がない場合またはします。</span><span class="sxs-lookup"><span data-stu-id="97de8-453">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-454">次の例での使用、`Exists`ターゲット ディレクトリにコピーして、ソース ディレクトリのコンテキストのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="97de8-454">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-455">ディレクトリの絶対パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-455">Gets the full path of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97de8-456">絶対パスを含んでいる文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-456">A string containing the full path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-457">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-457">Gets the access control list (ACL) entries for the current directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-458">使用して<xref:System.IO.DirectoryInfo.GetAccessControl%2A>アクセス権を取得するメソッドが現在のファイルのリスト (ACL) エントリを制御します。</span><span class="sxs-lookup"><span data-stu-id="97de8-458">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="97de8-459">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="97de8-459">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-460">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-460">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-461">ディレクトリのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-461">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-462">呼び出すことと同じではこのメソッドのオーバー ロードを呼び出して、<xref:System.IO.Directory.GetAccessControl%2A>メソッドのオーバー ロードと、アクセスを指定するコントロールでのセクションでは<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="97de8-462">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="97de8-463">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を現在のファイルのアクセス制御リスト (ACL) エントリを取得する方法です。</span><span class="sxs-lookup"><span data-stu-id="97de8-463">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="97de8-464">ACL には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="97de8-464">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="97de8-465">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="97de8-465">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-466">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>と<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドを追加し、削除、アクセス制御リスト (ACL) エントリをディレクトリからです。</span><span class="sxs-lookup"><span data-stu-id="97de8-466">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="97de8-467">ディレクトリが見つからないか、または変更されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-467">The directory could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97de8-468">ディレクトリが読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-468">The directory is read-only.</span>
          </span>
          <span data-ttu-id="97de8-469">または、この操作は、現在のプラットフォームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-469">-or-  This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="97de8-470">または、呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-470">-or-  The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97de8-471">ディレクトリを開くときに、I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-471">An I/O error occurred while opening the directory.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="97de8-472">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-472">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-473">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-473">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="97de8-474">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-474">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="97de8-475">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-475">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections">
          <span data-ttu-id="97de8-476">取得するアクセス制御リスト (ACL) の情報の型を指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-476">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-477">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリに関する指定された型のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-477">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-478">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> パラメーターが示すファイルのアクセス制御規則をカプセル化する <paramref name="path" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-478">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span>
          </span>
          <span data-ttu-id="97de8-479">例外  <list type="table"><listheader><term> 例外の種類  </term><description> 条件  </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> ディレクトリが見つからないか、または変更されています。</description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> 現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</description></item><item><term><see cref="T:System.IO.IOException" /></term><description> ディレクトリを開くときに、I/O エラーが発生しました。</description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> 現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> ディレクトリが読み取り専用です。または、この操作は現在のプラットフォームでサポートされていません。または、呼び出し元に必要なアクセス許可がありません。  </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-479">Exceptions  <list type="table"><listheader><term> Exception type  </term><description> Condition  </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> The directory could not be found or modified.  </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The current process does not have access to open the directory.  </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> An I/O error occurred while opening the directory.  </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> The current operating system is not Microsoft Windows 2000 or later.  </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The directory is read-only.  -or-  This operation is not supported on the current platform.  -or-  The caller does not have the required permission.  </description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-480">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を現在のファイルのアクセス制御リスト (ACL) エントリを取得する方法です。</span><span class="sxs-lookup"><span data-stu-id="97de8-480">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="97de8-481">ACL には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="97de8-481">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="97de8-482">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="97de8-482">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-483">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-483">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="97de8-484">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-484">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="97de8-485">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-485">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-486">現在のディレクトリのサブディレクトリを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-486">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-487">現在のディレクトリのサブディレクトリを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-487">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-488">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-488">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-489">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-489">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="97de8-490">このメソッドは、再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="97de8-490">This method is not recursive.</span></span>  
  
 <span data-ttu-id="97de8-491">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-491">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-492">次の例では、ルート ディレクトリ内のすべてのディレクトリを取得し、ディレクトリ名を表示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-492">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-493">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクトにカプセル化されているパスが無効です (割り当てられていないドライブが指定されている場合など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-493">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-494">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-494">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97de8-495">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-495">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-496">ディレクトリを読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-496">for reading directories.</span>
          </span>
          <span data-ttu-id="97de8-497">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-497">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-498">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-498">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="97de8-499">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-499">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-500">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-500">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-501">
            <see langword="DirectoryInfo" /> に一致する <paramref name="searchPattern" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-501">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-502">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-502">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-503">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-503">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-504">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-504">Wildcard specifier</span></span>|<span data-ttu-id="97de8-505">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-505">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-506">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-506">\* (asterisk)</span></span>|<span data-ttu-id="97de8-507">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-507">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-508">?</span><span class="sxs-lookup"><span data-stu-id="97de8-508">?</span></span> <span data-ttu-id="97de8-509">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-509">(question mark)</span></span>|<span data-ttu-id="97de8-510">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-510">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-511">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-511">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-512">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-512">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-513">".</span><span class="sxs-lookup"><span data-stu-id="97de8-513">".</span></span> <span data-ttu-id="97de8-514">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-514">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-515">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-515">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-516">次の例では、パス内の指定した文字を含むディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="97de8-516">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-517">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-517">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-518">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-518">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-519">
            <see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-519">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97de8-520">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-520">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-521">ファイルとディレクトリとパスにアクセスするための読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-521">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="97de8-522">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-522">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-523">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-523">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="97de8-524">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-524">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="97de8-525">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-525">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-526">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にある、指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つディレクトリの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-526">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-527">
            <see langword="DirectoryInfo" /> に一致する <paramref name="searchPattern" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-527">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-528">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-528">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-529">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-529">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-530">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-530">Wildcard specifier</span></span>|<span data-ttu-id="97de8-531">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-531">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-532">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-532">\* (asterisk)</span></span>|<span data-ttu-id="97de8-533">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-533">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-534">?</span><span class="sxs-lookup"><span data-stu-id="97de8-534">?</span></span> <span data-ttu-id="97de8-535">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-535">(question mark)</span></span>|<span data-ttu-id="97de8-536">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-536">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-537">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-537">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-538">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-538">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-539">".</span><span class="sxs-lookup"><span data-stu-id="97de8-539">".</span></span> <span data-ttu-id="97de8-540">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-540">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-541">サブディレクトリがないかに一致するサブディレクトリのかどうか、`searchPattern`パラメーター、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-541">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97de8-542">このメソッドは、次の値を事前に入力<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-542">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-543">次の例では、すべてのディレクトリおよび文字"c"で始まるファイルを示してで"c:\\"です。</span><span class="sxs-lookup"><span data-stu-id="97de8-543">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-544">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-544">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-545">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-545">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="97de8-546">
            <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-546">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-547">
            <see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-547">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97de8-548">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-548">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-549">ファイルとディレクトリとパスにアクセスするための読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-549">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="97de8-550">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-550">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-551">現在のディレクトリからファイル一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-551">Returns a file list from the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-552">現在のディレクトリからファイル一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-552">Returns a file list from the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-553">
            <see cref="T:System.IO.FileInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-553">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-554"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-554">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-555">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-555">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-556">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-556">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-557">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-557">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-558">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-558">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97de8-559">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの特定の並べ替え順序が必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="97de8-559">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="97de8-560">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-560">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-561">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-561">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="97de8-562">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-562">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-563">マップされていないドライブにあるなど、パスが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-563">The path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-564">ディレクトリを読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-564">for reading directories.</span>
          </span>
          <span data-ttu-id="97de8-565">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-565">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-566">ファイル名と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-566">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="97de8-567">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-567">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-568">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-568">Returns a file list from the current directory matching the given search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-569">
            <see cref="T:System.IO.FileInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-569">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-570">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-570">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-571">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-571">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-572">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-572">Wildcard specifier</span></span>|<span data-ttu-id="97de8-573">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-573">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-574">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-574">\* (asterisk)</span></span>|<span data-ttu-id="97de8-575">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-575">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-576">?</span><span class="sxs-lookup"><span data-stu-id="97de8-576">?</span></span> <span data-ttu-id="97de8-577">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-577">(question mark)</span></span>|<span data-ttu-id="97de8-578">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-578">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-579">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-579">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-580">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-580">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-581">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-581">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-582"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-582">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-583">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-583">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-584">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-584">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-585">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-585">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-586">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-586">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97de8-587">次のワイルドカードの指定子が許可される、`searchPattern`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="97de8-587">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="97de8-588">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="97de8-588">Wildcard character</span></span>|<span data-ttu-id="97de8-589">説明</span><span class="sxs-lookup"><span data-stu-id="97de8-589">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="97de8-590">0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-590">Zero or more characters.</span></span>|  
|<span data-ttu-id="97de8-591">?</span><span class="sxs-lookup"><span data-stu-id="97de8-591">?</span></span>|<span data-ttu-id="97de8-592">正確に 0 個または 1 つの文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-592">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="97de8-593">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの特定の並べ替え順序が必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="97de8-593">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="97de8-594">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-594">Wildcards are permitted.</span></span> <span data-ttu-id="97de8-595">たとえば、 `searchPattern` "\*.txt"検索のすべてのファイル名"txt"の拡張機能を含む文字列します。</span><span class="sxs-lookup"><span data-stu-id="97de8-595">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="97de8-596">`searchPattern`文字列"s\*"すべて"s"で始まる名前のファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-596">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="97de8-597">ファイルと一致するファイル、または いいえがある場合、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-597">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97de8-598">アスタリスクのワイルドカード文字を使用する場合、 `searchPattern` (たとえば、"\*.txt")、一致の動作は指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-598">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="97de8-599">A`searchPattern`ちょうど 3 文字の拡張機能が最初の 3 文字で指定されたファイル拡張子が一致する 3 つ以上の文字の拡張子を持つファイルを返すファイルを使用して、`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-599">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="97de8-600">A`searchPattern`ファイルを使用して 1 つ、2 つ、または 4 つ以上の文字の拡張機能がその長さだけで指定されたファイル拡張子に一致する拡張子を持つファイルのみを返す、`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-600">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="97de8-601">疑問符 (?) のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-601">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="97de8-602">たとえば、2 つのファイル ディレクトリ、"file1.txt"および"file1.txtother"の検索パターンで指定された"ファイルか。txt"には、検索パターンの中に、最初のファイルのみが返されます"ファイル\*.txt"ファイル ファイルの両方を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-602">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97de8-603">検索パターンに似ていますので、このメソッドは、8.3 ファイル名の形式と長いファイル名の形式の両方でのファイル名をチェックして、"* 1\*.txt"予期しないファイル名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="97de8-603">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="97de8-604">などの検索パターンを使用して"\*1\*.txt"と同等の 8.3 ファイル名の形式が"longf~1.txt"になるので"longfilename.txt"が返されます。</span><span class="sxs-lookup"><span data-stu-id="97de8-604">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="97de8-605">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-605">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-606">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-606">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="97de8-607">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-607">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-608">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-608">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-609">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-609">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-610">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-610">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-611">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-611">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-612">パスにファイルとディレクトリからの読み取りにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-612">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="97de8-613">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-613">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-614">ファイル名と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-614">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="97de8-615">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-615">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="97de8-616">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-616">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-617">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-617">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-618">
            <see cref="T:System.IO.FileInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-618">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-619"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドが次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-619">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97de8-620">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションの列挙を開始する<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="97de8-620">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97de8-621">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>の配列全体を待つ必要があります<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-621">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97de8-622">そのためとを扱う多くのファイルとディレクトリ、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="97de8-622">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97de8-623">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-623">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97de8-624">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-624">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-625">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="97de8-625">Wildcard character</span></span>|<span data-ttu-id="97de8-626">説明</span><span class="sxs-lookup"><span data-stu-id="97de8-626">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="97de8-627">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-627">\* (asterisk)</span></span>|<span data-ttu-id="97de8-628">0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-628">Zero or more characters.</span></span>|  
|<span data-ttu-id="97de8-629">?</span><span class="sxs-lookup"><span data-stu-id="97de8-629">?</span></span> <span data-ttu-id="97de8-630">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-630">(question mark)</span></span>|<span data-ttu-id="97de8-631">正確に 0 個または 1 つの文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-631">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="97de8-632">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの特定の並べ替え順序が必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="97de8-632">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="97de8-633">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-633">Wildcards are permitted.</span></span> <span data-ttu-id="97de8-634">たとえば、 `searchPattern` "\*.txt"検索のすべてのファイル名"txt"の拡張機能を含む文字列します。</span><span class="sxs-lookup"><span data-stu-id="97de8-634">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="97de8-635">`searchPattern`文字列"s\*"すべて"s"で始まる名前のファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-635">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="97de8-636">ファイルと一致するファイル、または いいえがある場合、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-636">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97de8-637">アスタリスクのワイルドカード文字を使用する場合、 `searchPattern` (たとえば、"\*.txt")、一致の動作は指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="97de8-637">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="97de8-638">A`searchPattern`ちょうど 3 文字の拡張機能が最初の 3 文字で指定されたファイル拡張子が一致する 3 つ以上の文字の拡張子を持つファイルを返すファイルを使用して、`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-638">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="97de8-639">A`searchPattern`ファイルを使用して 1 つ、2 つ、または 4 つ以上の文字の拡張機能がその長さだけで指定されたファイル拡張子に一致する拡張子を持つファイルのみを返す、`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-639">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="97de8-640">疑問符 (?) のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-640">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="97de8-641">たとえば、2 つのファイル ディレクトリ、"file1.txt"および"file1.txtother"の検索パターンで指定された"ファイルか。txt"には、検索パターンの中に、最初のファイルのみが返されます"ファイル\*.txt"ファイル ファイルの両方を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-641">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="97de8-642">次の一覧の長さが異なるの動作を示しています、`searchPattern`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="97de8-642">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="97de8-643">"\* .abc"、拡張機能 of.abc,.abcd,.abcde,.abcdef を持つファイルを返すにします。</span><span class="sxs-lookup"><span data-stu-id="97de8-643">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="97de8-644">"\*.abcd"では、拡張子 of.abcd を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-644">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="97de8-645">"\*.abcde"では、拡張子 of.abcde を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-645">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="97de8-646">"\*.abcdef"では、拡張子 of.abcdef を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-646">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97de8-647">検索パターンに似ていますので、このメソッドは、8.3 ファイル名の形式と長いファイル名の形式の両方でのファイル名をチェックして、"* 1\*.txt"予期しないファイル名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="97de8-647">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="97de8-648">などの検索パターンを使用して"\*1\*.txt"と同等の 8.3 ファイル名の形式が"longf~1.txt"になるので"longfilename.txt"が返されます。</span><span class="sxs-lookup"><span data-stu-id="97de8-648">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="97de8-649">このメソッドは、次の値を事前に入力<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-649">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-650">次の例では、別の検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-650">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="97de8-651">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt をという名前のファイルを持つサブディレクトリをという名前のファイルのあるディレクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-651">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-652">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-652">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-653">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-653">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="97de8-654">
            <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-654">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-655">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-655">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-656">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-656">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-657">パスにファイルとディレクトリからの読み取りにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-657">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="97de8-658">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-658">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-659">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-659">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-660">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-660">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-661">厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-661">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-662">ファイルまたはディレクトリがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-662">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="97de8-663">このメソッドは、再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="97de8-663">This method is not recursive.</span></span>  
  
 <span data-ttu-id="97de8-664">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>です。</span><span class="sxs-lookup"><span data-stu-id="97de8-664">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="97de8-665">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="97de8-665">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="97de8-666">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-666">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-667">次の例では、ファイルと、指定したディレクトリの下のディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="97de8-667">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-668">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-668">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-669">ディレクトリおよびファイルの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-669">The search string to match against the names of directories and files.</span>
          </span>
          <span data-ttu-id="97de8-670">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-670">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-671">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-671">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-672">検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-672">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-673">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-673">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-674">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-674">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-675">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-675">Wildcard specifier</span></span>|<span data-ttu-id="97de8-676">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-676">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-677">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-677">\* (asterisk)</span></span>|<span data-ttu-id="97de8-678">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-678">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-679">?</span><span class="sxs-lookup"><span data-stu-id="97de8-679">?</span></span> <span data-ttu-id="97de8-680">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-680">(question mark)</span></span>|<span data-ttu-id="97de8-681">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-681">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-682">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-682">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-683">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-683">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-684">".</span><span class="sxs-lookup"><span data-stu-id="97de8-684">".</span></span> <span data-ttu-id="97de8-685">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-685">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-686">このメソッドは、再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="97de8-686">This method is not recursive.</span></span>  
  
 <span data-ttu-id="97de8-687">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>です。</span><span class="sxs-lookup"><span data-stu-id="97de8-687">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="97de8-688">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="97de8-688">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="97de8-689">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-689">Wild cards are permitted.</span></span> <span data-ttu-id="97de8-690">たとえば、`searchPattern`文字列"\* t"内のすべてのディレクトリ名の検索`path`文字"t"で終了します。</span><span class="sxs-lookup"><span data-stu-id="97de8-690">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="97de8-691">`searchPattern`文字列"s\*"内のすべてのディレクトリ名の検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-691">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-692">文字列".."でのみ使用できます`searchPattern`指定されている場合、有効なディレクトリ名の一部としてなど、ディレクトリ名に"、。 します。b"です。</span><span class="sxs-lookup"><span data-stu-id="97de8-692">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="97de8-693">ディレクトリ階層を移動する使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="97de8-693">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="97de8-694">ファイルまたはディレクトリ、またはファイルやに一致するディレクトリがある場合、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-694">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97de8-695">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-695">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-696">次の例では、ファイルおよび指定した検索パターンに一致するディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="97de8-696">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-697">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-697">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-698">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-698">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-699">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-699">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-700">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-700">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-701">ファイルとディレクトリとパスにアクセスするための読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-701">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="97de8-702">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-702">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="97de8-703">ディレクトリおよびファイルの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-703">The search string to match against the names of directories and filesa.</span>
          </span>
          <span data-ttu-id="97de8-704">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-704">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="97de8-705">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-705">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="97de8-706">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-706">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-707">指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-707">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-708">検索条件に一致するファイル システム エントリの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-708">An array of file system entries that match the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-709">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせが可能ですが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97de8-709">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97de8-710">次のワイルドカードの指定子が許可される`searchPattern`です。</span><span class="sxs-lookup"><span data-stu-id="97de8-710">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97de8-711">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="97de8-711">Wildcard specifier</span></span>|<span data-ttu-id="97de8-712">一致件数</span><span class="sxs-lookup"><span data-stu-id="97de8-712">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97de8-713">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="97de8-713">\* (asterisk)</span></span>|<span data-ttu-id="97de8-714">その位置に 0 個以上の文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-714">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97de8-715">?</span><span class="sxs-lookup"><span data-stu-id="97de8-715">?</span></span> <span data-ttu-id="97de8-716">(疑問符 (?))</span><span class="sxs-lookup"><span data-stu-id="97de8-716">(question mark)</span></span>|<span data-ttu-id="97de8-717">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="97de8-717">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97de8-718">以外のワイルドカード文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="97de8-718">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97de8-719">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="97de8-719">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97de8-720">".</span><span class="sxs-lookup"><span data-stu-id="97de8-720">".</span></span> <span data-ttu-id="97de8-721">`searchPattern`文字列"s\*"のすべての名前を検索`path`"s"で開始します。</span><span class="sxs-lookup"><span data-stu-id="97de8-721">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97de8-722">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>です。</span><span class="sxs-lookup"><span data-stu-id="97de8-722">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="97de8-723">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="97de8-723">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="97de8-724">このメソッドは、次の値を事前に入力<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="97de8-724">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-725">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-725">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-726">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-726">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="97de8-727">
            <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-727">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-728">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-728">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-729">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-729">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName">
          <span data-ttu-id="97de8-730">このディレクトリの移動先の名前とパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-730">The name and path to which to move this directory.</span>
          </span>
          <span data-ttu-id="97de8-731">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-731">The destination cannot be another disk volume or a directory with the identical name.</span>
          </span>
          <span data-ttu-id="97de8-732">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-732">It can be an existing directory to which you want to add this directory as a subdirectory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-733">
            <see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-733">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-734">このメソッドは、<xref:System.IO.IOException>場合、たとえば、c:\mydir を c:\public に移動しようとして、c:\public が既に存在します。</span><span class="sxs-lookup"><span data-stu-id="97de8-734">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="97de8-735">指定する必要があります"c:\\\public\\\mydir"として、`destDirName`パラメーターなど、新しいディレクトリ名を指定または"c:\\\newdir"です。</span><span class="sxs-lookup"><span data-stu-id="97de8-735">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="97de8-736">このメソッドは、読み取り専用のディレクトリにディレクトリを移動を許可します。</span><span class="sxs-lookup"><span data-stu-id="97de8-736">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="97de8-737">いずれのディレクトリの読み取り/書き込み属性が影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="97de8-737">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="97de8-738">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-738">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-739">次の例では、ディレクトリを移動を示しています。</span><span class="sxs-lookup"><span data-stu-id="97de8-739">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-740">
            <paramref name="destDirName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-740">
              <paramref name="destDirName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97de8-741">
            <paramref name="destDirName" /> が空の文字列 (''") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-741">
              <paramref name="destDirName" /> is an empty string (''").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97de8-742">ディレクトリを別のボリュームに移動しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-742">An attempt was made to move a directory to a different volume.</span>
          </span>
          <span data-ttu-id="97de8-743">または、<paramref name="destDirName" /> が既に存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-743">-or-  <paramref name="destDirName" /> already exists.</span>
          </span>
          <span data-ttu-id="97de8-744">または、このパスへのアクセスが許可されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-744">-or-  You are not authorized to access this path.</span>
          </span>
          <span data-ttu-id="97de8-745">または、移動するディレクトリと対象のディレクトリの名前が同じです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-745">-or-  The directory being moved and the destination directory have the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-746">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-746">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="97de8-747">対象のディレクトリが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-747">The destination directory cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-748">読み取りや書き込みファイルとディレクトリとコピー先ディレクトリにアクセスするためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-748">for reading and writing files and directories and for access to the destination directory.</span>
          </span>
          <span data-ttu-id="97de8-749">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-749">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="97de8-750">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-750">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-751">
            <see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-751">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97de8-752">ディレクトリ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-752">The directory name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-753">これは、 <xref:System.IO.DirectoryInfo.Name%2A> "Bin"などのディレクトリの名前のみを返します。</span><span class="sxs-lookup"><span data-stu-id="97de8-753">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="97de8-754">"C:\public\Bin"など、完全なパスを取得する、<xref:System.IO.FileSystemInfo.FullName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="97de8-754">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="97de8-755"><xref:System.IO.DirectoryInfo.Name%2A>のプロパティ、<xref:System.IO.DirectoryInfo>権限は必要ありません (を構築するために必要なディレクトリに読み取りアクセス許可を超える、 <xref:System.IO.DirectoryInfo.Exists%2A>) ディレクトリの名前を与えることができますが、します。</span><span class="sxs-lookup"><span data-stu-id="97de8-755">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="97de8-756">渡す必要がある場合は、out、<xref:System.IO.DirectoryInfo>暗号強度が高い名前を持つ保護されたディレクトリに、信頼されていないコードの使用のダミー ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="97de8-756">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</span></span>  
  
 <span data-ttu-id="97de8-757">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-757">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-758">次の例には、現在の名前が表示されます。`DirectoryInfo`だけをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="97de8-758">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-759">指定されたサブディレクトリの親ディレクトリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-759">Gets the parent directory of a specified subdirectory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97de8-760">親ディレクトリ。 または<see langword="null" />パスが null の場合、またはファイル パスがルートを表す場合 (など"\\"、"c:"、または \*"\\\server\share") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-760">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-761">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)です。</span><span class="sxs-lookup"><span data-stu-id="97de8-761">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-762">次の例では、指定したディレクトリの親ディレクトリを参照するを示しています。</span><span class="sxs-lookup"><span data-stu-id="97de8-762">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-763">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-763">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-764">ファイルとディレクトリとパスにアクセスするための読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-764">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="97de8-765">関連する列挙: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-765">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97de8-766">ディレクトリのルート部分を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-766">Gets the root portion of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97de8-767">ディレクトリのルートを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-767">An object that represents the root of the directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97de8-768">次の例では、指定したディレクトリのルートの場所を表示します。</span><span class="sxs-lookup"><span data-stu-id="97de8-768">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="97de8-769">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-769">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-770">ファイルとディレクトリとパスにアクセスするための読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-770">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="97de8-771">関連する列挙: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-771">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="97de8-772">
            <c>path</c> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-772">An object that describes an ACL entry to apply to the directory described by the <c>path</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97de8-773">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の<see cref="T:System.IO.DirectoryInfo" /> オブジェクトが示すディレクトリに適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-773">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97de8-774">アクセス制御リスト (ACL) には、個人、グループ、または権限がない、指定したファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="97de8-774">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="97de8-775">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="97de8-775">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="97de8-776"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドが継承されない ACL リストを表すファイルに ACL エントリを適用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-776">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="97de8-777">ACL に指定された`directorySecurity`ディレクトリの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="97de8-777">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="97de8-778">新しいユーザーのアクセス許可を追加するには、使用、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドを既存の ACL を取得し、それを変更します。</span><span class="sxs-lookup"><span data-stu-id="97de8-778">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="97de8-779"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドにのみが引き続き発生する<xref:System.Security.AccessControl.DirectorySecurity>オブジェクトがオブジェクトの作成後に変更されました。</span><span class="sxs-lookup"><span data-stu-id="97de8-779">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="97de8-780">場合、<xref:System.Security.AccessControl.DirectorySecurity>オブジェクトが変更されていない、ファイルに永続化はできません。</span><span class="sxs-lookup"><span data-stu-id="97de8-780">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="97de8-781">したがって、取得することはありません、 <xref:System.Security.AccessControl.DirectorySecurity> 1 つのファイルからオブジェクトを別のファイルを同じオブジェクトを再適用します。</span><span class="sxs-lookup"><span data-stu-id="97de8-781">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="97de8-782">ACL の情報を別の 1 つのファイルにコピー: する</span><span class="sxs-lookup"><span data-stu-id="97de8-782">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="97de8-783">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を取得する方法、<xref:System.Security.AccessControl.DirectorySecurity>ソース ファイルからのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-783">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="97de8-784">新しい<xref:System.Security.AccessControl.DirectorySecurity>先のファイル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-784">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="97de8-785">使用して、<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>または<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>メソッドのソースの<xref:System.Security.AccessControl.DirectorySecurity>ACL 情報を取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-785">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="97de8-786">使用して、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>または<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>に情報をコピーする方法は、先には、手順 3. で取得<xref:System.Security.AccessControl.DirectorySecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="97de8-786">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="97de8-787">出力先を設定<xref:System.Security.AccessControl.DirectorySecurity>、変換先を使用してファイル オブジェクト、<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="97de8-787">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97de8-788">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>と<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドを追加し、削除、アクセス制御リスト (ACL) エントリをディレクトリからです。</span><span class="sxs-lookup"><span data-stu-id="97de8-788">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97de8-789">
            <paramref name="directorySecurity" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-789">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="97de8-790">ファイルを検出または変更できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-790">The file could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97de8-791">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-791">The current process does not have access to open the file.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="97de8-792">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-792">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="97de8-793">ディレクトリのアクセス制御リスト (ACL) を列挙する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-793">for permission to enumerate access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="97de8-794">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-794">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="97de8-795">関連する列挙: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-795">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97de8-796">ユーザーから渡された元のパスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-796">Returns the original path that was passed by the user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97de8-797">ユーザーから渡された元のパスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97de8-797">Returns the original path that was passed by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>