<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="380506d10e50a751045aac309916343b72f2e3b4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69243853" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ec55a-101">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="ec55a-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-103">ディレクトリの<xref:System.IO.DirectoryInfo>コピー、移動、名前の変更、作成、削除などの一般的な操作には、クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="ec55a-104">オブジェクトを何度も再利用する場合は、セキュリティチェックが必ずしも必要<xref:System.IO.DirectoryInfo>ではないため、 <xref:System.IO.Directory>クラスの対応する静的メソッドの代わりにのインスタンスメソッドを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec55a-105">パスを入力文字列として受け取るメンバーでは、そのパスは適切な形式である必要があります。そうでない場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="ec55a-106">たとえば、パスが完全修飾されていても、スペースで始まる場合は、クラスのメソッドでパスがトリムされません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="ec55a-107">そのため、パスの形式が正しくないため、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="ec55a-108">同様に、パスまたはパスの組み合わせを2回完全に修飾することはできません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="ec55a-109">たとえば、"c:\temp c:\windows" は、ほとんどの場合に例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="ec55a-110">パス文字列を受け取るメソッドを使用する場合は、パスが適切な形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="ec55a-111">パスを受け入れるメンバーでは、ファイルまたはディレクトリのみを参照できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="ec55a-112">指定されたパスは、サーバーと共有名の相対パスまたは UNC (汎用名前付け規則) パスを参照することもできます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="ec55a-113">たとえば、次のすべてが許容されるパスです。</span><span class="sxs-lookup"><span data-stu-id="ec55a-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="ec55a-114">Visual Basic の "\\c\\: \MyDir \MyFile.txt C#" または "c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="ec55a-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="ec55a-115">Visual Basic の "\\c: \MyDir C#" または "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="ec55a-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="ec55a-116">Visual Basic の "\\mydir \MySubdir C#"、または "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="ec55a-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="ec55a-117">\\ C#Visual Basic の "\MyServer\\\MyShare" または\\"「\myserver\myshare」"。\\\\</span><span class="sxs-lookup"><span data-stu-id="ec55a-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="ec55a-118">既定では、すべてのユーザーに対して、新しいディレクトリへの完全な読み取り/書き込みアクセス権が付与されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="ec55a-119">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-120">`DirectoryInfo`クラスの主なメンバーの一部を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="ec55a-121">次の例では、ディレクトリとその内容をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-122">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-122">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-123">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-124">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="ec55a-125">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="ec55a-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ec55a-126"><see langword="DirectoryInfo" /> を作成する対象のパスを指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="ec55a-127">指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-128">このコンストラクターは、ディレクトリが存在するかどうかを確認しません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="ec55a-129">このコンストラクターは、後続の操作でディスクにアクセスするために使用される文字列のプレースホルダーです。</span><span class="sxs-lookup"><span data-stu-id="ec55a-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="ec55a-130">パラメーター `path`には、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec55a-131">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="ec55a-132">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-132">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-133">次の例では、このコンストラクターを使用して、指定したディレクトリとサブディレクトリを作成し、サブディレクトリを含むディレクトリを削除できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-134"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-135">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-136"><paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ec55a-137">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-138">ファイルとディレクトリから読み取りを行う場合。</span><span class="sxs-lookup"><span data-stu-id="ec55a-138">for reading from files and directories.</span></span> <span data-ttu-id="ec55a-139">関連付けられた列挙型:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-140">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-140">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-141">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-141">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-142">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-142">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-143">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-143">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-144">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-144">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-145">ディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-145">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="ec55a-146">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-147">次の例では、指定されたディレクトリが存在するかどうかを確認し、ディレクトリが存在しない場合は作成して、ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-147">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec55a-148">ディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-148">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-149">ファイルの書き込みに使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-149">for writing files.</span></span> <span data-ttu-id="ec55a-150">関連付けられた列挙型:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-150">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-151">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-151">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-152">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-152">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-153">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-153">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="ec55a-154">ディレクトリに適用するアクセス制御。</span><span class="sxs-lookup"><span data-stu-id="ec55a-154">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="ec55a-155"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトを使用してディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-155">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-156">このメソッドオーバーロードを使用してアクセス制御を持つディレクトリを作成するため、セキュリティが適用される前にディレクトリにアクセスできる可能性はありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-156">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="ec55a-157">ディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-157">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="ec55a-158">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec55a-159"><paramref name="path" /> によって指定されたディレクトリが、読み取り専用であるか、空ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-159">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec55a-160">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-160">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-161"><paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-161"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-162"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ec55a-163">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-163">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-164">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-164">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec55a-165">コロン (:) 文字だけでディレクトリを作成しようとしました。</span><span class="sxs-lookup"><span data-stu-id="ec55a-165">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-166">ディレクトリを作成するためのアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="ec55a-166">for permission to create a directory.</span></span> <span data-ttu-id="ec55a-167">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="ec55a-167">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="ec55a-168">関連付けられた列挙型:<see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-168">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-169">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="ec55a-170">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ec55a-171">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="ec55a-171">The specified path.</span></span> <span data-ttu-id="ec55a-172">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-172">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="ec55a-173">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-173">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="ec55a-174">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-174">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="ec55a-175"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-175">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-176">`path` の`path`一部が無効な場合を除き、に指定されたすべてのディレクトリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-176">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="ec55a-177">パラメーター `path`は、ファイルパスではなく、ディレクトリパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-177">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="ec55a-178">サブディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-178">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="ec55a-179">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-179">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-180">次の例は、サブディレクトリを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-180">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="ec55a-181">この例では、作成されたディレクトリは作成後に削除されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-181">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="ec55a-182">したがって、このサンプルをテストするには、コード内の削除行をコメントアウトします。</span><span class="sxs-lookup"><span data-stu-id="ec55a-182">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-183"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-183"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-184"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-184"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-185">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-185">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec55a-186">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-186">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="ec55a-187">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-187">-or-</span></span> 
<span data-ttu-id="ec55a-188"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-188">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ec55a-189">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-189">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-190">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-190">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="ec55a-191">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-191">-or-</span></span> 
<span data-ttu-id="ec55a-192">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-192">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="ec55a-193"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-193">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec55a-194"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-194"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-195">ファイルの読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="ec55a-195">for reading and writing files.</span></span> <span data-ttu-id="ec55a-196">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />た列挙型:、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-196">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-197">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-197">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-198">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-198">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-199">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-199">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ec55a-200">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="ec55a-200">The specified path.</span></span> <span data-ttu-id="ec55a-201">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-201">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="ec55a-202">適用するセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-202">The security to apply.</span></span></param>
        <summary><span data-ttu-id="ec55a-203">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-203">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="ec55a-204">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-204">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="ec55a-205"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-205">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-206">`path` の`path`一部が無効な場合を除き、に指定されたすべてのディレクトリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-206">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="ec55a-207">パラメーター `path`は、ファイルパスではなく、ディレクトリパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-207">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="ec55a-208">サブディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-208">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="ec55a-209">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-210"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-210"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-211"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-211"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-212">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-212">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec55a-213">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-213">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="ec55a-214">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-214">-or-</span></span> 
<span data-ttu-id="ec55a-215"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-215">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ec55a-216">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-216">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-217">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-217">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="ec55a-218">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-218">-or-</span></span> 
<span data-ttu-id="ec55a-219">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-219">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="ec55a-220"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-220">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec55a-221"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-221"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-222">ファイルの読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="ec55a-222">for reading and writing files.</span></span> <span data-ttu-id="ec55a-223">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />た列挙型:、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-223">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-224">パスから <see cref="T:System.IO.DirectoryInfo" /> とその内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-224">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-225"><see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-225">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-226">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-226">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-227">次の例では、空でないディレクトリを削除しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-227">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec55a-228">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-228">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-229">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトに記述されているディレクトリが存在しないか、見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="ec55a-229">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec55a-230">ディレクトリが空ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-230">The directory is not empty.</span></span>  
  
<span data-ttu-id="ec55a-231">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-231">-or-</span></span> 
<span data-ttu-id="ec55a-232">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="ec55a-232">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="ec55a-233">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-233">-or-</span></span> 
<span data-ttu-id="ec55a-234">開いているハンドルがディレクトリに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。</span><span class="sxs-lookup"><span data-stu-id="ec55a-234">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="ec55a-235">開いているハンドルは、ディレクトリを列挙する際に発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-235">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="ec55a-236">詳細については、「[方法 : ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-237">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-237">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-238">ディレクトリの作成に使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-238">for writing directories.</span></span> <span data-ttu-id="ec55a-239">関連付けられた列挙型:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-239">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-240">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-240">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-241">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-241">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-242">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-242">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="ec55a-243">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec55a-243"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ec55a-244">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-244">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-245">にファイルまたはサブディレクトリ`DirectoryInfo` `recursive` `false`がない場合、このメソッドは、がの場合でもを削除します。 `DirectoryInfo`</span><span class="sxs-lookup"><span data-stu-id="ec55a-245">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="ec55a-246">`DirectoryInfo` `recursive`がをスロー<xref:System.IO.IOException>したときに空ではないを削除しようとしています。 `false`</span><span class="sxs-lookup"><span data-stu-id="ec55a-246">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="ec55a-247">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-247">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-248">次の例は、ディレクトリを削除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-248">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="ec55a-249">ディレクトリが削除されているため、最初`Delete`に行をコメントアウトして、ディレクトリが存在することをテストします。</span><span class="sxs-lookup"><span data-stu-id="ec55a-249">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="ec55a-250">次に、同じコード行のコメントを解除して、ディレクトリが正常に削除されたことをテストします。</span><span class="sxs-lookup"><span data-stu-id="ec55a-250">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec55a-251">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-251">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-252">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトに記述されているディレクトリが存在しないか、見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="ec55a-252">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec55a-253">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-253">The directory is read-only.</span></span>  
  
<span data-ttu-id="ec55a-254">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-254">-or-</span></span> 
<span data-ttu-id="ec55a-255">ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、<paramref name="recursive" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-255">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="ec55a-256">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-256">-or-</span></span> 
<span data-ttu-id="ec55a-257">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="ec55a-257">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="ec55a-258">または</span><span class="sxs-lookup"><span data-stu-id="ec55a-258">-or-</span></span> 
<span data-ttu-id="ec55a-259">開いているハンドルがディレクトリまたはそのディレクトリ内のファイルに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。</span><span class="sxs-lookup"><span data-stu-id="ec55a-259">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="ec55a-260">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-260">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="ec55a-261">詳細については、「[方法 : ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-261">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-262">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-262">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="ec55a-263"><see langword="DirectoryInfo" />およびサブディレクトリへの書き込みアクセス許可に必要な書き込みフラグを削除します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-263">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-264">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-264">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-265">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-265">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-266">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-266">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-267">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-267">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-268">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-268">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="ec55a-269">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-269">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-270">メソッド<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-271">を使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>すると、コレクション全体が返される前<xref:System.IO.DirectoryInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-272">を使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>するときは、配列にアクセスする前に<xref:System.IO.DirectoryInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-273">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-274">このメソッドは、次<xref:System.IO.DirectoryInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="ec55a-275">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-276">次の例では、C:\Program files ディレクトリの下のサブディレクトリを列挙し、LINQ クエリを使用して、 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティの値を確認することで、2009より前に作成されたすべてのディレクトリの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-276">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="ec55a-277">サブディレクトリの名前のみが必要な場合は、静的<xref:System.IO.Directory>クラスを使用してパフォーマンスを向上させます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-277">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="ec55a-278">例については、 <xref:System.IO.Directory.EnumerateDirectories%28System.String%29>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-278">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-279"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-279">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-280">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-280">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-281">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-281">The search string to match against the names of directories.</span></span>  <span data-ttu-id="ec55a-282">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-282">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="ec55a-283">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-283">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="ec55a-284"><paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-284">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-285">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-286">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-287">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-287">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-288">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-289">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-289">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-290">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-291">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-291">?</span></span> <span data-ttu-id="ec55a-292">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-292">(question mark)</span></span>|<span data-ttu-id="ec55a-293">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-294">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-295">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-295">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-296">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-296">".</span></span> <span data-ttu-id="ec55a-297">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-298">メソッド<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-299">を使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>すると、コレクション全体が返される前<xref:System.IO.DirectoryInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-300">を使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>するときは、配列にアクセスする前に<xref:System.IO.DirectoryInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-301">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-302">このメソッドは、次<xref:System.IO.DirectoryInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="ec55a-303">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-304"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-304"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-305"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-305">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-306">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-306">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-307">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-307">The search string to match against the names of directories.</span></span>  <span data-ttu-id="ec55a-308">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-308">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="ec55a-309">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-309">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="ec55a-310">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-310">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="ec55a-311">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-311">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="ec55a-312"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-312">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-313">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-313">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-314">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-314">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-315">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-315">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-316">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-316">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-317">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-317">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-318">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-318">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-319">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-319">?</span></span> <span data-ttu-id="ec55a-320">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-320">(question mark)</span></span>|<span data-ttu-id="ec55a-321">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-321">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-322">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-322">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-323">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-323">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-324">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-324">".</span></span> <span data-ttu-id="ec55a-325">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-325">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-326">メソッド<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-326">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-327">を使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>すると、コレクション全体が返される前<xref:System.IO.DirectoryInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-327">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-328">を使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>するときは、配列にアクセスする前に<xref:System.IO.DirectoryInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-328">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-329">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-329">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-330">このメソッドは、次<xref:System.IO.DirectoryInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-330">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="ec55a-331">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-331">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-332">次の例では、指定されたディレクトリから開始し、 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>このメソッドとメソッドを使用して、start ディレクトリ内のファイルとディレクトリを列挙し、サイズが 10 MB を超えるファイルの詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-332">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-333"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-333"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec55a-334"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-334"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-335"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-335">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-336">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-336">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-337">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-337">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-338">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-338">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="ec55a-339">現在のディレクトリ内の列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-339">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-340">メソッド<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-340">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-341">を使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>すると、コレクション全体が返される前<xref:System.IO.FileInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-341">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-342">を使用<xref:System.IO.DirectoryInfo.GetFiles%2A>するときは、配列にアクセスする前に<xref:System.IO.FileInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-342">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-343">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-343">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-344">このメソッドは、次<xref:System.IO.FileInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-344">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="ec55a-345">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-345">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-346">次の例では、指定されたディレクトリにあるファイルを列挙し、LINQ クエリを使用して、 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティの値を確認することで、2009より前に作成されたすべてのファイルの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-346">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="ec55a-347">ファイル名のみが必要な場合は、静的<xref:System.IO.Directory>クラスを使用してパフォーマンスを向上させます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-347">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="ec55a-348">例については、 <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-348">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="ec55a-349">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-349">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="ec55a-350">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-350">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-351"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-352">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-353">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-353">The search string to match against the names of files.</span></span>  <span data-ttu-id="ec55a-354">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-354">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="ec55a-355">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-355">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="ec55a-356"><paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-356">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-357">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-357">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-358">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-358">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-359">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-359">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-360">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-360">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-361">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-361">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-362">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-362">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-363">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-363">?</span></span> <span data-ttu-id="ec55a-364">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-364">(question mark)</span></span>|<span data-ttu-id="ec55a-365">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-365">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-366">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-366">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-367">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-367">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-368">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-368">".</span></span> <span data-ttu-id="ec55a-369">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-369">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-370">メソッド<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-370">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-371">を使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>すると、コレクション全体が返される前<xref:System.IO.FileInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-371">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-372">を使用<xref:System.IO.DirectoryInfo.GetFiles%2A>するときは、配列にアクセスする前に<xref:System.IO.FileInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-372">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-373">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-373">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-374">このメソッドは、次<xref:System.IO.FileInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-374">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="ec55a-375">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-375">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-376">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-376">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="ec55a-377">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-377">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-378"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-378"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-379"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-379">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-380">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-380">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-381">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-381">The search string to match against the names of files.</span></span>  <span data-ttu-id="ec55a-382">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-382">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="ec55a-383">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-383">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="ec55a-384">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-384">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="ec55a-385">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-385">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="ec55a-386"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-386">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-387">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-387">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-388">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-388">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-389">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-389">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-390">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-390">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-391">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-391">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-392">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-392">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-393">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-393">?</span></span> <span data-ttu-id="ec55a-394">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-394">(question mark)</span></span>|<span data-ttu-id="ec55a-395">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-395">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-396">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-396">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-397">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-397">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-398">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-398">".</span></span> <span data-ttu-id="ec55a-399">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-399">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-400">メソッド<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-400">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-401">を使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>すると、コレクション全体が返される前<xref:System.IO.FileInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-401">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-402">を使用<xref:System.IO.DirectoryInfo.GetFiles%2A>するときは、配列にアクセスする前に<xref:System.IO.FileInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-402">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-403">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-403">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-404">このメソッドは、次<xref:System.IO.FileInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-404">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="ec55a-405">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-405">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-406">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-406">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="ec55a-407">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-407">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-408"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-408"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec55a-409"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-409"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-410"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-410">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-411">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-411">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-412">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-412">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-413">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-413">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="ec55a-414">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-414">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-415">メソッド<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-415">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-416">を使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>すると、コレクション全体が返される前<xref:System.IO.FileSystemInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-416">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-417">を使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>するときは、配列にアクセスする前に<xref:System.IO.FileSystemInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-417">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-418">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-418">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-419">このメソッドは、次<xref:System.IO.FileSystemInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-419">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="ec55a-420">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-420">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-421"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-421">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-422">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-422">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-423">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-423">The search string to match against the names of directories.</span></span>  <span data-ttu-id="ec55a-424">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-424">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="ec55a-425">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-425">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="ec55a-426"><paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-426">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-427">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-427">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-428">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-428">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-429">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-429">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-430">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-430">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-431">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-431">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-432">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-432">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-433">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-433">?</span></span> <span data-ttu-id="ec55a-434">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-434">(question mark)</span></span>|<span data-ttu-id="ec55a-435">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-435">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-436">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-436">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-437">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-437">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-438">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-438">".</span></span> <span data-ttu-id="ec55a-439">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-439">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-440">メソッド<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-440">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-441">を使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>すると、コレクション全体が返される前<xref:System.IO.FileSystemInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-441">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-442">を使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>するときは、配列にアクセスする前に<xref:System.IO.FileSystemInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-442">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-443">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-443">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-444">このメソッドは、次<xref:System.IO.FileSystemInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-444">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="ec55a-445">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-445">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-446"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-446"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-447"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-447">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-448">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-448">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-449">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-449">The search string to match against the names of directories.</span></span>  <span data-ttu-id="ec55a-450">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-450">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="ec55a-451">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-451">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="ec55a-452">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-452">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="ec55a-453">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-453">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="ec55a-454"><paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ec55a-454">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-455">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-455">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-456">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-456">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-457">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-457">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-458">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-458">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-459">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-459">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-460">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-460">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-461">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-461">?</span></span> <span data-ttu-id="ec55a-462">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-462">(question mark)</span></span>|<span data-ttu-id="ec55a-463">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-463">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-464">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-464">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-465">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-465">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-466">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-466">".</span></span> <span data-ttu-id="ec55a-467">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-467">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-468">メソッド<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-468">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-469">を使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>すると、コレクション全体が返される前<xref:System.IO.FileSystemInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-469">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-470">を使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>するときは、配列にアクセスする前に<xref:System.IO.FileSystemInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-470">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-471">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-471">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-472">このメソッドは、次<xref:System.IO.FileSystemInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-472">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="ec55a-473">返されたコレクションはキャッシュされません。コレクションの<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-473">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-474"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-474"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec55a-475"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-475"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-476"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-476">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-477">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-477">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec55a-478">ディレクトリが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-478">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="ec55a-479">ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec55a-479"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-480">指定<xref:System.IO.DirectoryInfo.Exists%2A>した`false`ファイルが存在するかどうかを判断しようとしているときにエラーが発生した場合、プロパティはを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-480">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="ec55a-481">これは、無効な文字を含むファイル名の受け渡し、文字の数が多すぎる、ディスクの障害が発生した、または呼び出し元にファイルの読み取りアクセス許可がないなどの例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-481">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-482">次の例では、ソースディレクトリ`Exists`をターゲットディレクトリにコピーするコンテキストでプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-482">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-483">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-483">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-484">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-484">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-485">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-485">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec55a-486">ディレクトリの絶対パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-486">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="ec55a-487">絶対パスを含んでいる文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-487">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>    
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-488">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-488">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-489">メソッド<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-489">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="ec55a-490">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-490">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-491">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-491">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec55a-492">ディレクトリのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec55a-492">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-493">このメソッドのオーバーロードを呼び出すことは<xref:System.IO.Directory.GetAccessControl%2A> 、メソッドのオーバーロードを呼び出し、アクセス<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>制御<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>セクション&#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>を指定することと同じです (`Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>VisualBasic)。 `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ec55a-493">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="ec55a-494"><xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-494">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="ec55a-495">ACL は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-495">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="ec55a-496">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-496">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-497">次の例では<xref:System.IO.DirectoryInfo.GetAccessControl%2A> 、 <xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドとメソッドを使用して、ディレクトリからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-497">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="ec55a-498">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-498">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec55a-499">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-499">The directory is read-only.</span></span>  
  
 <span data-ttu-id="ec55a-500">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-500">-or-</span></span>  
  
 <span data-ttu-id="ec55a-501">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-501">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="ec55a-502">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-502">-or-</span></span>  
  
 <span data-ttu-id="ec55a-503">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-503">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec55a-504">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ec55a-504">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ec55a-505">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-505">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-506">ディレクトリのアクセス制御リスト (ACL) を列挙するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="ec55a-506">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="ec55a-507">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="ec55a-507">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="ec55a-508">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />た列挙型:、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-508">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="ec55a-509">取得するアクセス制御リスト (ACL) の情報の型を指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="ec55a-509">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="ec55a-510">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトで示されるディレクトリの、指定した種類のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-510">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec55a-511"><paramref name="path" /> パラメーターによって記述されるファイルのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec55a-511">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="ec55a-512">例外</span><span class="sxs-lookup"><span data-stu-id="ec55a-512">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="ec55a-513">例外の種類</span><span class="sxs-lookup"><span data-stu-id="ec55a-513">Exception type</span></span> 
 </term><description> <span data-ttu-id="ec55a-514">条件</span><span class="sxs-lookup"><span data-stu-id="ec55a-514">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="ec55a-515">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-515">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="ec55a-516">現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-516">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="ec55a-517">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ec55a-517">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> <span data-ttu-id="ec55a-518">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-518">The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="ec55a-519">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-519">The directory is read-only.</span></span>  
  
<span data-ttu-id="ec55a-520">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-520">-or-</span></span> 
<span data-ttu-id="ec55a-521">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-521">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="ec55a-522">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-522">-or-</span></span> 
<span data-ttu-id="ec55a-523">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-523">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-524"><xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-524">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="ec55a-525">ACL は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-525">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="ec55a-526">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-526">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-527">ディレクトリのアクセス制御リスト (ACL) を列挙するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="ec55a-527">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="ec55a-528">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="ec55a-528">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="ec55a-529">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />た列挙型:、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-529">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-530">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-530">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-531">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-531">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="ec55a-532"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-532">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-533">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-533">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="ec55a-534">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-534">This method is not recursive.</span></span>  
  
 <span data-ttu-id="ec55a-535">このメソッドは、次<xref:System.IO.DirectoryInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-535">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-536">次の例では、ルートディレクトリ内のすべてのディレクトリを取得し、ディレクトリ名を表示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-536">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-537"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトにカプセル化されているパスが無効です (割り当てられていないドライブが指定されている場合など)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-537">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-538">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-538">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec55a-539">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-539">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-540">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-540">for reading directories.</span></span> <span data-ttu-id="ec55a-541">関連付けられた列挙型:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-541">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-542">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-542">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-543">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-543">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-544">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-544">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-545">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-545">The search string to match against the names of directories.</span></span>  <span data-ttu-id="ec55a-546">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-546">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="ec55a-547">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-547">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="ec55a-548"><paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-548">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-549">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-549">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-550">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-550">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-551">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-551">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-552">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-552">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-553">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-553">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-554">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-554">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-555">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-555">?</span></span> <span data-ttu-id="ec55a-556">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-556">(question mark)</span></span>|<span data-ttu-id="ec55a-557">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-557">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-558">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-558">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-559">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-559">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-560">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-560">".</span></span> <span data-ttu-id="ec55a-561">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-561">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-562">このメソッドは、次<xref:System.IO.DirectoryInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-562">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-563">次の例では、指定された文字を含むパス内のディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="ec55a-563">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-564"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-564"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-565"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-565"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-566"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-566">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec55a-567">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-567">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-568">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-568">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="ec55a-569">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />た列挙型:、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-569">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-570">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-570">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-571">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-571">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-572">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-572">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-573">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-573">The search string to match against the names of directories.</span></span>  <span data-ttu-id="ec55a-574">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-574">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="ec55a-575">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-575">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="ec55a-576">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にある、指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-576">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="ec55a-577"><paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-577">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-578">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-578">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-579">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-579">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-580">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-580">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-581">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-581">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-582">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-582">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-583">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-583">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-584">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-584">?</span></span> <span data-ttu-id="ec55a-585">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-585">(question mark)</span></span>|<span data-ttu-id="ec55a-586">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-586">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-587">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-587">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-588">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-588">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-589">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-589">".</span></span> <span data-ttu-id="ec55a-590">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-590">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-591">サブディレクトリが存在しない場合、またはパラメーター `searchPattern`に一致するサブディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-591">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="ec55a-592">このメソッドは、次<xref:System.IO.DirectoryInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-592">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-593">次の例では、"c:\\" の文字 "c" で始まるすべてのディレクトリとファイルを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-593">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-594"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-594"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-595"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-595"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec55a-596"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-596"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-597"><see langword="DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-597">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec55a-598">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-598">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-599">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-599">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="ec55a-600">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />た列挙型:、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-600">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-601">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-601">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-602">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-602">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-603">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-603">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-604">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-604">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-605">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-605">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="ec55a-606"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-606">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-607">メソッド<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-607">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-608">を使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>すると、コレクション全体が返される前<xref:System.IO.FileInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-608">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-609">を使用<xref:System.IO.DirectoryInfo.GetFiles%2A>するときは、配列にアクセスする前に<xref:System.IO.FileInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-609">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-610">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-610">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-611">にファイルが存在しない場合<xref:System.IO.DirectoryInfo>、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-611">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="ec55a-612">返されるファイル名の順序は保証されません。特定の<xref:System.Array.Sort%2A>並べ替え順序が必要な場合は、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-612">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="ec55a-613">このメソッドは、次<xref:System.IO.FileInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-613">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-614">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-614">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="ec55a-615">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-615">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-616">割り当てられていないドライブであるなど、パスが無効です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-616">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-617">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-617">for reading directories.</span></span> <span data-ttu-id="ec55a-618">関連付けられた列挙型:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-618">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-619">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-619">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-620">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-620">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-621">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-621">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-622">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-622">The search string to match against the names of files.</span></span>  <span data-ttu-id="ec55a-623">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-623">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="ec55a-624">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-624">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="ec55a-625"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-625">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-626">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-626">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-627">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-627">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-628">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-628">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-629">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-629">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-630">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-630">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-631">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-631">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-632">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-632">?</span></span> <span data-ttu-id="ec55a-633">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-633">(question mark)</span></span>|<span data-ttu-id="ec55a-634">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-634">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-635">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-635">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-636">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-636">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-637">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-637">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-638">メソッド<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-638">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-639">を使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>すると、コレクション全体が返される前<xref:System.IO.FileInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-639">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-640">を使用<xref:System.IO.DirectoryInfo.GetFiles%2A>するときは、配列にアクセスする前に<xref:System.IO.FileInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-640">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-641">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-641">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-642">にファイルが存在しない場合<xref:System.IO.DirectoryInfo>、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-642">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="ec55a-643">`searchPattern`パラメーターでは、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-643">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="ec55a-644">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="ec55a-644">Wildcard character</span></span>|<span data-ttu-id="ec55a-645">説明</span><span class="sxs-lookup"><span data-stu-id="ec55a-645">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="ec55a-646">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-646">Zero or more characters.</span></span>|  
|<span data-ttu-id="ec55a-647">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-647">?</span></span>|<span data-ttu-id="ec55a-648">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-648">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="ec55a-649">返されるファイル名の順序は保証されません。特定の<xref:System.Array.Sort%2A>並べ替え順序が必要な場合は、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-649">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="ec55a-650">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-650">Wildcards are permitted.</span></span> <span data-ttu-id="ec55a-651">たとえば、"\* `searchPattern` .txt" という文字列は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-651">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="ec55a-652">文字列`searchPattern` "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-652">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="ec55a-653">ファイルが存在しない場合、または`searchPattern` <xref:System.IO.DirectoryInfo>内の文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-653">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec55a-654">でアスタリスクのワイルドカード文字`searchPattern` ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-654">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="ec55a-655">ファイル`searchPattern`拡張子が3文字のファイルは、3文字以上の拡張子を持つファイルを返します。最初の3文字は、 `searchPattern`で指定したファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-655">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="ec55a-656">ファイル`searchPattern`拡張子が1、2、または3文字を超える場合は、 `searchPattern`で指定されたファイル拡張子に一致する長さの拡張子を持つファイルのみが返されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-656">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="ec55a-657">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-657">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="ec55a-658">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、"\*file.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-658">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec55a-659">このメソッドでは、ファイル名の形式が8.3 で、長いファイル名の形式であるファイル名がチェックされるため、"\*\* 1 .txt" のような検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-659">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="ec55a-660">たとえば、"\*1\*.txt" という検索パターンを使用すると、"longfilename .txt" が返されます。これは、8.3 ファイル名の形式が "longfilename ~ 1 .txt" であるためです。</span><span class="sxs-lookup"><span data-stu-id="ec55a-660">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="ec55a-661">このメソッドは、次<xref:System.IO.FileInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-661">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-662">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-662">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="ec55a-663">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-663">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-664"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-664"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-665"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-665"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-666">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-666">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-667">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-667">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-668">パスへのアクセス、およびファイルとディレクトリからの読み取りのために使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-668">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="ec55a-669">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />た列挙型:、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-669">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-670">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-670">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-671">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-671">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-672">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-672">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-673">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-673">The search string to match against the names of files.</span></span>  <span data-ttu-id="ec55a-674">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-674">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="ec55a-675">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-675">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="ec55a-676">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-676">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="ec55a-677"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-677">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-678">メソッド<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-678">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="ec55a-679">を使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>すると、コレクション全体が返される前<xref:System.IO.FileInfo>に、オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-679">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="ec55a-680">を使用<xref:System.IO.DirectoryInfo.GetFiles%2A>するときは、配列にアクセスする前に<xref:System.IO.FileInfo> 、オブジェクトの配列全体が返されるまで待つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-680">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="ec55a-681">そのため、多くのファイルとディレクトリを操作する場合<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>は、の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-681">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="ec55a-682">にファイルが存在しない場合<xref:System.IO.DirectoryInfo>、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-682">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="ec55a-683">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-683">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-684">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="ec55a-684">Wildcard character</span></span>|<span data-ttu-id="ec55a-685">説明</span><span class="sxs-lookup"><span data-stu-id="ec55a-685">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="ec55a-686">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-686">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-687">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-687">Zero or more characters.</span></span>|  
|<span data-ttu-id="ec55a-688">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-688">?</span></span> <span data-ttu-id="ec55a-689">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-689">(question mark)</span></span>|<span data-ttu-id="ec55a-690">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-690">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="ec55a-691">返されるファイル名の順序は保証されません。特定の<xref:System.Array.Sort%2A>並べ替え順序が必要な場合は、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-691">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="ec55a-692">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-692">Wildcards are permitted.</span></span> <span data-ttu-id="ec55a-693">たとえば、"\* `searchPattern` .txt" という文字列は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-693">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="ec55a-694">文字列`searchPattern` "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-694">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="ec55a-695">ファイルが存在しない場合、または`searchPattern` <xref:System.IO.DirectoryInfo>内の文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-695">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec55a-696">でアスタリスクのワイルドカード文字`searchPattern` ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-696">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="ec55a-697">ファイル`searchPattern`拡張子が3文字のファイルは、3文字以上の拡張子を持つファイルを返します。最初の3文字は、 `searchPattern`で指定したファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-697">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="ec55a-698">ファイル`searchPattern`拡張子が1、2、または3文字を超える場合は、 `searchPattern`で指定されたファイル拡張子に一致する長さの拡張子を持つファイルのみが返されます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-698">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="ec55a-699">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-699">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="ec55a-700">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、"\*file.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-700">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="ec55a-701">次の一覧は、 `searchPattern`パラメーターのさまざまな長さの動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-701">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="ec55a-702">"\* abc" は、拡張子が abc、abcd、abcde...z、abcdef などのファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-702">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="ec55a-703">"\* abcd" は、拡張子が abcd のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-703">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="ec55a-704">"\* abcde...z" は拡張子が abcde...z のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-704">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="ec55a-705">"\* abcdef" は拡張子が abcdef のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-705">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec55a-706">このメソッドでは、ファイル名の形式が8.3 で、長いファイル名の形式であるファイル名がチェックされるため、"\*\* 1 .txt" のような検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-706">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="ec55a-707">たとえば、"\*1\*.txt" という検索パターンを使用すると、"longfilename .txt" が返されます。これは、8.3 ファイル名の形式が "longfilename ~ 1 .txt" であるためです。</span><span class="sxs-lookup"><span data-stu-id="ec55a-707">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="ec55a-708">このメソッドは、次<xref:System.IO.FileInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-708">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-709">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-709">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="ec55a-710">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-710">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-711"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-711"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-712"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-712"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec55a-713"><paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-713"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-714">パスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-714">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-715">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-715">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-716">パスへのアクセス、およびファイルとディレクトリからの読み取りのために使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-716">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="ec55a-717">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />た列挙型:、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-717">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-718">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-718">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-719">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-719">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-720">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-720">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec55a-721">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-721">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-722">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-722">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="ec55a-723">厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-723">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-724">内に<xref:System.IO.DirectoryInfo>ファイルまたはディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-724">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="ec55a-725">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-725">This method is not recursive.</span></span>  
  
 <span data-ttu-id="ec55a-726">サブディレクトリの場合<xref:System.IO.FileSystemInfo> 、このメソッドによって返されるオブジェクトは、派生<xref:System.IO.DirectoryInfo>クラスにキャストできます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-726">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="ec55a-727">プロパティによって返される<xref:System.IO.FileSystemInfo> 値を使用して、がファイルまたはディレクトリを表しているかどうかを確認します。<xref:System.IO.FileAttributes> <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ec55a-727">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="ec55a-728">このメソッドは、次<xref:System.IO.FileSystemInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-728">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-729">次の例では、指定されたディレクトリにあるファイルとディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="ec55a-729">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-730">パスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-730">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-731">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-731">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-732">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-732">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-733">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-733">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-734">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-734">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="ec55a-735">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-735">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="ec55a-736">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-736">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="ec55a-737">検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-737">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-738">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-738">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-739">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-739">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-740">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-740">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-741">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-741">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-742">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-742">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-743">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-743">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-744">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-744">?</span></span> <span data-ttu-id="ec55a-745">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-745">(question mark)</span></span>|<span data-ttu-id="ec55a-746">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-746">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-747">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-747">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-748">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-748">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-749">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-749">".</span></span> <span data-ttu-id="ec55a-750">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-750">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-751">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-751">This method is not recursive.</span></span>  
  
 <span data-ttu-id="ec55a-752">サブディレクトリの場合<xref:System.IO.FileSystemInfo> 、このメソッドによって返されるオブジェクトは、派生<xref:System.IO.DirectoryInfo>クラスにキャストできます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-752">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="ec55a-753">プロパティによって返される<xref:System.IO.FileSystemInfo> 値を使用して、がファイルまたはディレクトリを表しているかどうかを確認します。<xref:System.IO.FileAttributes> <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ec55a-753">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="ec55a-754">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-754">Wild cards are permitted.</span></span> <span data-ttu-id="ec55a-755">たとえば、"\* `searchPattern` t" という文字列は、末尾に`path`文字 "t" で終わるすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-755">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="ec55a-756">文字列`searchPattern` "s\*" は、文字 "s" で`path`始まるすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-756">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-757">文字列 ".." は、ディレクトリ名 "a `searchPattern` . のように有効なディレクトリ名の一部として指定されている場合にのみ、で使用できます。b "のようになります。</span><span class="sxs-lookup"><span data-stu-id="ec55a-757">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="ec55a-758">ディレクトリ階層の上に移動するために使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-758">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="ec55a-759">ファイルまたはディレクトリが存在しない場合、または`searchPattern` <xref:System.IO.DirectoryInfo>内の文字列に一致するファイルやディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-759">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="ec55a-760">このメソッドは、次<xref:System.IO.FileSystemInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-760">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-761">次の例では、指定した検索パターンに一致するファイルとディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="ec55a-761">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-762"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-762"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-763"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-763"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-764">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-764">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-765">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-765">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-766">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-766">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="ec55a-767">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />た列挙型:、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-767">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-768">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-768">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-769">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-769">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-770">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-770">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="ec55a-771">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-771">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="ec55a-772">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-772">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="ec55a-773">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="ec55a-773">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="ec55a-774">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-774">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="ec55a-775">指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-775">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="ec55a-776">検索条件に一致するファイル システム エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="ec55a-776">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-777">`searchPattern`には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-777">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="ec55a-778">で`searchPattern`は、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-778">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="ec55a-779">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="ec55a-779">Wildcard specifier</span></span>|<span data-ttu-id="ec55a-780">一致件数</span><span class="sxs-lookup"><span data-stu-id="ec55a-780">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="ec55a-781">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="ec55a-781">\* (asterisk)</span></span>|<span data-ttu-id="ec55a-782">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-782">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="ec55a-783">?</span><span class="sxs-lookup"><span data-stu-id="ec55a-783">?</span></span> <span data-ttu-id="ec55a-784">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="ec55a-784">(question mark)</span></span>|<span data-ttu-id="ec55a-785">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="ec55a-785">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="ec55a-786">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-786">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="ec55a-787">たとえば、"\* t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-787">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="ec55a-788">".</span><span class="sxs-lookup"><span data-stu-id="ec55a-788">".</span></span> <span data-ttu-id="ec55a-789">文字列`searchPattern` "s\*" は、文字 "s" `path`で始まるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-789">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="ec55a-790">サブディレクトリの場合<xref:System.IO.FileSystemInfo> 、このメソッドによって返されるオブジェクトは、派生<xref:System.IO.DirectoryInfo>クラスにキャストできます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-790">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="ec55a-791">プロパティによって返される<xref:System.IO.FileSystemInfo> 値を使用して、がファイルまたはディレクトリを表しているかどうかを確認します。<xref:System.IO.FileAttributes> <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ec55a-791">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="ec55a-792">このメソッドは、次<xref:System.IO.FileSystemInfo>のプロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-792">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-793"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-793"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-794"><paramref name="searchPattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-794"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec55a-795"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-795"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-796">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="ec55a-796">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-797">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-797">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="ec55a-798">このディレクトリの移動先の名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ec55a-798">The name and path to which to move this directory.</span></span> <span data-ttu-id="ec55a-799">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-799">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="ec55a-800">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-800">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="ec55a-801"><see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-801">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-802">たとえば、c:\mydir を<xref:System.IO.IOException> c:\ に移動しようとしていて、c:\ パブリックが既に存在する場合、このメソッドはをスローします。</span><span class="sxs-lookup"><span data-stu-id="ec55a-802">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="ec55a-803">パラメーターと\\して\\\\"c: \ public \mydir" を指定するか、"c: \ newdir" のような新しいディレクトリ名を指定する必要があります。 `destDirName`</span><span class="sxs-lookup"><span data-stu-id="ec55a-803">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="ec55a-804">この方法を使うと、ディレクトリを読み取り専用ディレクトリに移動できます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-804">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="ec55a-805">どちらのディレクトリの読み取り/書き込み属性も影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-805">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="ec55a-806">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-806">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-807">次の例では、ディレクトリの移動を示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-807">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-808"><paramref name="destDirName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-808"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec55a-809"><paramref name="destDirName" /> が空の文字列 (''") です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-809"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec55a-810">ディレクトリを別のボリュームに移動しようとしました。</span><span class="sxs-lookup"><span data-stu-id="ec55a-810">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="ec55a-811">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-811">-or-</span></span> 
 <span data-ttu-id="ec55a-812"><paramref name="destDirName" /> が既に存在します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-812"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="ec55a-813">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-813">-or-</span></span> 
<span data-ttu-id="ec55a-814">このパスへのアクセスが承認されていません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-814">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="ec55a-815">- または -</span><span class="sxs-lookup"><span data-stu-id="ec55a-815">-or-</span></span> 
<span data-ttu-id="ec55a-816">移動しようとしているディレクトリと移動先のディレクトリが同じ名前です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-816">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-817">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-817">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ec55a-818">移動先のディレクトリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-818">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-819">ファイルとディレクトリの読み取りと書き込み、および宛先ディレクトリへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-819">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="ec55a-820">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="ec55a-820">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="ec55a-821">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />た列挙型:、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-821">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-822">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-822">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-823">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-823">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-824">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-824">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec55a-825"><see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-825">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="ec55a-826">ディレクトリ名。</span><span class="sxs-lookup"><span data-stu-id="ec55a-826">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-827">この<xref:System.IO.DirectoryInfo.Name%2A>プロパティは、ディレクトリの名前 ("Bin" など) のみを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-827">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="ec55a-828">"C:\ public\bin" などの完全なパスを取得するには、 <xref:System.IO.FileSystemInfo.FullName%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-828">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="ec55a-829">のプロパティに<xref:System.IO.DirectoryInfo.Name%2A>は、 <xref:System.IO.DirectoryInfo.Exists%2A>を構築するために必要なディレクトリへの読み取りアクセス許可を超えるアクセス許可は必要ありませんが、ディレクトリ名を指定できます。<xref:System.IO.DirectoryInfo></span><span class="sxs-lookup"><span data-stu-id="ec55a-829">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="ec55a-830">を、 <xref:System.IO.DirectoryInfo>暗号化された安全な名前で保護されたディレクトリに渡す必要がある場合は、信頼されていないコードの使用用のダミーディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-830">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="ec55a-831">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-831">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-832">次の例では、現在`DirectoryInfo`のインスタンスの名前のみを表示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-832">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-833">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-833">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-834">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-834">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-835">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-835">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec55a-836">指定されたサブディレクトリの親ディレクトリを取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-836">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="ec55a-837">親ディレクトリ<see langword="null" /> 。パスが null の場合、またはファイルパスがルート (\\""、"C:"、または \* "\\\ \ \ \ \ \ \ \") を示す場合は。</span><span class="sxs-lookup"><span data-stu-id="ec55a-837">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-838">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-838">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-839">次の例は、指定したディレクトリの親ディレクトリを参照する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ec55a-839">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-840">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-840">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-841">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-841">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="ec55a-842">関連付けられ<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />た列挙型:、<see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-842">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-843">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-843">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-844">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-844">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-845">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-845">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec55a-846">ディレクトリのルート部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-846">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="ec55a-847">ディレクトリのルートを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec55a-847">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec55a-848">次の例では、指定したディレクトリのルートの場所を表示します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-848">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec55a-849">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-849">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-850">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-850">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="ec55a-851">関連付けられ<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />た列挙型:、<see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-851">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-852">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-852">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-853">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-853">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-854">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-854">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="ec55a-855"><paramref name="path" /> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ec55a-855">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="ec55a-856"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の <see cref="T:System.IO.DirectoryInfo" /> オブジェクトが示すディレクトリに適用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-856">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec55a-857">アクセス制御リスト (ACL) は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していないユーザーまたはグループを表します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-857">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="ec55a-858">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ec55a-858">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="ec55a-859">メソッド<xref:System.IO.DirectoryInfo.SetAccessControl%2A>は、継承されていない acl リストを表す acl エントリをファイルに適用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-859">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec55a-860">に`directorySecurity`指定された acl は、ディレクトリの既存の acl を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ec55a-860">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="ec55a-861">新しいユーザーにアクセス許可を追加するには<xref:System.IO.DirectoryInfo.GetAccessControl%2A> 、メソッドを使用して既存の ACL を取得し、変更します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-861">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="ec55a-862">メソッド<xref:System.IO.DirectoryInfo.SetAccessControl%2A>は、オブジェクト<xref:System.Security.AccessControl.DirectorySecurity>の作成後に変更されたオブジェクトのみを保持します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-862">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="ec55a-863"><xref:System.Security.AccessControl.DirectorySecurity>オブジェクトが変更されていない場合は、ファイルに保存されません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-863">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="ec55a-864">そのため、1つのファイルからオブジェクト<xref:System.Security.AccessControl.DirectorySecurity>を取得し、同じオブジェクトを別のファイルに再適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-864">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="ec55a-865">ACL 情報をあるファイルから別のファイルにコピーするには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="ec55a-865">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="ec55a-866">メソッドを使用して、 <xref:System.Security.AccessControl.DirectorySecurity>ソースファイルからオブジェクトを取得します。 <xref:System.IO.DirectoryInfo.GetAccessControl%2A></span><span class="sxs-lookup"><span data-stu-id="ec55a-866">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="ec55a-867">コピー先ファイル<xref:System.Security.AccessControl.DirectorySecurity>の新しいオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-867">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="ec55a-868">ACL 情報を<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>取得するに<xref:System.Security.AccessControl.DirectorySecurity>は、ソースオブジェクトのメソッドまたはメソッドを使用します。 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A></span><span class="sxs-lookup"><span data-stu-id="ec55a-868">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="ec55a-869">手順 3 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> . <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>で取得した情報をコピー先<xref:System.Security.AccessControl.DirectorySecurity>のオブジェクトにコピーするには、メソッドまたはメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-869">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="ec55a-870">メソッドを使用<xref:System.Security.AccessControl.DirectorySecurity>して、コピー先のオブジェクトをコピー先のファイルに設定します。 <xref:System.IO.DirectoryInfo.SetAccessControl%2A></span><span class="sxs-lookup"><span data-stu-id="ec55a-870">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec55a-871">次の例では<xref:System.IO.DirectoryInfo.GetAccessControl%2A> 、 <xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドとメソッドを使用して、ディレクトリからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-871">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec55a-872"><paramref name="directorySecurity" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ec55a-872">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="ec55a-873">ファイルを検出または変更できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ec55a-873">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec55a-874">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-874">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ec55a-875">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="ec55a-875">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ec55a-876">ディレクトリのアクセス制御リスト (ACL) を列挙するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="ec55a-876">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="ec55a-877">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="ec55a-877">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="ec55a-878">関連付けられ<see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />た列挙型:、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="ec55a-878">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec55a-879">ユーザーから渡された元のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="ec55a-879">Returns the original path that was passed by the user.</span></span></summary>
        <returns><span data-ttu-id="ec55a-880">ユーザーから渡された元のパス。</span><span class="sxs-lookup"><span data-stu-id="ec55a-880">The original path that was passed by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ec55a-881">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="ec55a-881">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ec55a-882">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ec55a-882">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ec55a-883">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ec55a-883">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
