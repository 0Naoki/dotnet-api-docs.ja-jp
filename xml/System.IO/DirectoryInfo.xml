<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3335d1cdc13ad2b58c4f218d726dde6c0d0dc82" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39983747" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cef82-101">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cef82-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span>
      </span>
      <span data-ttu-id="cef82-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cef82-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-103">使用して、<xref:System.IO.DirectoryInfo>のコピー、移動、名前変更、作成、およびディレクトリを削除するなどの一般的な操作のクラス。</span><span class="sxs-lookup"><span data-stu-id="cef82-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="cef82-104">オブジェクトを何度も再利用する場合は、検討のインスタンス メソッドを使用して<xref:System.IO.DirectoryInfo>の対応する静的メソッドではなく、<xref:System.IO.Directory>クラスのセキュリティ チェックを常に不要になります。</span><span class="sxs-lookup"><span data-stu-id="cef82-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cef82-105">入力文字列としてのパスを受け入れるメンバーの場合は、そのパスは、整形式である必要があります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="cef82-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="cef82-106">たとえば、パスが完全修飾されて、文字で始まる場合は、パスは、クラスのメソッドで切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="cef82-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="cef82-107">したがって、パスの形式が、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="cef82-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="cef82-108">同様に、パスまたはパスの組み合わせ完全修飾できない 2 回です。</span><span class="sxs-lookup"><span data-stu-id="cef82-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="cef82-109">たとえば、"c:\temp c:\windows"では、ほとんどの場合、例外も発生します。</span><span class="sxs-lookup"><span data-stu-id="cef82-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="cef82-110">パス文字列をそのまま使用するメソッドを使用する場合、パスが整形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="cef82-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="cef82-111">パスを受け入れるメンバーでは、パスがファイルまたはディレクトリを参照できます。</span><span class="sxs-lookup"><span data-stu-id="cef82-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="cef82-112">指定されたパスは相対パスまたはサーバーと共有名の汎用名前付け規則 (UNC) パスにも参照できます。</span><span class="sxs-lookup"><span data-stu-id="cef82-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="cef82-113">たとえば、次のすべてが許容可能なパスです。</span><span class="sxs-lookup"><span data-stu-id="cef82-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="cef82-114">"c:\\\MyDir\\\MyFile.txt"c# の場合、または Visual Basic では、"c:\MyDir\MyFile.txt"にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="cef82-115">"c:\\\MyDir"c# の場合、または Visual Basic では、"c:\MyDir"にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="cef82-116">"MyDir\\\MySubdir"c# の場合、または Visual Basic では、"MyDir\MySubDir"にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="cef82-117">"\\\\\\\MyServer\\\MyShare"c# の場合、または"\\\MyServer\MyShare"Visual Basic でします。</span><span class="sxs-lookup"><span data-stu-id="cef82-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="cef82-118">既定では、新しいディレクトリへの完全な読み取り/書き込みアクセスはすべてのユーザーに付与します。</span><span class="sxs-lookup"><span data-stu-id="cef82-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="cef82-119">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-120">次の例では、メインのメンバーの一部を示します、`DirectoryInfo`クラス。</span><span class="sxs-lookup"><span data-stu-id="cef82-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="cef82-121">次の例では、ディレクトリとその内容をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="cef82-122">
            <see langword="DirectoryInfo" /> を作成する対象のパスを指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-122">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-123">指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-123">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-124">このコンス トラクターでは、ディレクトリが存在するかどうかはチェックされません。</span><span class="sxs-lookup"><span data-stu-id="cef82-124">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="cef82-125">このコンス トラクターでは、以降の操作でディスクへのアクセスに使用される文字列のプレース ホルダーです。</span><span class="sxs-lookup"><span data-stu-id="cef82-125">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="cef82-126">`path`パラメーターは、汎用名前付け規則 (UNC) 共有上のファイルを含む、ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="cef82-126">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cef82-127">特定のカルチャ設定と一連の文字をコンパイルして、同じ文字を別のカルチャ設定を取得すると、文字は、解釈されないことしがスローされる例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="cef82-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="cef82-128">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-129">次の例では、このコンス トラクターを使用して、指定されたディレクトリとサブディレクトリを作成し、サブディレクトリを格納するディレクトリを削除できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-129">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-130">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-130">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-131">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-131">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-132">
            <paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-132">
              <paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="cef82-133">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-133">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-134">ファイルとディレクトリから読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-134">for reading from files and directories.</span>
          </span>
          <span data-ttu-id="cef82-135">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-135">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-136">ディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-136">Creates a directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-137">ディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-137">Creates a directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-138">ディレクトリが既に存在する場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="cef82-138">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="cef82-139">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-140">次の例のチェックが指定されたディレクトリが存在するかどうかを作成しますディレクトリが存在しない場合、ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="cef82-140">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cef82-141">ディレクトリを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-141">The directory cannot be created.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-142">ファイルを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-142">for writing files.</span>
          </span>
          <span data-ttu-id="cef82-143">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-143">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="cef82-144">ディレクトリに適用するアクセス制御。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-144">The access control to apply to the directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-145">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトを使用してディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-145">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-146">このメソッドのオーバー ロードを使用すると、セキュリティが適用される前に、ディレクトリにアクセスできる可能性はありませんので、アクセス制御では、ディレクトリを作成できます。</span><span class="sxs-lookup"><span data-stu-id="cef82-146">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="cef82-147">ディレクトリが既に存在する場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="cef82-147">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="cef82-148">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-148">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cef82-149">
            <paramref name="path" /> によって指定されたディレクトリが、読み取り専用であるか、空ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-149">The directory specified by <paramref name="path" /> is read-only or is not empty.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cef82-150">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-150">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-151">
            <paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-151">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-152">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="cef82-153">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-153">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-154">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-154">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cef82-155">コロン (:) 文字だけで、ディレクトリを作成しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-155">Creating a directory with only the colon (:) character was attempted.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-156">ディレクトリを作成する権限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-156">for permission to create a directory.</span>
          </span>
          <span data-ttu-id="cef82-157">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-157">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cef82-158">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-158">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-159">指定したパスに 1 つ以上のサブディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-159">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="cef82-160">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-160">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="cef82-161">指定するパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-161">The specified path.</span>
          </span>
          <span data-ttu-id="cef82-162">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-162">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-163">指定したパスに 1 つ以上のサブディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-163">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="cef82-164">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-164">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-165">
            <paramref name="path" /> に指定された最後のディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-165">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-166">指定されているすべてのディレクトリ`path`しない限り、作成の一部`path`が無効です。</span><span class="sxs-lookup"><span data-stu-id="cef82-166">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="cef82-167">`path`パラメーターをファイル パスではなく、ディレクトリ パスを指定します。</span><span class="sxs-lookup"><span data-stu-id="cef82-167">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="cef82-168">サブディレクトリが既に存在する場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="cef82-168">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="cef82-169">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-169">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-170">次の例では、サブディレクトリを作成を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-170">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="cef82-171">この例で作成すると、作成されたディレクトリが削除されます。</span><span class="sxs-lookup"><span data-stu-id="cef82-171">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="cef82-172">そのため、このサンプルをテストするコードで削除する行をコメントします。</span><span class="sxs-lookup"><span data-stu-id="cef82-172">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-173">
            <paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-173">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-174">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-174">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-175">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-175">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cef82-176">サブディレクトリを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-176">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="cef82-177">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-177">-or-</span>
          </span>
          <span data-ttu-id="cef82-178">
            <paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-178">A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="cef82-179">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-179">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-180">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-180">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="cef82-181">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-181">-or-</span>
          </span>
          <span data-ttu-id="cef82-182">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-182">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="cef82-183">
            <paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-183">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cef82-184">
            <paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-184">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-185">ファイルを読み書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-185">for reading and writing files.</span>
          </span>
          <span data-ttu-id="cef82-186">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-186">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="cef82-187">指定するパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-187">The specified path.</span>
          </span>
          <span data-ttu-id="cef82-188">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-188">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <param name="directorySecurity">
          <span data-ttu-id="cef82-189">適用するセキュリティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-189">The security to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-190">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-190">Creates a subdirectory or subdirectories on the specified path with the specified security.</span>
          </span>
          <span data-ttu-id="cef82-191">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-191">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-192">
            <paramref name="path" /> に指定された最後のディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-192">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-193">指定されているすべてのディレクトリ`path`しない限り、作成の一部`path`が無効です。</span><span class="sxs-lookup"><span data-stu-id="cef82-193">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="cef82-194">`path`パラメーターをファイル パスではなく、ディレクトリ パスを指定します。</span><span class="sxs-lookup"><span data-stu-id="cef82-194">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="cef82-195">サブディレクトリが既に存在する場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="cef82-195">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="cef82-196">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-196">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-197">
            <paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-197">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-198">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-198">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-199">マップされていないドライブにあるなど、指定されたパスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-199">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cef82-200">サブディレクトリを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-200">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="cef82-201">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-201">-or-</span>
          </span>
          <span data-ttu-id="cef82-202">
            <paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-202">A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="cef82-203">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-203">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-204">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-204">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="cef82-205">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-205">-or-</span>
          </span>
          <span data-ttu-id="cef82-206">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-206">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="cef82-207">
            <paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-207">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cef82-208">
            <paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-208">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-209">ファイルを読み書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-209">for reading and writing files.</span>
          </span>
          <span data-ttu-id="cef82-210">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-210">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-211">パスから <see cref="T:System.IO.DirectoryInfo" /> とその内容を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-211">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-212">
            <see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-212">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-213">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-213">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-214">次の例は、ディレクトリが空でないを削除しようとした場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="cef82-214">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cef82-215">ディレクトリに読み取り専用のファイルが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-215">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-216">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-216">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cef82-217">ディレクトリが空ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-217">The directory is not empty.</span>
          </span>
          <span data-ttu-id="cef82-218">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-218">-or-</span>
          </span>
          <span data-ttu-id="cef82-219">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-219">The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="cef82-220">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-220">-or-</span>
          </span>
          <span data-ttu-id="cef82-221">ディレクトリに開いているハンドルがあり、オペレーティング システムが Windows XP かそれ以前のバージョンです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-221">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="cef82-222">このハンドルが開いている原因は、ディレクトリを列挙したことにある可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-222">This open handle can result from enumerating directories.</span>
          </span>
          <span data-ttu-id="cef82-223">詳細については、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-223">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-224">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-224">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-225">ディレクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-225">for writing directories.</span>
          </span>
          <span data-ttu-id="cef82-226">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-226">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="cef82-227">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-227">
              <see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-228">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-228">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-229">場合、`DirectoryInfo`ファイルまたはサブディレクトリがありません、このメソッドは、削除、`DirectoryInfo`場合でも`recursive`は`false`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-229">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="cef82-230">削除しようとすると、`DirectoryInfo`が空でない場合に`recursive`は`false`がスローされます、<xref:System.IO.IOException>します。</span><span class="sxs-lookup"><span data-stu-id="cef82-230">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="cef82-231">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-231">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-232">次の例では、ディレクトリの削除を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-232">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="cef82-233">ディレクトリが削除されるため、最初にコメント アウト、`Delete`ディレクトリが存在するかをテストする行。</span><span class="sxs-lookup"><span data-stu-id="cef82-233">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="cef82-234">ディレクトリが正常に削除されたことをテストするコードの同じ行をコメント解除します。</span><span class="sxs-lookup"><span data-stu-id="cef82-234">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cef82-235">ディレクトリに読み取り専用のファイルが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-235">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-236">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-236">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cef82-237">ディレクトリが読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-237">The directory is read-only.</span>
          </span>
          <span data-ttu-id="cef82-238">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-238">-or-</span>
          </span>
          <span data-ttu-id="cef82-239">ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、かつ <paramref name="recursive" /> が <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-239">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cef82-240">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-240">-or-</span>
          </span>
          <span data-ttu-id="cef82-241">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-241">The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="cef82-242">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-242">-or-</span>
          </span>
          <span data-ttu-id="cef82-243">ディレクトリまたはそのファイルのうちの 1 つについて開かれているハンドルがあり、かつオペレーティング システムが Windows XP 以前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-243">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="cef82-244">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-244">This open handle can result from enumerating directories and files.</span>
          </span>
          <span data-ttu-id="cef82-245">詳細については、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-245">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-246">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-246">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="cef82-247">書き込みアクセスを許可するために必要なフラグを書き込み、<see langword="DirectoryInfo" />とサブディレクトリを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-247">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-248">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-248">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-249">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-249">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-250">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-250">An enumerable collection of directories in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-251"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-251">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-252">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションを列挙することができます<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-252">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-253">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>、配列全体を待つ必要がある<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-253">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-254">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-254">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-255">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-255">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="cef82-256">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-256">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-257">次の例は、C:\Program Files ディレクトリのサブディレクトリを列挙しの値をチェックして 2009年前に作成されたすべてのディレクトリの名前を取得する LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-257">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="cef82-258">サブディレクトリの名前のみ必要がある場合は、静的なを使用して<xref:System.IO.Directory>パフォーマンス向上のためのクラス。</span><span class="sxs-lookup"><span data-stu-id="cef82-258">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="cef82-259">例については、次を参照してください。、<xref:System.IO.Directory.EnumerateDirectories%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="cef82-259">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-260">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-260">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-261">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-261">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-262">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-262">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="cef82-263">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-263">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-264">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-264">Returns an enumerable collection of directory information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-265">
            <paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-265">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-266">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-266">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-267">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-267">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-268">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-268">Wildcard specifier</span></span>|<span data-ttu-id="cef82-269">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-269">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-270">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-270">\* (asterisk)</span></span>|<span data-ttu-id="cef82-271">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-271">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-272">?</span><span class="sxs-lookup"><span data-stu-id="cef82-272">?</span></span> <span data-ttu-id="cef82-273">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-273">(question mark)</span></span>|<span data-ttu-id="cef82-274">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-274">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-275">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-275">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-276">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-276">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-277">".</span><span class="sxs-lookup"><span data-stu-id="cef82-277">".</span></span> <span data-ttu-id="cef82-278">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-278">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-279"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-279">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-280">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションを列挙することができます<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-280">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-281">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>、配列全体を待つ必要がある<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-281">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-282">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-282">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-283">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-283">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="cef82-284">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-284">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-285">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-285">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-286">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-286">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-287">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-287">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-288">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-288">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="cef82-289">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-289">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="cef82-290">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-290">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="cef82-291">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-291">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-292">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-292">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-293">
            <paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-293">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-294">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-294">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-295">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-295">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-296">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-296">Wildcard specifier</span></span>|<span data-ttu-id="cef82-297">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-297">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-298">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-298">\* (asterisk)</span></span>|<span data-ttu-id="cef82-299">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-299">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-300">?</span><span class="sxs-lookup"><span data-stu-id="cef82-300">?</span></span> <span data-ttu-id="cef82-301">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-301">(question mark)</span></span>|<span data-ttu-id="cef82-302">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-302">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-303">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-303">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-304">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-304">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-305">".</span><span class="sxs-lookup"><span data-stu-id="cef82-305">".</span></span> <span data-ttu-id="cef82-306">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-306">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-307"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>と<xref:System.IO.DirectoryInfo.GetDirectories%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-307">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-308">使用すると<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>のコレクションを列挙することができます<xref:System.IO.DirectoryInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-308">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-309">使用すると<xref:System.IO.DirectoryInfo.GetDirectories%2A>、配列全体を待つ必要がある<xref:System.IO.DirectoryInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-309">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-310">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-310">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-311">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-311">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="cef82-312">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-312">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-313">指定したディレクトリから次の例では、このメソッドを使用して、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>ファイルと開始ディレクトリ内のディレクトリを列挙し、いずれかの詳細を表示するメソッドを超えるファイルに 10 MB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="cef82-313">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-314">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-314">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cef82-315">
            <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-315">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-316">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-316">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-317">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-317">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-318">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-318">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-319">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-319">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-320">現在のディレクトリ内の列挙可能なファイルのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-320">An enumerable collection of the files in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-321"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-321">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-322">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-322">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-323">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-323">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-324">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-324">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-325">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-325">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="cef82-326">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-326">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-327">次の例は、指定したディレクトリ内のファイルを列挙しの値をチェックして 2009年前に作成されたすべてのファイルの名前を取得する LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-327">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="cef82-328">ファイルの名前のみ必要がある場合は、静的なを使用して<xref:System.IO.Directory>パフォーマンス向上のためのクラス。</span><span class="sxs-lookup"><span data-stu-id="cef82-328">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="cef82-329">例については、次を参照してください。、<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="cef82-329">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="cef82-330">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-330">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="cef82-331">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="cef82-331">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-332">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-332">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-333">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-333">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-334">ファイル名と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-334">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="cef82-335">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-335">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-336">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-336">Returns an enumerable collection of file information that matches a search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-337">
            <paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-337">An enumerable collection of files that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-338">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-338">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-339">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-339">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-340">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-340">Wildcard specifier</span></span>|<span data-ttu-id="cef82-341">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-341">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-342">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-342">\* (asterisk)</span></span>|<span data-ttu-id="cef82-343">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-343">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-344">?</span><span class="sxs-lookup"><span data-stu-id="cef82-344">?</span></span> <span data-ttu-id="cef82-345">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-345">(question mark)</span></span>|<span data-ttu-id="cef82-346">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-346">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-347">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-347">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-348">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-348">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-349">".</span><span class="sxs-lookup"><span data-stu-id="cef82-349">".</span></span> <span data-ttu-id="cef82-350">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-350">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-351"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-351">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-352">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-352">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-353">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-353">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-354">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-354">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-355">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-355">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="cef82-356">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-356">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-357">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-357">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="cef82-358">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="cef82-358">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-359">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-359">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-360">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-360">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-361">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-361">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-362">ファイル名と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-362">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="cef82-363">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-363">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="cef82-364">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-364">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="cef82-365">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-365">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-366">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-366">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-367">
            <paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-367">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-368">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-368">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-369">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-369">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-370">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-370">Wildcard specifier</span></span>|<span data-ttu-id="cef82-371">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-371">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-372">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-372">\* (asterisk)</span></span>|<span data-ttu-id="cef82-373">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-373">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-374">?</span><span class="sxs-lookup"><span data-stu-id="cef82-374">?</span></span> <span data-ttu-id="cef82-375">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-375">(question mark)</span></span>|<span data-ttu-id="cef82-376">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-376">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-377">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-377">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-378">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-378">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-379">".</span><span class="sxs-lookup"><span data-stu-id="cef82-379">".</span></span> <span data-ttu-id="cef82-380">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-380">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-381"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-381">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-382">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-382">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-383">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-383">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-384">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-384">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-385">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-385">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="cef82-386">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-386">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-387">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-387">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="cef82-388">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="cef82-388">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-389">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-389">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cef82-390">
            <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-390">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-391">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-391">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-392">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-392">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-393">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-393">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-394">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-394">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-395">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-395">An enumerable collection of file system information in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-396"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-396">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-397">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションを列挙することができます<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-397">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-398">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>、配列全体を待つ必要がある<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-398">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-399">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-399">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-400">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-400">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="cef82-401">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-401">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-402">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-402">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-403">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-403">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-404">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-404">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="cef82-405">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-405">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-406">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-406">Returns an enumerable collection of file system information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-407">
            <paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-407">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-408">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-408">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-409">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-409">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-410">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-410">Wildcard specifier</span></span>|<span data-ttu-id="cef82-411">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-411">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-412">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-412">\* (asterisk)</span></span>|<span data-ttu-id="cef82-413">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-413">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-414">?</span><span class="sxs-lookup"><span data-stu-id="cef82-414">?</span></span> <span data-ttu-id="cef82-415">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-415">(question mark)</span></span>|<span data-ttu-id="cef82-416">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-416">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-417">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-417">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-418">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-418">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-419">".</span><span class="sxs-lookup"><span data-stu-id="cef82-419">".</span></span> <span data-ttu-id="cef82-420">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-420">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-421"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-421">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-422">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションを列挙することができます<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-422">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-423">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>、配列全体を待つ必要がある<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-423">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-424">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-424">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-425">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-425">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="cef82-426">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-426">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-427">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-427">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-428">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-428">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-429">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-429">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-430">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-430">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="cef82-431">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-431">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="cef82-432">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-432">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="cef82-433">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-433">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-434">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-434">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-435">
            <paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-435">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-436">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-436">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-437">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-437">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-438">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-438">Wildcard specifier</span></span>|<span data-ttu-id="cef82-439">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-439">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-440">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-440">\* (asterisk)</span></span>|<span data-ttu-id="cef82-441">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-441">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-442">?</span><span class="sxs-lookup"><span data-stu-id="cef82-442">?</span></span> <span data-ttu-id="cef82-443">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-443">(question mark)</span></span>|<span data-ttu-id="cef82-444">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-444">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-445">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-445">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-446">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-446">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-447">".</span><span class="sxs-lookup"><span data-stu-id="cef82-447">".</span></span> <span data-ttu-id="cef82-448">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-448">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-449"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>と<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-449">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-450">使用すると<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>のコレクションを列挙することができます<xref:System.IO.FileSystemInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-450">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-451">使用すると<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>、配列全体を待つ必要がある<xref:System.IO.FileSystemInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-451">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-452">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-452">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-453">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-453">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="cef82-454">返されるコレクションはキャッシュされません。呼び出しごとに、<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>コレクションのメソッドは新しい列挙を開始します。</span><span class="sxs-lookup"><span data-stu-id="cef82-454">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-455">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-455">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cef82-456">
            <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-456">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-457">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-457">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-458">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-458">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-459">ディレクトリが存在するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-459">Gets a value indicating whether the directory exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cef82-460">ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-460">
              <see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-461"><xref:System.IO.DirectoryInfo.Exists%2A>プロパティが返す`false`を指定したファイルが存在するかどうかの確認中にエラーが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="cef82-461">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="cef82-462">これは無効な文字または文字が多すぎます、失敗したか、不足しているディスクとファイル名を渡すなどの例外が発生する状況で発生または呼び出し元がファイルの読み取りアクセス許可を持っていない場合。</span><span class="sxs-lookup"><span data-stu-id="cef82-462">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-463">次の例を使用して、`Exists`ターゲット ディレクトリにコピーしてソース ディレクトリのコンテキストのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-463">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-464">ディレクトリの絶対パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-464">Gets the full path of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cef82-465">絶対パスを含んでいる文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-465">A string containing the full path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-466">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-466">Gets the access control list (ACL) entries for the current directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-467">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>アクセス権を取得するメソッドは、現在のファイルのリスト (ACL) エントリを制御します。</span><span class="sxs-lookup"><span data-stu-id="cef82-467">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="cef82-468">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cef82-468">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-469">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-469">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-470">ディレクトリのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-470">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-471">呼び出しと同じですがこのメソッドのオーバー ロードを呼び出し、<xref:System.IO.Directory.GetAccessControl%2A>メソッドのオーバー ロードとアクセスを指定してコントロールのセクションでは<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="cef82-471">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="cef82-472">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="cef82-472">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="cef82-473">ACL には、個人やグループがある、または権限がない、特定のファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="cef82-473">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="cef82-474">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cef82-474">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-475">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>と<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドを追加して、アクセスを削除してディレクトリからのリスト (ACL) エントリを制御します。</span><span class="sxs-lookup"><span data-stu-id="cef82-475">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="cef82-476">ディレクトリが見つからないか、または変更されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-476">The directory could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cef82-477">ディレクトリが読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-477">The directory is read-only.</span>
          </span>
          <span data-ttu-id="cef82-478">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-478">-or-</span>
          </span>
          <span data-ttu-id="cef82-479">この操作は、現在のプラットフォームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-479">This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="cef82-480">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-480">-or-</span>
          </span>
          <span data-ttu-id="cef82-481">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-481">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cef82-482">ディレクトリを開くときに、I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-482">An I/O error occurred while opening the directory.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cef82-483">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-483">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-484">ディレクトリのアクセス制御リスト (ACL) を列挙する権限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-484">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="cef82-485">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-485">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cef82-486">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-486">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections">
          <span data-ttu-id="cef82-487">取得するアクセス制御リスト (ACL) の情報の型を指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-487">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-488">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリに関する指定された型のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-488">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-489">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> パラメーターが示すファイルのアクセス制御規則をカプセル化する <paramref name="path" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-489">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span>
          </span>
          <span data-ttu-id="cef82-490">例外</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-490">Exceptions</span>
          </span>
          <span data-ttu-id="cef82-491">
            <list type="table">
              <listheader>
                <term> 例外の種類  </term>
                <description> 条件  </description>
              </listheader>
              <item>
                <term>
                  <see cref="T:System.SystemException" />
                </term>
                <description> ディレクトリが見つからないか、または変更されています。</description>
              </item>
              <item>
                <term>
                  <see cref="T:System.UnauthorizedAccessException" />
                </term>
                <description> 現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</description>
              </item>
              <item>
                <term>
                  <see cref="T:System.IO.IOException" />
                </term>
                <description> ディレクトリを開くときに、I/O エラーが発生しました。</description>
              </item>
              <item>
                <term>
                  <see cref="T:System.PlatformNotSupportedException" />
                </term>
                <description> 現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</description>
              </item>
              <item>
                <term>
                  <see cref="T:System.UnauthorizedAccessException" />
                </term>
                <description> ディレクトリが読み取り専用です。または、この操作は現在のプラットフォームでサポートされていません。または、呼び出し元に必要なアクセス許可がありません。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-491">
              <list type="table">
                <listheader>
                  <term> Exception type  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term>
                    <see cref="T:System.SystemException" />
                  </term>
                  <description> The directory could not be found or modified.  </description>
                </item>
                <item>
                  <term>
                    <see cref="T:System.UnauthorizedAccessException" />
                  </term>
                  <description> The current process does not have access to open the directory.  </description>
                </item>
                <item>
                  <term>
                    <see cref="T:System.IO.IOException" />
                  </term>
                  <description> An I/O error occurred while opening the directory.  </description>
                </item>
                <item>
                  <term>
                    <see cref="T:System.PlatformNotSupportedException" />
                  </term>
                  <description> The current operating system is not Microsoft Windows 2000 or later.  </description>
                </item>
                <item>
                  <term>
                    <see cref="T:System.UnauthorizedAccessException" />
                  </term>
                  <description> The directory is read-only.  -or-  This operation is not supported on the current platform.  -or-  The caller does not have the required permission.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-492">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="cef82-492">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="cef82-493">ACL には、個人やグループがある、または権限がない、特定のファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="cef82-493">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="cef82-494">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cef82-494">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-495">ディレクトリのアクセス制御リスト (ACL) を列挙する権限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-495">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="cef82-496">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-496">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cef82-497">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-497">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-498">現在のディレクトリのサブディレクトリを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-498">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-499">現在のディレクトリのサブディレクトリを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-499">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-500">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-500">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-501">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-501">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="cef82-502">このメソッドは、再帰ではありません。</span><span class="sxs-lookup"><span data-stu-id="cef82-502">This method is not recursive.</span></span>  
  
 <span data-ttu-id="cef82-503">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-503">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-504">次の例では、すべてのディレクトリのルート ディレクトリを取得し、ディレクトリ名が表示されます。</span><span class="sxs-lookup"><span data-stu-id="cef82-504">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-505">
            <see cref="T:System.IO.DirectoryInfo" /> オブジェクトにカプセル化されているパスが無効です (割り当てられていないドライブが指定されている場合など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-505">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-506">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-506">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cef82-507">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-507">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-508">ディレクトリを読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-508">for reading directories.</span>
          </span>
          <span data-ttu-id="cef82-509">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-509">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-510">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-510">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="cef82-511">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-511">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-512">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-512">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-513">
            <see langword="DirectoryInfo" /> に一致する <paramref name="searchPattern" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-513">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-514">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-514">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-515">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-515">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-516">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-516">Wildcard specifier</span></span>|<span data-ttu-id="cef82-517">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-517">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-518">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-518">\* (asterisk)</span></span>|<span data-ttu-id="cef82-519">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-519">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-520">?</span><span class="sxs-lookup"><span data-stu-id="cef82-520">?</span></span> <span data-ttu-id="cef82-521">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-521">(question mark)</span></span>|<span data-ttu-id="cef82-522">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-522">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-523">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-523">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-524">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-524">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-525">".</span><span class="sxs-lookup"><span data-stu-id="cef82-525">".</span></span> <span data-ttu-id="cef82-526">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-526">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-527">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-527">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-528">次の例では、パス内の指定した文字が含まれているディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="cef82-528">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-529">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-529">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-530">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-530">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-531">
            <see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-531">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cef82-532">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-532">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-533">パスへのアクセス、ファイルやディレクトリからの読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-533">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="cef82-534">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-534">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-535">ディレクトリの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-535">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="cef82-536">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-536">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="cef82-537">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-537">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-538">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にある、指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つディレクトリの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-538">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-539">
            <see langword="DirectoryInfo" /> に一致する <paramref name="searchPattern" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-539">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-540">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-540">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-541">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-541">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-542">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-542">Wildcard specifier</span></span>|<span data-ttu-id="cef82-543">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-543">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-544">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-544">\* (asterisk)</span></span>|<span data-ttu-id="cef82-545">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-545">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-546">?</span><span class="sxs-lookup"><span data-stu-id="cef82-546">?</span></span> <span data-ttu-id="cef82-547">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-547">(question mark)</span></span>|<span data-ttu-id="cef82-548">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-548">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-549">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-549">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-550">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-550">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-551">".</span><span class="sxs-lookup"><span data-stu-id="cef82-551">".</span></span> <span data-ttu-id="cef82-552">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-552">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-553">かどうか、サブディレクトリが存在しないか、一致するサブディレクトリ、`searchPattern`パラメーターでは、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-553">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="cef82-554">このメソッドは、次の値を事前設定<xref:System.IO.DirectoryInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-554">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-555">次の例の一覧のすべてのディレクトリと、文字"c"で始まるファイルで"c:\\"。</span><span class="sxs-lookup"><span data-stu-id="cef82-555">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-556">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-556">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-557">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-557">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cef82-558">
            <paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-558">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-559">
            <see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-559">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cef82-560">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-560">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-561">パスへのアクセス、ファイルやディレクトリからの読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-561">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="cef82-562">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-562">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-563">現在のディレクトリからファイル一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-563">Returns a file list from the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-564">現在のディレクトリからファイル一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-564">Returns a file list from the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-565">
            <see cref="T:System.IO.FileInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-565">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-566"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-566">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-567">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-567">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-568">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-568">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-569">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-569">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-570">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-570">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="cef82-571">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの場合は、特定の並べ替え順序が必要です。</span><span class="sxs-lookup"><span data-stu-id="cef82-571">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="cef82-572">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-572">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-573">次の例では、別の検索オプションを使用して、ディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-573">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="cef82-574">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="cef82-574">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-575">マップされていないドライブにあるなど、パスが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-575">The path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-576">ディレクトリを読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-576">for reading directories.</span>
          </span>
          <span data-ttu-id="cef82-577">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-577">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-578">ファイル名と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-578">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="cef82-579">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-579">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-580">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-580">Returns a file list from the current directory matching the given search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-581">
            <see cref="T:System.IO.FileInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-581">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-582">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-582">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-583">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-583">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-584">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-584">Wildcard specifier</span></span>|<span data-ttu-id="cef82-585">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-585">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-586">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-586">\* (asterisk)</span></span>|<span data-ttu-id="cef82-587">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-587">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-588">?</span><span class="sxs-lookup"><span data-stu-id="cef82-588">?</span></span> <span data-ttu-id="cef82-589">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-589">(question mark)</span></span>|<span data-ttu-id="cef82-590">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-590">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-591">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-591">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-592">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-592">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-593">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-593">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-594"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-594">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-595">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-595">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-596">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-596">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-597">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-597">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-598">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-598">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="cef82-599">次のワイルドカードの指定子は許可されて、`searchPattern`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="cef82-599">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="cef82-600">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="cef82-600">Wildcard character</span></span>|<span data-ttu-id="cef82-601">説明</span><span class="sxs-lookup"><span data-stu-id="cef82-601">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="cef82-602">0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-602">Zero or more characters.</span></span>|  
|<span data-ttu-id="cef82-603">?</span><span class="sxs-lookup"><span data-stu-id="cef82-603">?</span></span>|<span data-ttu-id="cef82-604">正確に 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-604">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="cef82-605">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの場合は、特定の並べ替え順序が必要です。</span><span class="sxs-lookup"><span data-stu-id="cef82-605">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="cef82-606">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="cef82-606">Wildcards are permitted.</span></span> <span data-ttu-id="cef82-607">たとえば、 `searchPattern` "\*.txt"の検索のすべてのファイル名の"txt"の拡張機能を持つ文字列します。</span><span class="sxs-lookup"><span data-stu-id="cef82-607">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="cef82-608">`searchPattern`文字列"s\*"すべて"s"で始まる名前のファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-608">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="cef82-609">ファイル、または いいえがある場合のファイルと一致する、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-609">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cef82-610">アスタリスクのワイルドカード文字を使用する場合、 `searchPattern` (たとえば、"\*.txt")、一致の動作が指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-610">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="cef82-611">A`searchPattern`ファイルには 3 つの文字の拡張子が最初の 3 つの文字で指定されたファイル拡張子が一致する次の 3 つ以上の文字の拡張子を持つファイルを返します、`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-611">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="cef82-612">A`searchPattern`ファイルを使用して 1 つ、2 つ、または 4 文字以上の拡張機能がファイルで指定されたファイル拡張子に一致する拡張機能の長さは、その長さと一致のみを返します、`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-612">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="cef82-613">疑問符 () のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-613">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="cef82-614">たとえば、ディレクトリ、"file1.txt"および"file1.txtother"、検索パターンの 2 つのファイルを指定された"ファイルですか? です。検索パターンの中に、最初のファイルだけを返します"txt"ファイル\*.txt"両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-614">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cef82-615">検索パターンのようなので、このメソッドは、8.3 形式のファイル名の形式と長いファイル名の形式の両方でファイル名をチェック、"* 1\*.txt"予期しないファイル名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="cef82-615">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="cef82-616">などの検索パターンを使用して"\*1\*.txt"同等の 8.3 ファイル名の形式が"longf~1.txt"になるので、"longfilename.txt"が返されます。</span><span class="sxs-lookup"><span data-stu-id="cef82-616">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="cef82-617">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-617">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-618">次の例では、別の検索オプションを使用して、ディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-618">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="cef82-619">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="cef82-619">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-620">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-620">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-621">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-621">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-622">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-622">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-623">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-623">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-624">パスにファイルとディレクトリからの読み取りにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-624">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="cef82-625">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-625">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-626">ファイル名と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-626">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="cef82-627">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-627">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="cef82-628">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-628">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-629">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-629">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-630">
            <see cref="T:System.IO.FileInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-630">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-631"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>と<xref:System.IO.DirectoryInfo.GetFiles%2A>メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-631">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="cef82-632">使用すると<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>のコレクションを列挙することができます<xref:System.IO.FileInfo>オブジェクトのコレクション全体が返される前にします。</span><span class="sxs-lookup"><span data-stu-id="cef82-632">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="cef82-633">使用すると<xref:System.IO.DirectoryInfo.GetFiles%2A>、配列全体を待つ必要がある<xref:System.IO.FileInfo>配列にアクセスする前に返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-633">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="cef82-634">多くのファイルとディレクトリを使用する場合にそのため、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>効率的であることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-634">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="cef82-635">内のファイルがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-635">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="cef82-636">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-636">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-637">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="cef82-637">Wildcard character</span></span>|<span data-ttu-id="cef82-638">説明</span><span class="sxs-lookup"><span data-stu-id="cef82-638">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="cef82-639">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-639">\* (asterisk)</span></span>|<span data-ttu-id="cef82-640">0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-640">Zero or more characters.</span></span>|  
|<span data-ttu-id="cef82-641">?</span><span class="sxs-lookup"><span data-stu-id="cef82-641">?</span></span> <span data-ttu-id="cef82-642">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-642">(question mark)</span></span>|<span data-ttu-id="cef82-643">正確に 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-643">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="cef82-644">返されるファイル名の順序は保証されません。使用して、<xref:System.Array.Sort%2A>メソッドの場合は、特定の並べ替え順序が必要です。</span><span class="sxs-lookup"><span data-stu-id="cef82-644">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="cef82-645">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="cef82-645">Wildcards are permitted.</span></span> <span data-ttu-id="cef82-646">たとえば、 `searchPattern` "\*.txt"の検索のすべてのファイル名の"txt"の拡張機能を持つ文字列します。</span><span class="sxs-lookup"><span data-stu-id="cef82-646">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="cef82-647">`searchPattern`文字列"s\*"すべて"s"で始まる名前のファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-647">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="cef82-648">ファイル、または いいえがある場合のファイルと一致する、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-648">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cef82-649">アスタリスクのワイルドカード文字を使用する場合、 `searchPattern` (たとえば、"\*.txt")、一致の動作が指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="cef82-649">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="cef82-650">A`searchPattern`ファイルには 3 つの文字の拡張子が最初の 3 つの文字で指定されたファイル拡張子が一致する次の 3 つ以上の文字の拡張子を持つファイルを返します、`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-650">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="cef82-651">A`searchPattern`ファイルを使用して 1 つ、2 つ、または 4 文字以上の拡張機能がファイルで指定されたファイル拡張子に一致する拡張機能の長さは、その長さと一致のみを返します、`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-651">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="cef82-652">疑問符 () のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-652">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="cef82-653">たとえば、ディレクトリ、"file1.txt"および"file1.txtother"、検索パターンの 2 つのファイルを指定された"ファイルですか? です。検索パターンの中に、最初のファイルだけを返します"txt"ファイル\*.txt"両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-653">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="cef82-654">次の一覧の異なる長さの動作を示しています、`searchPattern`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="cef82-654">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="cef82-655">"\* .abc"、拡張機能 of.abc,.abcd,.abcde,.abcdef を持つファイルを返します、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cef82-655">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="cef82-656">"\*.abcd"は、拡張機能 of.abcd を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-656">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="cef82-657">"\*.abcde"は、拡張機能 of.abcde を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-657">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="cef82-658">"\*.abcdef"は、拡張機能 of.abcdef を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-658">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cef82-659">検索パターンのようなので、このメソッドは、8.3 形式のファイル名の形式と長いファイル名の形式の両方でファイル名をチェック、"* 1\*.txt"予期しないファイル名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="cef82-659">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="cef82-660">などの検索パターンを使用して"\*1\*.txt"同等の 8.3 ファイル名の形式が"longf~1.txt"になるので、"longfilename.txt"が返されます。</span><span class="sxs-lookup"><span data-stu-id="cef82-660">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="cef82-661">このメソッドは、次の値を事前設定<xref:System.IO.FileInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-661">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-662">次の例では、別の検索オプションを使用して、ディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-662">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="cef82-663">この例では、log1.txt、log2.txt、test1.txt、test2.txt、test3.txt、およびを SubFile.txt という名前のファイルを持つサブディレクトリをという名前のファイルを含むディレクトリをします。</span><span class="sxs-lookup"><span data-stu-id="cef82-663">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-664">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-664">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-665">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-665">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cef82-666">
            <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-666">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-667">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-667">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-668">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-668">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-669">パスにファイルとディレクトリからの読み取りにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-669">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="cef82-670">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-670">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-671">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-671">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-672">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-672">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-673">厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-673">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-674">ファイルまたはディレクトリがない場合、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-674">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="cef82-675">このメソッドは、再帰ではありません。</span><span class="sxs-lookup"><span data-stu-id="cef82-675">This method is not recursive.</span></span>  
  
 <span data-ttu-id="cef82-676">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>します。</span><span class="sxs-lookup"><span data-stu-id="cef82-676">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="cef82-677">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="cef82-677">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="cef82-678">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-678">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-679">次の例では、ファイルと、指定したディレクトリの下のディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="cef82-679">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-680">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-680">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-681">ディレクトリおよびファイルの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-681">The search string to match against the names of directories and files.</span>
          </span>
          <span data-ttu-id="cef82-682">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-682">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-683">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-683">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-684">検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-684">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-685">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-685">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-686">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-686">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-687">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-687">Wildcard specifier</span></span>|<span data-ttu-id="cef82-688">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-688">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-689">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-689">\* (asterisk)</span></span>|<span data-ttu-id="cef82-690">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-690">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-691">?</span><span class="sxs-lookup"><span data-stu-id="cef82-691">?</span></span> <span data-ttu-id="cef82-692">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-692">(question mark)</span></span>|<span data-ttu-id="cef82-693">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-693">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-694">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-694">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-695">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-695">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-696">".</span><span class="sxs-lookup"><span data-stu-id="cef82-696">".</span></span> <span data-ttu-id="cef82-697">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-697">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-698">このメソッドは、再帰ではありません。</span><span class="sxs-lookup"><span data-stu-id="cef82-698">This method is not recursive.</span></span>  
  
 <span data-ttu-id="cef82-699">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>します。</span><span class="sxs-lookup"><span data-stu-id="cef82-699">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="cef82-700">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="cef82-700">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="cef82-701">ワイルドカードを使用します。</span><span class="sxs-lookup"><span data-stu-id="cef82-701">Wild cards are permitted.</span></span> <span data-ttu-id="cef82-702">たとえば、`searchPattern`文字列"\* t"内のすべてのディレクトリ名を検索`path`文字"t"で終了します。</span><span class="sxs-lookup"><span data-stu-id="cef82-702">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="cef82-703">`searchPattern`文字列"s\*"内のすべてのディレクトリ名を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-703">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-704">文字列"..."でのみ使用できます`searchPattern`指定されている場合、有効なディレクトリ名の一部としてなど、ディレクトリ名に"、。 します。b"です。</span><span class="sxs-lookup"><span data-stu-id="cef82-704">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="cef82-705">ディレクトリ階層を上へ移動は使用できません。</span><span class="sxs-lookup"><span data-stu-id="cef82-705">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="cef82-706">ファイルまたはディレクトリ、またはファイルやディレクトリに一致するがある場合、`searchPattern`内の文字列、 <xref:System.IO.DirectoryInfo>、このメソッドは、空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-706">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="cef82-707">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-707">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-708">次の例では、ファイルと指定した検索パターンに一致するディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="cef82-708">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-709">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-709">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-710">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-710">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-711">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-711">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-712">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-712">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-713">パスへのアクセス、ファイルやディレクトリからの読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-713">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="cef82-714">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-714">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="cef82-715">ディレクトリおよびファイルの名前と照合する検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-715">The search string to match against the names of directories and filesa.</span>
          </span>
          <span data-ttu-id="cef82-716">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-716">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="cef82-717">検索操作に現在のディレクトリのみを含めるか、すべてのサブディレクトリを含めるかを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-717">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="cef82-718">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-718">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-719">指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-719">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-720">検索条件に一致するファイル システム エントリの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-720">An array of file system entries that match the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-721">`searchPattern` リテラルのパスとワイルドカード文字の組み合わせとすることができますが、正規表現をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="cef82-721">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="cef82-722">次のワイルドカードの指定子は許可されて`searchPattern`します。</span><span class="sxs-lookup"><span data-stu-id="cef82-722">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="cef82-723">ワイルドカードの指定子</span><span class="sxs-lookup"><span data-stu-id="cef82-723">Wildcard specifier</span></span>|<span data-ttu-id="cef82-724">一致件数</span><span class="sxs-lookup"><span data-stu-id="cef82-724">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="cef82-725">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="cef82-725">\* (asterisk)</span></span>|<span data-ttu-id="cef82-726">その位置に 0 個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-726">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="cef82-727">?</span><span class="sxs-lookup"><span data-stu-id="cef82-727">?</span></span> <span data-ttu-id="cef82-728">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="cef82-728">(question mark)</span></span>|<span data-ttu-id="cef82-729">その位置の 0 個または 1 つの文字。</span><span class="sxs-lookup"><span data-stu-id="cef82-729">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="cef82-730">ワイルドカード以外の文字は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="cef82-730">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="cef82-731">たとえば、文字列"\* t"、文字"t"で終わるすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="cef82-731">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="cef82-732">".</span><span class="sxs-lookup"><span data-stu-id="cef82-732">".</span></span> <span data-ttu-id="cef82-733">`searchPattern`文字列"s\*"のすべての名前を検索`path`英字の"s"で始まります。</span><span class="sxs-lookup"><span data-stu-id="cef82-733">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="cef82-734">サブディレクトリを<xref:System.IO.FileSystemInfo>このメソッドによって返されるオブジェクトは、派生クラスにキャストできる<xref:System.IO.DirectoryInfo>します。</span><span class="sxs-lookup"><span data-stu-id="cef82-734">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="cef82-735">使用して、<xref:System.IO.FileAttributes>によって返される値、<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>プロパティを決定するかどうか、<xref:System.IO.FileSystemInfo>ファイルまたはディレクトリを表します。</span><span class="sxs-lookup"><span data-stu-id="cef82-735">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="cef82-736">このメソッドは、次の値を事前設定<xref:System.IO.FileSystemInfo>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-736">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-737">
            <paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-737">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-738">
            <paramref name="searchPattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-738">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cef82-739">
            <paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-739">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-740">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-740">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-741">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-741">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName">
          <span data-ttu-id="cef82-742">このディレクトリの移動先の名前とパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-742">The name and path to which to move this directory.</span>
          </span>
          <span data-ttu-id="cef82-743">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-743">The destination cannot be another disk volume or a directory with the identical name.</span>
          </span>
          <span data-ttu-id="cef82-744">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-744">It can be an existing directory to which you want to add this directory as a subdirectory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-745">
            <see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-745">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-746">このメソッドは、 <xref:System.IO.IOException> 、たとえば、c:\public、c:\mydir に移動しようとして、c:\public が既に存在する場合。</span><span class="sxs-lookup"><span data-stu-id="cef82-746">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="cef82-747">指定する必要があります"c:\\\public\\\mydir"として、`destDirName`パラメーター、新しいディレクトリ名を指定します。 または"c:\\\newdir"。</span><span class="sxs-lookup"><span data-stu-id="cef82-747">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="cef82-748">このメソッドは、読み取り専用のディレクトリにディレクトリを移動を許可します。</span><span class="sxs-lookup"><span data-stu-id="cef82-748">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="cef82-749">いずれのディレクトリの読み取り/書き込み属性が影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="cef82-749">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="cef82-750">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-750">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-751">次の例では、ディレクトリの移動を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-751">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-752">
            <paramref name="destDirName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-752">
              <paramref name="destDirName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cef82-753">
            <paramref name="destDirName" /> が空の文字列 (''") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-753">
              <paramref name="destDirName" /> is an empty string (''").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cef82-754">ディレクトリを別のボリュームに移動しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-754">An attempt was made to move a directory to a different volume.</span>
          </span>
          <span data-ttu-id="cef82-755">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-755">-or-</span>
          </span>
          <span data-ttu-id="cef82-756">
            <paramref name="destDirName" /> が既に存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-756">
              <paramref name="destDirName" /> already exists.</span>
          </span>
          <span data-ttu-id="cef82-757">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-757">-or-</span>
          </span>
          <span data-ttu-id="cef82-758">このパスへのアクセスが許可されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-758">You are not authorized to access this path.</span>
          </span>
          <span data-ttu-id="cef82-759">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-759">-or-</span>
          </span>
          <span data-ttu-id="cef82-760">移動するディレクトリと対象のディレクトリの名前が同じです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-760">The directory being moved and the destination directory have the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-761">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-761">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cef82-762">対象のディレクトリが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-762">The destination directory cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-763">読み取りと書き込みのファイルとディレクトリおよびコピー先ディレクトリへのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-763">for reading and writing files and directories and for access to the destination directory.</span>
          </span>
          <span data-ttu-id="cef82-764">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-764">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cef82-765">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-765">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-766">
            <see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-766">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cef82-767">ディレクトリ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-767">The directory name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-768">これは、<xref:System.IO.DirectoryInfo.Name%2A>プロパティ"Bin"などのディレクトリの名前のみを返します。</span><span class="sxs-lookup"><span data-stu-id="cef82-768">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="cef82-769">"C:\public\Bin"などの完全なパスを取得する、<xref:System.IO.FileSystemInfo.FullName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cef82-769">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="cef82-770"><xref:System.IO.DirectoryInfo.Name%2A>のプロパティを<xref:System.IO.DirectoryInfo>アクセス許可は必要ありません (を構築するために必要なディレクトリに読み取りアクセス許可を超える、 <xref:System.IO.DirectoryInfo.Exists%2A>) が、ディレクトリの名前を与えることができます。</span><span class="sxs-lookup"><span data-stu-id="cef82-770">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="cef82-771">渡すために必要な場合は、out、<xref:System.IO.DirectoryInfo>暗号的にセキュリティで保護された名前を持つ保護されたディレクトリに、信頼できないコードの使用のダミー ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="cef82-771">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</span></span>  
  
 <span data-ttu-id="cef82-772">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-772">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-773">次の例は、現在の名前を表示します。`DirectoryInfo`インスタンスのみです。</span><span class="sxs-lookup"><span data-stu-id="cef82-773">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-774">指定されたサブディレクトリの親ディレクトリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-774">Gets the parent directory of a specified subdirectory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cef82-775">親ディレクトリ。 または<see langword="null" />パスが null の場合、またはファイル パスがルートを表す場合 (など"\\"、"c:"、または \*"\\\server\share")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-775">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-776">共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md)します。</span><span class="sxs-lookup"><span data-stu-id="cef82-776">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-777">次の例では、指定したディレクトリの親ディレクトリへの参照を示します。</span><span class="sxs-lookup"><span data-stu-id="cef82-777">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-778">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-778">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-779">パスへのアクセス、ファイルやディレクトリからの読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-779">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="cef82-780">列挙体に関連付けられている: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-780">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cef82-781">ディレクトリのルート部分を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-781">Gets the root portion of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cef82-782">ディレクトリのルートを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-782">An object that represents the root of the directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cef82-783">次の例では、指定されたディレクトリのルートの場所が表示されます。</span><span class="sxs-lookup"><span data-stu-id="cef82-783">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cef82-784">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-784">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-785">パスへのアクセス、ファイルやディレクトリからの読み取り。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-785">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="cef82-786">列挙体に関連付けられている: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-786">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="cef82-787">
            <c>path</c> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-787">An object that describes an ACL entry to apply to the directory described by the <c>path</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cef82-788">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の<see cref="T:System.IO.DirectoryInfo" /> オブジェクトが示すディレクトリに適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-788">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cef82-789">アクセス制御リスト (ACL) には、個人やグループがある、または権限がない、特定のファイルまたはディレクトリの特定のアクションをユーザーがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="cef82-789">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="cef82-790">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cef82-790">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="cef82-791"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドが継承されない ACL リストを表すファイルに ACL エントリを適用します。</span><span class="sxs-lookup"><span data-stu-id="cef82-791">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cef82-792">ACL に指定された`directorySecurity`ディレクトリの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="cef82-792">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="cef82-793">新しいユーザーのアクセス許可を追加するには、使用、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドを既存の ACL を取得し、それを変更します。</span><span class="sxs-lookup"><span data-stu-id="cef82-793">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="cef82-794"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドにのみが解決しない<xref:System.Security.AccessControl.DirectorySecurity>オブジェクトの作成後に変更されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-794">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="cef82-795">場合、<xref:System.Security.AccessControl.DirectorySecurity>オブジェクトが変更されていない、ファイルに保存されません。</span><span class="sxs-lookup"><span data-stu-id="cef82-795">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="cef82-796">そのため、取得することはできません、 <xref:System.Security.AccessControl.DirectorySecurity> 1 つのファイルからオブジェクトし、別のファイルに同じオブジェクトを再適用します。</span><span class="sxs-lookup"><span data-stu-id="cef82-796">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="cef82-797">ACL の情報を別の 1 つのファイルにコピーします。 する</span><span class="sxs-lookup"><span data-stu-id="cef82-797">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="cef82-798">使用して、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>を取得するメソッド、<xref:System.Security.AccessControl.DirectorySecurity>ソース ファイルからのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-798">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="cef82-799">新規作成<xref:System.Security.AccessControl.DirectorySecurity>先のファイル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-799">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="cef82-800">使用して、<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>または<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>メソッドのソースの<xref:System.Security.AccessControl.DirectorySecurity>ACL の情報を取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-800">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="cef82-801">使用して、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>または<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>、情報をコピーするメソッドは、先には、手順 3. で取得<xref:System.Security.AccessControl.DirectorySecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cef82-801">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="cef82-802">設定先<xref:System.Security.AccessControl.DirectorySecurity>変換先のファイルを使用するオブジェクト、<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="cef82-802">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cef82-803">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A>と<xref:System.IO.DirectoryInfo.SetAccessControl%2A>メソッドを追加して、アクセスを削除してディレクトリからのリスト (ACL) エントリを制御します。</span><span class="sxs-lookup"><span data-stu-id="cef82-803">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cef82-804">
            <paramref name="directorySecurity" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-804">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="cef82-805">ファイルを検出または変更できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-805">The file could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cef82-806">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-806">The current process does not have access to open the file.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cef82-807">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-807">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="cef82-808">ディレクトリのアクセス制御リスト (ACL) を列挙する権限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-808">for permission to enumerate access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="cef82-809">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-809">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cef82-810">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、 <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-810">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cef82-811">ユーザーから渡された元のパスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-811">Returns the original path that was passed by the user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cef82-812">ユーザーから渡された元のパスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cef82-812">Returns the original path that was passed by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>