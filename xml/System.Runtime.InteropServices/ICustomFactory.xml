<Type Name="ICustomFactory" FullName="System.Runtime.InteropServices.ICustomFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52eae40ad2ea6f577469899b3d88605daa067f3c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69270092" /></Metadata><TypeSignature Language="C#" Value="public interface ICustomFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomFactory" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ICustomFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomFactory" />
  <TypeSignature Language="F#" Value="type ICustomFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="29748-101"><see cref="T:System.MarshalByRefObject" /> を拡張するマネージド オブジェクトのアクティベーション コードを、ユーザーが書き込むことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="29748-101">Enables users to write activation code for managed objects that extend <see cref="T:System.MarshalByRefObject" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29748-102">を実装`ICustomFactory`し、を使用<xref:System.Runtime.Remoting.Proxies.ProxyAttribute>して<xref:System.MarshalByRefObject>クラスを属性するプロキシクラスを指定することで、カスタムアクティベーションを有効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="29748-102">You can enable custom activation by providing a proxy class that implements `ICustomFactory` and attributing the <xref:System.MarshalByRefObject> class with the <xref:System.Runtime.Remoting.Proxies.ProxyAttribute>.</span></span> <span data-ttu-id="29748-103">クラスがアクティブになると、共通言語<xref:System.Runtime.InteropServices.ICustomFactory.CreateInstance%2A>ランタイムによってプロキシのメソッドが呼び出され、クラスがアクティブ化されます。</span><span class="sxs-lookup"><span data-stu-id="29748-103">When the class is activated, the proxy's <xref:System.Runtime.InteropServices.ICustomFactory.CreateInstance%2A> method is called by the common language runtime to activate the class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public MarshalByRefObject CreateInstance (Type serverType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.MarshalByRefObject CreateInstance(class System.Type serverType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (serverType As Type) As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MarshalByRefObject ^ CreateInstance(Type ^ serverType);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type -&gt; MarshalByRefObject" Usage="iCustomFactory.CreateInstance serverType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serverType"><span data-ttu-id="29748-104">アクティブにする型。</span><span class="sxs-lookup"><span data-stu-id="29748-104">The type to activate.</span></span></param>
        <summary><span data-ttu-id="29748-105">指定した型の新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="29748-105">Creates a new instance of the specified type.</span></span></summary>
        <returns><span data-ttu-id="29748-106">指定した型に関連付けられている <see cref="T:System.MarshalByRefObject" />。</span><span class="sxs-lookup"><span data-stu-id="29748-106">A <see cref="T:System.MarshalByRefObject" /> associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29748-107">`CreateInstance`は、指定された型の新しいオブジェクトを作成する必要があるときに、共通言語ランタイムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="29748-107">`CreateInstance` is called by the common language runtime when a new object of the specified type needs to be created.</span></span> <span data-ttu-id="29748-108">独自のカスタムクラスファクトリを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="29748-108">Override this method to provide your own custom class factory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
