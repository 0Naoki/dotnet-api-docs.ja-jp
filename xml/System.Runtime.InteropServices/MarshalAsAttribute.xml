<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarshalAsAttribute.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f2e777bc7171cbc1fc67df87ed564e93db5f751e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2e777bc7171cbc1fc67df87ed564e93db5f751e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Indicates how to marshal the data between managed and unmanaged code.</source>
          <target state="translated">マネージ コードとアンマネージ コードとの間のデータのマーシャリング方法を示します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>You can apply this attribute to parameters, fields, or return values.</source>
          <target state="translated">この属性、フィールド、パラメーターに適用または戻り値ことができます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>This attribute is optional, as each data type has a default marshaling behavior.</source>
          <target state="translated">この属性は、データの種類ごとに既定のマーシャ リング動作がある必要が省略可能です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>This attribute is only necessary when a given type can be marshaled to multiple types.</source>
          <target state="translated">この属性を必要なは、複数の種類を指定された型をマーシャ リングできる場合だけです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For example, you can marshal a string to unmanaged code as either a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>, a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr&gt;</ph>, a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPTStr&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>.</source>
          <target state="translated">たとえば、いずれかとしてアンマネージ コードに文字列をマーシャ リングすることができます、 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>、 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr&gt;</ph>、 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPTStr&gt;</ph>、または<ph id="ph4">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>By default, the common language runtime marshals a string parameter as a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph> to COM methods.</source>
          <target state="translated">既定では、共通言語ランタイムは、文字列パラメーターとしてをマーシャ リング、 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph> COM メソッドにします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to an individual field or parameter to cause that particular string to be marshaled as a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> instead of a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>.</source>
          <target state="translated">適用することができます、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>属性を個別のフィールドまたはパラメーターとしてマーシャ リングする、指定した文字列が発生する、<ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>の代わりに、<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <bpt id="p1">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> passes your marshaling preferences to the common language runtime.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbexp.exe (タイプ ライブラリ エクスポーター)<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept>マーシャ リング好みによって、共通言語ランタイムに渡されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke.</source>
          <target state="translated">一部のパラメーターと戻り値は、マーシャ リング動作 COM 相互運用機能を使用すると別の既定値を設定またはプラットフォーム呼び出しです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>By default, the runtime marshals a string parameter (and fields in a value type) as a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> to a platform invoke method or function.</source>
          <target state="translated">既定では、ランタイムとしてマーシャ リングする、文字列パラメーター (および値型のフィールド)、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>メソッドまたは関数を呼び出すには、プラットフォームにします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling Behavior<ept id="p1">](~/docs/framework/interop/default-marshaling-behavior.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>既定のマーシャ リング動作<ept id="p1">](~/docs/framework/interop/default-marshaling-behavior.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>In most cases, the attribute simply identifies the format of the unmanaged data using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration, as shown in the following C# signature:</source>
          <target state="translated">ほとんどの場合、属性だけを示しますを使用して、アンマネージ データの形式、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph>列挙、c# シグネチャを次に示すようにします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Some <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration members require additional information.</source>
          <target state="translated">いくつか<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph>列挙型メンバーの追加情報を必要とします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For example, additional information is needed when the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> is <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray&gt;</ph>.</source>
          <target state="translated">たとえば、追加情報が必要なときに、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph>は<ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For a complete description of how to use this attribute with arrays, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">この属性を使用して配列を使用する方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>配列の既定のマーシャ リング<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (タイプ ライブラリ インポーター)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept>パラメーター、フィールド、および入力タイプ ライブラリでのデータ型が、対応するマネージ データ型の既定の型でないことを示す戻り値にこの属性も適用されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Tlbimp.exe always applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to <ph id="ph2">&lt;xref:System.String&gt;</ph> and <ph id="ph3">&lt;xref:System.Object&gt;</ph> types for clarity, regardless of the type specified in the input type library.</source>
          <target state="translated">Tlbimp.exe が常に適用されます、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>に<ph id="ph2">&lt;xref:System.String&gt;</ph>と<ph id="ph3">&lt;xref:System.Object&gt;</ph>入力タイプ ライブラリで指定された型に関係なく、わかりやすくするための型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> does not support marshaling of generic types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>はジェネリック型のマーシャ リングをサポートしていません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to a field, a method parameter, and a method return value in a managed type.</source>
          <target state="translated">次の例に適用されます、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>するフィールド、メソッド パラメーター、およびメソッドには、マネージ型の値を返します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to a property:</source>
          <target state="translated">次の例に適用されます、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>プロパティに属性します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>The value the data is to be marshaled as.</source>
          <target state="translated">マーシャリング後のデータの値。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 値を使用して、<ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>This constructor takes an underlying 16-bit signed integer that represents each <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration member.</source>
          <target state="translated">このコンス トラクターは、基になる 16 ビット符号付き整数をそれぞれ表す<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph>列挙体のメンバーです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> uses this constructor.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (タイプ ライブラリ インポーター)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept>このコンス トラクターを使用します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>The value the data is to be marshaled as.</source>
          <target state="translated">マーシャリング後のデータの値。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> enumeration member.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> 列挙体メンバーを使用して、<ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>For readable code that is less prone to error, always use this constructor.</source>
          <target state="translated">読み取り可能なコードでエラーが発生しにくくなりました、常にこのコンス トラクターを使用します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>Specifies the element type of the unmanaged <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" /&gt;</ph>.</source>
          <target state="translated">アンマネージの <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" /&gt;</ph> の要素の型を示します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>You can set this parameter to a value from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph> enumeration to specify the type of the array's elements.</source>
          <target state="translated">値にこのパラメーターを設定することができます、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph>列挙型、配列の要素の種類を指定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used.</source>
          <target state="translated">型が指定されていない場合は、マネージ配列の要素の型に対応する既定のアンマネージ型が使用されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>For example, the <ph id="ph1">`ArraySubType`</ph> for a <ph id="ph2">`LPWStr`</ph> array in COM is <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">`ArraySubType`</ph>の<ph id="ph2">`LPWStr`</ph>COM での配列が<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>配列の既定のマーシャ リング<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex">
          <source>Specifies the parameter index of the unmanaged <ph id="ph1">&lt;see langword="iid_is" /&gt;</ph> attribute used by COM.</source>
          <target state="translated">COM で使用されるアンマネージ <ph id="ph1">&lt;see langword="iid_is" /&gt;</ph> 属性のパラメーター インデックスを指定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>Provides additional information to a custom marshaler.</source>
          <target state="translated">カスタム マーシャラーに追加の情報を提供します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>This field is optional when using a custom marshaler.</source>
          <target state="translated">カスタム マーシャラーを使用するときに、このフィールドは省略できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>You can set this field to a string that supplies additional information to a custom marshaler.</source>
          <target state="translated">このフィールドは、カスタム マーシャラーに追加の情報を提供する文字列を設定できます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.</source>
          <target state="translated">たとえば、同じマーシャラーできますラッパーの番号を提供する特定のラッパーを示すために、cookie が使用されています。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>Specifies the fully qualified name of a custom marshaler.</source>
          <target state="translated">カスタム マーシャラーの完全修飾名を指定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>You can use either the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=nameWithType&gt;</ph> field specify a custom marshaler type for the attributed parameter, field, or return type.</source>
          <target state="translated">使用するか、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>または<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=nameWithType&gt;</ph>フィールドは、属性付きのパラメーターのカスタム マーシャラー型、フィールド、または戻り値の型を指定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field enables you to specify a string representing the fully qualified name of a custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>フィールドでは、カスタム マーシャラーの完全修飾名を表す文字列を指定することができます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>It is useful for late-bound references, but is less preferred than <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> for specifying a custom marshaler.</source>
          <target state="translated">遅延バインドの参照のため便利ですよりも小さい優先は<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>カスタム マーシャラーを指定するためです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>For additional information about creating and using custom marshalers, see <bpt id="p1">[</bpt>Custom Marshaling<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>.</source>
          <target state="translated">作成して、カスタム マーシャラーの使用に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>カスタム マーシャ リング<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>Implements <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /&gt;</ph> as a type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /&gt;</ph> を型として実装します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>You can use either the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field to specify a custom marshaler type for the attributed parameter, field, or return type.</source>
          <target state="translated">使用するか、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>または<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>属性付きのパラメーターのカスタム マーシャラー型、フィールド、または戻り値の型を指定するフィールドです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> field allows easier usage of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> by shortening the syntax.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>フィールドにより、簡単に使用量を<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>構文を短縮しています。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>In the following example, the first line represents syntax using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> and the second line represents syntax using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>.</source>
          <target state="translated">次の例では、最初の行を表す構文を使用して<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>、構文を使用して 2 番目の行を表します<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>You can set a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object using <ph id="ph2">`typeof`</ph> in C#, <ph id="ph3">`GetType`</ph> in Visual Basic, or <ph id="ph4">`typeid`</ph> in C++.</source>
          <target state="translated">設定することができます、<ph id="ph1">&lt;xref:System.Type&gt;</ph>オブジェクトを使用して<ph id="ph2">`typeof`</ph>、C# の場合は、 <ph id="ph3">`GetType`</ph> Visual basic、または<ph id="ph4">`typeid`</ph>C++ ではします。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>For additional information about creating and using custom marshalers, see <bpt id="p1">[</bpt>Custom Marshaling<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>.</source>
          <target state="translated">作成して、カスタム マーシャラーの使用に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>カスタム マーシャ リング<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>Indicates the element type of the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph> の要素の型を示します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>You can set this field to a value from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=nameWithType&gt;</ph> enumeration to specify the type of the safe array's elements.</source>
          <target state="translated">値をこのフィールドを設定することができます、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=nameWithType&gt;</ph>セーフ配列の要素の型を指定する列挙です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used.</source>
          <target state="translated">型が指定されていない (バリアント型として渡された) 場合、マネージ要素型の既定の型が使用されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>For example, the <ph id="ph1">`SafeArraySubType`</ph> for an <ph id="ph2">`int`</ph> array in COM is <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_I4&gt;</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">`SafeArraySubType`</ph>の<ph id="ph2">`int`</ph>COM での配列が<ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_I4&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>配列の既定のマーシャ リング<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>Indicates the user-defined element type of the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph> のユーザー定義要素の型を示します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>Initialize this field with your custom type to enable the elements of the <ph id="ph1">`SAFEARRAY`</ph> to be marshaled successfully.</source>
          <target state="translated">このフィールドの要素を有効にするカスタム型の初期化、<ph id="ph1">`SAFEARRAY`</ph>が正常にマーシャ リングします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>This field is only needed when the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=nameWithType&gt;</ph> is either <ph id="ph2">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_DISPATCH?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_RECORD?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">のみ、このフィールドを必要なときに、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=nameWithType&gt;</ph>か<ph id="ph2">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_DISPATCH?displayProperty=nameWithType&gt;</ph>、または<ph id="ph4">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_RECORD?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>配列の既定のマーシャ リング<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.</source>
          <target state="translated">固定長配列の要素の数、またはインポートする文字列の文字数 (バイト数ではない) を示します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>This field is required for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr&gt;</ph> members of the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">このフィールドは、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>と<ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr&gt;</ph>のメンバー、<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst&gt;</ph> are (&gt;= 0 and &lt;= 0x1FFFFFFF).</source>
          <target state="translated">メタデータの圧縮された形式では、0x1FFFFFFF に制限されているため、範囲の有効な値<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst&gt;</ph>は (&gt; = 0 および &lt; = 0x1FFFFFFF)。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>配列の既定のマーシャ リング<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Indicates the zero-based parameter that contains the count of array elements, similar to <ph id="ph1">&lt;see langword="size_is" /&gt;</ph> in COM.</source>
          <target state="translated">COM の <ph id="ph1">&lt;see langword="size_is" /&gt;</ph> のように、0 から始まる配列要素のカウントを格納しているパラメーターを示します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> field supports managed-to-unmanaged and unmanaged-to-managed calls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph>フィールドには、マネージ、アンマネージ コードとアンマネージからマネージへの呼び出しがサポートされています。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>It does not have any effect on managed code that calls COM objects.</source>
          <target state="translated">COM オブジェクトを呼び出すマネージ コードには影響はありません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.</source>
          <target state="translated">によっては、マネージ型と、適用される属性では、セーフ配列または C スタイル配列として、配列を渡すことができます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array.</source>
          <target state="translated">配列は、C スタイル配列として渡される、ときに、マーシャラーは、配列のサイズを特定できません。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:</source>
          <target state="translated">そのため、アンマネージ関数またはメソッドには、マネージ配列を渡す、2 つの引数を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The array, defined by reference or value.</source>
          <target state="translated">参照または値で定義されている配列。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The array size, defined by reference or value.</source>
          <target state="translated">配列のサイズ、参照または値によって定義されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The zero-based index of the array size parameter is defined by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> field.</source>
          <target state="translated">使用して配列のサイズのパラメーターの 0 から始まるインデックスが定義されている、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>If you specify both <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=nameWithType&gt;</ph> with a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType&gt;</ph> field, the sum of the fields' values produces a size total.</source>
          <target state="translated">両方を指定する場合<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph>と<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=nameWithType&gt;</ph>で、<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType&gt;</ph>フィールドでは、フィールドの値の合計サイズの合計が生成されます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>For more information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>配列の既定のマーシャ リング<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value the data is to be marshaled as.</source>
          <target state="translated">マーシャリング後データの <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value the data is to be marshaled as.</source>
          <target state="translated">マーシャリング後のデータの <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>This value is used with <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to indicate how types should be marshaled between managed and unmanaged code.</source>
          <target state="translated">この値を使用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>をマネージ コードとアンマネージ コード間で型をマーシャ リングする方法を示します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>In some cases, you can use this field with certain <ph id="ph1">`UnmanagedType`</ph> enumeration members.</source>
          <target state="translated">場合によっては、特定のこのフィールドを使用することができます<ph id="ph1">`UnmanagedType`</ph>列挙型メンバー。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>For <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>, you must use additional named parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph>と<ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>、追加の名前付きパラメーターを使用する必要があります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>