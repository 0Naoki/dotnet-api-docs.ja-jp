<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExtensibleClassFactory.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50c38277b4087f3742cb505d291832a0e3f1b99a8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c38277b4087f3742cb505d291832a0e3f1b99a8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>Enables customization of managed objects that extend from unmanaged objects during creation.</source>
          <target state="translated">アンマネージ オブジェクトから拡張したマネージ オブジェクトの作成時に、そのオブジェクトをカスタマイズできるようにします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>The <ph id="ph1">`ExtensibleClassFactory`</ph> allows users to specify a <ph id="ph2">`delegate`</ph> that is called during construction of a runtime callable wrapper (RCW) that provides an instance of the underlying COM object.</source>
          <target state="translated"><ph id="ph1">`ExtensibleClassFactory`</ph>を指定することができます、<ph id="ph2">`delegate`</ph>基になる COM オブジェクトのインスタンスを提供するランタイム呼び出し可能ラッパー (RCW) の構築時に呼び出されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>In effect, the callback acts as the class factory for the COM object wrapped by the RCW.</source>
          <target state="translated">実際には、コールバックは、RCW でラップされた COM オブジェクトのクラス ファクトリとして機能します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>Without the callback, the common language runtime creates the underlying COM object by calling <ph id="ph1">`CoCreateInstance`</ph>.</source>
          <target state="translated">共通言語ランタイムが呼び出すことによって、基になる COM オブジェクトを作成、コールバックを伴わない<ph id="ph1">`CoCreateInstance`</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>This callback provides an alternative way of activating the underlying object, such as with a COM moniker or by providing a singleton object.</source>
          <target state="translated">このコールバックは、または単一オブジェクトを提供することによって COM モニカーの使用など、基になるオブジェクトをアクティブ化する方法を提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A&gt;</ph> method must be called in the <ph id="ph2">`static`</ph> initializer of the class that is extending the RCW.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A&gt;</ph>メソッドを呼び出す必要があります、 <ph id="ph2">`static`</ph> RCW を拡張するクラスの初期化子。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>Only one object creation callback is permitted per object type.</source>
          <target state="translated">1 つのオブジェクト作成のコールバック オブジェクトの種類は許可されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>When the extensible RCW is activated, the callback is registered.</source>
          <target state="translated">拡張可能な RCW がアクティブになると、コールバックを登録します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>When the underlying COM object needs to be created, the callback is called to provide a reference to the object.</source>
          <target state="translated">基になる COM オブジェクトを作成する必要がある、オブジェクトへの参照を提供するコールバックが呼び出されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>The callback must return an <ph id="ph1">`IUnknown`</ph> interface pointer for the base object.</source>
          <target state="translated">コールバックを返す必要があります、<ph id="ph1">`IUnknown`</ph>ベース オブジェクトのインターフェイス ポインター。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>Registers a <ph id="ph1">`delegate`</ph> that will be called whenever an instance of a managed type that extends from an unmanaged type needs to allocate the aggregated unmanaged object.</source>
          <target state="translated">登録、<ph id="ph1">`delegate`</ph>をマネージ アンマネージ型からを拡張する型のインスタンスが集約されたアンマネージ オブジェクトを割り当てる必要があるとき呼び出されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>This <ph id="ph1">`delegate`</ph> is expected to allocate and aggregate the unmanaged object and is called in place of a <ph id="ph2">`CoCreateInstance`</ph>.</source>
          <target state="translated">これは、<ph id="ph1">`delegate`</ph>が割り当て、アンマネージ オブジェクトを集約する推測されの代わりに呼び出されますが、<ph id="ph2">`CoCreateInstance`</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>This routine must be called in the context of the <ph id="ph1">`static`</ph> initializer for the class for which the callbacks will be made.</source>
          <target state="translated">このルーチンは、のコンテキストで呼び出す必要があります、<ph id="ph1">`static`</ph>をコールバックが行われるクラスの初期化子。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>A <ph id="ph1">&lt;see langword="delegate" /&gt;</ph> that is called in place of <ph id="ph2">&lt;see langword="CoCreateInstance" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="delegate" /&gt;</ph> の代わりに呼び出される <ph id="ph2">&lt;see langword="CoCreateInstance" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>Registers a <ph id="ph1">&lt;see langword="delegate" /&gt;</ph> that is called when an instance of a managed type, that extends from an unmanaged type, needs to allocate the aggregated unmanaged object.</source>
          <target state="translated">アンマネージ型から拡張したマネージ型のインスタンスが、アグリゲートされたアンマネージ オブジェクトを割り当てる必要がある場合に呼び出される <ph id="ph1">&lt;see langword="delegate" /&gt;</ph> を登録します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>This <ph id="ph1">`delegate`</ph> allocates and aggregates the unmanaged object and is called in place of <ph id="ph2">`CoCreateInstance`</ph>.</source>
          <target state="translated">これは、<ph id="ph1">`delegate`</ph>割り当て、アンマネージ オブジェクトを集約しの代わりに呼び出されます<ph id="ph2">`CoCreateInstance`</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>This <ph id="ph1">`delegate`</ph> must be registered in the context of the <ph id="ph2">`static`</ph> class initializer for which the callbacks will be made.</source>
          <target state="translated">これは、<ph id="ph1">`delegate`</ph>のコンテキストで登録する必要があります、<ph id="ph2">`static`</ph>コールバックが行われる対象のクラス初期化子。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>Only one class in an hierarchy should register a <ph id="ph1">`delegate`</ph> callback.</source>
          <target state="translated">階層内の 1 つのクラスを登録する必要があります、<ph id="ph1">`delegate`</ph>コールバック。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>