<Type Name="SEHException" FullName="System.Runtime.InteropServices.SEHException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55bcd4799bd95534af5fd2067606e3b088484014" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69269511" /></Metadata><TypeSignature Language="C#" Value="public class SEHException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SEHException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.SEHException" />
  <TypeSignature Language="VB.NET" Value="Public Class SEHException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SEHException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type SEHException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="18176-101">構造化例外処理 (SEH) エラーを表します。</span><span class="sxs-lookup"><span data-stu-id="18176-101">Represents structured exception handling (SEH) errors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18176-102">クラス<xref:System.Runtime.InteropServices.SEHException>は、アンマネージコードからスローされたが、別の .NET Framework の例外に割り当てられていない SEH エラーを処理します。</span><span class="sxs-lookup"><span data-stu-id="18176-102">The <xref:System.Runtime.InteropServices.SEHException> class handles SEH errors that are thrown from unmanaged code, but that have not been mapped to another .NET Framework exception.</span></span> <span data-ttu-id="18176-103">クラス<xref:System.Runtime.InteropServices.SEHException>は`HRESULT` 、`E_FAIL` (0x80004005) にも対応しています。</span><span class="sxs-lookup"><span data-stu-id="18176-103">The <xref:System.Runtime.InteropServices.SEHException> class also corresponds to the `HRESULT` `E_FAIL` (0x80004005).</span></span>  
  
 <span data-ttu-id="18176-104">.NET Framework は、多くの場合、マネージドに相当する SEH 例外を検出します。</span><span class="sxs-lookup"><span data-stu-id="18176-104">The .NET Framework often encounters unmanaged SEH exceptions that are automatically mapped to managed equivalents.</span></span> <span data-ttu-id="18176-105">一般的なアンマネージ SEH 例外が2つあります。</span><span class="sxs-lookup"><span data-stu-id="18176-105">There are two common unmanaged SEH exceptions:</span></span>  
  
-   <span data-ttu-id="18176-106">`STATUS_NO_MEMORY`例外は<xref:System.OutOfMemoryException>クラスに自動的にマップされます。</span><span class="sxs-lookup"><span data-stu-id="18176-106">`STATUS_NO_MEMORY` exceptions are automatically mapped to the <xref:System.OutOfMemoryException> class.</span></span>  
  
-   <span data-ttu-id="18176-107">`STATUS_ACCESS_VIOLATION`例外は、次のように自動的にマップされます。</span><span class="sxs-lookup"><span data-stu-id="18176-107">`STATUS_ACCESS_VIOLATION` exceptions are automatically mapped as follows:</span></span>  
  
    -   <span data-ttu-id="18176-108">が`legacyNullReferencePolicy`適用されて<xref:System.NullReferenceException>いる場合、すべてのアクセス違反はクラスにマップされます。</span><span class="sxs-lookup"><span data-stu-id="18176-108">If `legacyNullReferencePolicy` is applied, all access violations are mapped to the <xref:System.NullReferenceException> class.</span></span>  
  
    -   <span data-ttu-id="18176-109">読み取り/書き込みが試行されたアドレスが JIT コンパイルコードに含まれていない場合、例外は<xref:System.AccessViolationException>クラスにマップされます。</span><span class="sxs-lookup"><span data-stu-id="18176-109">If the address at which the read/write was attempted is not in JIT-compiled code, the exception is mapped to the <xref:System.AccessViolationException> class.</span></span>  
  
    -   <span data-ttu-id="18176-110">読み取り/書き込みが試行されたアドレスが JIT でコンパイルされたコード内にあり、それが OS の Null パーティション領域に含まれていない場合<xref:System.AccessViolationException> 、例外はクラスにマップされます。</span><span class="sxs-lookup"><span data-stu-id="18176-110">If the address at which the read/write was attempted is in JIT-compiled code, but it is not in the OS Null partition area, the exception is mapped to the <xref:System.AccessViolationException> class.</span></span>  
  
    -   <span data-ttu-id="18176-111">がない`legacyNullReferencePolicy`場合、および読み取り/書き込みが試行されたアドレスが JIT コンパイルコードで、OS の Null パーティション領域では、例外は<xref:System.NullReferenceException>クラスにマップされます。</span><span class="sxs-lookup"><span data-stu-id="18176-111">If there is no `legacyNullReferencePolicy`, and the address at which the read/write was attempted is in JIT-compiled code and in the OS Null partition area, the exception is mapped to the <xref:System.NullReferenceException> class.</span></span>  
  
 <span data-ttu-id="18176-112">特定の例外に自動的にマップされない SEH 例外は、既定で<xref:System.Runtime.InteropServices.SEHException>クラスにマップされます。</span><span class="sxs-lookup"><span data-stu-id="18176-112">Any SEH exception that is not automatically mapped to a specific exception is mapped to the <xref:System.Runtime.InteropServices.SEHException> class by default.</span></span>  
  
 <span data-ttu-id="18176-113">詳細については、MSDN ライブラリの「アンマネージ例外」と「構造化例外処理」を検索してください。</span><span class="sxs-lookup"><span data-stu-id="18176-113">For more information, search on "unmanaged exceptions" and "Structured Exception Handling" in the MSDN Library.</span></span>  
  
 <span data-ttu-id="18176-114">クラスでは<xref:System.Runtime.InteropServices.SEHException> 、アンマネージC++例外のデストラクターが呼び出されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="18176-114">Note that the <xref:System.Runtime.InteropServices.SEHException> class does not cause unmanaged C++ exception destructors to be called.</span></span> <span data-ttu-id="18176-115">アンマネージC++例外デストラクターが呼び出されるようにするには、 `catch`ブロックで次の構文を使用します。</span><span class="sxs-lookup"><span data-stu-id="18176-115">To ensure that unmanaged C++ exception destructors are called, use the following syntax in the `catch` block.</span></span>  
  
```vb  
Catch   
     ' Handle catch here.  
End Try  
```  
  
```csharp  
catch  
{  
     // Handle catch here.  
}  
```  
  
```cpp  
catch(…)  
{  
     // Handle catch here.  
}   
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="18176-116">.NET での例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="18176-116">Handling and throwing exceptions in .NET</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/610b364b-2761-429d-9c4a-afbc3e66f1b9"><span data-ttu-id="18176-117">方法: HRESULT に例外を割り当てる</span><span class="sxs-lookup"><span data-stu-id="18176-117">How to: Map HRESULTs and Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18176-118"><see cref="T:System.Runtime.InteropServices.SEHException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18176-118">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18176-119"><see cref="T:System.Runtime.InteropServices.SEHException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18176-119">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18176-120"><xref:System.Runtime.InteropServices.SEHException> クラスは、<xref:System.Runtime.InteropServices.ExternalException> クラスを継承します。</span><span class="sxs-lookup"><span data-stu-id="18176-120">The <xref:System.Runtime.InteropServices.SEHException> class inherits from the <xref:System.Runtime.InteropServices.ExternalException> class.</span></span> <span data-ttu-id="18176-121">このコンストラクターは、 <xref:System.Exception>オブジェクトのプロパティを次の表の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="18176-121">This constructor sets the properties of the <xref:System.Exception> object to the values in the following table.</span></span>  
  
|<span data-ttu-id="18176-122">プロパティ</span><span class="sxs-lookup"><span data-stu-id="18176-122">Property</span></span>|<span data-ttu-id="18176-123">[値]</span><span class="sxs-lookup"><span data-stu-id="18176-123">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="18176-124">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="18176-124">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="18176-125">ローカライズされたエラーメッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="18176-125">A localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : string -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="18176-126">例外の理由を示すメッセージ。</span><span class="sxs-lookup"><span data-stu-id="18176-126">The message that indicates the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="18176-127">指定したメッセージを使用して、<see cref="T:System.Runtime.InteropServices.SEHException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18176-127">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class with a specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18176-128"><xref:System.Runtime.InteropServices.SEHException> は <xref:System.Runtime.InteropServices.ExternalException>を継承します。</span><span class="sxs-lookup"><span data-stu-id="18176-128"><xref:System.Runtime.InteropServices.SEHException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="18176-129">次の表に示すように<xref:System.Exception> 、このコンストラクターはオブジェクトのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="18176-129">This constructor sets the properties of the <xref:System.Exception> object as shown in the following table.</span></span>  
  
|<span data-ttu-id="18176-130">プロパティ</span><span class="sxs-lookup"><span data-stu-id="18176-130">Property</span></span>|<span data-ttu-id="18176-131">[値]</span><span class="sxs-lookup"><span data-stu-id="18176-131">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="18176-132">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="18176-132">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="18176-133">`message`。</span><span class="sxs-lookup"><span data-stu-id="18176-133">`message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SEHException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SEHException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="18176-134">シリアル化されたオブジェクト データを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="18176-134">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="18176-135">転送元または転送先に関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="18176-135">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="18176-136">シリアル化データから、<see cref="T:System.Runtime.InteropServices.SEHException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18176-136">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class from serialization data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18176-137">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="18176-137">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="18176-138">詳細については、「<xref:System.Runtime.Serialization>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="18176-138">For more information, see the <xref:System.Runtime.Serialization> namespace.</span></span>  
  
 <span data-ttu-id="18176-139"><xref:System.Runtime.InteropServices.SEHException> は <xref:System.Runtime.InteropServices.ExternalException>を継承します。</span><span class="sxs-lookup"><span data-stu-id="18176-139"><xref:System.Runtime.InteropServices.SEHException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18176-140"><paramref name="info" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="18176-140"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : string * Exception -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="18176-141">例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="18176-141">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="18176-142">現在の例外の原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="18176-142">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="18176-143"><paramref name="inner" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="18176-143">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="18176-144">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Runtime.InteropServices.SEHException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18176-144">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18176-145">前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="18176-145">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="18176-146"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="18176-146">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="18176-147"><xref:System.Runtime.InteropServices.SEHException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="18176-147">The following table shows the initial property values for an instance of <xref:System.Runtime.InteropServices.SEHException>.</span></span>  
  
|<span data-ttu-id="18176-148">プロパティ</span><span class="sxs-lookup"><span data-stu-id="18176-148">Property</span></span>|<span data-ttu-id="18176-149">[値]</span><span class="sxs-lookup"><span data-stu-id="18176-149">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="18176-150">内部例外の参照。</span><span class="sxs-lookup"><span data-stu-id="18176-150">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="18176-151">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="18176-151">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="18176-152">.NET での例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="18176-152">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanResume">
      <MemberSignature Language="C#" Value="public virtual bool CanResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.CanResume" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanResume () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanResume();" />
      <MemberSignature Language="F#" Value="abstract member CanResume : unit -&gt; bool&#xA;override this.CanResume : unit -&gt; bool" Usage="sEHException.CanResume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18176-153">例外から回復できるかどうか、および例外がスローされたポイントからコードを続行できるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="18176-153">Indicates whether the exception can be recovered from, and whether the code can continue from the point at which the exception was thrown.</span></span></summary>
        <returns><span data-ttu-id="18176-154">再開可能な例外は実装されていないため、常に <see langword="false" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="18176-154">Always <see langword="false" />, because resumable exceptions are not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18176-155">が<xref:System.Runtime.InteropServices.SEHException.CanResume%2A>を`true`返した場合は、フィルター処理された例外ハンドラーが例外の原因となった問題を修正し、例外がスローされた時点からコードを続行できます。</span><span class="sxs-lookup"><span data-stu-id="18176-155">If <xref:System.Runtime.InteropServices.SEHException.CanResume%2A> returns `true`, then a filtered exception handler can correct the problem that caused the exception, and the code will continue from the point at which the exception was thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
