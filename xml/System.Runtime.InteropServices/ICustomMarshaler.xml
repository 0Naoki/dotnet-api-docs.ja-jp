<Type Name="ICustomMarshaler" FullName="System.Runtime.InteropServices.ICustomMarshaler">
  <TypeSignature Language="C#" Value="public interface ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1a042-101">メソッド呼び出しを処理するためのカスタム ラッパーを提供します。</span><span class="sxs-lookup"><span data-stu-id="1a042-101">Provides custom wrappers for handling method calls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a042-102">マーシャラーは、従来の機能と新しいインターフェイス間のブリッジを提供します。</span><span class="sxs-lookup"><span data-stu-id="1a042-102">A marshaler provides a bridge between the functionality of old and new interfaces.</span></span> <span data-ttu-id="1a042-103">カスタム マーシャ リングすると、次の利点があります。</span><span class="sxs-lookup"><span data-stu-id="1a042-103">Custom marshaling provides the following benefits:</span></span>  
  
-   <span data-ttu-id="1a042-104">また、新しいインターフェイスを実装しているサーバーを使用する古いインターフェイスを使用するように設計されたクライアント アプリケーションを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1a042-104">It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.</span></span>  
  
-   <span data-ttu-id="1a042-105">古いインターフェイスを実装しているサーバーを使用するクライアント アプリケーションの新しいインターフェイスを使用するビルドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1a042-105">It enables client applications built to work with a new interface to work with servers that implement an old interface.</span></span>  
  
 <span data-ttu-id="1a042-106">マーシャ リング動作の違いを導入するか、コンポーネント オブジェクト モデル (COM) を別の方法で公開されるインターフェイスがある場合は、相互運用マーシャラーを使用する代わりに、カスタム マーシャラーを設計することができます。</span><span class="sxs-lookup"><span data-stu-id="1a042-106">If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler.</span></span> <span data-ttu-id="1a042-107">カスタム マーシャラーを使用すると、.NET Framework コンポーネントを新規と既存の COM コンポーネントの違いを最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="1a042-107">By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.</span></span>  
  
 <span data-ttu-id="1a042-108">たとえばと呼ばれる管理対象のインターフェイスを開発している`INew`です。</span><span class="sxs-lookup"><span data-stu-id="1a042-108">For example, suppose that you are developing a managed interface called `INew`.</span></span> <span data-ttu-id="1a042-109">このインターフェイスは、標準の COM 呼び出し可能ラッパー (CCW) を介して COM に公開される、ときに同じメソッドは、マネージ インターフェイスとし、相互運用マーシャラーに組み込まれているマーシャ リング規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="1a042-109">When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler.</span></span> <span data-ttu-id="1a042-110">たとえば、既知の COM インターフェイスが呼び出されること`IOld`と同じ機能が既に提供されて、`INew`インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="1a042-110">Now suppose that a well-known COM interface called `IOld` already provides the same functionality as the `INew` interface.</span></span> <span data-ttu-id="1a042-111">カスタム マーシャラーを設計することでは、アンマネージ実装を提供できる`IOld`のマネージ実装への呼び出しを代行する、`INew`インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="1a042-111">By designing a custom marshaler, you can provide an unmanaged implementation of `IOld` that simply delegates the calls to the managed implementation of the `INew` interface.</span></span> <span data-ttu-id="1a042-112">したがって、カスタム マーシャラーは、マネージ コードとアンマネージ インターフェイス間の仲介役として機能します。</span><span class="sxs-lookup"><span data-stu-id="1a042-112">Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1a042-113">カスタム マーシャラーは、ディスパッチ専用インターフェイスでマネージ コードからアンマネージ コードに呼び出すときに呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="1a042-113">Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.</span></span>  
  
## <a name="defining-the-marshaling-type"></a><span data-ttu-id="1a042-114">マーシャリング型の定義</span><span class="sxs-lookup"><span data-stu-id="1a042-114">Defining the Marshaling Type</span></span>  
 <span data-ttu-id="1a042-115">カスタム マーシャラーを作成するには、マーシャ リングは、マネージ コードとアンマネージ インターフェイスを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1a042-115">Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled.</span></span> <span data-ttu-id="1a042-116">これらのインターフェイスは、よく同じ機能を実行がマネージ コードとアンマネージ オブジェクトに異なる方法で公開されます。</span><span class="sxs-lookup"><span data-stu-id="1a042-116">These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.</span></span>  
  
 <span data-ttu-id="1a042-117">マネージ コンパイラは、メタデータからマネージ インターフェイスを生成し、結果として得られるインターフェイスは他のマネージ インターフェイスのようになります。</span><span class="sxs-lookup"><span data-stu-id="1a042-117">A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface.</span></span> <span data-ttu-id="1a042-118">次の例では、代表的なインターフェイスを示します。</span><span class="sxs-lookup"><span data-stu-id="1a042-118">The following example shows a typical interface.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#1)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#1)]  
  
 <span data-ttu-id="1a042-119">アンマネージ型のインターフェイス定義言語 (IDL) を定義して、Microsoft インターフェイス定義言語 (MIDL) コンパイラでコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="1a042-119">You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler.</span></span> <span data-ttu-id="1a042-120">Library ステートメント内のインターフェイスを定義し、次の例に示すように、ユニバーサル一意識別子 (UUID) 属性を持つインターフェイス ID を割り当てること。</span><span class="sxs-lookup"><span data-stu-id="1a042-120">You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.</span></span>  
  
```  
 [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]  
library OldLib {  
     [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]  
     interface IOld : IUnknown  
         HRESULT OldMethod();  
}  
```  
  
 <span data-ttu-id="1a042-121">MIDL コンパイラでは、いくつかの出力ファイルを生成します。</span><span class="sxs-lookup"><span data-stu-id="1a042-121">The MIDL compiler produces several output files.</span></span> <span data-ttu-id="1a042-122">出力ファイル Old_i.c 定義、インターフェイスが Old.idl で定義されている場合、`const`次の例で示すように、インターフェイスのインターフェイス id (IID) 変数です。</span><span class="sxs-lookup"><span data-stu-id="1a042-122">If the interface is defined in Old.idl, the output file Old_i.c defines a `const` variable with the interface identifier (IID) of the interface, as the following example demonstrates.</span></span>  
  
```  
const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};  
```  
  
 <span data-ttu-id="1a042-123">Old.h ファイルも、MIDL によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="1a042-123">The Old.h file is also produced by MIDL.</span></span> <span data-ttu-id="1a042-124">C++ ソース コードに含めることができるインターフェイスの C++ の定義が含まれています。</span><span class="sxs-lookup"><span data-stu-id="1a042-124">It contains a C++ definition of the interface that can be included in your C++ source code.</span></span>  
  
## <a name="implementing-the-icustommarshaler-interface"></a><span data-ttu-id="1a042-125">ICustomMarshaler インターフェイスの実装</span><span class="sxs-lookup"><span data-stu-id="1a042-125">Implementing the ICustomMarshaler Interface</span></span>  
 <span data-ttu-id="1a042-126">カスタム マーシャラーを実装する必要があります、<xref:System.Runtime.InteropServices.ICustomMarshaler>ランタイムに適切なラッパーを提供するインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="1a042-126">Your custom marshaler must implement the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface to provide the appropriate wrappers to the runtime.</span></span>  
  
 <span data-ttu-id="1a042-127">次の c# コードでは、すべてのカスタム マーシャラーで実装する必要がある基本インターフェイスを表示します。</span><span class="sxs-lookup"><span data-stu-id="1a042-127">The following C# code displays the base interface that must be implemented by all custom marshalers.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#2)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#2)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#2)]  
  
 <span data-ttu-id="1a042-128"><xref:System.Runtime.InteropServices.ICustomMarshaler>インターフェイスには、換算のサポート、クリーンアップのサポート、およびマーシャ リングするデータに関する情報を提供するメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="1a042-128">The <xref:System.Runtime.InteropServices.ICustomMarshaler> interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.</span></span>  
  
|<span data-ttu-id="1a042-129">操作の種類</span><span class="sxs-lookup"><span data-stu-id="1a042-129">Type of operation</span></span>|<span data-ttu-id="1a042-130">ICustomMarshaler メソッド</span><span class="sxs-lookup"><span data-stu-id="1a042-130">ICustomMarshaler method</span></span>|<span data-ttu-id="1a042-131">説明</span><span class="sxs-lookup"><span data-stu-id="1a042-131">Description</span></span>|  
|-----------------------|-----------------------------|-----------------|  
|<span data-ttu-id="1a042-132">(ネイティブ コードからマネージ コードに) 変換</span><span class="sxs-lookup"><span data-stu-id="1a042-132">Conversion (from native to managed code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>|<span data-ttu-id="1a042-133">マネージ オブジェクトに、ネイティブのデータへのポインターをマーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="1a042-133">Marshals a pointer to native data into a managed object.</span></span> <span data-ttu-id="1a042-134">このメソッドは、引数として渡されるアンマネージ インターフェイスをマーシャ リングできるカスタム ランタイム呼び出し可能ラッパー (RCW) を返します。</span><span class="sxs-lookup"><span data-stu-id="1a042-134">This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</span></span> <span data-ttu-id="1a042-135">マーシャラーは、その型のカスタム RCW のインスタンスを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1a042-135">The marshaler should return an instance of the custom RCW for that type.</span></span>|  
|<span data-ttu-id="1a042-136">変換 (マネージ コードからネイティブ コード)</span><span class="sxs-lookup"><span data-stu-id="1a042-136">Conversion (from managed to native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>|<span data-ttu-id="1a042-137">ネイティブ データへのポインターにマネージ オブジェクトをマーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="1a042-137">Marshals a managed object into a pointer to native data.</span></span> <span data-ttu-id="1a042-138">このメソッドは、カスタム COM 呼び出し可能ラッパー (CCW) を引数として渡されるマネージ インターフェイスをマーシャ リングできるを返します。</span><span class="sxs-lookup"><span data-stu-id="1a042-138">This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</span></span> <span data-ttu-id="1a042-139">マーシャラーは、その型のカスタムの CCW のインスタンスを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1a042-139">The marshaler should return an instance of the custom CCW for that type.</span></span>|  
|<span data-ttu-id="1a042-140">クリーンアップ (ネイティブ コード)</span><span class="sxs-lookup"><span data-stu-id="1a042-140">Cleanup (of native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A>|<span data-ttu-id="1a042-141">使用すると、ネイティブ データ (CCW) によって返されるをクリーンアップするマーシャラー、<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1a042-141">Enables the marshaler to clean up the native data (the CCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> method.</span></span>|  
|<span data-ttu-id="1a042-142">クリーンアップ (マネージ コード)</span><span class="sxs-lookup"><span data-stu-id="1a042-142">Cleanup (of managed code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A>|<span data-ttu-id="1a042-143">使用すると、マネージ データ (RCW) によって返されるをクリーンアップするマーシャラー、<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1a042-143">Enables the marshaler to clean up the managed data (the RCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> method.</span></span>|  
|<span data-ttu-id="1a042-144">(ネイティブ コード) に関する情報</span><span class="sxs-lookup"><span data-stu-id="1a042-144">Information (about native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A>|<span data-ttu-id="1a042-145">マーシャ リングされるアンマネージ データのサイズを返します。</span><span class="sxs-lookup"><span data-stu-id="1a042-145">Returns the size of the unmanaged data to be marshaled.</span></span>|  
  
### <a name="conversion"></a><span data-ttu-id="1a042-146">変換</span><span class="sxs-lookup"><span data-stu-id="1a042-146">Conversion</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="1a042-147">マネージ オブジェクトに、ネイティブのデータへのポインターをマーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="1a042-147">Marshals a pointer to native data into a managed object.</span></span> <span data-ttu-id="1a042-148">このメソッドは、引数として渡されるアンマネージ インターフェイスをマーシャ リングできるカスタム ランタイム呼び出し可能ラッパー (RCW) を返します。</span><span class="sxs-lookup"><span data-stu-id="1a042-148">This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</span></span> <span data-ttu-id="1a042-149">マーシャラーは、その型のカスタム RCW のインスタンスを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1a042-149">The marshaler should return an instance of the custom RCW for that type.</span></span>  
  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="1a042-150">ネイティブ データへのポインターにマネージ オブジェクトをマーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="1a042-150">Marshals a managed object into a pointer to native data.</span></span> <span data-ttu-id="1a042-151">このメソッドは、カスタム COM 呼び出し可能ラッパー (CCW) を引数として渡されるマネージ インターフェイスをマーシャ リングできるを返します。</span><span class="sxs-lookup"><span data-stu-id="1a042-151">This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</span></span> <span data-ttu-id="1a042-152">マーシャラーは、その型のカスタムの CCW のインスタンスを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1a042-152">The marshaler should return an instance of the custom CCW for that type.</span></span>  
  
### <a name="cleanup"></a><span data-ttu-id="1a042-153">クリーンアップ</span><span class="sxs-lookup"><span data-stu-id="1a042-153">Cleanup</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="1a042-154">使用すると、ネイティブ データ (CCW) によって返されるをクリーンアップするマーシャラー、<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1a042-154">Enables the marshaler to clean up the native data (the CCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="1a042-155">使用すると、マネージ データ (RCW) によって返されるをクリーンアップするマーシャラー、<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1a042-155">Enables the marshaler to clean up the managed data (the RCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
### <a name="size-information"></a><span data-ttu-id="1a042-156">サイズの情報</span><span class="sxs-lookup"><span data-stu-id="1a042-156">Size Information</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="1a042-157">マーシャ リングされるアンマネージ データのサイズを返します。</span><span class="sxs-lookup"><span data-stu-id="1a042-157">Returns the size of the unmanaged data to be marshaled.</span></span>  
  
## <a name="implementing-the-getinstance-method"></a><span data-ttu-id="1a042-158">GetInstance メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="1a042-158">Implementing the GetInstance Method</span></span>  
 <span data-ttu-id="1a042-159">実装するだけでなく、<xref:System.Runtime.InteropServices.ICustomMarshaler>インターフェイス、カスタム マーシャラーを実装する必要があります、`static`呼び出されるメソッド`GetInstance`を受け入れる、<xref:System.String>をパラメーターとしての戻り値の型を持つ<xref:System.Runtime.InteropServices.ICustomMarshaler>します。</span><span class="sxs-lookup"><span data-stu-id="1a042-159">In addition to implementing the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface, custom marshalers must implement a `static` method called `GetInstance` that accepts a <xref:System.String> as a parameter and has a return type of <xref:System.Runtime.InteropServices.ICustomMarshaler>.</span></span> <span data-ttu-id="1a042-160">これは、`static`メソッドは、カスタム マーシャラーのインスタンスをインスタンス化する共通言語ランタイムの COM 相互運用層によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1a042-160">This `static` method is called by the common language runtime's COM interop layer to instantiate an instance of the custom marshaler.</span></span> <span data-ttu-id="1a042-161">渡される文字列`GetInstance`メソッドが返されるカスタム マーシャラーのカスタマイズに使用できるクッキーです。</span><span class="sxs-lookup"><span data-stu-id="1a042-161">The string that is passed to `GetInstance` is a cookie that the method can use to customize the returned custom marshaler.</span></span>  
  
```  
static ICustomMarshaler *GetInstance(String *pstrCookie);  
```  
  
## <a name="applying-marshalasattribute"></a><span data-ttu-id="1a042-162">MarshalAsAttribute を適用します。</span><span class="sxs-lookup"><span data-stu-id="1a042-162">Applying MarshalAsAttribute</span></span>  
 <span data-ttu-id="1a042-163">カスタム マーシャラーを使用して、適用する必要があります、<xref:System.Runtime.InteropServices.MarshalAsAttribute>属性をパラメーターまたはマーシャ リングされるフィールドです。</span><span class="sxs-lookup"><span data-stu-id="1a042-163">To use a custom marshaler, you must apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to the parameter or field that is being marshaled.</span></span>  
  
 <span data-ttu-id="1a042-164">渡す必要があります、<xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>列挙体の値、<xref:System.Runtime.InteropServices.MarshalAsAttribute>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="1a042-164">You must also pass the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> enumeration value to the <xref:System.Runtime.InteropServices.MarshalAsAttribute> constructor.</span></span> <span data-ttu-id="1a042-165">さらに、指定する必要があります、<xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>フィールドに名前付きパラメーターが次のいずれか。</span><span class="sxs-lookup"><span data-stu-id="1a042-165">In addition, you must specify the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field with one of the following named parameters:</span></span>  
  
-   <span data-ttu-id="1a042-166"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> (必須): カスタム マーシャラーのアセンブリ修飾名。</span><span class="sxs-lookup"><span data-stu-id="1a042-166"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> (required): The assembly-qualified name of the custom marshaler.</span></span> <span data-ttu-id="1a042-167">名前には、名前空間とカスタム マーシャラーのクラスを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="1a042-167">The name should include the namespace and class of the custom marshaler.</span></span> <span data-ttu-id="1a042-168">カスタム マーシャラーがで使用されているアセンブリで定義されていない場合が定義されているアセンブリの名前を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1a042-168">If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1a042-169">使用することができます、<xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>の代わりにフィールド、<xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="1a042-169">You can use the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> field instead of the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field.</span></span> <span data-ttu-id="1a042-170"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> 型を受け取り、指定する方が簡単です。</span><span class="sxs-lookup"><span data-stu-id="1a042-170"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> takes a type that is easier to specify.</span></span>  
  
-   <span data-ttu-id="1a042-171"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie> (省略可能): カスタム マーシャラーに渡される cookie です。</span><span class="sxs-lookup"><span data-stu-id="1a042-171"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie> (optional): A cookie that is passed to the custom marshaler.</span></span> <span data-ttu-id="1a042-172">Cookie を使用するには、マーシャラーに追加情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="1a042-172">You can use the cookie to provide additional information to the marshaler.</span></span> <span data-ttu-id="1a042-173">たとえば、同じマーシャラーを介してラッパーの番号を指定する場合に、cookie は、特定のラッパーを識別します。</span><span class="sxs-lookup"><span data-stu-id="1a042-173">For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper.</span></span> <span data-ttu-id="1a042-174">渡される cookie、`GetInstance`マーシャラーのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="1a042-174">The cookie is passed to the `GetInstance` method of the marshaler.</span></span>  
  
 <span data-ttu-id="1a042-175"><xref:System.Runtime.InteropServices.MarshalAsAttribute>属性が、適切なラッパーをアクティブ化することができますので、カスタム マーシャラーを識別します。</span><span class="sxs-lookup"><span data-stu-id="1a042-175">The <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute identifies the custom marshaler so it can activate the appropriate wrapper.</span></span> <span data-ttu-id="1a042-176">共通言語ランタイムの相互運用機能のサービスは、属性を検査し、カスタム マーシャラー最初の時間をマーシャ リングする引数 (パラメーターやフィールド) のニーズを作成します。</span><span class="sxs-lookup"><span data-stu-id="1a042-176">The common language runtime's interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.</span></span>  
  
 <span data-ttu-id="1a042-177">ランタイムが呼び出すし、<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>と<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>メソッドの呼び出しを処理する、正しいラッパーをアクティブ化するカスタム マーシャラーをします。</span><span class="sxs-lookup"><span data-stu-id="1a042-177">The runtime then calls the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> and <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> methods on the custom marshaler to activate the correct wrapper to handle the call.</span></span>  
  
## <a name="using-a-custom-marshaler"></a><span data-ttu-id="1a042-178">カスタム マーシャラーを使用します。</span><span class="sxs-lookup"><span data-stu-id="1a042-178">Using a Custom Marshaler</span></span>  
 <span data-ttu-id="1a042-179">カスタム マーシャラーが完了したらは、特定の型のカスタム ラッパーとして使用することができます。</span><span class="sxs-lookup"><span data-stu-id="1a042-179">When the custom marshaler is complete, you can use it as a custom wrapper for a particular type.</span></span> <span data-ttu-id="1a042-180">次の例は、定義を示しています、`IUserData`マネージ インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="1a042-180">The following example shows the definition of the `IUserData` managed interface:</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#3)]  
  
 <span data-ttu-id="1a042-181">次の例で、`IUserData`インターフェイスの使用、`NewOldMarshaler`をアンマネージ クライアント アプリケーションに渡すを有効にするカスタム マーシャラー、`IOld`へのインターフェイス、`DoSomeStuff`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1a042-181">In the following example, the `IUserData` interface uses the `NewOldMarshaler` custom marshaler to enable unmanaged client applications to pass an `IOld` interface to the `DoSomeStuff` method.</span></span> <span data-ttu-id="1a042-182">管理対象の説明、`DoSomeStuff`メソッドは、`INew`一方、前の例で示すように、インターフェイスのアンマネージ バージョン`DoSomeStuff`受け取り、`IOld`インターフェイス ポインター、次の例で示すようにします。</span><span class="sxs-lookup"><span data-stu-id="1a042-182">The managed description of the `DoSomeStuff` method takes an `INew` interface, as shown in the previous example, whereas the unmanaged version of `DoSomeStuff` takes an `IOld` interface pointer, as shown in the following example.</span></span>  
  
```  
[uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]  
library UserLib {  
     [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]  
     interface IUserData : IUnknown  
         HRESULT DoSomeStuff(IUnknown* pIOld);  
}  
```  
  
 <span data-ttu-id="1a042-183">マネージ定義をエクスポートすることによって生成されるタイプ ライブラリ`IUserData`標準の定義ではなく、この例に示すアンマネージ定義を生成します。</span><span class="sxs-lookup"><span data-stu-id="1a042-183">The type library that is generated by exporting the managed definition of `IUserData` yields the unmanaged definition shown in this example instead of the standard definition.</span></span> <span data-ttu-id="1a042-184"><xref:System.Runtime.InteropServices.MarshalAsAttribute>に適用された属性、`INew`のマネージ定義の引数、`DoSomeStuff`メソッド引数が次の例のように、カスタム マーシャラーを使用することを示します。</span><span class="sxs-lookup"><span data-stu-id="1a042-184">The <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute applied to the `INew` argument in the managed definition of the `DoSomeStuff` method indicates that the argument uses a custom marshaler, as the following example shows.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#4)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#4)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#4)]  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#5)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#5)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#5)]  
  
 <span data-ttu-id="1a042-185">前の例では、最初のパラメーターに提供される、<xref:System.Runtime.InteropServices.MarshalAsAttribute>属性は、<xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>列挙値`UnmanagedType.CustomMarshaler`です。</span><span class="sxs-lookup"><span data-stu-id="1a042-185">In the previous examples, the first parameter provided to the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute is the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> enumeration value `UnmanagedType.CustomMarshaler`.</span></span>  
  
 <span data-ttu-id="1a042-186">2 番目のパラメーターは、<xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>フィールドには、カスタム マーシャラーのアセンブリ修飾名を提供します。</span><span class="sxs-lookup"><span data-stu-id="1a042-186">The second parameter is the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field, which provides the assembly-qualified name of the custom marshaler.</span></span> <span data-ttu-id="1a042-187">この名前は、名前空間とカスタム マーシャラーのクラス (`MarshalType="MyCompany.NewOldMarshaler"`)。</span><span class="sxs-lookup"><span data-stu-id="1a042-187">This name consists of the namespace and class of the custom marshaler (`MarshalType="MyCompany.NewOldMarshaler"`).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public void CleanUpManagedData (object ManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object ManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanUpManagedData (ManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CleanUpManagedData(System::Object ^ ManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ManagedObj"><span data-ttu-id="1a042-188">破棄するマネージ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1a042-188">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="1a042-189">不要になったときに、マネージ データの必要なクリーンアップを実行します。</span><span class="sxs-lookup"><span data-stu-id="1a042-189">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="1a042-190">破棄するアンマネージ データを指すポインター。</span><span class="sxs-lookup"><span data-stu-id="1a042-190">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="1a042-191">不要になったときに、アンマネージ データの必要なクリーンアップを実行します。</span><span class="sxs-lookup"><span data-stu-id="1a042-191">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNativeDataSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a042-192">マーシャリングするネイティブ データのサイズを返します。</span><span class="sxs-lookup"><span data-stu-id="1a042-192">Returns the size of the native data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="1a042-193">ネイティブ データのバイト単位のサイズ。</span><span class="sxs-lookup"><span data-stu-id="1a042-193">The size, in bytes, of the native data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public IntPtr MarshalManagedToNative (object ManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object ManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MarshalManagedToNative (ManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr MarshalManagedToNative(System::Object ^ ManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ManagedObj"><span data-ttu-id="1a042-194">変換されるマネージ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1a042-194">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="1a042-195">マネージ データをアンマネージ データに変換します。</span><span class="sxs-lookup"><span data-stu-id="1a042-195">Converts the managed data to unmanaged data.</span></span></summary>
        <returns><span data-ttu-id="1a042-196">マネージ オブジェクトの COM ビューへのポインター。</span><span class="sxs-lookup"><span data-stu-id="1a042-196">A pointer to the COM view of the managed object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="1a042-197">ラップするアンマネージ データを指すポインター。</span><span class="sxs-lookup"><span data-stu-id="1a042-197">A pointer to the unmanaged data to be wrapped.</span></span></param>
        <summary><span data-ttu-id="1a042-198">アンマネージ データをマネージ データに変換します。</span><span class="sxs-lookup"><span data-stu-id="1a042-198">Converts the unmanaged data to managed data.</span></span></summary>
        <returns><span data-ttu-id="1a042-199">COM データのマネージ ビューを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1a042-199">An object that represents the managed view of the COM data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>