<Type Name="GCHandle" FullName="System.Runtime.InteropServices.GCHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6650f2fab1fde98ffd80e4914fb451c73a988ff0" /><Meta Name="ms.sourcegitcommit" Value="312579b66a6a983587a84f05c419be8fb0df7326" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/09/2019" /><Meta Name="ms.locfileid" Value="65473687" /></Metadata><TypeSignature Language="C#" Value="public struct GCHandle" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit GCHandle extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.GCHandle" />
  <TypeSignature Language="VB.NET" Value="Public Structure GCHandle" />
  <TypeSignature Language="C++ CLI" Value="public value class GCHandle" />
  <TypeSignature Language="F#" Value="type GCHandle = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51b6c-101">アンマネージド メモリからマネージド オブジェクトにアクセスする手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-101">Provides a way to access a managed object from unmanaged memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-102">構造体は、任意の<xref:System.Runtime.InteropServices.GCHandleType>マネージオブジェクトに対応するハンドルを作成するために、列挙体と共に使用されます。 <xref:System.Runtime.InteropServices.GCHandle></span><span class="sxs-lookup"><span data-stu-id="51b6c-102">The <xref:System.Runtime.InteropServices.GCHandle> structure is used with the <xref:System.Runtime.InteropServices.GCHandleType> enumeration to create a handle corresponding to any managed object.</span></span> <span data-ttu-id="51b6c-103">この`Weak`ハンドルは`WeakTrackResurrection` `Pinned`、、、、の4つの型のいずれかになります。 `Normal`</span><span class="sxs-lookup"><span data-stu-id="51b6c-103">This handle can be one of four types: `Weak`, `WeakTrackResurrection`, `Normal`, or `Pinned`.</span></span> <span data-ttu-id="51b6c-104">ハンドルが割り当てられている場合は、アンマネージクライアントが唯一の参照を保持しているときに、それを使用して、マネージオブジェクトがガベージコレクターによって収集されないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-104">When the handle has been allocated, you can use it to prevent the managed object from being collected by the garbage collector when an unmanaged client holds the only reference.</span></span> <span data-ttu-id="51b6c-105">このようなハンドルがない場合、オブジェクトは、アンマネージクライアントに代わって作業を完了する前に、ガベージコレクターによって収集されます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-105">Without such a handle, the object can be collected by the garbage collector before completing its work on behalf of the unmanaged client.</span></span>  
  
 <span data-ttu-id="51b6c-106">また、を使用<xref:System.Runtime.InteropServices.GCHandle>して、メモリアドレスを返す固定オブジェクトを作成し、ガベージコレクターがそのオブジェクトをメモリ内に移動できないようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-106">You can also use <xref:System.Runtime.InteropServices.GCHandle> to create a pinned object that returns a memory address to prevent the garbage collector from moving the object in memory.</span></span>  
  
 <span data-ttu-id="51b6c-107">ハンドルがスコープ外に出る場合は、メソッドを<xref:System.Runtime.InteropServices.GCHandle.Free%2A>呼び出すことによって明示的に解放する必要があります。それ以外の場合は、メモリリークが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-107">When the handle goes out of scope you must explicitly release it by calling the <xref:System.Runtime.InteropServices.GCHandle.Free%2A> method; otherwise, memory leaks may occur.</span></span> <span data-ttu-id="51b6c-108">ピン留めされたハンドルを解放すると、関連付けられているオブジェクトの固定が解除され、ガベージコレクションに対する他の参照がない場合は、そのオブジェクトに適合するようになります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-108">When you free a pinned handle, the associated object will be unpinned and will become eligible for garbage collection, if there are no other references to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51b6c-109">次の例は、 `App` `GCHandle.Alloc`メソッドを使用してマネージオブジェクトへのハンドルを作成し、マネージオブジェクトが収集されないようにするクラスを示しています。</span><span class="sxs-lookup"><span data-stu-id="51b6c-109">The following example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected.</span></span> <span data-ttu-id="51b6c-110">`EnumWindows`メソッドを呼び出すと、デリゲートとマネージオブジェクト (両方ともマネージ型として宣言されてい<xref:System.IntPtr>ますが表示されません) が渡され、ハンドルがにキャストされます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-110">A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr>.</span></span> <span data-ttu-id="51b6c-111">アンマネージ関数は、コールバック関数のパラメーターとして型を呼び出し元に渡します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-111">The unmanaged function passes the type back to the caller as a parameter of the callback function.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.GCHandleType" />
  </Docs>
  <Members>
    <Member MemberName="AddrOfPinnedObject">
      <MemberSignature Language="C#" Value="public IntPtr AddrOfPinnedObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int AddrOfPinnedObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject" />
      <MemberSignature Language="VB.NET" Value="Public Function AddrOfPinnedObject () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr AddrOfPinnedObject();" />
      <MemberSignature Language="F#" Value="member this.AddrOfPinnedObject : unit -&gt; nativeint" Usage="gCHandle.AddrOfPinnedObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51b6c-112"><see cref="F:System.Runtime.InteropServices.GCHandleType.Pinned" /> ハンドル内のオブジェクトのアドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-112">Retrieves the address of an object in a <see cref="F:System.Runtime.InteropServices.GCHandleType.Pinned" /> handle.</span></span></summary>
        <returns><span data-ttu-id="51b6c-113"><see cref="T:System.IntPtr" /> としての固定オブジェクトのアドレス。</span><span class="sxs-lookup"><span data-stu-id="51b6c-113">The address of the pinned object as an <see cref="T:System.IntPtr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-114">このメソッドは、オブジェクトへの安定したポインターを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-114">This method is used to get a stable pointer to the object.</span></span> <span data-ttu-id="51b6c-115">オブジェクトをピン留めすると、ガベージコレクターがメモリ内を移動することがなくなり、ガベージコレクターの効率が低下します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-115">Pinning an object prevents the garbage collector from moving it around in memory, thereby reducing the efficiency of the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51b6c-116">このハンドルは、<see cref="F:System.Runtime.InteropServices.GCHandleType.Pinned" /> 以外の任意の型になります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-116">The handle is any type other than <see cref="F:System.Runtime.InteropServices.GCHandleType.Pinned" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51b6c-117">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-117">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51b6c-118">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-118">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandleType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Alloc">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51b6c-119">指定したオブジェクトにハンドルを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-119">Allocates a handle for the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Alloc">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.GCHandle Alloc (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.GCHandle Alloc(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.Alloc(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Alloc (value As Object) As GCHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::GCHandle Alloc(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Alloc : obj -&gt; System.Runtime.InteropServices.GCHandle" Usage="System.Runtime.InteropServices.GCHandle.Alloc value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.GCHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b6c-120"><see cref="T:System.Runtime.InteropServices.GCHandle" /> を使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-120">The object that uses the <see cref="T:System.Runtime.InteropServices.GCHandle" />.</span></span></param>
        <summary><span data-ttu-id="51b6c-121">指定したオブジェクトに <see cref="F:System.Runtime.InteropServices.GCHandleType.Normal" /> ハンドルを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-121">Allocates a <see cref="F:System.Runtime.InteropServices.GCHandleType.Normal" /> handle for the specified object.</span></span></summary>
        <returns><span data-ttu-id="51b6c-122">オブジェクトをガベージ コレクションから保護する新しい <see cref="T:System.Runtime.InteropServices.GCHandle" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-122">A new <see cref="T:System.Runtime.InteropServices.GCHandle" /> that protects the object from garbage collection.</span></span> <span data-ttu-id="51b6c-123"><see cref="T:System.Runtime.InteropServices.GCHandle" /> は、不要になったときに <see cref="M:System.Runtime.InteropServices.GCHandle.Free" /> で解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-123">This <see cref="T:System.Runtime.InteropServices.GCHandle" /> must be released with <see cref="M:System.Runtime.InteropServices.GCHandle.Free" /> when it is no longer needed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-124"><xref:System.Runtime.InteropServices.GCHandleType.Normal>ハンドルは不透明です。つまり、ハンドルを通じて、含まれるオブジェクトのアドレスを解決することはできません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-124"><xref:System.Runtime.InteropServices.GCHandleType.Normal> handles are opaque, which means that you cannot resolve the address of the object it contains through the handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51b6c-125">次の例は、 `App` `GCHandle.Alloc`メソッドを使用してマネージオブジェクトへのハンドルを作成し、マネージオブジェクトが収集されないようにするクラスを示しています。</span><span class="sxs-lookup"><span data-stu-id="51b6c-125">The following example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected.</span></span> <span data-ttu-id="51b6c-126">`EnumWindows`メソッドを呼び出すと、デリゲートとマネージオブジェクト (両方ともマネージ型として宣言されてい<xref:System.IntPtr>ますが表示されません) が渡され、ハンドルがにキャストされます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-126">A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr>.</span></span> <span data-ttu-id="51b6c-127">アンマネージ関数は、コールバック関数のパラメーターとして型を呼び出し元に渡します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-127">The unmanaged function passes the type back to the caller as a parameter of the callback function.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51b6c-128">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-128">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51b6c-129">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-129">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandleType" />
      </Docs>
    </Member>
    <Member MemberName="Alloc">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.GCHandle Alloc (object value, System.Runtime.InteropServices.GCHandleType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.GCHandle Alloc(object value, valuetype System.Runtime.InteropServices.GCHandleType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Alloc (value As Object, type As GCHandleType) As GCHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::GCHandle Alloc(System::Object ^ value, System::Runtime::InteropServices::GCHandleType type);" />
      <MemberSignature Language="F#" Value="static member Alloc : obj * System.Runtime.InteropServices.GCHandleType -&gt; System.Runtime.InteropServices.GCHandle" Usage="System.Runtime.InteropServices.GCHandle.Alloc (value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.GCHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Runtime.InteropServices.GCHandleType" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b6c-130"><see cref="T:System.Runtime.InteropServices.GCHandle" /> を使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-130">The object that uses the <see cref="T:System.Runtime.InteropServices.GCHandle" />.</span></span></param>
        <param name="type"><span data-ttu-id="51b6c-131">作成する <see cref="T:System.Runtime.InteropServices.GCHandleType" /> の型を示す、<see cref="T:System.Runtime.InteropServices.GCHandle" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="51b6c-131">One of the <see cref="T:System.Runtime.InteropServices.GCHandleType" /> values, indicating the type of <see cref="T:System.Runtime.InteropServices.GCHandle" /> to create.</span></span></param>
        <summary><span data-ttu-id="51b6c-132">指定したオブジェクトに指定した型のハンドルを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-132">Allocates a handle of the specified type for the specified object.</span></span></summary>
        <returns><span data-ttu-id="51b6c-133">指定した型の新しい <see cref="T:System.Runtime.InteropServices.GCHandle" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-133">A new <see cref="T:System.Runtime.InteropServices.GCHandle" /> of the specified type.</span></span> <span data-ttu-id="51b6c-134"><see cref="T:System.Runtime.InteropServices.GCHandle" /> は、不要になったときに <see cref="M:System.Runtime.InteropServices.GCHandle.Free" /> で解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-134">This <see cref="T:System.Runtime.InteropServices.GCHandle" /> must be released with <see cref="M:System.Runtime.InteropServices.GCHandle.Free" /> when it is no longer needed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51b6c-135">非プリミティブ (blittable でない) メンバーを持つインスタンスは固定できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-135">An instance with nonprimitive (non-blittable) members cannot be pinned.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51b6c-136">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-136">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51b6c-137">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-137">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandleType" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="gCHandle.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="51b6c-138">現在の <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトと比較する <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-138">The <see cref="T:System.Runtime.InteropServices.GCHandle" /> object to compare with the current <see cref="T:System.Runtime.InteropServices.GCHandle" /> object.</span></span></param>
        <summary><span data-ttu-id="51b6c-139">指定した <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトが、現在の <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトと等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-139">Determines whether the specified <see cref="T:System.Runtime.InteropServices.GCHandle" /> object is equal to the current <see cref="T:System.Runtime.InteropServices.GCHandle" /> object.</span></span></summary>
        <returns><span data-ttu-id="51b6c-140">指定した <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトが現在の <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-140"><see langword="true" /> if the specified <see cref="T:System.Runtime.InteropServices.GCHandle" /> object is equal to the current <see cref="T:System.Runtime.InteropServices.GCHandle" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-141">2 <xref:System.Runtime.InteropServices.GCHandle>つのオブジェクトは、同じメモリハンドルを指している場合に等しくなります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-141">Two <xref:System.Runtime.InteropServices.GCHandle> objects are equal if they point to the same memory handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public void Free ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Free() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.Free" />
      <MemberSignature Language="VB.NET" Value="Public Sub Free ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Free();" />
      <MemberSignature Language="F#" Value="member this.Free : unit -&gt; unit" Usage="gCHandle.Free " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51b6c-142"><see cref="T:System.Runtime.InteropServices.GCHandle" /> を解放します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-142">Releases a <see cref="T:System.Runtime.InteropServices.GCHandle" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-143">呼び出し元は、特定のハンドル<xref:System.Runtime.InteropServices.GCHandle.Free%2A>に対してが1回だけ呼び出されるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-143">The caller must ensure that for a given handle, <xref:System.Runtime.InteropServices.GCHandle.Free%2A> is called only once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51b6c-144">次の例は、 `App` `GCHandle.Alloc`メソッドを使用してマネージオブジェクトへのハンドルを作成し、マネージオブジェクトが収集されないようにするクラスを示しています。</span><span class="sxs-lookup"><span data-stu-id="51b6c-144">The following example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected.</span></span> <span data-ttu-id="51b6c-145">`EnumWindows`メソッドを呼び出すと、デリゲートとマネージオブジェクト (両方ともマネージ型として宣言されてい<xref:System.IntPtr>ますが表示されません) が渡され、ハンドルがにキャストされます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-145">A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr>.</span></span> <span data-ttu-id="51b6c-146">アンマネージ関数は、コールバック関数のパラメーターとして型を呼び出し元に渡します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-146">The unmanaged function passes the type back to the caller as a parameter of the callback function.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51b6c-147">ハンドルが解放されたか、または初期化されていません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-147">The handle was freed or never initialized.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51b6c-148">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-148">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51b6c-149">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-149">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromIntPtr">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.GCHandle FromIntPtr (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.InteropServices.GCHandle FromIntPtr(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.FromIntPtr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromIntPtr (value As IntPtr) As GCHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::GCHandle FromIntPtr(IntPtr value);" />
      <MemberSignature Language="F#" Value="static member FromIntPtr : nativeint -&gt; System.Runtime.InteropServices.GCHandle" Usage="System.Runtime.InteropServices.GCHandle.FromIntPtr value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.GCHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b6c-150"><see cref="T:System.IntPtr" /> オブジェクトの作成元のマネージド オブジェクトを識別する <see cref="T:System.Runtime.InteropServices.GCHandle" /> ハンドル。</span><span class="sxs-lookup"><span data-stu-id="51b6c-150">An <see cref="T:System.IntPtr" /> handle to a managed object to create a <see cref="T:System.Runtime.InteropServices.GCHandle" /> object from.</span></span></param>
        <summary><span data-ttu-id="51b6c-151">マネージド オブジェクトを識別するハンドルから作成された新しい <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-151">Returns a new <see cref="T:System.Runtime.InteropServices.GCHandle" /> object created from a handle to a managed object.</span></span></summary>
        <returns><span data-ttu-id="51b6c-152">値パラメーターに対応する新しい <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-152">A new <see cref="T:System.Runtime.InteropServices.GCHandle" /> object that corresponds to the value parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51b6c-153">次のコード例は、 `App` `GCHandle.Alloc`メソッドを使用してマネージオブジェクトへのハンドルを作成するクラスを示しています。これにより、マネージオブジェクトが収集されなくなります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-153">The following code example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected.</span></span> <span data-ttu-id="51b6c-154">メソッドの`EnumWindows`呼び出しは、デリゲートとマネージオブジェクト (両方ともマネージ型として宣言されていますが、表示されませ<xref:System.IntPtr>ん) を渡し、ハンドルをオブジェクトにキャストします。</span><span class="sxs-lookup"><span data-stu-id="51b6c-154">A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr> object.</span></span> <span data-ttu-id="51b6c-155">アンマネージ関数は、コールバック関数のパラメーターとして型を呼び出し元に渡します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-155">The unmanaged function passes the type back to the caller as a parameter of the callback function.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51b6c-156"><paramref name="value" /> パラメーターの値が <see cref="F:System.IntPtr.Zero" /> です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-156">The value of the <paramref name="value" /> parameter is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51b6c-157">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-157">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51b6c-158">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-158">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="gCHandle.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51b6c-159">現在の <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトの識別子を返します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-159">Returns an identifier for the current <see cref="T:System.Runtime.InteropServices.GCHandle" /> object.</span></span></summary>
        <returns><span data-ttu-id="51b6c-160">現在の <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトの識別子。</span><span class="sxs-lookup"><span data-stu-id="51b6c-160">An identifier for the current <see cref="T:System.Runtime.InteropServices.GCHandle" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-161">メソッド<xref:System.Runtime.InteropServices.GCHandle.GetHashCode%2A>は、 <xref:System.Runtime.InteropServices.GCHandle>構造体によってカプセル化された内部メモリハンドルの整数表現を返します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-161">The <xref:System.Runtime.InteropServices.GCHandle.GetHashCode%2A> method returns an integer representation of the internal memory handle encapsulated by the <xref:System.Runtime.InteropServices.GCHandle> structure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAllocated">
      <MemberSignature Language="C#" Value="public bool IsAllocated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAllocated" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.GCHandle.IsAllocated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAllocated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAllocated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAllocated : bool" Usage="System.Runtime.InteropServices.GCHandle.IsAllocated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51b6c-162">ハンドルが割り当てられているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-162">Gets a value indicating whether the handle is allocated.</span></span></summary>
        <value><span data-ttu-id="51b6c-163">ハンドルが割り当てられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-163"><see langword="true" /> if the handle is allocated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-164">ハンドルを使用して<xref:System.Runtime.InteropServices.GCHandleType.Weak> 、がまだ使用可能<xref:System.Runtime.InteropServices.GCHandle>かどうかを判断するときに、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-164">Use this property when using <xref:System.Runtime.InteropServices.GCHandleType.Weak> handles to determine if the <xref:System.Runtime.InteropServices.GCHandle> is still available.</span></span> <span data-ttu-id="51b6c-165">ガベージコレクターがオブジェクト<xref:System.Runtime.InteropServices.GCHandleType.Weak>を収集する場合でも、ファイナライザーでハンドルを再生ことができます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-165">When the garbage collector collects the object, the <xref:System.Runtime.InteropServices.GCHandleType.Weak> handle can still be resurrected in the finalizer.</span></span> <span data-ttu-id="51b6c-166">この場合、ターゲットオブジェクトが有効であっても、ハンドルは割り当てられません (ガベージコレクターがオブジェクトの収集を試行したときに失われます)。</span><span class="sxs-lookup"><span data-stu-id="51b6c-166">In that case, the handle is not allocated (it is lost when the garbage collector attempts to collect the object), even though the target object is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.GCHandleType" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Runtime.InteropServices.GCHandle a, valuetype System.Runtime.InteropServices.GCHandle b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As GCHandle, b As GCHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Runtime::InteropServices::GCHandle a, System::Runtime::InteropServices::GCHandle b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Runtime.InteropServices.GCHandle * System.Runtime.InteropServices.GCHandle -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Runtime.InteropServices.GCHandle" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="b" Type="System.Runtime.InteropServices.GCHandle" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="51b6c-167"><paramref name="b" /> パラメーターと比較する <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-167">A <see cref="T:System.Runtime.InteropServices.GCHandle" /> object to compare with the <paramref name="b" /> parameter.</span></span></param>
        <param name="b"><span data-ttu-id="51b6c-168"><paramref name="a" /> パラメーターと比較する <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-168">A <see cref="T:System.Runtime.InteropServices.GCHandle" /> object to compare with the <paramref name="a" /> parameter.</span></span></param>
        <summary><span data-ttu-id="51b6c-169"><see cref="T:System.Runtime.InteropServices.GCHandle" /> の 2 つのオブジェクトが等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-169">Returns a value indicating whether two <see cref="T:System.Runtime.InteropServices.GCHandle" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="51b6c-170"><paramref name="a" /> パラメーターと <paramref name="b" /> パラメーターが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-170"><see langword="true" /> if the <paramref name="a" /> and <paramref name="b" /> parameters are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="51b6c-171">この演算子の同等のメソッドは<xref:System.Runtime.InteropServices.GCHandle.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-171">The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51b6c-172"><see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトの値を別の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-172">Converts the value of a <see cref="T:System.Runtime.InteropServices.GCHandle" /> object to another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Runtime.InteropServices.GCHandle (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Runtime.InteropServices.GCHandle op_Explicit(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.op_Explicit(System.IntPtr)~System.Runtime.InteropServices.GCHandle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As IntPtr) As GCHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Runtime::InteropServices::GCHandle(IntPtr value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nativeint -&gt; System.Runtime.InteropServices.GCHandle" Usage="System.Runtime.InteropServices.GCHandle.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.GCHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b6c-173">変換を要求する対象のハンドルを示す <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-173">An <see cref="T:System.IntPtr" /> that indicates the handle for which the conversion is required.</span></span></param>
        <summary><span data-ttu-id="51b6c-174"><see cref="T:System.Runtime.InteropServices.GCHandle" /> は、内部整数表現を使用して格納されます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-174">A <see cref="T:System.Runtime.InteropServices.GCHandle" /> is stored using an internal integer representation.</span></span></summary>
        <returns><span data-ttu-id="51b6c-175">内部整数表現を使用して格納された <see cref="T:System.Runtime.InteropServices.GCHandle" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-175">The stored <see cref="T:System.Runtime.InteropServices.GCHandle" /> object using an internal integer representation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-176">このメソッドを使用すると、 <xref:System.Runtime.InteropServices.GCHandle>整数値からを取得できます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-176">This method allows you to retrieve a <xref:System.Runtime.InteropServices.GCHandle> from an integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51b6c-177">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-177">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51b6c-178">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-178">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandleType" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator IntPtr (System.Runtime.InteropServices.GCHandle value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(valuetype System.Runtime.InteropServices.GCHandle value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle)~System.IntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As GCHandle) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator IntPtr(System::Runtime::InteropServices::GCHandle value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.GCHandle -&gt; nativeint" Usage="System.Runtime.InteropServices.GCHandle.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.GCHandle" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b6c-179">整数を要求する対象の <see cref="T:System.Runtime.InteropServices.GCHandle" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-179">The <see cref="T:System.Runtime.InteropServices.GCHandle" /> for which the integer is required.</span></span></param>
        <summary><span data-ttu-id="51b6c-180"><see cref="T:System.Runtime.InteropServices.GCHandle" /> は、内部整数表現を使用して格納されます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-180">A <see cref="T:System.Runtime.InteropServices.GCHandle" /> is stored using an internal integer representation.</span></span></summary>
        <returns><span data-ttu-id="51b6c-181">整数値。</span><span class="sxs-lookup"><span data-stu-id="51b6c-181">The integer value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b6c-182">このメソッドは、 <xref:System.Runtime.InteropServices.GCHandle>から整数値を取得するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-182">This method can be used to retrieve the integer value from a <xref:System.Runtime.InteropServices.GCHandle>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51b6c-183">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-183">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51b6c-184">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-184">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandleType" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Runtime.InteropServices.GCHandle a, valuetype System.Runtime.InteropServices.GCHandle b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As GCHandle, b As GCHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Runtime::InteropServices::GCHandle a, System::Runtime::InteropServices::GCHandle b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Runtime.InteropServices.GCHandle * System.Runtime.InteropServices.GCHandle -&gt; bool" Usage="System.Runtime.InteropServices.GCHandle.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Runtime.InteropServices.GCHandle" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="b" Type="System.Runtime.InteropServices.GCHandle" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="51b6c-185"><paramref name="b" /> パラメーターと比較する <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-185">A <see cref="T:System.Runtime.InteropServices.GCHandle" /> object to compare with the <paramref name="b" /> parameter.</span></span></param>
        <param name="b"><span data-ttu-id="51b6c-186"><paramref name="a" /> パラメーターと比較する <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-186">A <see cref="T:System.Runtime.InteropServices.GCHandle" /> object to compare with the <paramref name="a" /> parameter.</span></span></param>
        <summary><span data-ttu-id="51b6c-187"><see cref="T:System.Runtime.InteropServices.GCHandle" /> の 2 つのオブジェクトが等しくないかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-187">Returns a value indicating whether two <see cref="T:System.Runtime.InteropServices.GCHandle" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="51b6c-188"><paramref name="a" /> パラメーターと <paramref name="b" /> パラメーターが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51b6c-188"><see langword="true" /> if the <paramref name="a" /> and <paramref name="b" /> parameters are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="51b6c-189">この演算子の同等のメソッドは<xref:System.Runtime.InteropServices.GCHandle.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-189">The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public object Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Target" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.GCHandle.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Target { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : obj with get, set" Usage="System.Runtime.InteropServices.GCHandle.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51b6c-190">ハンドルが表すオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-190">Gets or sets the object this handle represents.</span></span></summary>
        <value><span data-ttu-id="51b6c-191">ハンドルが表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-191">The object this handle represents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51b6c-192">次の例は、 `App` `GCHandle.Alloc`メソッドを使用してマネージオブジェクトへのハンドルを作成し、マネージオブジェクトが収集されないようにするクラスを示しています。</span><span class="sxs-lookup"><span data-stu-id="51b6c-192">The following example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected.</span></span> <span data-ttu-id="51b6c-193">`EnumWindows`メソッドを呼び出すと、デリゲートとマネージオブジェクト (両方ともマネージ型として宣言されてい<xref:System.IntPtr>ますが表示されません) が渡され、ハンドルがにキャストされます。</span><span class="sxs-lookup"><span data-stu-id="51b6c-193">A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr>.</span></span> <span data-ttu-id="51b6c-194">アンマネージ関数は、コールバック関数のパラメーターとして型を呼び出し元に渡します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-194">The unmanaged function passes the type back to the caller as a parameter of the callback function.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51b6c-195">ハンドルが解放されたか、または初期化されていません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-195">The handle was freed, or never initialized.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51b6c-196">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="51b6c-196">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51b6c-197">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="51b6c-197">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandleType" />
      </Docs>
    </Member>
    <Member MemberName="ToIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ToIntPtr (System.Runtime.InteropServices.GCHandle value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ToIntPtr(valuetype System.Runtime.InteropServices.GCHandle value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.GCHandle.ToIntPtr(System.Runtime.InteropServices.GCHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIntPtr (value As GCHandle) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ToIntPtr(System::Runtime::InteropServices::GCHandle value);" />
      <MemberSignature Language="F#" Value="static member ToIntPtr : System.Runtime.InteropServices.GCHandle -&gt; nativeint" Usage="System.Runtime.InteropServices.GCHandle.ToIntPtr value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.GCHandle" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b6c-198">内部整数表現の取得元の <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-198">A <see cref="T:System.Runtime.InteropServices.GCHandle" /> object to retrieve an internal integer representation from.</span></span></param>
        <summary><span data-ttu-id="51b6c-199"><see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクトの内部整数表現を返します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-199">Returns the internal integer representation of a <see cref="T:System.Runtime.InteropServices.GCHandle" /> object.</span></span></summary>
        <returns><span data-ttu-id="51b6c-200"><see cref="T:System.IntPtr" /> オブジェクトを表す <see cref="T:System.Runtime.InteropServices.GCHandle" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51b6c-200">An <see cref="T:System.IntPtr" /> object that represents a <see cref="T:System.Runtime.InteropServices.GCHandle" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51b6c-201">次のコード例は、 `App` `GCHandle.Alloc`メソッドを使用してマネージオブジェクトへのハンドルを作成するクラスを示しています。これにより、マネージオブジェクトが収集されなくなります。</span><span class="sxs-lookup"><span data-stu-id="51b6c-201">The following code example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected.</span></span> <span data-ttu-id="51b6c-202">メソッドの`EnumWindows`呼び出しは、デリゲートとマネージオブジェクト (両方ともマネージ型として宣言されていますが、表示されませ<xref:System.IntPtr>ん) を渡し、ハンドルをオブジェクトにキャストします。</span><span class="sxs-lookup"><span data-stu-id="51b6c-202">A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr> object.</span></span> <span data-ttu-id="51b6c-203">アンマネージ関数は、コールバック関数のパラメーターとして型を呼び出し元に渡します。</span><span class="sxs-lookup"><span data-stu-id="51b6c-203">The unmanaged function passes the type back to the caller as a parameter of the callback function.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>