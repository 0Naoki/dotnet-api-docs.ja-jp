<Type Name="_PropertyInfo" FullName="System.Runtime.InteropServices._PropertyInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5771a358d9035773443f80b2af1ab64497235271" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39966788" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _PropertyInfo" />
  <TypeSignature Language="F#" Value="type _PropertyInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8b51b-101">
        <see cref="T:System.Reflection.PropertyInfo" /> クラスのパブリック メンバーをアンマネージ コードに公開します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b51b-101">Exposes the public members of the <see cref="T:System.Reflection.PropertyInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-102">このインターフェイスは、アンマネージ コードからマネージ クラスにアクセスするためをマネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b51b-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-103">このインターフェイスの vtable 順序を保持する、<xref:System.Reflection.PropertyInfo?displayProperty=nameWithType>クラスのアンマネージ COM オブジェクトでアクセスできるメンバー。</span><span class="sxs-lookup"><span data-stu-id="8b51b-103">This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-104">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.PropertyInfo.Attributes" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-105">このプロパティの属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-105">The attributes of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-106">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-107"><xref:System.Reflection.PropertyInfo.Attributes%2A>プロパティは、このプロパティの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-107">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-108">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.PropertyInfo.CanRead" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanRead" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-109">このプロパティを読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-109">
              <see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-110">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-110">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-111"><xref:System.Reflection.PropertyInfo.CanRead%2A>プロパティがプロパティを読み取ることができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-111">The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-112">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.PropertyInfo.CanWrite" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-112">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanWrite" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-113">このプロパティに書き込むことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-113">
              <see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-114">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-114">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-115"><xref:System.Reflection.PropertyInfo.CanWrite%2A>プロパティに、プロパティが書き込み可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-115">The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-116">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.MemberInfo.DeclaringType" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-116">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-117">このメンバーを宣言するクラスの <see langword="Type" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-117">The <see langword="Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-118">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-118">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-119"><xref:System.Reflection.MemberInfo.DeclaringType%2A>プロパティは、このメンバーを宣言するクラスを取得します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-119">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_PropertyInfo.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="8b51b-120">現在の <see cref="T:System.Object" /> と比較する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-120">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-121">COM オブジェクトに、 <see cref="M:System.Object.Equals(System.Object)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-121">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-122">指定した <see langword="true" /> が現在の <see cref="T:System.Object" /> と等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-122">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-123">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-123">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-124"><xref:System.Object.Equals%2A>メソッドを判断するかどうか、指定した<xref:System.Object>値を現在は<xref:System.Object>します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-124">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-125">COM オブジェクトに、<see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-126">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-126">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-127"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>メソッドの配列を返す、`get`と`set`でこのプロパティのアクセサー。</span><span class="sxs-lookup"><span data-stu-id="8b51b-127">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> methods return an array of the `get` and `set` accessors on this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : unit -&gt; System.Reflection.MethodInfo[]" Usage="_PropertyInfo.GetAccessors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-128">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetAccessors" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-128">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-129">現在のインスタンスがリフレクションしているプロパティの、パブリックな <see langword="get" /> アクセサー、<see langword="set" /> アクセサー、およびその他のアクセサーをリフレクションする <see cref="T:System.Reflection.MethodInfo" /> オブジェクトの配列。アクセサーが見つからなかった場合、このメソッドは 0 要素の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-129">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-130">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-130">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-131"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>メソッドはパブリック リフレクションする要素の配列を返します`get`、 `set`、およびその他のアクセサー プロパティの現在のインスタンスによって反映されるのです。</span><span class="sxs-lookup"><span data-stu-id="8b51b-131">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="_PropertyInfo.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="8b51b-132">返された <see langword="true" /> 配列に非パブリック メソッドを含める場合は <see langword="MethodInfo" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-132">
              <see langword="true" /> to include non-public methods in the returned <see langword="MethodInfo" /> array; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-133">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-133">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-134">現在のインスタンスがリフレクションしているプロパティの <see cref="T:System.Reflection.MethodInfo" /> アクセサー、<see langword="get" /> アクセサー、およびその他のアクセサーをリフレクションする要素で構成される <see langword="set" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-134">An array of <see cref="T:System.Reflection.MethodInfo" /> objects whose elements reflect the <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance.</span>
          </span>
          <span data-ttu-id="8b51b-135">
            <paramref name="nonPublic" /> パラメーターが <see langword="true" /> の場合、この配列はパブリックと非パブリック両方の <see langword="get" /> アクセサー、<see langword="set" /> アクセサー、およびその他のアクセサーを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-135">If the <paramref name="nonPublic" /> parameter is <see langword="true" />, this array contains public and non-public <see langword="get" />, <see langword="set" />, and other accessors.</span>
          </span>
          <span data-ttu-id="8b51b-136">
            <paramref name="nonPublic" /> が <see langword="false" /> の場合、この配列はパブリックな <see langword="get" />、<see langword="set" />、およびその他のアクセサーだけを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-136">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" />, <see langword="set" />, and other accessors.</span>
          </span>
          <span data-ttu-id="8b51b-137">指定した表示設定でアクセサーが見つからなかった場合、このメソッドは 0 要素の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-137">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-138">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-139"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>メソッドはパブリック リフレクションする要素の配列を返しますと、指定すると、パブリックでない場合`get`、 `set`、およびその他のアクセサー プロパティの現在のインスタンスによって反映されるのです。</span><span class="sxs-lookup"><span data-stu-id="8b51b-139">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-140">COM オブジェクトに、<see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-140">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-141">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-141">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-142"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>メソッドは、このメンバーに適用されるすべての属性を返します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-142">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> methods return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_PropertyInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="8b51b-143">このメンバーの継承チェーンを検索して属性を見つける場合は true。それ以外の場合は false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-143">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-144">COM オブジェクトに、 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-144">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-145">すべてのカスタム属性を含む配列。定義されている属性がない場合は要素がゼロの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-145">An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-146">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-146">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-147"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>メソッドは、すべてのカスタム属性を含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-147">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_PropertyInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="8b51b-148">検索する属性の種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-148">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="8b51b-149">この型に代入可能な属性だけが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-149">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="8b51b-150">このメンバーの継承チェーンを検索して属性を見つける場合は true。それ以外の場合は false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-150">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-151">COM オブジェクトに、 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-151">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-152">このメンバーに適用されているカスタム属性の配列。適用されている属性がない場合は、要素がゼロ (0) の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-152">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-153">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-153">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-154"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>メソッドによって識別されるカスタム属性の配列を返します<xref:System.Type>します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-154">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-155">COM オブジェクトに、<see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-155">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-156">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-156">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-157"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>メソッドを返す、<xref:System.Reflection.MethodInfo>オブジェクトを表す、`get`このプロパティのアクセサー。</span><span class="sxs-lookup"><span data-stu-id="8b51b-157">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetGetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-158">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-158">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-159">このプロパティのパブリックな <see cref="T:System.Reflection.MethodInfo" /> アクセサーを表す <see langword="get" /> オブジェクト。<see langword="null" /> アクセサーが非パブリックまたは存在しない場合は <see langword="get" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-159">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-160">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-160">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-161"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>メソッドは、パブリックを返します`get`このプロパティのアクセサー。</span><span class="sxs-lookup"><span data-stu-id="8b51b-161">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="8b51b-162">非パブリックな <see langword="true" /> アクセサーを返す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-162">
              <see langword="true" /> to return a non-public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-163">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-163">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-164">
            <paramref name="nonPublic" /> パラメーターが <see langword="get" /> の場合は、このプロパティの <see langword="true" /> アクセサーを表す <see cref="T:System.Reflection.MethodInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-164">A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if the <paramref name="nonPublic" /> parameter is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="8b51b-165">また、<paramref name="nonPublic" /> が <see langword="null" /> で <see langword="false" /> アクセサーが非パブリックの場合、または <paramref name="nonPublic" /> が <see langword="get" /> でも <see langword="true" /> アクセサーがない場合は、<see langword="get" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-165">Or <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-166">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-166">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-167"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>パブリックまたは非パブリック メソッドが返されます`get`このプロパティのアクセサー。</span><span class="sxs-lookup"><span data-stu-id="8b51b-167">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_PropertyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-168">COM オブジェクトに、 <see cref="M:System.Object.GetHashCode" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-168">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-169">現在のインスタンスのハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-169">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-170">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-170">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-171"><xref:System.Object.GetHashCode%2A>メソッドは、特定の型のハッシュ関数として機能します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-171">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="8b51b-172"><xref:System.Object.GetHashCode%2A> ハッシュ テーブルなどのアルゴリズムとデータの構造体のハッシュでの使用に適しています。</span><span class="sxs-lookup"><span data-stu-id="8b51b-172"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames :  * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_PropertyInfo.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="8b51b-173">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-173">Reserved for future use.</span>
          </span>
          <span data-ttu-id="8b51b-174">IID_NULL にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-174">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="8b51b-175">割り当てる名前の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-175">An array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="8b51b-176">マッピングされる名前の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-176">The count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8b51b-177">名前を解釈するロケール コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-177">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="8b51b-178">名前に対応する識別子を受け取る呼び出し元によって割り当てられた配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-178">An array allocated by the caller that receives the identifiers corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-179">一連の名前を対応する一連のディスパッチ識別子に割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-179">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-180">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-180">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="8b51b-181">詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8b51b-181">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="_PropertyInfo.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-182">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-183">インデックスのパラメーターを格納している <see cref="T:System.Reflection.ParameterInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-183">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters for the indexes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-184">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-184">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-185"><xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>メソッド、プロパティのすべてのインデックス パラメーターの配列を返します</span><span class="sxs-lookup"><span data-stu-id="8b51b-185">The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-186">COM オブジェクトに、<see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-186">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-187">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-187">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-188"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>メソッドを返す、<xref:System.Reflection.MethodInfo>オブジェクトを表す、`set`このプロパティのアクセサー。</span><span class="sxs-lookup"><span data-stu-id="8b51b-188">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetSetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-189">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-189">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-190">
            <see cref="T:System.Reflection.MethodInfo" /> アクセサーがパブリックな場合は、このプロパティの <see langword="Set" /> メソッドを表す <see langword="set" /> オブジェクト。<see langword="null" /> アクセサーがパブリックではない場合は <see langword="set" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-190">The <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-191">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-191">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-192"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>メソッドは、パブリックを返します`set`このプロパティのアクセサー。</span><span class="sxs-lookup"><span data-stu-id="8b51b-192">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="8b51b-193">非パブリック アクセサーを返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-193">
              <see langword="true" /> to return a non-public accessor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-194">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-194">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-195">次の表に示した値のいずれか</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-195">One of the values in the following table.</span>
          </span>
          <span data-ttu-id="8b51b-196">
            <list type="table">
              <listheader>
                <term> 値  </term>
                <description> 意味  </description>
              </listheader>
              <item>
                <term> このプロパティの <see langword="Set" /> メソッドを表す <see cref="T:System.Reflection.MethodInfo" /> オブジェクト。</term>
                <description>
                  <see langword="set" /> アクセサーがパブリック。または、<paramref name="nonPublic" /> パラメーターが <see langword="true" /> で、<see langword="set" /> アクセサーが非パブリック。</description>
              </item>
              <item>
                <term>
                  <see langword="null" />
                </term>
                <description>
                  <paramref name="nonPublic" /> パラメーターが <see langword="true" /> で、プロパティが読み取り専用。または、<paramref name="nonPublic" /> パラメーターが <see langword="false" /> で、<see langword="set" /> アクセサーが非パブリック。または、<see langword="set" /> アクセサーがない。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-196">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property.  </term>
                  <description> The <see langword="set" /> accessor is public.  -or-  The <paramref name="nonPublic" /> parameter is <see langword="true" /> and the <see langword="set" /> accessor is non-public.  </description>
                </item>
                <item>
                  <term>
                    <see langword="null" />
                  </term>
                  <description> The <paramref name="nonPublic" /> parameter is <see langword="true" />, but the property is read-only.  -or-  The <paramref name="nonPublic" /> parameter is <see langword="false" /> and the <see langword="set" /> accessor is non-public.  -or-  There is no <see langword="set" /> accessor.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-197">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-197">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-198"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>メソッドが返す、`set`このプロパティのアクセサー。</span><span class="sxs-lookup"><span data-stu-id="8b51b-198">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_PropertyInfo.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-199">COM オブジェクトに、 <see cref="M:System.Object.GetType" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-199">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-200">
            <see cref="T:System.Type" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-200">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-201">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-201">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-202"><xref:System.Object.GetType%2A>メソッドは、現在のインスタンスの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-202">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_PropertyInfo.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="8b51b-203">返される型情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-203">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8b51b-204">型情報のロケール ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-204">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="8b51b-205">要求された型情報オブジェクトへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-205">A pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-206">オブジェクトの型情報を取得します。この情報はインターフェイスの型情報の取得に使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-206">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-207">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-207">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="8b51b-208">詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8b51b-208">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount :  -&gt; unit" Usage="_PropertyInfo.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="8b51b-209">このメソッドから制御が戻るときに、オブジェクトが提供する型情報インターフェイスの数を受け取る場所へのポインターが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-209">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="8b51b-210">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-210">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-211">オブジェクトが提供する型情報インターフェイスの数 (0 または 1) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-211">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-212">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-212">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="8b51b-213">詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8b51b-213">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-214">COM オブジェクトに、<see cref="Overload:System.Reflection.PropertyInfo.GetValue" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-214">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetValue" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-215">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-215">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-216"><xref:System.Reflection.PropertyInfo.GetValue%2A>メソッド、プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-216">The <xref:System.Reflection.PropertyInfo.GetValue%2A> methods return the value of the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * obj[] -&gt; obj" Usage="_PropertyInfo.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8b51b-217">プロパティ値が返されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-217">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8b51b-218">インデックス付きプロパティのインデックス値 (省略可能)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-218">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="8b51b-219">インデックス付きでないプロパティの場合は、この値を <see langword="null" /> にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-219">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-220">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-220">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-221">
            <paramref name="obj" /> パラメーターのプロパティ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-221">The property value for the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-222">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-222">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-223"><xref:System.Reflection.PropertyInfo.GetValue%2A>メソッドは、コンパイラを使用して、プロパティに関連付けられているリテラル値を返します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-223">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="_PropertyInfo.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8b51b-224">プロパティ値が返されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-224">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="8b51b-225">呼び出し属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-225">The invocation attribute.</span>
          </span>
          <span data-ttu-id="8b51b-226">
            <see langword="BindingFlags" /> のビット フラグ <see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" />、または <see langword="SetProperty" /> にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-226">This must be a bit flag from <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="8b51b-227">適切な呼び出し属性を指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-227">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="8b51b-228">静的メンバーを呼び出す場合は、<see langword="Static" /> の <see langword="BindingFlags" /> フラグを設定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-228">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8b51b-229">バインディング、引数型の強制変換、メンバーの呼び出し、およびリフレクションを使用した <see langword="MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-229">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="8b51b-230">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-230">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8b51b-231">インデックス付きプロパティのインデックス値 (省略可能)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-231">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="8b51b-232">インデックス付きでないプロパティの場合は、この値を <see langword="null" /> にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-232">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8b51b-233">ローカライズ対象リソースのカルチャを表す <see langword="CultureInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-233">The <see langword="CultureInfo" /> object that represents the culture for which the resource will be localized.</span>
          </span>
          <span data-ttu-id="8b51b-234">リソースがこのカルチャ用にローカライズされていない場合は、一致する対象を検索するために <see langword="CultureInfo.Parent" /> メソッドが連続して呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-234">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="8b51b-235">この値が <see langword="null" /> の場合は、<see langword="CultureInfo" /> プロパティから <see langword="CultureInfo.CurrentUICulture" /> が取得されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-235">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-236">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-236">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-237">
            <paramref name="obj" /> パラメーターのプロパティ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-237">The property value for the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-238">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-238">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-239"><xref:System.Reflection.PropertyInfo.GetValue%2A>メソッドは、指定したバインディング、インデックスを持つプロパティの値を返しますと<xref:System.Globalization.CultureInfo>します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-239">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 *  * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_PropertyInfo.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="8b51b-240">メンバーの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-240">An identifier of a member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="8b51b-241">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-241">Reserved for future use.</span>
          </span>
          <span data-ttu-id="8b51b-242">IID_NULL にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-242">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8b51b-243">引数を解釈する対象のロケール コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-243">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="8b51b-244">呼び出しのコンテキストを記述するフラグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-244">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="8b51b-245">引数の配列、名前付き引数の DISPID の配列、配列内の要素数のカウントを格納している構造体へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-245">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="8b51b-246">結果が格納される場所へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-246">A pointer to the location where the result will be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="8b51b-247">例外情報を格納する構造体へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-247">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="8b51b-248">エラーが存在する最初の引数のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-248">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-249">オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-249">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-250">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-250">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="8b51b-251">詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8b51b-251">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_PropertyInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="8b51b-252">カスタム属性が適用される <see cref="T:System.Type" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-252">The <see cref="T:System.Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="8b51b-253">このメンバーの継承チェーンを検索して属性を見つける場合は true。それ以外の場合は false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-253">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-254">COM オブジェクトに、 <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-254">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-255">このメンバーに <paramref name="attributeType" /> パラメーターのインスタンスが 1 つ以上適用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-255">
              <see langword="true" /> if one or more instances of the <paramref name="attributeType" /> parameter are applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-256">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-256">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-257"><xref:System.Reflection.MemberInfo.IsDefined%2A>メソッドを示しますか 1 つ以上のインスタンス、`attributeType`パラメーターは、このメンバーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-257">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-258">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.PropertyInfo.IsSpecialName" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-258">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-259">このプロパティに特別な名前が付けられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-259">
              <see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-260">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-260">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-261"><xref:System.Reflection.PropertyInfo.IsSpecialName%2A>プロパティは、プロパティは、特別な名前であるかどうかを示す値を設定します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-261">The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-262">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.PropertyInfo.MemberType" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-262">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-263">このメンバーがプロパティであることを示す <see cref="T:System.Reflection.MemberTypes" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-263">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating that this member is a property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-264">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-264">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-265"><xref:System.Reflection.PropertyInfo.MemberType%2A>プロパティの取得、<xref:System.Reflection.MemberTypes>このメンバーがプロパティであることを示す値。</span><span class="sxs-lookup"><span data-stu-id="8b51b-265">The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-266">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.MemberInfo.Name" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-266">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-267">このメンバーの名前を格納している <see cref="T:System.String" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-267">A <see cref="T:System.String" /> object containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-268">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-268">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-269"><xref:System.Reflection.MemberInfo.Name%2A>プロパティは、現在のメンバーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-269">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-270">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.PropertyInfo.PropertyType" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-270">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-271">このプロパティの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-271">The type of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-272">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-272">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-273"><xref:System.Reflection.PropertyInfo.PropertyType%2A>プロパティは、このプロパティの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-273">The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-274">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<see cref="P:System.Reflection.MemberInfo.ReflectedType" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-274">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b51b-275">この <see cref="T:System.Type" /> オブジェクトを取得するために使用した <see cref="T:System.Reflection.MemberInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-275">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-276">このプロパティは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-276">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-277"><xref:System.Reflection.MemberInfo.ReflectedType%2A>プロパティは、これを取得するために使用されたクラス オブジェクトを取得<xref:System.Reflection.MemberInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b51b-277">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-278">COM オブジェクトに、 <see cref="Overload:System.Reflection.PropertyInfo.SetValue" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-278">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.SetValue" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-279">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-279">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-280"><xref:System.Reflection.PropertyInfo.SetValue%2A>メソッドは、特定の値に指定したオブジェクトのプロパティ値を設定します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-280">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * obj[] -&gt; unit" Usage="_PropertyInfo.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8b51b-281">プロパティ値が設定されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-281">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8b51b-282">このプロパティの新しい値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-282">The new value for this property.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8b51b-283">インデックス付きプロパティのインデックス値 (省略可能)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-283">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="8b51b-284">インデックス付きでないプロパティの場合は、この値を <see langword="null" /> にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-284">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-285">COM オブジェクトに、 <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-285">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-286">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-286">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-287"><xref:System.Reflection.PropertyInfo.SetValue%2A>メソッドは、インデックスのプロパティの省略可能なインデックス値を持つプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-287">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="_PropertyInfo.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8b51b-288">プロパティ値が返されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-288">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8b51b-289">このプロパティの新しい値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-289">The new value for this property.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="8b51b-290">呼び出し属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-290">The invocation attribute.</span>
          </span>
          <span data-ttu-id="8b51b-291">
            <see cref="T:System.Reflection.BindingFlags" /> のビット フラグ <see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" />、または <see langword="SetProperty" /> にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-291">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="8b51b-292">適切な呼び出し属性を指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-292">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="8b51b-293">静的メンバーを呼び出す場合は、<see langword="Static" /> の <see langword="BindingFlags" /> フラグを設定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-293">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8b51b-294">バインディング、引数型の強制変換、メンバーの呼び出し、およびリフレクションを使用した <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-294">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="8b51b-295">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-295">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8b51b-296">インデックス付きプロパティのインデックス値 (省略可能)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-296">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="8b51b-297">インデックス付きでないプロパティの場合は、この値を <see langword="null" /> にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-297">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8b51b-298">ローカライズ対象リソースのカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-298">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture for which the resource will be localized.</span>
          </span>
          <span data-ttu-id="8b51b-299">リソースがこのカルチャ用にローカライズされていない場合は、一致する対象を検索するために <see langword="CultureInfo.Parent" /> メソッドが連続して呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-299">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="8b51b-300">この値が <see langword="null" /> の場合は、<see langword="CultureInfo" /> プロパティから <see langword="CultureInfo.CurrentUICulture" /> が取得されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-300">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b51b-301">COM オブジェクトに、 <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-301">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-302">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-302">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="8b51b-303"><xref:System.Reflection.FieldInfo.SetValue%2A>メソッドは、特定の値に指定したオブジェクトのプロパティ値を設定します。</span><span class="sxs-lookup"><span data-stu-id="8b51b-303">The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_PropertyInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b51b-304">COM オブジェクトに、 <see cref="M:System.Object.ToString" /> メソッドへのバージョンに依存しないアクセスが用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-304">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b51b-305">現在の <see cref="T:System.Object" /> を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b51b-305">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b51b-306">このメソッドはアンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="8b51b-306">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>