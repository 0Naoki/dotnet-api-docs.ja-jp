<Type Name="Marshal" FullName="System.Runtime.InteropServices.Marshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ecf699f6f6b4153a91f661ddcaf9bb989bb37c0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36538976" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Marshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Marshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshal" />
  <TypeSignature Language="VB.NET" Value="Public Class Marshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class Marshal abstract sealed" />
  <TypeSignature Language="F#" Value="type Marshal = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="24ee1-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="24ee1-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-102">`static`で定義されたメソッド、<xref:System.Runtime.InteropServices.Marshal>クラスがアンマネージ コードを操作するために不可欠です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-102">The `static` methods defined on the <xref:System.Runtime.InteropServices.Marshal> class are essential to working with unmanaged code.</span></span> <span data-ttu-id="24ee1-103">このクラスで定義されているほとんどのメソッドは通常、マネージとアンマネージのプログラミング モデルの間のブリッジを提供する開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-103">Most methods defined in this class are typically used by developers who want to provide a bridge between the managed and unmanaged programming models.</span></span> <span data-ttu-id="24ee1-104">たとえば、<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A>メソッドは、(、マネージ ヒープで) 指定した文字列から ANSI 文字をアンマネージ ヒープ内のバッファーにコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-104">For example, the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> method copies ANSI characters from a specified string (in the managed heap) to a buffer in the unmanaged heap.</span></span> <span data-ttu-id="24ee1-105">また、適切なサイズのコピー先のヒープを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-105">It also allocates the target heap of the right size.</span></span>  
  
 <span data-ttu-id="24ee1-106">共通言語ランタイムは、特定のマーシャ リングの機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-106">The common language runtime provides specific marshaling capabilities.</span></span> <span data-ttu-id="24ee1-107">マーシャ リングの動作の詳細については、「[相互運用マーシャ リング](~/docs/framework/interop/interop-marshaling.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-107">For details on marshaling behavior, see [Interop Marshaling](~/docs/framework/interop/interop-marshaling.md).</span></span>  
  
 <span data-ttu-id="24ee1-108">`Read`と`Write`内のメソッド、<xref:System.Runtime.InteropServices.Marshal>クラスは、アラインされたとアライメントされていないアクセスの両方をサポートします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-108">The `Read` and `Write` methods in the <xref:System.Runtime.InteropServices.Marshal> class support both aligned and unaligned access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-109">次の例で定義されているさまざまなメソッドを使用する方法を示しています、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-109">The following example shows how to use various methods defined by the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#1)]
 [!code-csharp[Marshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#1)]
 [!code-vb[Marshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRef">
      <MemberSignature Language="C#" Value="public static int AddRef (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddRef(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRef (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddRef(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member AddRef : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.AddRef pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="24ee1-110">The interface reference count to increment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-110">The interface reference count to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-111">Increments the reference count on the specified interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-111">Increments the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-113">共通言語ランタイムでは、このメソッドを直接使用する必要がないようにする COM オブジェクトの参照カウントを管理します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-113">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="24ee1-114">まれに、カスタム マーシャラーのテストなどでした方が、オブジェクトの有効期間を手動で操作するために必要です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-114">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="24ee1-115">呼び出した後<xref:System.Runtime.InteropServices.Marshal.AddRef%2A>などのメソッドを使用して、参照カウントをデクリメントする必要があります<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-115">After calling <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, you must decrement the reference count by using a method such as <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-116">戻り値に依存しない<xref:System.Runtime.InteropServices.Marshal.AddRef%2A>ことがありますいない安定したように、します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-116">Do not rely on the return value of <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, as it can sometimes be unstable.</span></span>  
  
 <span data-ttu-id="24ee1-117">呼び出すことができます<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>、 <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>、または<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>を取得する、<xref:System.IntPtr>を表す値、 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)インターフェイス ポインター。</span><span class="sxs-lookup"><span data-stu-id="24ee1-117">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer.</span></span> <span data-ttu-id="24ee1-118">これらのメソッドを使用することも、<xref:System.Runtime.InteropServices.Marshal.AddRef%2A>マネージ オブジェクトの COM 呼び出し可能ラッパーで表される COM インターフェイスを取得するマネージ オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-118">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> method on managed objects to obtain the COM interfaces represented by the managed object's COM callable wrapper.</span></span> <span data-ttu-id="24ee1-119">このラッパー型の詳細に慣れていない場合は、次を参照してください。 [COM 呼び出し可能ラッパー](~/docs/framework/interop/com-callable-wrapper.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-119">If you are not familiar with the details of this wrapper type, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-120">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-120">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-121">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-121">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr AllocCoTaskMem (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocCoTaskMem(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocCoTaskMem (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocCoTaskMem(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocCoTaskMem : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocCoTaskMem cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="24ee1-122">The size of the block of memory to be allocated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-122">The size of the block of memory to be allocated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-123">Allocates a block of memory of specified size from the COM task memory allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-123">Allocates a block of memory of specified size from the COM task memory allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-124">An integer representing the address of the block of memory allocated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-124">An integer representing the address of the block of memory allocated.</span>
          </span>
          <span data-ttu-id="24ee1-125">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-125">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> API のメソッドは、2 つのメモリ割り当ての 1 つ、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> is one of two memory allocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="24ee1-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType>は、その他)。返される最初のメモリのコンテンツが定義されていないと、割り当てられたメモリが要求されたバイト数より大きくすることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> is the other.) The initial memory content returned is undefined, and the allocated memory can be larger than the requested number of bytes.</span></span> <span data-ttu-id="24ee1-128">このメソッドは、COM を公開[CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626)関数で、COM タスク メモリ アロケーターと呼びます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-128">This method exposes the COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-129">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-129">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-130">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-130">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-131">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-131">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AllocHGlobal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-132">Allocates memory from the unmanaged memory of the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-132">Allocates memory from the unmanaged memory of the process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="24ee1-133">The required number of bytes in memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-133">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-134">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-134">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-135">A pointer to the newly allocated memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-135">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="24ee1-136">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-136">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 2 つのメモリ割り当て方法の 1 つ、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="24ee1-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType>は、その他)。このメソッドを公開、Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) Kernel32.dll から関数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="24ee1-139">ときに<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>呼び出し`LocalAlloc`、渡します、`LMEM_FIXED`原因で割り当てられたメモリの場所にロックされているかをフラグ。</span><span class="sxs-lookup"><span data-stu-id="24ee1-139">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="24ee1-140">また、割り当てられたメモリがないゼロで埋められます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-140">Also, the allocated memory is not zero-filled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-141">次の例では、<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-141">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> method.</span></span> <span data-ttu-id="24ee1-142">このコード例に示されている例の一部である、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-142">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-143">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-143">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-144">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-144">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-145">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-145">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="24ee1-146">The required number of bytes in memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-146">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-147">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-147">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-148">A pointer to the newly allocated memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-148">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="24ee1-149">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-149">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 2 つのメモリ割り当て方法の 1 つ、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="24ee1-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType>は、その他)。このメソッドを公開、Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) Kernel32.dll から関数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="24ee1-152">ときに<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>呼び出し`LocalAlloc`、渡します、`LMEM_FIXED`原因で割り当てられたメモリの場所にロックされているかをフラグ。</span><span class="sxs-lookup"><span data-stu-id="24ee1-152">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="24ee1-153">また、割り当てられたメモリがないゼロで埋められます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-153">Also, the allocated memory is not zero-filled.</span></span>  
  
 <span data-ttu-id="24ee1-154">コード例を参照してください<xref:System.Runtime.InteropServices.Marshal>と<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-154">For example code, see <xref:System.Runtime.InteropServices.Marshal> and <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-155">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-155">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-156">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-156">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-157">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-157">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AreComObjectsAvailableForCleanup">
      <MemberSignature Language="C#" Value="public static bool AreComObjectsAvailableForCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreComObjectsAvailableForCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreComObjectsAvailableForCleanup () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreComObjectsAvailableForCleanup();" />
      <MemberSignature Language="F#" Value="static member AreComObjectsAvailableForCleanup : unit -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-158">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-158">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-159">
            <see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-159">
              <see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-160">多数の詳細な依存関係グラフを使用してマネージ コードとネイティブ コード間の参照がある場合をクリーンアップするすべてのオブジェクトの長い時間がかかることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-160">If there are a lot of references between managed and native code with deep dependency graphs it can take a long time for all the objects to clean up.</span></span> <span data-ttu-id="24ee1-161">いくつかの基になる COM オブジェクトをさらに解放する Rcw を解放、GC が実行されるたびにします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-161">Each time a GC runs it will free up some number of RCWs, which will in turn release the underlying COM objects.</span></span> <span data-ttu-id="24ee1-162">COM オブジェクトは、管理対象の参照を解放し、複数のオブジェクトをクリーンアップできる、次回、プロセスを開始、GC の実行で再びです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-162">Those COM objects will then release their managed references and make more objects available for cleanup the next time a GC runs, which starts the process over again.</span></span>  
  
 <span data-ttu-id="24ee1-163"><xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A>メソッドは、アプリケーションの GC サイクルの数を決定するための手段を提供します。収集、GC です。WaitForPendingFinalizers をすべてクリーンアップするために発生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-163">The <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> method provides a way for the application to determine how many cycles of GC.Collect and GC.WaitForPendingFinalizers need to happen in order to clean everything up.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-164">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-164">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-165">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-165">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BindToMoniker">
      <MemberSignature Language="C#" Value="public static object BindToMoniker (string monikerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object BindToMoniker(string monikerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindToMoniker (monikerName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BindToMoniker(System::String ^ monikerName);" />
      <MemberSignature Language="F#" Value="static member BindToMoniker : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.BindToMoniker monikerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monikerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="monikerName">
          <span data-ttu-id="24ee1-166">The moniker corresponding to the desired interface pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-166">The moniker corresponding to the desired interface pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-167">Gets an interface pointer identified by the specified moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-167">Gets an interface pointer identified by the specified moniker.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-168">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-168">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span>
          </span>
          <span data-ttu-id="24ee1-169">A moniker is a name, and in this case, the moniker is defined by an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-169">A moniker is a name, and in this case, the moniker is defined by an interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> COM に公開`BindToMoniker`メソッドで、必要な任意の COM インターフェイスにキャスト可能なオブジェクトを生成します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> exposes the COM `BindToMoniker` method, which produces an object that you can cast to any COM interface you require.</span></span> <span data-ttu-id="24ee1-171">このメソッドは、同じ機能を提供します。、 `GetObject` Visual Basic 6.0 のメソッドと[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-171">This method provides the same functionality as the `GetObject` method in Visual Basic 6.0 and [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="24ee1-172">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-172">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-173">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-173">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-174">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-174">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BufferToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr BufferToBSTR (Array ptr, int slen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int BufferToBSTR(class System.Array ptr, int32 slen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BufferToBSTR(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BufferToBSTR (ptr As Array, slen As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr BufferToBSTR(Array ^ ptr, int slen);" />
      <MemberSignature Language="F#" Value="static member BufferToBSTR : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.BufferToBSTR (ptr, slen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Array" />
        <Parameter Name="slen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="slen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeWrapperHandleStrength">
      <MemberSignature Language="C#" Value="public static void ChangeWrapperHandleStrength (object otp, bool fIsWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeWrapperHandleStrength(object otp, bool fIsWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangeWrapperHandleStrength (otp As Object, fIsWeak As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangeWrapperHandleStrength(System::Object ^ otp, bool fIsWeak);" />
      <MemberSignature Language="F#" Value="static member ChangeWrapperHandleStrength : obj * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength (otp, fIsWeak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otp" Type="System.Object" />
        <Parameter Name="fIsWeak" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="otp">
          <span data-ttu-id="24ee1-175">The object whose CCW holds a reference counted handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-175">The object whose CCW holds a reference counted handle.</span>
          </span>
          <span data-ttu-id="24ee1-176">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-176">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span>
          </span>
        </param>
        <param name="fIsWeak">
          <span data-ttu-id="24ee1-177">
            <see langword="true" /> to change the strength of the handle on the <c>otp</c> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <c>otp</c> to be reference counted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-177">
              <see langword="true" /> to change the strength of the handle on the <c>otp</c> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <c>otp</c> to be reference counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-178">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-178">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> オブジェクト プール機能が使用され、ユーザー コードで、直接は呼び出すことはありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> is used for object pooling functionality and should never be called by user code directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-180">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-180">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-181">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CleanupUnusedObjectsInCurrentContext">
      <MemberSignature Language="C#" Value="public static void CleanupUnusedObjectsInCurrentContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CleanupUnusedObjectsInCurrentContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CleanupUnusedObjectsInCurrentContext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CleanupUnusedObjectsInCurrentContext();" />
      <MemberSignature Language="F#" Value="static member CleanupUnusedObjectsInCurrentContext : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-182">Notifies the runtime to clean up all [Runtime Callable Wrappers](~/docs/framework/interop/runtime-callable-wrapper.md) (RCWs) allocated in the current context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-182">Notifies the runtime to clean up all [Runtime Callable Wrappers](~/docs/framework/interop/runtime-callable-wrapper.md) (RCWs) allocated in the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-183">相互運用システムは、Rcw をクリーンアップするのにはその中にメッセージをポンプです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-183">The interop system pumps messages while it attempts to clean up RCWs.</span></span> <span data-ttu-id="24ee1-184">これにより、シングル スレッド アパートメント (STA) Rcw は、あまり頻繁にポンプしないアプリケーションを含むすべてのアプリケーションで処理がクリーンアップされします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-184">This ensures that cleanup for single-threaded apartment (STA) RCWs happens in all applications, including applications that do not pump often enough.</span></span> <span data-ttu-id="24ee1-185">ただし、適切に行うポンプする一部のアプリケーションはポンピングの発生しているに大きく影響します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-185">However, some applications that do pump appropriately are very sensitive to where pumping occurs.</span></span> <span data-ttu-id="24ee1-186">ときに相互運用システムは、これらのアプリケーションで、予期される場所でメッセージをポンプ、アプリケーションは、診断が困難な再入の問題を検出できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-186">When the interop system pumps messages in these applications, in places that are unexpected, , the application can encounter reentrancy issues that are difficult to diagnose.</span></span> <span data-ttu-id="24ee1-187">そのため、アプリケーションは、特定の STA および Rcw のクリーンアップのコントロールに自身のポンプを制御できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-187">Therefore, applications need to be able to control their own pumping for a particular STA and to control the clean-up of RCWs.</span></span>  
  
 <span data-ttu-id="24ee1-188">ただし、開発者がアプリケーションのスレッドのサブセットを制御する多くの場合のみ、したがってことはできませんのすべてのスレッドが適切にポンプです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-188">However, developers often only control a subset of the threads in their application and thus cannot ensure that all threads are pumping appropriately.</span></span>  
  
 <span data-ttu-id="24ee1-189">この問題を解決する方法は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-189">To solve this problem:</span></span>  
  
1.  <span data-ttu-id="24ee1-190">使用して、<xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType>メソッド Rcw、およびスレッドごとに、発生するメッセージ ポンプの自動クリーンアップをオフにします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-190">Use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> method to turn off automatic cleanup of RCWs, and the message pumping that occurs, on a per-thread basis.</span></span> <span data-ttu-id="24ee1-191">これにより、自動クリーンアップ、および対応するメッセージをポンプから除外する開発者です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-191">This allows developers to opt out of automatic clean-up, and the corresponding message pumping.</span></span>  
  
2.  <span data-ttu-id="24ee1-192">使用して、<xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A>を現在のコンテキストに割り当てられているすべての Rcw クリーンアップの実行時に通知します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-192">Use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> method to notify the runtime to clean up all RCWs that are allocated in the current context.</span></span> <span data-ttu-id="24ee1-193">この必携メソッドは、開発者は、ランタイムは、現在のコンテキストでクリーンアップを実行するときに正確に制御を使用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-193">This companion method allows developers to precisely control when the runtime performs cleanup in the current context.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-194">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-194">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-195">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-195">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-196">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-196">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (byte[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(unsigned int8[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Byte(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;System::Byte&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : byte[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-197">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-197">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-198">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-198">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-199">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-199">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-200">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-200">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-201">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-201">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-202">このメソッドを使用すると、1 次元のマネージ配列のサブセットをアンマネージ C スタイル配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-202">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-203">次の例では、アンマネージ メモリに配列をコピーを使用して、<xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29>過負荷、およびマネージ メモリに再度アンマネージ配列を使用して、コピー、<xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-203">The following example copies an array to unmanaged memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> overload, and then copies the unmanaged array back to managed memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-204">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-204">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-205">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-205">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-206">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-206">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-207">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-207">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (char[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(char[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Char(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;char&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : char[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-208">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-208">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-209">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-209">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-210">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-210">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-211">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-211">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-212">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-212">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-213">このメソッドを使用すると、1 次元のマネージ配列のサブセットをアンマネージ C スタイル配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-213">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-214">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-214">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-215">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-215">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-216">
            <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-216">
              <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-217">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-217">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-218">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (double[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Double(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;double&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : double[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-219">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-219">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-220">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-220">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-221">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-221">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-222">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-222">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-223">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-223">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-224">このメソッドを使用すると、1 次元のマネージ配列のサブセットをアンマネージ C スタイル配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-224">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-225">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-225">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-226">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-226">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-227">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-227">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-228">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-228">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-229">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-229">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (short[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int16[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Short(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;short&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int16[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-230">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-230">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-231">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-231">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-232">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-232">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-233">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-233">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-234">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-234">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-235">このメソッドを使用すると、1 次元のマネージ配列のサブセットをアンマネージ C スタイル配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-235">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-236">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-236">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-237">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-237">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-238">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-238">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-239">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-239">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-240">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-240">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (int[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Integer(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;int&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-241">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-241">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-242">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-242">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-243">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-243">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-244">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-244">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-245">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-245">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-246">このメソッドを使用すると、1 次元のマネージ配列のサブセットをアンマネージ C スタイル配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-246">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-247">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-247">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-248">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-248">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-249">
            <paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-249">
              <paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-250">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-250">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-251">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-251">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (long[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Long(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;long&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int64[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-252">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-252">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-253">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-253">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-254">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-254">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-255">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-255">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-256">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-256">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-257">このメソッドを使用すると、1 次元のマネージ配列のサブセットをアンマネージ C スタイル配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-257">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-258">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-258">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-259">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-259">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-260">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-260">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-261">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-261">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-262">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-262">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, byte[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, unsigned int8[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Byte(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;System::Byte&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * byte[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-263">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-263">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-264">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-264">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-265">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-265">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-266">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-266">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-267">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-267">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-268">アンマネージ、C スタイルの配列にが含まれていませんが原因で境界情報には、`startIndex`と`length`パラメーターを検証するからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-268">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="24ee1-269">対応するために、アンマネージ データ、`source`パラメーターがその有用性に関係なく、マネージ配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-269">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="24ee1-270">このメソッドを呼び出す前に、適切なサイズでマネージ配列を初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-270">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-271">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-271">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-272">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-272">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-273">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-273">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-274">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-274">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, char[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, char[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;char&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * char[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-275">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-275">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-276">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-276">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-277">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-277">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-278">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-278">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-279">Copies data from an unmanaged memory pointer to a managed character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-279">Copies data from an unmanaged memory pointer to a managed character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-280">アンマネージ、C スタイルの配列にが含まれていませんが原因で境界情報には、`startIndex`と`length`パラメーターを検証するからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-280">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="24ee1-281">対応するために、アンマネージ データ、`source`パラメーターがその有用性に関係なく、マネージ配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-281">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="24ee1-282">このメソッドを呼び出す前に、適切なサイズでマネージ配列を初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-282">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-283">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-283">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-284">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-284">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-285">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-285">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-286">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-286">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, double[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Double(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;double&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * double[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-287">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-287">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-288">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-288">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-289">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-289">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-290">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-290">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-291">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-291">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-292">アンマネージ、C スタイルの配列にが含まれていませんが原因で境界情報には、`startIndex`と`length`パラメーターを検証するからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-292">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="24ee1-293">対応するために、アンマネージ データ、`source`パラメーターがその有用性に関係なく、マネージ配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-293">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="24ee1-294">このメソッドを呼び出す前に、適切なサイズでマネージ配列を初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-294">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-295">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-295">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-296">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-296">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-297">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-297">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-298">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-298">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, short[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int16[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Short(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;short&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int16[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-299">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-299">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-300">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-300">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-301">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-301">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-302">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-302">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-303">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-303">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-304">アンマネージ、C スタイルの配列にが含まれていませんが原因で境界情報には、`startIndex`と`length`パラメーターを検証するからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-304">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="24ee1-305">対応するために、アンマネージ データ、`source`パラメーターがその有用性に関係なく、マネージ配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-305">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="24ee1-306">このメソッドを呼び出す前に、適切なサイズでマネージ配列を初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-306">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-307">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-307">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-308">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-308">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-309">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-309">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-310">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-310">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, int[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Integer(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;int&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-311">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-311">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-312">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-312">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-313">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-313">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-314">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-314">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-315">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-315">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-316">アンマネージ、C スタイルの配列にが含まれていませんが原因で境界情報には、`startIndex`と`length`パラメーターを検証するからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-316">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="24ee1-317">対応するために、アンマネージ データ、`source`パラメーターがその有用性に関係なく、マネージ配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-317">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="24ee1-318">このメソッドを呼び出す前に、適切なサイズでマネージ配列を初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-318">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-319">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-319">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-320">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-320">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-321">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-321">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-322">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-322">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, long[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Long(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;long&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int64[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-323">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-323">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-324">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-324">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-325">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-325">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-326">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-326">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-327">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-327">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-328">アンマネージ、C スタイルの配列にが含まれていませんが原因で境界情報には、`startIndex`と`length`パラメーターを検証するからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-328">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="24ee1-329">対応するために、アンマネージ データ、`source`パラメーターがその有用性に関係なく、マネージ配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-329">Thus, the unmanaged data corresponding to the`source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="24ee1-330">このメソッドを呼び出す前に、適切なサイズでマネージ配列を初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-330">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-331">次の例では、アンマネージ メモリに配列をコピーし、マネージ メモリに再度アンマネージ配列をコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-331">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-332">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-332">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-333">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-333">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-334">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-334">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, IntPtr[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, native int[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As IntPtr(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;IntPtr&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * nativeint[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-335">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-335">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-336">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-336">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-337">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-337">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-338">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-338">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-339">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-339">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-340">アンマネージ、C スタイルの配列にが含まれていませんが原因で境界情報には、`startIndex`と`length`パラメーターを検証するからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-340">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="24ee1-341">対応するアンマネージ データ、そのため、`source`パラメーターがその有用性に関係なく、マネージ配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-341">Therefore, the unmanaged data that corresponds to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="24ee1-342">呼び出しの前に、適切なサイズでマネージ配列を初期化する必要があります、<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-342">You must initialize the managed array with the appropriate size before calling the <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-343">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-343">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-344">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-344">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-345">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-345">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, float[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Single(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;float&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * single[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-346">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-346">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-347">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-347">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-348">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-348">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-349">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-349">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-350">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-350">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-351">アンマネージ、C スタイルの配列にが含まれていませんが原因で境界情報には、`startIndex`と`length`パラメーターを検証するからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-351">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="24ee1-352">対応するために、アンマネージ データ、`source`パラメーターがその有用性に関係なく、マネージ配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-352">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="24ee1-353">このメソッドを呼び出す前に、適切なサイズでマネージ配列を初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-353">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-354">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-354">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-355">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-355">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-356">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-356">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;IntPtr&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-357">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-357">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-358">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-358">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-359">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-359">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-360">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-360">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-361">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-361">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-362">このメソッドを使用するには管理されている 1 次元のサブセットをコピーする<xref:System.IntPtr>アンマネージ C スタイル配列への配列。</span><span class="sxs-lookup"><span data-stu-id="24ee1-362">You can use this method to copy a subset of a one-dimensional managed <xref:System.IntPtr> array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-363">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-363">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-364">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-364">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-365">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-365">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (float[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Single(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;float&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : single[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="24ee1-366">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-366">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="24ee1-367">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-367">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="24ee1-368">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-368">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="24ee1-369">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-369">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-370">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-370">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-371">このメソッドを使用すると、1 次元のマネージ配列のサブセットをアンマネージ C スタイル配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-371">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-372">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-372">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-373">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-373">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-374">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-374">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-375">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-375">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject (IntPtr pOuter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject(native int pOuter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject (pOuter As IntPtr, o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pOuter">
          <span data-ttu-id="24ee1-376">The outer <see langword="IUnknown" /> pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-376">The outer <see langword="IUnknown" /> pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="24ee1-377">An object to aggregate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-377">An object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-378">Aggregates a managed object with the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-378">Aggregates a managed object with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-379">The inner <see langword="IUnknown" /> pointer of the managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-379">The inner <see langword="IUnknown" /> pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-380"><xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A>メソッドは、指定した外部ポインターにマネージ オブジェクトの内部マネージ ポインターを集約し、内部を返します[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)マネージ オブジェクトのポインター。</span><span class="sxs-lookup"><span data-stu-id="24ee1-380">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object with the specified outer pointer, and then returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-381">
            <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-381">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-382">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-382">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-383">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-383">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject&lt;T&gt; (IntPtr pOuter, T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject&lt;T&gt;(native int pOuter, !!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject(Of T) (pOuter As IntPtr, o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, T o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-384">管理対象オブジェクトの種類の集計にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-384">The type of the managed object to aggregate.</span>
          </span>
        </typeparam>
        <param name="pOuter">
          <span data-ttu-id="24ee1-385">The outer [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-385">The outer [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="24ee1-386">The managed object to aggregate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-386">The managed object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-387">[Supported in the .NET Framework 4.5.1 and later versions]  Aggregates a managed object of the specified type with the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-387">[Supported in the .NET Framework 4.5.1 and later versions]  Aggregates a managed object of the specified type with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-388">The inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-388">The inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-389"><xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A>メソッドは、指定した外部ポインターに指定した型のマネージ オブジェクトの内部マネージ ポインターを集約し、内部が返されます[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)マネージ オブジェクトのポインター。</span><span class="sxs-lookup"><span data-stu-id="24ee1-389">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object of a specified type with the specified outer pointer, and returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-390">
            <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-390">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-391">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-391">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-392">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-392">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType">
      <MemberSignature Language="C#" Value="public static object CreateWrapperOfType (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWrapperOfType(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType (o As Object, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWrapperOfType(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : obj * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-393">The object to be wrapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-393">The object to be wrapped.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="24ee1-394">The type of wrapper to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-394">The type of wrapper to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-395">Wraps the specified COM object in an object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-395">Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-396">The newly wrapped object that is an instance of the desired type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-396">The newly wrapped object that is an instance of the desired type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-397"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> 型変換を行います COM クラス、通常、ベース`__ComObject`別の COM クラス型への型。</span><span class="sxs-lookup"><span data-stu-id="24ee1-397"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> converts one COM class type, typically the base `__ComObject` type, to another COM class type.</span></span> <span data-ttu-id="24ee1-398">入力の COM オブジェクトは、パラメーターによって表される`o`は、[ランタイム呼び出し可能ラッパー](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW)。</span><span class="sxs-lookup"><span data-stu-id="24ee1-398">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="24ee1-399">両方の`t`と`o`パラメーターは属性が設定されたシグネチャを持つクラスである必要があります<xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-399">Both the `t` and `o` parameters must be classes whose signatures are attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-400">[Tlbimp.exe (タイプ ライブラリ インポーター)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)ツールでは、タイプ ライブラリをインポートするときのこの属性を適用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-400">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="24ee1-401">ソース コードで、RCW を手動で作成する場合を元の COM を示すために元のコクラスを表すマネージ シグネチャにこの属性を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-401">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="24ee1-402">Tlbimp.exe でインポート COM[コクラス](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582)マネージ クラスとインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-402">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="24ee1-403">コクラスのインターフェイスは元のコクラスと同じ名前を持ち、マネージ クラスには、元のコクラスの名前"Class"を追加します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-403">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="24ee1-404">たとえば、コクラスと呼ばれる`MyCoclass`というコクラス インターフェイスになります`MyCoclass`、マネージ クラスと呼ばれます`MyCoclassClass`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-404">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="24ee1-405">`t` 、クラス、インターフェイスではなくをマネージ クラスを指定することを確認する必要があります (`MyCoclassClass`) と、コクラス インターフェイスではありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-405">Since `t` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the coclass interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24ee1-406">COM オブジェクトの新しい RCW インスタンスでラップするので、入力の id を紛失した、 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)元 RCW によって公開されているポインター。</span><span class="sxs-lookup"><span data-stu-id="24ee1-406">You lose the identity of the input COM object because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-407">
            <paramref name="t" /> must derive from <see langword="__ComObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-407">
              <paramref name="t" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="24ee1-408">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-408">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-409">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-409">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24ee1-410">
            <paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-410">
              <paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-411">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-411">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-412">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-412">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType&lt;T,TWrapper&gt;">
      <MemberSignature Language="C#" Value="public static TWrapper CreateWrapperOfType&lt;T,TWrapper&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TWrapper CreateWrapperOfType&lt;T, TWrapper&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType(Of T, TWrapper) (o As T) As TWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TWrapper&gt;&#xA; static TWrapper CreateWrapperOfType(T o);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : 'T -&gt; 'Wrapper" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TWrapper</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TWrapper" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-413">ラップするオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-413">The type of object to wrap.</span>
          </span>
        </typeparam>
        <typeparam name="TWrapper">
          <span data-ttu-id="24ee1-414">返すオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-414">The type of object to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="24ee1-415">The object to be wrapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-415">The object to be wrapped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-416">[Supported in the .NET Framework 4.5.1 and later versions]  Wraps the specified COM object in an object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-416">[Supported in the .NET Framework 4.5.1 and later versions]  Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-417">The newly wrapped object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-417">The newly wrapped object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-418"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> 型の COM オブジェクトに変換します`T`を`TWrapper`COM クラスの型。</span><span class="sxs-lookup"><span data-stu-id="24ee1-418"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> converts a COM object of type `T` to the `TWrapper` COM class type.</span></span> <span data-ttu-id="24ee1-419">入力の COM オブジェクトは、パラメーターによって表される`o`は、[ランタイム呼び出し可能ラッパー](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW)。</span><span class="sxs-lookup"><span data-stu-id="24ee1-419">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="24ee1-420">両方の`T`ジェネリック型パラメーターと`o`パラメーターは属性が設定されたシグネチャを持つクラスである必要があります、<xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="24ee1-420">Both the `T` generic type parameter and the `o` parameter must be classes whose signatures are attributed with the <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> attribute.</span></span> <span data-ttu-id="24ee1-421">[Tlbimp.exe (タイプ ライブラリ インポーター)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)ツールでは、タイプ ライブラリをインポートするときのこの属性を適用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-421">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="24ee1-422">ソース コードで、RCW を手動で作成する場合を元の COM を示すために元のコクラスを表すマネージ シグネチャにこの属性を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-422">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="24ee1-423">Tlbimp.exe でインポート COM[コクラス](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582)マネージ クラスとインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-423">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="24ee1-424">コクラスのインターフェイスは元のコクラスと同じ名前を持ち、マネージ クラスには、元のコクラスの名前"Class"を追加します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-424">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="24ee1-425">たとえば、コクラスと呼ばれる`MyCoclass`というコクラス インターフェイスになります`MyCoclass`、マネージ クラスと呼ばれます`MyCoclassClass`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-425">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="24ee1-426">`T` 、クラス、インターフェイスではなくをマネージ クラスを指定することを確認する必要があります (`MyCoclassClass`) および not、`coclass`インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-426">Because`T` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the `coclass` interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24ee1-427">新しい RCW インスタンスでラップするので、入力の COM オブジェクトの id を紛失した、 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)元 RCW によって公開されているポインター。</span><span class="sxs-lookup"><span data-stu-id="24ee1-427">You lose the identity of the input COM object, because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-428">
            <typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-428">
              <typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="24ee1-429">-or-  <typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-429">-or-  <typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24ee1-430">
            <paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-430">
              <paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-431">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-431">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-432">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-432">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure">
      <MemberSignature Language="C#" Value="public static void DestroyStructure (IntPtr ptr, Type structuretype);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure(native int ptr, class System.Type structuretype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure (ptr As IntPtr, structuretype As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DestroyStructure(IntPtr ptr, Type ^ structuretype);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint * Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure (ptr, structuretype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structuretype" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-433">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-433">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structuretype">
          <span data-ttu-id="24ee1-434">Type of a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-434">Type of a formatted class.</span>
          </span>
          <span data-ttu-id="24ee1-435">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-435">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-436">Frees all substructures that the specified unmanaged memory block points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-436">Frees all substructures that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-437">このメソッドを使用すると、アンマネージ構造体の文字列などの参照型のフィールドを解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-437">You can use this method to free reference-type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="24ee1-438">そのフィールドとは異なり、構造体は値型または参照型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-438">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="24ee1-439">値型のフィールド (すべて blittable) を含む値型の構造体には、メモリを解放する必要があります参照がありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-439">Value-type structures that contain value-type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="24ee1-440"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType>メソッドでは、このメソッドを使用して、構造体によって占有されていたメモリを再利用する場合は、メモリ リークを防止します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-440">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="24ee1-441"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> COM 呼び出し[SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633)関数をさらに、割り当てられた文字列を解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-441"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 <span data-ttu-id="24ee1-442">加え<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>、<xref:System.Runtime.InteropServices.Marshal>クラスは他の 2 つのメモリの解放メソッドを提供:<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>と<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-442">In addition to <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-443">
            <paramref name="structureType" /> has an automatic layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-443">
              <paramref name="structureType" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="24ee1-444">Use sequential or explicit instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-444">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-445">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-445">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-446">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-446">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void DestroyStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure(Of T) (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void DestroyStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-447">形式構造体の型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-447">The type of the formatted structure.</span>
          </span>
          <span data-ttu-id="24ee1-448">これは、 <c> ptr </c> パラメーター内のバッファーを削除するために必要なレイアウト情報を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-448">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="24ee1-449">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-449">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-450">[Supported in the .NET Framework 4.5.1 and later versions]  Frees all substructures of a specified type that the specified unmanaged memory block points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-450">[Supported in the .NET Framework 4.5.1 and later versions]  Frees all substructures of a specified type that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-451">このメソッドを使用すると、アンマネージ構造体の文字列などの参照型のフィールドを解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-451">You can use this method to free reference type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="24ee1-452">そのフィールドとは異なり、構造体は値型または参照型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-452">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="24ee1-453">値型のフィールド (すべて blittable) が含まれている値型の構造体には、メモリを解放する必要があります参照がありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-453">Value type structures that contain value type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="24ee1-454"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType>メソッドでは、このメソッドを使用して、構造体によって占有されていたメモリを再利用する場合は、メモリ リークを防止します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-454">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="24ee1-455"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> COM 呼び出し[SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633)関数をさらに、割り当てられた文字列を解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-455"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-456">
            <typeparamref name="T" /> has an automatic layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-456">
              <typeparamref name="T" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="24ee1-457">Use sequential or explicit instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-457">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-458">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-458">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-459">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-459">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FinalReleaseComObject">
      <MemberSignature Language="C#" Value="public static int FinalReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FinalReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FinalReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FinalReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member FinalReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.FinalReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-460">The RCW to be released.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-460">The RCW to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-461">Releases all references to a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) by setting its reference count to 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-461">Releases all references to a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) by setting its reference count to 0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-462">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-462">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-463"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A>メソッドが COM オブジェクトへのマネージ参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-463">The <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method releases the managed reference to a COM object.</span></span> <span data-ttu-id="24ee1-464">呼び出すことと同じではこのメソッドを呼び出す、 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> 0 (ゼロ) が返されるまでループ内のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-464">Calling this method is equivalent to calling the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until it returns 0 (zero).</span></span>  
  
 <span data-ttu-id="24ee1-465">COM オブジェクトの参照カウントには、0 になると、COM オブジェクトは通常解放されますが、この COM オブジェクトの実装に依存およびランタイムの制御を超えています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-465">When the reference count on the COM object becomes 0, the COM object is usually freed, although this depends on the COM object's implementation and is beyond the control of the runtime.</span></span> <span data-ttu-id="24ee1-466">ただし、RCW がまだ存在、ガベージ コレクションを待機しています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-466">However, the RCW can still exist, waiting to be garbage-collected.</span></span>  
  
 <span data-ttu-id="24ee1-467">基になる RCW から分割された後に、COM オブジェクトを使用できません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-467">The COM object cannot be used after it has been separated from its underlying RCW.</span></span> <span data-ttu-id="24ee1-468">参照カウントが 0 になった後に、RCW でメソッドを呼び出すしようとする場合、<xref:System.Runtime.InteropServices.InvalidComObjectException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-468">If you try to call a method on the RCW after its reference count becomes 0, a <xref:System.Runtime.InteropServices.InvalidComObjectException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-469">
            <paramref name="o" /> is not a valid COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-469">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-470">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-470">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-471">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-471">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-472">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-472">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="FreeBSTR">
      <MemberSignature Language="C#" Value="public static void FreeBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeBSTR (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-473">The address of the BSTR to be freed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-473">The address of the BSTR to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-474">Frees a <see langword="BSTR" /> using the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-474">Frees a <see langword="BSTR" /> using the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-475">同様に<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>と<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>メモリの割り当てを解除するこのメソッドを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-475">Like <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, you can use this method to deallocate memory.</span></span> <span data-ttu-id="24ee1-476"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> COM 呼び出し[SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633)関数は、次のいずれか、アンマネージによって割り当てられたメモリを解放する: `SysAllocString`、 `SysAllocStringByteLen`、 `SysAllocStringLen`、 `SysReAllocString`、`SysReAllocStringLen`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-476"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function, which frees memory allocated by any of the following unmanaged methods: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span></span> <span data-ttu-id="24ee1-477">プラットフォーム呼び出しなど、アンマネージ メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-477">You can call unmanaged methods such as these with platform invoke.</span></span> <span data-ttu-id="24ee1-478">詳細については、「[アンマネージ DLL 関数の使用](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-478">For details, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-479">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-479">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-480">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-480">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeCoTaskMem">
      <MemberSignature Language="C#" Value="public static void FreeCoTaskMem (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeCoTaskMem(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeCoTaskMem (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeCoTaskMem(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeCoTaskMem : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeCoTaskMem ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-481">The address of the memory to be freed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-481">The address of the memory to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-482">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-482">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-483">使用することができます<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>によって割り当てられたメモリを解放する<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>、 <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>、または該当するショートカットは、アンマネージ メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-483">You can use <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> to free any memory allocated by <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, or any equivalent unmanaged method.</span></span> <span data-ttu-id="24ee1-484">場合、`ptr`パラメーターは`null`メソッドは、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-484">If the `ptr` parameter is `null`, the method does nothing.</span></span>  
  
 <span data-ttu-id="24ee1-485"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> COM に公開[CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638)関数で、不要になったメモリを使用できるように、すべてのバイトを解放する、`ptr`パラメーターが指し示すです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-485"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> exposes the COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638) function, which frees all bytes so that you can no longer use the memory that the `ptr` parameter points to.</span></span>  
  
 <span data-ttu-id="24ee1-486">加え<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>、<xref:System.Runtime.InteropServices.Marshal>クラスは他の 2 つのメモリの解放メソッドを提供:<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>と<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-486">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-487">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-487">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-488">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-488">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeHGlobal">
      <MemberSignature Language="C#" Value="public static void FreeHGlobal (IntPtr hglobal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeHGlobal(native int hglobal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeHGlobal (hglobal As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeHGlobal(IntPtr hglobal);" />
      <MemberSignature Language="F#" Value="static member FreeHGlobal : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeHGlobal hglobal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hglobal" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hglobal">
          <span data-ttu-id="24ee1-489">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-489">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-490">Frees memory previously allocated from the unmanaged memory of the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-490">Frees memory previously allocated from the unmanaged memory of the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-491">使用することができます<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>によって割り当てられたグローバル ヒープからメモリを解放する<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>、 <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>、または該当するショートカットは、アンマネージ API のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-491">You can use <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> to free any memory from the global heap allocated by <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, or any equivalent unmanaged API method.</span></span> <span data-ttu-id="24ee1-492">場合、`hglobal`パラメーターは<xref:System.IntPtr.Zero?displayProperty=nameWithType>メソッドは、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-492">If the `hglobal` parameter is <xref:System.IntPtr.Zero?displayProperty=nameWithType> the method does nothing.</span></span>  
  
 <span data-ttu-id="24ee1-493"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> 公開、 [LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640)が不要になったメモリを使用できるように、すべてのバイトを解放 Kernel32.DLL から関数を指す`hglobal`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-493"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> exposes the [LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640) function from Kernel32.DLL, which frees all bytes so that you can no longer use the memory pointed to by `hglobal`.</span></span>  
  
 <span data-ttu-id="24ee1-494">加え<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>、<xref:System.Runtime.InteropServices.Marshal>クラスは、その他の 2 つのメモリの解放 API メソッドを提供します。<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>と<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-494">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation API methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-495">次の例では、<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-495">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> method.</span></span> <span data-ttu-id="24ee1-496">このコード例に示されている例の一部である、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-496">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 <span data-ttu-id="24ee1-497">次の例は、管理対象のコンテンツを変換する方法を示します<xref:System.String>クラスのアンマネージ メモリにし、完了時に、アンマネージ メモリの破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-497">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-498">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-498">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-499">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-499">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGuidForType">
      <MemberSignature Language="C#" Value="public static Guid GenerateGuidForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GenerateGuidForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GenerateGuidForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateGuidForType : Type -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GenerateGuidForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="24ee1-500">The type to generate a GUID for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-500">The type to generate a GUID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-501">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-501">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-502">An identifier for the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-502">An identifier for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-503">型では、メタデータに GUID が含まれる場合が返されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-503">If the type has a GUID in the metadata, it is returned.</span></span> <span data-ttu-id="24ee1-504">それ以外の場合、GUID は自動的に生成します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-504">Otherwise, a GUID is automatically generated.</span></span> <span data-ttu-id="24ee1-505">このメソッドを使用すると、プログラムによって、COM 参照不可能な型を含む、任意のマネージ型の COM の GUID を確認します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-505">You can use this method to programmatically determine the COM GUID for any managed type, including COM-invisible types.</span></span> <span data-ttu-id="24ee1-506">クラス インターフェイスは、マネージ型に対応していない唯一の例外です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-506">Class interfaces are the only exception because they do not correspond to a managed type.</span></span> <span data-ttu-id="24ee1-507"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> 同じ機能を提供、<xref:System.Type.GUID%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-507"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> provides the same functionality as the <xref:System.Type.GUID%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-508">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-508">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-509">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-509">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Type.GUID" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProgIdForType">
      <MemberSignature Language="C#" Value="public static string GenerateProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateProgIdForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateProgIdForType : Type -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GenerateProgIdForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="24ee1-510">The type to get a ProgID for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-510">The type to get a ProgID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-511">Returns a programmatic identifier (ProgID) for the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-511">Returns a programmatic identifier (ProgID) for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-512">The ProgID of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-512">The ProgID of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-513">型では、メタデータに ProgID が含まれる場合は、その ProgID が返されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-513">If the type has a ProgID in the metadata, that ProgID is returned.</span></span> <span data-ttu-id="24ee1-514">それ以外の場合、型の完全修飾名に基づく ProgID が生成されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-514">Otherwise, a ProgID is generated based on the fully qualified name of the type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-515">The <paramref name="type" /> parameter is not a class that can be create by COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-515">The <paramref name="type" /> parameter is not a class that can be create by COM.</span>
          </span>
          <span data-ttu-id="24ee1-516">The class must be public, have a public default constructor, and be COM visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-516">The class must be public, have a public default constructor, and be COM visible.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-517">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-517">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-518">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-518">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-519">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-519">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveObject">
      <MemberSignature Language="C#" Value="public static object GetActiveObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetActiveObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetActiveObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="static member GetActiveObject : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetActiveObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">
          <span data-ttu-id="24ee1-520">The programmatic identifier (ProgID) of the object that was requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-520">The programmatic identifier (ProgID) of the object that was requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-521">Obtains a running instance of the specified object from the running object table (ROT).</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-521">Obtains a running instance of the specified object from the running object table (ROT).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-522">The object that was requested; otherwise <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-522">The object that was requested; otherwise <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-523">You can cast this object to any COM interface that it supports.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-523">You can cast this object to any COM interface that it supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-524"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> COM に公開[GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) OLEAUT32 から関数。DLL です。ただし、後者が必要ですが、クラス識別子 (CLSID) プログラム識別子ではなく (`ProgID`) このメソッドで想定されています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-524"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> exposes the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function from OLEAUT32.DLL; however, the latter expects a class identifier (CLSID) instead of the programmatic identifier (`ProgID`) expected by this method.</span></span> <span data-ttu-id="24ee1-525">なし、登録されている COM オブジェクトの実行中のインスタンスを取得する`ProgID`、使用するプラットフォーム呼び出しを COM を定義する[GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx)関数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-525">To obtain a running instance of a COM object without a registered `ProgID`, use platform invoke to define the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function.</span></span> <span data-ttu-id="24ee1-526">プラットフォームの詳細については呼び出しは、「[アンマネージ DLL 関数の使用](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-526">For a description of platform invoke, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
## <a name="progid-and-clsid"></a><span data-ttu-id="24ee1-527">ProgID と CLSID</span><span class="sxs-lookup"><span data-stu-id="24ee1-527">ProgID and CLSID</span></span>  
 <span data-ttu-id="24ee1-528">レジストリの HKEY_CLASSES_ROOT サブツリー内のキーには、さまざまな種類のサブキーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-528">Keys in the HKEY_CLASSES_ROOT subtree of the registry contain a variety of subkey types.</span></span> <span data-ttu-id="24ee1-529">サブキーのほとんどは、CLSID をわかりやすい文字列をマップの Progid です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-529">Most of the subkeys are ProgIDs, which map a user-friendly string to a CLSID.</span></span> <span data-ttu-id="24ee1-530">多くの場合、アプリケーションは、数値の Clsid の代わりにこれらの人間が判読できる文字列を使用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-530">Applications often use these human-readable strings instead of the numeric CLSIDs.</span></span> <span data-ttu-id="24ee1-531">多くの場合、コンポーネントは、システムにインストールされているコンポーネントの最新バージョンにマップされているバージョン依存 ProgID がします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-531">Often, a component has a version-independent ProgID that is mapped to the latest version of the component that is installed on the system.</span></span>  
  
 <span data-ttu-id="24ee1-532">アプリケーションとコンポーネント、主に対応する Clsid を取得するのに Progid を使用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-532">Applications and components primarily use ProgIDs to retrieve their corresponding CLSIDs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-533">次の例は、Microsoft Word の実行中のインスタンスで構成されたコンピューターで実行されました。</span><span class="sxs-lookup"><span data-stu-id="24ee1-533">The following example was run on a computer that was configured with a running instance of Microsoft Word.</span></span> <span data-ttu-id="24ee1-534">実行している Microsoft Excel のインスタンスがありませんでした。</span><span class="sxs-lookup"><span data-stu-id="24ee1-534">There were no instances of Microsoft Excel running.</span></span>  
  
 <span data-ttu-id="24ee1-535">呼び出しの例<xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A>2 回クリックします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-535">The example calls <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> twice.</span></span> <span data-ttu-id="24ee1-536">最初の呼び出しが、Microsoft Word のインスタンスへの参照を取得しようとしています。 (のインスタンス、`Word.Application`オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="24ee1-536">The first call tries to retrieve a reference to an instance of Microsoft Word (an instance of the `Word.Application` object).</span></span> <span data-ttu-id="24ee1-537">2 番目の呼び出しが、Microsoft Excel のインスタンスへの参照を取得しようとしています。 (のインスタンス、`Excel.Application`オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="24ee1-537">The second call tries to retrieve a reference to an instance of Microsoft Excel (an instance of an `Excel.Application` object).</span></span>  
  
 <span data-ttu-id="24ee1-538">コードでは、正常に Microsoft Word のインスタンスへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-538">The code retrieves a reference to an instance of Microsoft Word successfully.</span></span> <span data-ttu-id="24ee1-539">ただし、Microsoft Excel が実行されていないため、取得しようとする 2 番目のオブジェクトを発生させる、<xref:System.Runtime.InteropServices.COMException>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-539">However, because Microsoft Excel is not running, the attempt to retrieve the second object raises a <xref:System.Runtime.InteropServices.COMException>.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/cs/marshal.getactiveobject.cs#1)]
 [!code-vb[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/vb/marshal.getactiveobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="24ee1-540">The object was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-540">The object was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-541">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-541">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-542">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-542">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComInterfaceForObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-543">Returns an interface pointer that represents an interface for an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-543">Returns an interface pointer that represents an interface for an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-544">The object that provides the interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-544">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="24ee1-545">The type of interface that is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-545">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-546">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-546">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="24ee1-547">Custom query interface access is enabled by default.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-547">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-548">The interface pointer that represents the specified interface for the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-548">The interface pointer that represents the specified interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-549">このメソッドは、指定したオブジェクトに対して要求されたインターフェイスを表すインターフェイス ポインターを返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-549">This method returns an interface pointer that represents the requested interface on the specified object.</span></span> <span data-ttu-id="24ee1-550">インターフェイス ポインターを渡す必要があるアンマネージ メソッドがある場合に特に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-550">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="24ee1-551">このメソッドを使用してオブジェクトを呼び出すと、ポインターが返される前に、インターフェイス ポインターをインクリメントする参照カウントとします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-551">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="24ee1-552">常に使用する<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>ポインターが完了したら、参照カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-552">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="24ee1-553">生の COM インターフェイス ポインターを使用する場合は、COM で定義されている規則に従う必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-553">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="24ee1-554"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> COM オブジェクトのパラメーターを公開するメソッドを呼び出す場合に便利です、<xref:System.IntPtr>型、またはカスタム マーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-554"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="24ee1-555">あまり一般的でないオブジェクトの COM 呼び出し可能ラッパーへのポインターを取得するのにマネージ オブジェクトでこのメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-555">Although less common, you can use this method on a managed object to obtain a pointer to the object's COM callable wrapper.</span></span> <span data-ttu-id="24ee1-556">たとえば、使用することができます<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29>のインターフェイス ポインターを取得する COM にエクスポートされるマネージ オブジェクトで<xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-556">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-557">2 番目のパラメーターに渡すための対応する型がないために、クラス インターフェイスへのポインターを取得することはできません (`t`)。</span><span class="sxs-lookup"><span data-stu-id="24ee1-557">You cannot obtain a pointer to a class interface since a class interface lacks the corresponding type to pass to the second parameter (`t`).</span></span> <span data-ttu-id="24ee1-558">代わりに、<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>自動ディスパッチ クラス インターフェイスは、通常 COM 呼び出し可能ラッパーの既定のインターフェイスにメンバーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-558">Instead, use <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to invoke the members on the default interface of the COM callable wrapper, which is usually an auto-dispatch class interface.</span></span>  
  
 <span data-ttu-id="24ee1-559"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29>メソッドのオーバー ロードは、既定ではクエリ インターフェイスのカスタマイズを許可します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-559">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="24ee1-560">クエリ インターフェイスのカスタマイズを適用するかどうかを指定するには、使用、<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-560">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="24ee1-561">詳細については、次を参照してください。、 [COM 呼び出し可能ラッパー](~/docs/framework/interop/com-callable-wrapper.md)、[ランタイム呼び出し可能ラッパー](~/docs/framework/interop/runtime-callable-wrapper.md)、および[クラス インターフェイスの概要](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)トピックです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-561">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-562">The <typeparamref name="T" /> parameter is not an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-562">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="24ee1-563">-or-  The type is not visible to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-563">-or-  The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="24ee1-564">-or-  The <typeparamref name="T" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-564">-or-  The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24ee1-565">The <paramref name="o" /> parameter does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-565">The <paramref name="o" /> parameter does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-566">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-566">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-567">-or-  The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-567">-or-  The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-568">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-568">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-569">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-569">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T, System.Runtime.InteropServices.CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T, valuetype System.Runtime.InteropServices.CustomQueryInterfaceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type, mode As CustomQueryInterfaceMode) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T, System::Runtime::InteropServices::CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type * System.Runtime.InteropServices.CustomQueryInterfaceMode -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
        <Parameter Name="mode" Type="System.Runtime.InteropServices.CustomQueryInterfaceMode" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-570">The object that provides the interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-570">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="24ee1-571">The type of interface that is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-571">The type of interface that is requested.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="24ee1-572">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-572">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-573">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-573">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="24ee1-574">Custom query interface access is controlled by the specified customization mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-574">Custom query interface access is controlled by the specified customization mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-575">The interface pointer that represents the interface for the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-575">The interface pointer that represents the interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-576"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> クエリ インターフェイスのカスタマイズを適用するかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-576"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> lets you specify whether to apply query interface customization.</span></span> <span data-ttu-id="24ee1-577">使用して、<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29>のオーバー ロードを既定ではクエリ インターフェイスのカスタマイズを適用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-577">Use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload to apply query interface customization by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-578">The <typeparamref name="T" /> parameter is not an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-578">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="24ee1-579">-or-  The type is not visible to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-579">-or-  The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="24ee1-580">-or-  The <typeparamref name="T" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-580">-or-  The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24ee1-581">The object <paramref name="o" /> does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-581">The object <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-582">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-582">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-583">-or-  The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-583">-or-  The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-584">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-584">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-585">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-585">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject&lt;T,TInterface&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject&lt;T,TInterface&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject&lt;T, TInterface&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject(Of T, TInterface) (o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TInterface&gt;&#xA; static IntPtr GetComInterfaceForObject(T o);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TInterface" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-586">型<c>o</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-586">The type of <c>o</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TInterface">
          <span data-ttu-id="24ee1-587">返されるインターフェイスの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-587">The type of interface to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="24ee1-588">The object that provides the interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-588">The object that provides the interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-589">[Supported in the .NET Framework 4.5.1 and later versions]  Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-589">[Supported in the .NET Framework 4.5.1 and later versions]  Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span>
          </span>
          <span data-ttu-id="24ee1-590">Custom query interface access is enabled by default.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-590">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-591">The interface pointer that represents the <paramref name="TInterface" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-591">The interface pointer that represents the <paramref name="TInterface" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-592">このメソッドを表すインターフェイス ポインターを返します、`TInterface`指定したオブジェクトのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-592">This method returns an interface pointer that represents the `TInterface` interface on the specified object.</span></span> <span data-ttu-id="24ee1-593">インターフェイス ポインターを渡す必要があるアンマネージ メソッドがある場合に特に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-593">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="24ee1-594">このメソッドを使用してオブジェクトを呼び出すと、ポインターが返される前に、インターフェイス ポインターをインクリメントする参照カウントとします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-594">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="24ee1-595">常に使用する、<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>ポインターが完了したら、参照カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-595">Always use the <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> method to decrement the reference count when you have finished with the pointer.</span></span> <span data-ttu-id="24ee1-596">生の COM インターフェイス ポインターを使用する場合は、COM で定義されている規則に従う必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-596">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="24ee1-597"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> COM オブジェクトのパラメーターを公開するメソッドを呼び出す場合に便利です、<xref:System.IntPtr>型、またはカスタム マーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-597"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="24ee1-598">オブジェクトの COM 呼び出し可能ラッパーへのポインターを取得するのにマネージ オブジェクトでは、これは一般的ではないが、このメソッドを使用できますも。</span><span class="sxs-lookup"><span data-stu-id="24ee1-598">You can also use this method on a managed object to obtain a pointer to the object's COM callable wrapper, although this is less common.</span></span> <span data-ttu-id="24ee1-599">たとえば、使用することができます<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29>のインターフェイス ポインターを取得する COM にエクスポートされるマネージ オブジェクトで<xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-599">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-600"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29>メソッドのオーバー ロードは、既定ではクエリ インターフェイスのカスタマイズを許可します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-600">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="24ee1-601">クエリ インターフェイスのカスタマイズを適用するかどうかを指定するには、使用、<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-601">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="24ee1-602">詳細については、次を参照してください。、 [COM 呼び出し可能ラッパー](~/docs/framework/interop/com-callable-wrapper.md)、[ランタイム呼び出し可能ラッパー](~/docs/framework/interop/runtime-callable-wrapper.md)、および[クラス インターフェイスの概要](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)トピックです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-602">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-603">The <paramref name="TInterface" /> parameter is not an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-603">The <paramref name="TInterface" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="24ee1-604">-or-  The type is not visible to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-604">-or-  The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="24ee1-605">-or-  The <typeparamref name="T" /> parameter is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-605">-or-  The <typeparamref name="T" /> parameter is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24ee1-606">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-606">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-607">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-607">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-608">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-608">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-609">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-609">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObjectInContext (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObjectInContext(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObjectInContext (o As Object, t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObjectInContext(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObjectInContext : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-610">The object that provides the interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-610">The object that provides the interface.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="24ee1-611">The type of interface that is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-611">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-612">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-612">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-613">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-613">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-614">このメソッドは、同じ<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A>が`null`場合は、呼び出し元がオブジェクトと同じコンテキストではありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-614">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span> <span data-ttu-id="24ee1-615">インターフェイス ポインターを渡す必要があるアンマネージ メソッドがある場合に特に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-615">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-616">
            <paramref name="t" /> is not an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-616">
              <paramref name="t" /> is not an interface.</span>
          </span>
          <span data-ttu-id="24ee1-617">-or-  The type is not visible to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-617">-or-  The type is not visible to COM.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24ee1-618">
            <paramref name="o" /> does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-618">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-619">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-619">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-620">-or-  <paramref name="t" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-620">-or-  <paramref name="t" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-621">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-621">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-622">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-622">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComObjectData">
      <MemberSignature Language="C#" Value="public static object GetComObjectData (object obj, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetComObjectData(object obj, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComObjectData (obj As Object, key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetComObjectData(System::Object ^ obj, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="static member GetComObjectData : obj * obj -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetComObjectData (obj, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="24ee1-623">The COM object that contains the data that you want.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-623">The COM object that contains the data that you want.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="24ee1-624">The key in the internal hash table of <c>obj</c> to retrieve the data from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-624">The key in the internal hash table of <c>obj</c> to retrieve the data from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-625">Retrieves data that is referenced by the specified key from the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-625">Retrieves data that is referenced by the specified key from the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-626">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-626">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-627">すべての COM オブジェクトをラップ、[ランタイム呼び出し可能ラッパー](~/docs/framework/interop/runtime-callable-wrapper.md)関連付けられたハッシュ テーブルを<xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A>を取得します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-627">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) have an associated hash table, which <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> retrieves.</span></span> <span data-ttu-id="24ee1-628"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> ハッシュ テーブルにデータを追加します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-628"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> adds data to the hash table.</span></span> <span data-ttu-id="24ee1-629">メソッドを呼び出すか、コードからすることはありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-629">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-630">
            <paramref name="obj" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-630">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-631">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-631">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-632">
            <paramref name="obj" /> is not a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-632">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="24ee1-633">-or-  <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-633">-or-  <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-634">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-634">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-635">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-635">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComSlotForMethodInfo">
      <MemberSignature Language="C#" Value="public static int GetComSlotForMethodInfo (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComSlotForMethodInfo(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComSlotForMethodInfo (m As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetComSlotForMethodInfo(System::Reflection::MemberInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member GetComSlotForMethodInfo : System.Reflection.MemberInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="24ee1-636">An object that represents an interface method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-636">An object that represents an interface method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-637">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-637">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-638">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-638">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-639">3 つのこのメソッドが返される、0 から始まるスロット数[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)可能性のある 4 つと[IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)メソッドを使用できる最初のスロットの値のいずれか 3 を行うまたは 7 です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-639">The zero-based slot number returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="24ee1-640"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> 反対側の機能を提供<xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-640"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-641">このメソッドを使用すると、COM から表示されていないインターフェイスのメンバーおよびプライベート インターフェイスのメンバーのスロット番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-641">You can use this method to retrieve slot numbers for members of interfaces that are not visible from COM and for members of private interfaces.</span></span> <span data-ttu-id="24ee1-642">スロット番号が返されますが、型が COM に公開されている場合に予約される v テーブルの番号に対応します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-642">The slot numbers returned correspond to the v-table numbers that would be reserved if the type was exposed to COM.</span></span> <span data-ttu-id="24ee1-643">COM 参照不可能なメンバーは公開されている v テーブル内のスロットを実際には占有する場合でも、COM クライアントが、スロットを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-643">COM-invisible members actually occupy a slot in an exposed v-table, even though the COM client cannot use the slot.</span></span> <span data-ttu-id="24ee1-644">使用することはできません<xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A>を渡すことによって、クラス インターフェイスで<xref:System.Reflection.MemberInfo>クラスからです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-644">You cannot use <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> on a class interface by passing <xref:System.Reflection.MemberInfo> from a class.</span></span> <span data-ttu-id="24ee1-645">詳細については、次を参照してください。[クラス インターフェイスの概要](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-645">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-646">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-646">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-647">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-647">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-648">-or-  The <paramref name="m" /> parameter is not an interface method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-648">-or-  The <paramref name="m" /> parameter is not an interface method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-649">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-649">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-650">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-650">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer">
      <MemberSignature Language="C#" Value="public static Delegate GetDelegateForFunctionPointer (IntPtr ptr, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate GetDelegateForFunctionPointer(native int ptr, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer (ptr As IntPtr, t As Type) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ GetDelegateForFunctionPointer(IntPtr ptr, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint * Type -&gt; Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer (ptr, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-651">The unmanaged function pointer to be converted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-651">The unmanaged function pointer to be converted.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="24ee1-652">The type of the delegate to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-652">The type of the delegate to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-653">Converts an unmanaged function pointer to a delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-653">Converts an unmanaged function pointer to a delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-654">A delegate instance that can be cast to the appropriate delegate type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-654">A delegate instance that can be cast to the appropriate delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-655">1.0 および 1.1 の .NET Framework のバージョンでは、アンマネージ関数ポインターを通じてマネージ メソッドを呼び出すコードに関数ポインターとしてアンマネージ コードへのマネージ メソッドを表すデリゲートを渡すことでした。</span><span class="sxs-lookup"><span data-stu-id="24ee1-655">In versions 1.0 and 1.1 of the .NET Framework, it was possible to pass a delegate representing a managed method to unmanaged code as a function pointer, allowing the unmanaged code to call the managed method through the function pointer.</span></span> <span data-ttu-id="24ee1-656">アンマネージ コードにその関数ポインターをマネージ コードに渡すこともできましたし、ポインターは、基になるマネージ メソッドに正しく解決されました。</span><span class="sxs-lookup"><span data-stu-id="24ee1-656">It was also possible for the unmanaged code to pass that function pointer back to the managed code, and the pointer was resolved properly to the underlying managed method.</span></span>  
  
 <span data-ttu-id="24ee1-657">.NET Framework 2.0 以降のバージョンで、使用することができます、<xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>と<xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A>を双方向でデリゲートをマーシャ リングするメソッド。</span><span class="sxs-lookup"><span data-stu-id="24ee1-657">In the .NET Framework 2.0 and later versions, you can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> methods to marshal delegates in both directions.</span></span> <span data-ttu-id="24ee1-658"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>、`ptr`としてインポートされます、<xref:System.IntPtr?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-658">With <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` is imported as a <xref:System.IntPtr?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-659">A<xref:System.IntPtr?displayProperty=nameWithType>マネージ デリゲートを呼び出すことによって取得できます<xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A>はパラメーターとして渡されると、呼び出すことができますからアンマネージ メソッド内部です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-659">A <xref:System.IntPtr?displayProperty=nameWithType> can be obtained for a managed delegate by calling <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> and passed as a parameter; it can then be called from inside the unmanaged method.</span></span> <span data-ttu-id="24ee1-660">パラメーター マーシャラーが、.NET Framework 2.0 以降でデリゲートを関数ポインターをマーシャ リングも注意してください。</span><span class="sxs-lookup"><span data-stu-id="24ee1-660">Note that the parameter marshaler can also marshal function pointers to delegates in the .NET Framework 2.0 and later versions.</span></span>  
  
 <span data-ttu-id="24ee1-661"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>メソッドには、次の制限。</span><span class="sxs-lookup"><span data-stu-id="24ee1-661">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="24ee1-662">相互運用シナリオでは、ジェネリックはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-662">Generics are not supported in interop scenarios.</span></span>  
  
-   <span data-ttu-id="24ee1-663">このメソッドに無効な関数ポインターを渡すことはできません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-663">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="24ee1-664">このメソッドは、純粋なアンマネージ関数ポインターに対してのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-664">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="24ee1-665">C++ またはから関数ポインターでこのメソッドを使用することはできません、<xref:System.RuntimeMethodHandle.GetFunctionPointer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-665">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="24ee1-666">このメソッドを使用して、別のマネージ デリゲートを関数ポインターからデリゲートを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-666">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-667">The <paramref name="t" /> parameter is not a delegate or is generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-667">The <paramref name="t" /> parameter is not a delegate or is generic.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-668">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-668">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-669">-or-  The <paramref name="t" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-669">-or-  The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-670">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-670">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-671">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-671">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer(Of TDelegate) (ptr As IntPtr) As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static TDelegate GetDelegateForFunctionPointer(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint -&gt; 'Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="24ee1-672">返すデリゲートの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-672">The type of the delegate to return.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="24ee1-673">The unmanaged function pointer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-673">The unmanaged function pointer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-674">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an unmanaged function pointer to a delegate of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-674">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an unmanaged function pointer to a delegate of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-675">A instance of the specified delegate type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-675">A instance of the specified delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-676">使用することができます、<xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29>と<xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29>を双方向でデリゲートをマーシャ リングするメソッド。</span><span class="sxs-lookup"><span data-stu-id="24ee1-676">You can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> methods to marshal delegates in both directions.</span></span>  
  
 <span data-ttu-id="24ee1-677"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29>メソッドには、次の制限。</span><span class="sxs-lookup"><span data-stu-id="24ee1-677">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="24ee1-678">このメソッドに無効な関数ポインターを渡すことはできません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-678">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="24ee1-679">このメソッドは、純粋なアンマネージ関数ポインターに対してのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-679">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="24ee1-680">C++ またはから関数ポインターでこのメソッドを使用することはできません、<xref:System.RuntimeMethodHandle.GetFunctionPointer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-680">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="24ee1-681">このメソッドを使用して、別のマネージ デリゲートを関数ポインターからデリゲートを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-681">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-682">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-682">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-683">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-683">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-684">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-684">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-685">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-685">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetEndComSlot">
      <MemberSignature Language="C#" Value="public static int GetEndComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetEndComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEndComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetEndComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetEndComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetEndComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="24ee1-686">A type that represents an interface or class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-686">A type that represents an interface or class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-687">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-687">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-688">The last VTBL slot of the interface when exposed to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-688">The last VTBL slot of the interface when exposed to COM.</span>
          </span>
          <span data-ttu-id="24ee1-689">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-689">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-690">このメソッドは、インターフェイスまたはクラスの 0 から始まる、v テーブル数を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-690">This method returns the zero-based, v-table number for an interface or a class.</span></span> <span data-ttu-id="24ee1-691">クラスで使用すると、返されるスロット番号は、クラスのクラス インターフェイスを参照します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-691">When used on a class, the slot number returned refers to the class interface for the class.</span></span> <span data-ttu-id="24ee1-692">クラスのインターフェイスがデュアル自動の場合は、このメソッドは常にディスパッチ専用インターフェイスがマネージ クライアントに v テーブルを公開しないことを示すために-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-692">If the class interface is auto-dual, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="24ee1-693">使用することができます<xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A>と<xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType>と共に<xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>に指定された範囲内のスロットを渡します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-693">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="24ee1-694">詳細については、次を参照してください。[クラス インターフェイスの概要](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-694">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-695">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-695">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-696">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-696">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionCode">
      <MemberSignature Language="C#" Value="public static int GetExceptionCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetExceptionCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetExceptionCode();" />
      <MemberSignature Language="F#" Value="static member GetExceptionCode : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetExceptionCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-697">Retrieves a code that identifies the type of the exception that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-697">Retrieves a code that identifies the type of the exception that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-698">The type of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-698">The type of the exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-699"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> コンパイラのサポート構造化例外処理 (SEH) のみに対して公開されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-699"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span> <span data-ttu-id="24ee1-700">このメソッドは呼び出された場合、例外がスローされる前に、0x0 を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-700">If this method is called before an exception is thrown, it returns 0x0.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-701">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-701">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-702">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-702">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-703">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-703">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="24ee1-704">The HRESULT to be converted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-704">The HRESULT to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-705">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-705">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-706">An object that represents the converted HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-706">An object that represents the converted HRESULT.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-707">使用して、<xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A>取得するメソッド、<xref:System.Exception>を呼び出すことがなく、HRESULT に基づいて、<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>メソッドと、例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-707">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception.</span></span>  
  
 <span data-ttu-id="24ee1-708">現在[IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)インターフェイスは、例外を構築するために使用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-708">The current [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface is used to construct the exception.</span></span>  
  
 <span data-ttu-id="24ee1-709">各 HRESULT から .NET Framework では、その比較可能な例外クラスへのマッピングを参照してください。[する方法: マップの Hresult と例外](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-709">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-710">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-710">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-711">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-711">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer, errorInfo As IntPtr) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int * nativeint -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="24ee1-712">The HRESULT to be converted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-712">The HRESULT to be converted.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="24ee1-713">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-713">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="24ee1-714">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-714">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-715">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-715">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-716">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-716">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-717">使用して、<xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A>取得するメソッド、<xref:System.Exception>を呼び出すことがなく、HRESULT に基づいて、<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>メソッドと (そのため、対応するパフォーマンス オーバーヘッドを回避できます)、例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-717">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception (thus avoiding the corresponding performance overhead).</span></span> <span data-ttu-id="24ee1-718">`errorInfo`パラメーターは、その説明のテキストとエラーを定義するインターフェイスのグローバル一意識別子 (GUID) など、エラーに関する追加情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-718">The `errorInfo` parameter supplies additional information about the error, such as its textual description and the globally unique identifier (GUID) for the interface that defined the error.</span></span>  
  
 <span data-ttu-id="24ee1-719">変換時に提供する必要のあるカスタム エラー情報がある場合は、このメソッドのオーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-719">Use this method overload if you have custom error information that you have to supply in the conversion.</span></span>  
  
 <span data-ttu-id="24ee1-720">各 HRESULT から .NET Framework では、その比較可能な例外クラスへのマッピングを参照してください。[する方法: マップの Hresult と例外](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-720">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-721">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-721">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-722">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-722">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPointers">
      <MemberSignature Language="C#" Value="public static IntPtr GetExceptionPointers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExceptionPointers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionPointers () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExceptionPointers();" />
      <MemberSignature Language="F#" Value="static member GetExceptionPointers : unit -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetExceptionPointers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-723">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-723">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-724">A pointer to an [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648) structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-724">A pointer to an [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648) structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-725"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> コンパイラのサポート構造化例外処理 (SEH) のみに対して公開されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-725"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-726">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-726">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-727">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-727">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate (d As Delegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetFunctionPointerForDelegate(Delegate ^ d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="24ee1-728">The delegate to be passed to unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-728">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-729">Converts a delegate into a function pointer that is callable from unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-729">Converts a delegate into a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-730">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-730">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-731">デリゲート`d`を使用してアンマネージ コードに渡すことができる関数ポインターに変換されますが、 [_ _stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8)呼び出し規約です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-731">The delegate `d` is converted to a function pointer that can be passed to unmanaged code using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="24ee1-732">手動でマネージ コードから、ガベージ コレクターによって収集されるデリゲートをおく必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-732">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="24ee1-733">ガベージ コレクターは、アンマネージ コードへの参照を追跡しません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-733">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-734">The <paramref name="d" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-734">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-735">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-735">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-736">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-736">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-737">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-737">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate&lt;TDelegate&gt; (TDelegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate&lt;TDelegate&gt;(!!TDelegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate(Of TDelegate) (d As TDelegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static IntPtr GetFunctionPointerForDelegate(TDelegate d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : 'Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="d" Type="TDelegate" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="24ee1-738">変換するデリゲートの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-738">The type of delegate to convert.</span>
          </span>
        </typeparam>
        <param name="d">
          <span data-ttu-id="24ee1-739">The delegate to be passed to unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-739">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-740">[Supported in the .NET Framework 4.5.1 and later versions]  Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-740">[Supported in the .NET Framework 4.5.1 and later versions]  Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-741">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-741">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-742">デリゲート`d`できますに渡すことによって、アンマネージ コードを使用して関数ポインターに変換されます、 [_ _stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8)呼び出し規約です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-742">The delegate `d` is converted to a function pointer that can be passed to unmanaged code by using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="24ee1-743">手動でマネージ コードから、ガベージ コレクターによって収集されるデリゲートをおく必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-743">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="24ee1-744">ガベージ コレクターは、アンマネージ コードへの参照を追跡しません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-744">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-745">The <paramref name="d" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-745">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-746">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-746">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-747">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-747">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-748">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-748">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHINSTANCE">
      <MemberSignature Language="C#" Value="public static IntPtr GetHINSTANCE (System.Reflection.Module m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHINSTANCE(class System.Reflection.Module m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHINSTANCE (m As Module) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHINSTANCE(System::Reflection::Module ^ m);" />
      <MemberSignature Language="F#" Value="static member GetHINSTANCE : System.Reflection.Module -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetHINSTANCE m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="24ee1-749">The module whose HINSTANCE is desired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-749">The module whose HINSTANCE is desired.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-750">Returns the instance handle (HINSTANCE) for the specified module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-750">Returns the instance handle (HINSTANCE) for the specified module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-751">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-751">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-752">動的なまたはメモリ内と、モジュールには、HINSTANCE はありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-752">When dynamic or in-memory, modules do not have an HINSTANCE.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-753">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-753">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-754">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-754">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-755">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-755">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHRForException">
      <MemberSignature Language="C#" Value="public static int GetHRForException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForException (e As Exception) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="static member GetHRForException : Exception -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="24ee1-756">The exception to convert to an HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-756">The exception to convert to an HRESULT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-757">Converts the specified exception to an HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-757">Converts the specified exception to an HRESULT.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-758">The HRESULT mapped to the supplied exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-758">The HRESULT mapped to the supplied exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-759"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> 設定しても、 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) COM GetErrorInfoNEEDGUID 関数を呼び出すことによって取得できる例外のインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-759"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> also sets up an [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface for the exception that can be obtained by calling the COM GetErrorInfoNEEDGUID function.</span></span> <span data-ttu-id="24ee1-760">この関数を使用するを適用することが、COM インターフェイスのマネージ クラス実装では、HRESULT 値を返す、<xref:System.Runtime.InteropServices.PreserveSigAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="24ee1-760">You can use this function to return an HRESULT value on a managed class implementation of a COM interface where you apply the <xref:System.Runtime.InteropServices.PreserveSigAttribute> attribute.</span></span> <span data-ttu-id="24ee1-761">属性付きメソッドすべての例外を使用、<xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A>を適切な HRESULT 値を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="24ee1-761">Have the attributed method catch all exceptions and use the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method to return the appropriate HRESULT value.</span></span> <span data-ttu-id="24ee1-762">メソッドの外部伝達する例外を許可するには、不適切な動作が生成されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-762">Allowing an exception to propagate outside the method produces incorrect behavior.</span></span> <span data-ttu-id="24ee1-763">(実際には、共通言語ランタイムに失敗する v テーブルからのようなメソッドを呼び出す COM クライアントに例外を渡すことです。)</span><span class="sxs-lookup"><span data-stu-id="24ee1-763">(In fact, the common language runtime fails to pass an exception to a COM client that calls such a method through a v-table.)</span></span>  
  
 <span data-ttu-id="24ee1-764">なお、<xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A>メソッドのセット、 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)現在のスレッドのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-764">Note that the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method sets the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread.</span></span> <span data-ttu-id="24ee1-765">これは、ようなメソッドの予期しない結果になることができます、<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>既定を使用するメソッド、 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)設定されている場合は、現在のスレッドのです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-765">This can cause unexpected results for methods like the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> methods that default to using the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) of the current thread if it is set.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-766">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-766">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-767">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-767">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetHRForLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetHRForLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetHRForLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-768">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-768">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-769">The HRESULT corresponding to the last Win32 error code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-769">The HRESULT corresponding to the last Win32 error code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-770">対象の関数が必要があります、`setLastError`メタデータ フラグを設定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-770">The target function must have had the `setLastError` metadata flag set.</span></span> <span data-ttu-id="24ee1-771">たとえば、`SetLastError`のフィールド、<xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType>する必要があります`true`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-771">For example, the `SetLastError` field of the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> must be `true`.</span></span> <span data-ttu-id="24ee1-772">このフラグを設定するプロセスには、使用するソース言語によって異なります。 c# および C++ では`false`既定では、ですが、 `Declare` Visual Basic でのステートメントが`true`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-772">The process for setting this flag depends on the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-773">次の例は、Win32 エラー コードを使用して、対応する HRESULT を取得する方法を示します、<xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-773">The following example demonstrates how to retrieve an HRESULT corresponding to a Win32 error code using the <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-774">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-774">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-775">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-775">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-776">The object whose <see langword="IDispatch" /> interface is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-776">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-777">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface from a managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-777">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-778">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-778">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-779">マネージ コードのほとんどを直接操作する、`IDispatch`インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-779">In managed code, you seldom work directly with the `IDispatch` interface.</span></span> <span data-ttu-id="24ee1-780">ただし、<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A>として COM オブジェクトのパラメーターを公開するメソッドを呼び出している場合に便利です、<xref:System.IntPtr>型、またはカスタム マーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-780">However, <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="24ee1-781">このメソッドを使用してオブジェクトを呼び出すと、ポインターが返される前に、インターフェイス ポインターをインクリメントする参照カウントとします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-781">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="24ee1-782">常に使用する<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>ポインターが完了したら、参照カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-782">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span>  
  
 <span data-ttu-id="24ee1-783">オブジェクトの COM 呼び出し可能ラッパーへのインターフェイス ポインターを取得するのにマネージ オブジェクトでこのメソッドを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-783">You can also use this method on a managed object to obtain an interface pointer to the COM callable wrapper for the object.</span></span> <span data-ttu-id="24ee1-784">詳細については、次を参照してください。 [COM 呼び出し可能ラッパー](~/docs/framework/interop/com-callable-wrapper.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-784">For additional information, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24ee1-785">
            <paramref name="o" /> does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-785">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-786">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-786">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-787">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-787">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-788">The object whose <see langword="IDispatch" /> interface is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-788">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-789">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface pointer from a managed object, if the caller is in the same context as that object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-789">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface pointer from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-790">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-790">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-791">このメソッドは、同じ<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A>が`null`場合は、呼び出し元がオブジェクトと同じコンテキストではありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-791">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24ee1-792">
            <paramref name="o" /> does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-792">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-793">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-793">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-794">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-794">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-795">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-795">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetITypeInfoForType">
      <MemberSignature Language="C#" Value="public static IntPtr GetITypeInfoForType (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetITypeInfoForType(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetITypeInfoForType (t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetITypeInfoForType(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetITypeInfoForType : Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetITypeInfoForType t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="24ee1-796">The type whose <see langword="ITypeInfo" /> interface is being requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-796">The type whose <see langword="ITypeInfo" /> interface is being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-797">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-797">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-798">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-798">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-799">このメソッドへのポインターを返します、`ITypeInfo`元の型に基づいている実装します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-799">This method returns a pointer to an `ITypeInfo` implementation that is based on the original type.</span></span> <span data-ttu-id="24ee1-800">オブジェクトを呼び出す<xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A>ポインターが返される前に、インターフェイス ポインターをインクリメントする参照カウントをによりします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-800">Calling an object with <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="24ee1-801">常に使用する<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>ポインターが完了したら、参照カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-801">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="24ee1-802">適用することができます、<xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType>に標準の相互運用マーシャ リング動作をこのカスタム マーシャラーに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-802">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-803">次の例へのポインターを取得する方法を示します、`ITypeInfo`インターフェイスを使用して型を<xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-803">The following example demonstrates how to retrieve a pointer to the `ITypeInfo` interface for a type using the <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-804">
            <paramref name="t" /> is not a visible type to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-804">
              <paramref name="t" /> is not a visible type to COM.</span>
          </span>
          <span data-ttu-id="24ee1-805">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-805">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="24ee1-806">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-806">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-807">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-807">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-808">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-808">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-809">The object whose <see langword="IUnknown" /> interface is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-809">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-810">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-810">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-811">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-811">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-812">マネージ コードのほとんどを直接操作する、`IUnknown`インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-812">In managed code, you seldom work directly with the `IUnknown` interface.</span></span> <span data-ttu-id="24ee1-813">ただし、<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A>として COM オブジェクトのパラメーターを公開するメソッドを呼び出している場合に便利です、<xref:System.IntPtr>型、またはカスタム マーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-813">However, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="24ee1-814">このメソッドを使用してオブジェクトを呼び出すと、ポインターが返される前に、インターフェイス ポインターをインクリメントする参照カウントとします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-814">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="24ee1-815">常に使用する<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>ポインターが完了したら、参照カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-815">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="24ee1-816">このメソッドは、の反対側の機能を提供、<xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-816">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="24ee1-817">インターフェイス ポインターを取得するマネージ オブジェクトでこのメソッドを使用することもできます、 [COM 呼び出し可能ラッパー](~/docs/framework/interop/com-callable-wrapper.md)オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24ee1-817">You can also use this method on a managed object to obtain an interface pointer to the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) for the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-818">次の例は、取得する方法を示します、 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)インターフェイスを使用してマネージ オブジェクトを<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-818">The following example demonstrates how to retrieve an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-819">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-819">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-820">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-820">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-821">The object whose <see langword="IUnknown" /> interface is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-821">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-822">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object, if the caller is in the same context as that object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-822">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-823">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-823">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-824">このメソッドは、同じ<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A>が`null`場合は、呼び出し元がオブジェクトと同じコンテキストではありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-824">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-825">次の例は、取得する方法を示します、`IUnknown`インターフェイスを使用してマネージ オブジェクトを<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-825">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-826">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-826">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-827">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-827">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-828">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-828">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-829">The last error code set by a call to the Win32 [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-829">The last error code set by a call to the Win32 [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-830"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> Win32 の公開[GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) Kernel32.DLL から関数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-830"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> exposes the Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) function from Kernel32.DLL.</span></span> <span data-ttu-id="24ee1-831">呼び出し、直接プラットフォームを作成しても安全ではないために、このメソッドが存在して`GetLastError`この情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-831">This method exists because it is not safe to make a direct platform invoke call to `GetLastError` to obtain this information.</span></span> <span data-ttu-id="24ee1-832">このエラー コードにアクセスする場合は、呼び出す必要があります<xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>独自プラットフォーム呼び出しの定義を作成する代わりに`GetLastError`および呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-832">If you want to access this error code, you must call <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> instead of writing your own platform invoke definition for `GetLastError` and calling it.</span></span> <span data-ttu-id="24ee1-833">共通言語ランタイムは上書きする api を内部の呼び出しを行うことができます、`GetLastError`オペレーティング システムによって保持されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-833">The common language runtime can make internal calls to APIs that overwrite the `GetLastError` maintained by the operating system.</span></span>  
  
 <span data-ttu-id="24ee1-834">このメソッドを使用するには適用する場合にのみ、エラー コードを取得する、<xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType>メソッドのシグネチャとセットを<xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>フィールドを`true`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-834">You can use this method to obtain error codes only if you apply the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> to the method signature and set the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field to`true`.</span></span> <span data-ttu-id="24ee1-835">このプロセスが使用するソース言語によって異なります。 c# および C++ では`false`既定では、ですが、 `Declare` Visual Basic でのステートメントが`true`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-835">The process for this varies depending upon the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-836">次の例では、<xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-836">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> method.</span></span> <span data-ttu-id="24ee1-837">例では、エラーのないでメソッドを呼び出し、まず、エラーの存在を持つメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-837">The example first demonstrates calling the method with no error present and then demonstrates calling the method with an error present.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-838">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-838">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-839">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-839">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedThunkForUnmanagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetManagedThunkForUnmanagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetManagedThunkForUnmanagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetManagedThunkForUnmanagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetManagedThunkForUnmanagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="24ee1-840">A pointer to the method to marshal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-840">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="24ee1-841">A pointer to the method signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-841">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="24ee1-842">The number of bytes in <c>pbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-842">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-843">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-843">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-844">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-844">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-845"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> コンパイラのサポートのみ公開されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-845"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-846">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-846">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-847">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-847">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodInfoForComSlot">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetMethodInfoForComSlot (Type t, int slot, ref System.Runtime.InteropServices.ComMemberType memberType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetMethodInfoForComSlot(class System.Type t, int32 slot, valuetype System.Runtime.InteropServices.ComMemberType&amp; memberType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodInfoForComSlot (t As Type, slot As Integer, ByRef memberType As ComMemberType) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MemberInfo ^ GetMethodInfoForComSlot(Type ^ t, int slot, System::Runtime::InteropServices::ComMemberType % memberType);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfoForComSlot : Type * int *  -&gt; System.Reflection.MemberInfo" Usage="System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot (t, slot, memberType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="slot" Type="System.Int32" />
        <Parameter Name="memberType" Type="System.Runtime.InteropServices.ComMemberType&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="24ee1-848">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-848">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span>
          </span>
        </param>
        <param name="slot">
          <span data-ttu-id="24ee1-849">The VTBL slot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-849">The VTBL slot.</span>
          </span>
        </param>
        <param name="memberType">
          <span data-ttu-id="24ee1-850">On successful return, one of the enumeration values that specifies the type of the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-850">On successful return, one of the enumeration values that specifies the type of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-851">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-851">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-852">The object that represents the member at the specified VTBL slot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-852">The object that represents the member at the specified VTBL slot.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-853">戻り値があります、 <xref:System.Reflection.FieldInfo>、 <xref:System.Reflection.MethodInfo>、または<xref:System.Reflection.PropertyInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24ee1-853">The return value may be a <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="24ee1-854">戻り値は、特定の COM スロット内に存在する管理対象のメンバーの種類によって異なります (汎用化された戻り値の型ため<xref:System.Reflection.MemberInfo>すべて 3 つの派生元で)。</span><span class="sxs-lookup"><span data-stu-id="24ee1-854">The return value depends on the type of managed member that exists in the given COM slot (hence the generalized return type <xref:System.Reflection.MemberInfo> from which all three derive).</span></span>  
  
 <span data-ttu-id="24ee1-855">このメソッドによって返される、0 から始まるスロット数は 3 つのアカウント[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)可能性のある 4 つと[IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)メソッドを使用できる最初のスロットの値のいずれか 3 を行うまたは 7 です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-855">The zero-based slot number that is returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="24ee1-856"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> 反対側の機能を提供<xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-856"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-857">使用することができます<xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType>と<xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType>と共に<xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A>に指定された範囲内のスロットを渡します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-857">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> to pass slots within a specified range.</span></span>  
  
 <span data-ttu-id="24ee1-858">`memberType`パラメーターが戻るときにのみ重要です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-858">The `memberType` parameter is important only on return.</span></span> <span data-ttu-id="24ee1-859">返された場合に対応する COM メンバー (通常のメソッドまたはプロパティのアクセサー) の型が含まれている<xref:System.Reflection.MemberInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24ee1-859">It contains the type of the COM member (a regular method or a property accessor) that corresponds to the returned <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-860">
            <paramref name="t" /> is not visible from COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-860">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-861">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-861">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-862">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-862">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComMemberType" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject (object obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject(object obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject (obj As Object, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetNativeVariantForObject(System::Object ^ obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : obj * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="24ee1-863">The object for which to get a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-863">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="24ee1-864">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-864">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-865">Converts an object to a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-865">Converts an object to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-866">`pDstNativeVariant`パラメーターは、結果として得られるバリアントを格納するための十分なメモリを指す必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-866">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="24ee1-867">また、このメソッドの実装を呼び出す、 [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx)生のメモリ上の関数を`pDstNativeVariant`パラメーターが指し示すです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-867">Also, the implementation of this method calls the [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-868">The <paramref name="obj" /> parameter is an instance of a generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-868">The <paramref name="obj" /> parameter is an instance of a generic type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-869">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-869">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-870">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-870">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject&lt;T&gt; (T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject&lt;T&gt;(!!T obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject(Of T) (obj As T, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void GetNativeVariantForObject(T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : 'T * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="T" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-871">変換対象のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-871">The type of the object to convert.</span>
          </span>
        </typeparam>
        <param name="obj">
          <span data-ttu-id="24ee1-872">The object for which to get a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-872">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="24ee1-873">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-873">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-874">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an object of a specified type to a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-874">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an object of a specified type to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-875">`pDstNativeVariant`パラメーターは、結果として得られるバリアントを格納するための十分なメモリを指す必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-875">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="24ee1-876">また、このメソッドの実装を呼び出す[VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx)生のメモリ上の関数を`pDstNativeVariant`パラメーターが指し示すです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-876">Also, the implementation of this method calls [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-877">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-877">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-878">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-878">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetObjectForIUnknown (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForIUnknown(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForIUnknown (pUnk As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForIUnknown(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member GetObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForIUnknown pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="24ee1-879">A pointer to the <see langword="IUnknown" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-879">A pointer to the <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-880">Returns an instance of a type that represents a COM object by a pointer to its [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-880">Returns an instance of a type that represents a COM object by a pointer to its [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-881">An object that represents the specified unmanaged COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-881">An object that represents the specified unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-882">このメソッドをラップ`IUnknown`マネージ オブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-882">This method wraps `IUnknown` in a managed object.</span></span> <span data-ttu-id="24ee1-883">これにより、COM コンポーネントの参照カウントをインクリメントの効果があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-883">This has the effect of incrementing the reference count of the COM component.</span></span> <span data-ttu-id="24ee1-884">ランタイムがマネージ オブジェクトを表す COM オブジェクトでガベージ コレクションを実行するときに、参照カウントがデクリメントされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-884">The reference count will be decremented when the runtime performs garbage collection on the managed object that represents the COM object.</span></span>  
  
 <span data-ttu-id="24ee1-885">`pUnk`パラメーターを表す、`IUnknown`インターフェイス ポインターです。 ただし、すべての COM インターフェイスから直接または間接的にを派生するため`IUnknown`、任意の COM インターフェイスはこのメソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-885">The `pUnk` parameter represents an `IUnknown` interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="24ee1-886">によって返されるオブジェクト<xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A>は、[ランタイム呼び出し可能ラッパー](~/docs/framework/interop/runtime-callable-wrapper.md)、その他の管理対象オブジェクトとしてそれを管理する、共通言語ランタイムはします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-886">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), which the common language runtime manages as it does any other managed object.</span></span> <span data-ttu-id="24ee1-887">このラッパーの型は、ベースでは多くの場合、`System.__ComObject`ラッパー型があいまいな場合に使用される隠し型である型。</span><span class="sxs-lookup"><span data-stu-id="24ee1-887">The type of this wrapper is often a base `System.__ComObject` type, which is a hidden type used when the wrapper type is ambiguous.</span></span> <span data-ttu-id="24ee1-888">COM オブジェクトが実装されている限り、このような基本データ型への遅延バインディング呼び出しをかけることができます、 [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85))インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-888">You can still make late-bound calls to such a base type as long as the COM object implements the [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interface.</span></span> <span data-ttu-id="24ee1-889">同様に、返されたオブジェクトを適切な COM インターフェイスをキャストすることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-889">Likewise, you can cast the returned object to an appropriate COM interface.</span></span>  
  
 <span data-ttu-id="24ee1-890">オブジェクトをラップするためと、特定のマネージ クラス型 (ジェネリック ラッパー型ではなく)、次の要件に従う必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-890">For an object to be wrapped with a specific managed class type (and not a generic wrapper type), you must adhere to the following requirements:</span></span>  
  
-   <span data-ttu-id="24ee1-891">実装、 [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) COM オブジェクトのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-891">Implement the [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) interface for the COM object.</span></span>  
  
-   <span data-ttu-id="24ee1-892">含まれているアセンブリを登録、 [Regasm.exe (アセンブリ登録ツール)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-892">Register the containing assembly with the [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 <span data-ttu-id="24ee1-893">または、これらの要件を回避し、まだを使用して、特定のマネージ クラス型にラップされるオブジェクトの取得、<xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-893">Alternatively, you can avoid these requirements and still get an object that is wrapped with a specific managed class type by using the <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-894">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-894">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-895">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-895">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant">
      <MemberSignature Language="C#" Value="public static object GetObjectForNativeVariant (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForNativeVariant(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant (pSrcNativeVariant As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="24ee1-896">A pointer to a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-896">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-897">Converts a COM VARIANT to an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-897">Converts a COM VARIANT to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-898">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-898">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-899"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> アンマネージ VARIANT 型への生のポインターに対応するマネージ オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-899"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns a managed object that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="24ee1-900">Interopmarshaler は、バリアント型をマネージ コードに公開するときに、同じ変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-900">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="24ee1-901"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> 反対側の機能を提供<xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-901"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-902">バリアント型が VT_ERROR、<xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A>型のオブジェクトを返します`Int32`の代わりに`UInt32`です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-902">When the VARIANT type is VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns an object of type `Int32` instead of `UInt32`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="24ee1-903">
            <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-903">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="24ee1-904">
            <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-904">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-905">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-905">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-906">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-906">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObjectForNativeVariant&lt;T&gt; (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObjectForNativeVariant&lt;T&gt;(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant(Of T) (pSrcNativeVariant As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-907">COM VARIANT に変換する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-907">The type to which to convert the COM VARIANT.</span>
          </span>
        </typeparam>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="24ee1-908">A pointer to a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-908">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-909">[Supported in the .NET Framework 4.5.1 and later versions]  Converts a COM VARIANT to an object of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-909">[Supported in the .NET Framework 4.5.1 and later versions]  Converts a COM VARIANT to an object of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-910">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-910">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-911"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> 型のマネージ オブジェクトを返します`T`アンマネージ VARIANT 型への生のポインターに対応します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-911"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> returns a managed object of type `T` that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="24ee1-912">Interopmarshaler は、バリアント型をマネージ コードに公開するときに、同じ変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-912">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="24ee1-913"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> 反対側の機能を提供<xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-913"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="24ee1-914">
            <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-914">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="24ee1-915">
            <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-915">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-916">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-916">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-917">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-917">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants">
      <MemberSignature Language="C#" Value="public static object[] GetObjectsForNativeVariants (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectsForNativeVariants(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants (aSrcNativeVariant As IntPtr, cVars As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; obj[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="24ee1-918">A pointer to the first element of an array of COM VARIANTs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-918">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="24ee1-919">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-919">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-920">Converts an array of COM [VARIANTs](http://go.microsoft.com/fwlink/?LinkId=148670) to an array of objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-920">Converts an array of COM [VARIANTs](http://go.microsoft.com/fwlink/?LinkId=148670) to an array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-921">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-921">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-922"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> アンマネージ VARIANT 型の C スタイル配列への生のポインターに対応するマネージ オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-922"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> returns an array of managed objects that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="24ee1-923">Interopmarshaler は、バリアント型をマネージ コードに公開するときに、同じ変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-923">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="24ee1-924">メソッドを返しますが、空の配列、`cVars`パラメーターが 0 です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-924">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="24ee1-925">オブジェクトの配列 (戻り値) は、通常どおりガベージ コレクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-925">The object array (the return value) gets garbage collected as usual.</span></span> <span data-ttu-id="24ee1-926">アンマネージの入力配列や入力配列の個々 のバリアントは解放されません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-926">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="24ee1-927">したがって、必要に応じてそれらを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-927">Therefore it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-928">
            <paramref name="cVars" /> is a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-928">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-929">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-929">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-930">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-930">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] GetObjectsForNativeVariants&lt;T&gt; (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetObjectsForNativeVariants&lt;T&gt;(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants(Of T) (aSrcNativeVariant As IntPtr, cVars As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; 'T[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-931">返される配列の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-931">The type of the array to return.</span>
          </span>
        </typeparam>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="24ee1-932">A pointer to the first element of an array of COM VARIANTs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-932">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="24ee1-933">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-933">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-934">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an array of COM VARIANTs to an array of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-934">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an array of COM VARIANTs to an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-935">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-935">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> 配列を返します`T`生のポインターをアンマネージ VARIANT 型の C スタイル配列に対応します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> returns an array of `T` that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="24ee1-937">Interopmarshaler は、バリアント型をマネージ コードに公開するときに、同じ変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-937">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="24ee1-938">メソッドを返しますが、空の配列、`cVars`パラメーターが 0 です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-938">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="24ee1-939">返される配列はガベージ コレクトされる通常どおりです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-939">The returned array is garbage-collected as usual.</span></span> <span data-ttu-id="24ee1-940">アンマネージの入力配列や入力配列の個々 のバリアントは解放されません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-940">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="24ee1-941">したがっては必要に応じてそれらを解放するユーザーの責任になります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-941">Therefore, it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-942">
            <paramref name="cVars" /> is a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-942">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-943">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-943">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-944">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-944">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetStartComSlot">
      <MemberSignature Language="C#" Value="public static int GetStartComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStartComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStartComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetStartComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetStartComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetStartComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="24ee1-945">A type that represents an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-945">A type that represents an interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-946">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-946">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-947">The first VTBL slot that contains user-defined methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-947">The first VTBL slot that contains user-defined methods.</span>
          </span>
          <span data-ttu-id="24ee1-948">The first slot is 3 if the interface is based on [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), and 7 if the interface is based on [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-948">The first slot is 3 if the interface is based on [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), and 7 if the interface is based on [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-949">このメソッドは、インターフェイスまたはクラスの 0 から始まる v-table から番号を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-949">This method returns the zero-based v-table number for an interface or a class.</span></span> <span data-ttu-id="24ee1-950">クラスで使用すると、返されるスロット番号は、クラスのクラス インターフェイスを参照します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-950">When used on a class, the slot number that is returned refers to the class interface for the class.</span></span> <span data-ttu-id="24ee1-951">自動ディスパッチ クラス インターフェイスの場合は、このメソッドは常にディスパッチ専用インターフェイスがマネージ クライアントに v テーブルを公開しないことを示すために-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-951">If the class interface is auto-dispatch, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="24ee1-952">使用することができます<xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A>と<xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType>と共に<xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>に指定された範囲内のスロットを渡します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-952">You can use <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="24ee1-953">詳細については、次を参照してください。[クラス インターフェイスの概要](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-953">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-954">
            <paramref name="t" /> is not visible from COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-954">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-955">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-955">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-956">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-956">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetThreadFromFiberCookie">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread GetThreadFromFiberCookie (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Thread GetThreadFromFiberCookie(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetThreadFromFiberCookie (cookie As Integer) As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Thread ^ GetThreadFromFiberCookie(int cookie);" />
      <MemberSignature Language="F#" Value="static member GetThreadFromFiberCookie : int -&gt; System.Threading.Thread" Usage="System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="24ee1-957">An integer that represents a fiber cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-957">An integer that represents a fiber cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-958">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-958">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-959">A thread that corresponds to the <paramref name="cookie" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-959">A thread that corresponds to the <paramref name="cookie" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-960">ファイバー クッキーとは、そのファイバー スケジューリングの決定に共通言語ランタイムに警告するときに、ホストによって使用される不透明なトークンです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-960">Fiber cookies are opaque tokens that are used by the host when alerting the common language runtime to its fiber-scheduling decisions.</span></span> <span data-ttu-id="24ee1-961">これらはスタックで構成し、コンテキストを登録します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-961">They consist of a stack and register context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-962">The <paramref name="cookie" /> parameter is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-962">The <paramref name="cookie" /> parameter is 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-963">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-963">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-964">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-964">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName="GetTypedObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetTypedObjectForIUnknown (IntPtr pUnk, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetTypedObjectForIUnknown(native int pUnk, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypedObjectForIUnknown (pUnk As IntPtr, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetTypedObjectForIUnknown(IntPtr pUnk, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetTypedObjectForIUnknown : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown (pUnk, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="24ee1-965">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-965">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="24ee1-966">The type of the requested managed class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-966">The type of the requested managed class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-967">Returns a managed object of a specified type that represents a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-967">Returns a managed object of a specified type that represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-968">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-968">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-969">`t` COM インポート型または COM インポート型のサブタイプのいずれかをパラメーターとして使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-969">The `t` parameter must be either a COM-imported type or a subtype of a COM-imported type.</span></span> <span data-ttu-id="24ee1-970">さらに、`t`によってインポートされたメタデータを持つ型である必要があります、 [Tlbimp.exe (タイプ ライブラリ インポーター)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)ツールです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-970">In addition, `t` must be a type whose metadata was imported by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool.</span></span> <span data-ttu-id="24ee1-971">この型は、クラスと関連付けられているコクラス インターフェイスではなく、COM クラスの名前が格納されているにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-971">This type must be a class and not an associated coclass interface, which carries the name of the COM class.</span></span> <span data-ttu-id="24ee1-972">たとえば、Tlbimp.exe でインポート`Myclass`と呼ばれるクラスとして`MyclassClass`コクラスのインターフェイスとして次のように呼び出されます。 `Myclass`、使用する必要があります`MyclassClass`(いない`Myclass`) このメソッドを使用してします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-972">For example, if Tlbimp.exe imports `Myclass` as a class called `MyclassClass` and as a coclass interface called `Myclass`, you must use `MyclassClass` (not `Myclass`) with this method.</span></span> <span data-ttu-id="24ee1-973">インポートされたクラスおよびインターフェイスをコクラスの追加については、次を参照してください。[型変換のインポート](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-973">For additional information about imported classes and coclass interfaces, see [Imported Type Conversion](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span></span>  
  
 <span data-ttu-id="24ee1-974">オブジェクトが既に取得されている場合、`pUnk`パラメーター、`t`は無視され、既存のオブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-974">If an object has already been obtained for the `pUnk` parameter, `t` is ignored and the existing object is returned.</span></span> <span data-ttu-id="24ee1-975">`pUnk` 表す、[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)インターフェイス ポインターです。 ただし、すべての COM インターフェイスから直接または間接的にを派生するため`IUnknown`、任意の COM インターフェイスはこのメソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-975">`pUnk` represents an[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="24ee1-976">によって返されるオブジェクト<xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A>は、[ランタイム呼び出し可能ラッパー](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) は、共通言語ランタイムがそのとして管理を行って、他のマネージ オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-976">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), which the common language runtime manages as it does any other managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-977">
            <paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-977">
              <paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span>
          </span>
          <span data-ttu-id="24ee1-978">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-978">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-979">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-979">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-980">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-980">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeForITypeInfo">
      <MemberSignature Language="C#" Value="public static Type GetTypeForITypeInfo (IntPtr piTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeForITypeInfo(native int piTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeForITypeInfo (piTypeInfo As IntPtr) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeForITypeInfo(IntPtr piTypeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeForITypeInfo : nativeint -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo piTypeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="piTypeInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="piTypeInfo">
          <span data-ttu-id="24ee1-981">The <see langword="ITypeInfo" /> interface to marshal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-981">The <see langword="ITypeInfo" /> interface to marshal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-982">Converts an unmanaged [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-982">Converts an unmanaged [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-983">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-983">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-984"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> 返します、<xref:System.Type?displayProperty=nameWithType>元の型に基づいているインスタンス。</span><span class="sxs-lookup"><span data-stu-id="24ee1-984"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> returns a <xref:System.Type?displayProperty=nameWithType> instance that is based on the original type.</span></span> <span data-ttu-id="24ee1-985">適用することができます、<xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType>に標準の相互運用マーシャ リング動作をこのカスタム マーシャラーに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-985">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span> <span data-ttu-id="24ee1-986">[Tlbimp.exe (タイプ ライブラリ インポーター)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)ツールでは、カスタム マーシャラーを使用して、翻訳`ITypeInfo`パラメーター<xref:System.Type?displayProperty=nameWithType>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="24ee1-986">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool uses the custom marshaler to translate `ITypeInfo` parameters to <xref:System.Type?displayProperty=nameWithType> parameters.</span></span> <span data-ttu-id="24ee1-987">ただし、取得した場合、`ITypeInfo`インターフェイスをいくつか意味 Tlbimp.exe 以外の場合は、使用できます<xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>同じ変換を手動で実行します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-987">However, if you obtain an `ITypeInfo` interface by some means other than Tlbimp.exe, you can use <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> to manually perform the same translation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-988">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-988">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-989">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-989">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromCLSID">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromCLSID (Guid clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromCLSID(valuetype System.Guid clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromCLSID (clsid As Guid) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromCLSID(Guid clsid);" />
      <MemberSignature Language="F#" Value="static member GetTypeFromCLSID : Guid -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeFromCLSID clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="clsid">
          <span data-ttu-id="24ee1-990">The CLSID of the type to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-990">The CLSID of the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-991">Returns the type associated with the specified class identifier (CLSID).</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-991">Returns the type associated with the specified class identifier (CLSID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-992">
            <see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-992">
              <see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeInfoName">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-993">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-993">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (typeInfo As ITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::ComTypes::ITypeInfo ^ typeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.ComTypes.ITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Runtime.InteropServices.ComTypes.ITypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo">
          <span data-ttu-id="24ee1-994">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-994">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-995">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-995">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-996">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-996">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-997">によって表される型の名前を取得することも、`ITypeInfo`を呼び出して、<xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType>メソッドとその最初のパラメーターの場合は-1 を渡します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-997">You can also retrieve the name of the type represented by an `ITypeInfo` by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-998">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-998">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-999">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-999">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1000">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1000">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.UCOMITypeInfo pTI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.UCOMITypeInfo pTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (pTI As UCOMITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::UCOMITypeInfo ^ pTI);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.UCOMITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName pTI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" />
      </Parameters>
      <Docs>
        <param name="pTI">
          <span data-ttu-id="24ee1-1001">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1001">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1002">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1002">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1003">The name of the type that the <paramref name="pTI" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1003">The name of the type that the <paramref name="pTI" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1004">によって表される型の名前を取得することも、`ITypeInfo`オブジェクトを呼び出して、<xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType>メソッドとその最初のパラメーターの場合は-1 を渡します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1004">You can also retrieve the name of the type represented by an `ITypeInfo` object by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1005">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1005">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1006">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1006">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibGuid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1007">Retrieves the library identifier (LIBID) of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1007">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (typelib As ITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="24ee1-1008">The type library whose LIBID is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1008">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1009">Retrieves the library identifier (LIBID) of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1009">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1010">The LIBID of the specified type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1010">The LIBID of the specified type library.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 既存のタイプ ライブラリから直接、LIBID を抽出します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="24ee1-1012">この操作とは異なる、<xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType>する必要があります、LIBID を計算するメソッドは現在のアセンブリに基づきます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1012">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="24ee1-1013">ライブラリの識別子の詳細については、次を参照してください。[アセンブリ変換のエクスポート](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1013">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1014">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1014">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1015">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1015">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (pTLB As UCOMITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.UCOMITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="24ee1-1016">The type library whose LIBID is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1016">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1017">Retrieves the library identifier (LIBID) of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1017">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1018">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1018">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1019"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 既存のタイプ ライブラリから直接、LIBID を抽出します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1019"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="24ee1-1020">この操作とは異なる、<xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType>する必要があります、LIBID を計算するメソッドは現在のアセンブリに基づきます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1020">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="24ee1-1021">ライブラリの識別子の詳細については、次を参照してください。[アセンブリ変換のエクスポート](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1021">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1022">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1022">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1023">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1023">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuidForAssembly">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuidForAssembly (System.Reflection.Assembly asm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuidForAssembly(class System.Reflection.Assembly asm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuidForAssembly (asm As Assembly) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuidForAssembly(System::Reflection::Assembly ^ asm);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuidForAssembly : System.Reflection.Assembly -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly asm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asm" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="asm">
          <span data-ttu-id="24ee1-1024">The assembly from which the type library was exported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1024">The assembly from which the type library was exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1025">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1025">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1026">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1026">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1027">アセンブリはタイプ ライブラリにエクスポートされると、タイプ ライブラリには、LIBID が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1027">When assemblies are exported to type libraries, the type library is assigned a LIBID.</span></span> <span data-ttu-id="24ee1-1028">LIBID を明示的に設定するには適用することによって、<xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType>アセンブリにレベル、またはそれが自動的に生成します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1028">You can set the LIBID explicitly by applying the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> at the assembly level, or it can be generated automatically.</span></span> <span data-ttu-id="24ee1-1029">[Tlbimp.exe (タイプ ライブラリ インポーター)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)ツールは、アセンブリの id に基づいた LIBID 値を計算します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1029">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool calculates a LIBID value based on the identity of the assembly.</span></span> <span data-ttu-id="24ee1-1030"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 関連付けられている LIBID を返します、<xref:System.Runtime.InteropServices.GuidAttribute>属性が適用されている場合、します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1030"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> returns the LIBID that is associated with the <xref:System.Runtime.InteropServices.GuidAttribute>, if the attribute is applied.</span></span> <span data-ttu-id="24ee1-1031">それ以外の場合、<xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A>計算値を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1031">Otherwise, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> returns the calculated value.</span></span> <span data-ttu-id="24ee1-1032">また、使用することができます、<xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A>メソッドを既存のタイプ ライブラリから実際の LIBID を抽出します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1032">Alternatively, you can use the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> method to extract the actual LIBID from an existing type library.</span></span>  
  
 <span data-ttu-id="24ee1-1033">参照してください、[アセンブリ変換のエクスポート](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)ライブラリ識別子の詳細についてはトピックです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1033">See the [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) topic for more information about library identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1034">
            <paramref name="asm" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1034">
              <paramref name="asm" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1035">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1035">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1036">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1036">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GuidAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibLcid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1037">Retrieves the LCID of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1037">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (typelib As ITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="24ee1-1038">The type library whose LCID is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1038">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1039">Retrieves the LCID of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1039">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1040">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1040">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1041">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1041">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1042">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1042">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (pTLB As UCOMITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.UCOMITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="24ee1-1043">The type library whose LCID is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1043">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1044">Retrieves the LCID of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1044">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1045">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1045">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1046">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1046">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1047">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1047">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1048">Retrieves the name of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1048">Retrieves the name of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (typelib As ITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="24ee1-1049">The type library whose name is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1049">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1050">Retrieves the name of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1050">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1051">The name of the type library that the <paramref name="typelib" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1051">The name of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1052">このメソッドによって返される名前は、Microsoft ADO タイプ ライブラリの ADODB などのライブラリ ステートメントと共に使用する id です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1052">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="24ee1-1053">名前は、ファイル名ではありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1053">The name is not a file name.</span></span>  
  
 <span data-ttu-id="24ee1-1054">呼び出すことによって、タイプ ライブラリ名を取得することも、<xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType>メソッドとその最初のパラメーターの場合は-1 を渡します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1054">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1055">The <paramref name="typelib" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1055">The <paramref name="typelib" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1056">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1056">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1057">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1057">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (pTLB As UCOMITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.UCOMITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="24ee1-1058">The type library whose name is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1058">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1059">Retrieves the name of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1059">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1060">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1060">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1061">このメソッドによって返される名前は、Microsoft ADO タイプ ライブラリの ADODB などのライブラリ ステートメントと共に使用する id です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1061">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="24ee1-1062">名前は、ファイル名ではありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1062">The name is not a file name.</span></span>  
  
 <span data-ttu-id="24ee1-1063">呼び出すことによって、タイプ ライブラリ名を取得することも、<xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType>メソッドとその最初のパラメーターの場合は-1 を渡します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1063">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1064">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1064">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1065">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1065">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibVersionForAssembly">
      <MemberSignature Language="C#" Value="public static void GetTypeLibVersionForAssembly (System.Reflection.Assembly inputAssembly, out int majorVersion, out int minorVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTypeLibVersionForAssembly(class System.Reflection.Assembly inputAssembly, [out] int32&amp; majorVersion, [out] int32&amp; minorVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetTypeLibVersionForAssembly (inputAssembly As Assembly, ByRef majorVersion As Integer, ByRef minorVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetTypeLibVersionForAssembly(System::Reflection::Assembly ^ inputAssembly, [Runtime::InteropServices::Out] int % majorVersion, [Runtime::InteropServices::Out] int % minorVersion);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibVersionForAssembly : System.Reflection.Assembly *  *  -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly (inputAssembly, majorVersion, minorVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="majorVersion" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="minorVersion" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inputAssembly">
          <span data-ttu-id="24ee1-1066">A managed assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1066">A managed assembly.</span>
          </span>
        </param>
        <param name="majorVersion">
          <span data-ttu-id="24ee1-1067">The major version number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1067">The major version number.</span>
          </span>
        </param>
        <param name="minorVersion">
          <span data-ttu-id="24ee1-1068">The minor version number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1068">The minor version number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1069">Retrieves the version number of a type library that will be exported from the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1069">Retrieves the version number of a type library that will be exported from the specified assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1070">使用してアセンブリをエクスポートする前に<xref:System.Runtime.InteropServices.TypeLibExporterFlags>で、`CallerResolvedReferences`値、アセンブリからタイプ ライブラリのバージョンを取得するこのメソッドを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1070">Before exporting an assembly by using <xref:System.Runtime.InteropServices.TypeLibExporterFlags> with the `CallerResolvedReferences` value, you can use this method to retrieve the type library version from the assembly.</span></span>  
  
 <span data-ttu-id="24ee1-1071">適用しない場合、<xref:System.Runtime.InteropServices.TypeLibVersionAttribute>生成されたタイプ ライブラリのバージョン番号属性に明示的に制御するエクスポートされたアセンブリをタイプ ライブラリがアセンブリと同じバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1071">If you do not apply the <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> attribute to an exported assembly to explicitly control the version number of the generated type library, the type library will have the same version number as the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1072">
            <paramref name="inputAssembly" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1072">
              <paramref name="inputAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1073">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1073">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1074">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1074">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
        <altmember cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" />
        <altmember cref="T:System.Runtime.InteropServices.ITypeLibConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetUniqueObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetUniqueObjectForIUnknown (IntPtr unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUniqueObjectForIUnknown(native int unknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUniqueObjectForIUnknown (unknown As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUniqueObjectForIUnknown(IntPtr unknown);" />
      <MemberSignature Language="F#" Value="static member GetUniqueObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown unknown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unknown" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="unknown">
          <span data-ttu-id="24ee1-1075">A managed pointer to an <see langword="IUnknown" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1075">A managed pointer to an <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1076">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1076">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1077">A unique RCW for the specified <see langword="IUnknown" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1077">A unique RCW for the specified <see langword="IUnknown" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1078"><xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A>メソッドは一致しないため、一意の RCW を受信することを確認、`IUnknown`既存のオブジェクトへのポインター。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1078">The <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> method ensures that you receive a unique RCW, because it does not match an `IUnknown` pointer to an existing object.</span></span> <span data-ttu-id="24ee1-1079">呼び出す他のコードの影響を受けないを一意の RCW を作成するときにこのメソッドを使用して、<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1079">Use this method when you have to create a unique RCW that is not impacted by other code that calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1080">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1080">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1081">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1081">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedThunkForManagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetUnmanagedThunkForManagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetUnmanagedThunkForManagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetUnmanagedThunkForManagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetUnmanagedThunkForManagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="24ee1-1082">A pointer to the method to marshal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1082">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="24ee1-1083">A pointer to the method signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1083">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="24ee1-1084">The number of bytes in <c>pbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1084">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1085">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1085">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1086">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1086">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1087"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> コンパイラのサポートのみ公開されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1087"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1088">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1088">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1089">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1089">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsComObject">
      <MemberSignature Language="C#" Value="public static bool IsComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsComObject (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member IsComObject : obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-1090">The object to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1090">The object to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1091">Indicates whether a specified object represents a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1091">Indicates whether a specified object represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1092">
            <see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1092">
              <see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1093"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> 返します`true`の属性は、インスタンスのクラス型がかどうか<xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>かの属性がクラスから直接または間接的に派生<xref:System.Runtime.InteropServices.ComImportAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1093"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> returns `true` if the class type of the instance is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> or if it derives directly or indirectly from a class attributed with <xref:System.Runtime.InteropServices.ComImportAttribute>.</span></span> <span data-ttu-id="24ee1-1094">[Tlbimp.exe (タイプ ライブラリ インポーター)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)ツールでは、タイプ ライブラリをインポートするときのこの属性を適用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1094">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="24ee1-1095">その他の 2 つのメソッドが、指定したオブジェクトを返すための要件は、COM オブジェクトを表すかどうかを判断しても`true`このメソッドの要件とは異なります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1095">Two other methods also determine whether a specified object represents a COM object, but the requirements for returning `true` differ from this method's requirements.</span></span> <span data-ttu-id="24ee1-1096"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> 返します`true`かどうかクラス (またはインターフェイス) はの属性が<xref:System.Runtime.InteropServices.ComImportAttribute>直接返さない`true`の派生型です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1096"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> returns `true` if the class (or interface) is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> directly; it does not return `true` for derived types.</span></span> <span data-ttu-id="24ee1-1097"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> 返します`true`で型が考えられる場合<xref:System.Runtime.InteropServices.ComImportAttribute>または同じ GUID を持つ型から派生します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1097"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> returns `true` if the type is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> or derives from a type with the same GUID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1098">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1098">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="P:System.Type.IsImport" />
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="IsTypeVisibleFromCom">
      <MemberSignature Language="C#" Value="public static bool IsTypeVisibleFromCom (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeVisibleFromCom(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeVisibleFromCom (t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeVisibleFromCom(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member IsTypeVisibleFromCom : Type -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="24ee1-1099">The type to check for COM visibility.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1099">The type to check for COM visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1100">Indicates whether a type is visible to COM clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1100">Indicates whether a type is visible to COM clients.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1101">
            <see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1101">
              <see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1102"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> 1 つの手順で COM の可視性を確認できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1102"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> enables you to check for COM visibility in one step.</span></span> <span data-ttu-id="24ee1-1103">表示されていない型を COM から使用できません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1103">Types that are not visible cannot be used from COM.</span></span> <span data-ttu-id="24ee1-1104">型がである場合に表示されている`public`を隠ぺいされていない、<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1104">A type is visible if it is `public` and not hidden with the <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NumParamBytes">
      <MemberSignature Language="C#" Value="public static int NumParamBytes (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumParamBytes(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumParamBytes (m As MethodInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int NumParamBytes(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member NumParamBytes : System.Reflection.MethodInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.NumParamBytes m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="24ee1-1105">The method to be checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1105">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1106">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1106">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1107">The number of bytes required to represent the method parameters in unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1107">The number of bytes required to represent the method parameters in unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1108"><xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A>メソッドは、スタック サイズ (バイト単位) をアンマネージ メモリ内のメソッド シグネチャのパラメーターを表すために必要なを返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1108">The <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> method returns the stack size (in bytes) needed to represent the parameters of a method signature in unmanaged memory.</span></span>  
  
 <span data-ttu-id="24ee1-1109">このメソッドの戻り値は、プラットフォームに依存することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1109">Note that the return value of this method is platform-dependent.</span></span> <span data-ttu-id="24ee1-1110">たとえば、1 つの整数パラメーターのシグネチャには、32 ビット プラットフォームと 64 ビット プラットフォームでは 8 の値で 4 の値を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1110">For example, a signature with a single integer parameter returns a value of 4 on 32-bit platforms and a value of 8 on 64-bit platforms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1111">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1111">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1112">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1112">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1113">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1113">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1114">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1114">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OffsetOf">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf (Type t, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf(class System.Type t, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf (t As Type, fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr OffsetOf(Type ^ t, System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : Type * string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf (t, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="24ee1-1115">A value type or formatted reference type that specifies the managed class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1115">A value type or formatted reference type that specifies the managed class.</span>
          </span>
          <span data-ttu-id="24ee1-1116">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1116">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="24ee1-1117">The field within the <c>t</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1117">The field within the <c>t</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1118">Returns the field offset of the unmanaged form of the managed class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1118">Returns the field offset of the unmanaged form of the managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1119">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1119">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1120"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> 必ずしも対応しませんマネージ構造体レイアウトのオフセットにアンマネージ構造体のレイアウトの観点からのオフセットを提供します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1120"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="24ee1-1121">構造体をマーシャ リング、レイアウトを変換し、オフセットを変更できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1121">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="24ee1-1122">`t`値型または (いずれかをシーケンシャルまたは明示的なレイアウトで) 書式指定参照型パラメーターを指定できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1122">The `t` parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="24ee1-1123">使用して、全体のレイアウトのサイズを取得することができます、<xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1123">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="24ee1-1124">詳細については、次を参照してください。[値の型の既定のマーシャ リング](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1124">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24ee1-1125">以降では .NET Framework version 2.0、<xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A>プライベート フィールドを失う可能性があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1125">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1126">The class cannot be exported as a structure or the field is nonpublic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1126">The class cannot be exported as a structure or the field is nonpublic.</span>
          </span>
          <span data-ttu-id="24ee1-1127">Beginning with the .NET Framework version 2.0, the field may be private.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1127">Beginning with the .NET Framework version 2.0, the field may be private.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1128">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1128">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf&lt;T&gt; (string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf&lt;T&gt;(string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf(Of T) (fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr OffsetOf(System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf fieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-1129">マネージ値型または書式指定参照型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1129">A managed value type or formatted reference type.</span>
          </span>
          <span data-ttu-id="24ee1-1130">
            <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> 属性をクラスに適用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1130">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> attribute to the class.</span>
          </span>
        </typeparam>
        <param name="fieldName">
          <span data-ttu-id="24ee1-1131">The name of the field in the <c>T</c> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1131">The name of the field in the <c>T</c> type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1132">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the field offset of the unmanaged form of a specified managed class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1132">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the field offset of the unmanaged form of a specified managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1133">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1133">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1134"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> 必ずしも対応しませんマネージ構造体レイアウトのオフセットにアンマネージ構造体のレイアウトの観点からのオフセットを提供します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1134"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="24ee1-1135">構造体をマーシャ リング、レイアウトを変換し、オフセットを変更できます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1135">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="24ee1-1136">`T`値の型または (いずれかをシーケンシャルまたは明示的なレイアウトで) 書式指定参照型のジェネリック型パラメーターであることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1136">The `T` generic type parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="24ee1-1137">使用して、全体のレイアウトのサイズを取得することができます、<xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1137">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method.</span></span> <span data-ttu-id="24ee1-1138">詳細については、次を参照してください。[値の型の既定のマーシャ リング](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1138">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24ee1-1139">以降では .NET Framework version 2.0、<xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A>プライベート フィールドを失う可能性があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1139">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      </Docs>
    </Member>
    <Member MemberName="Prelink">
      <MemberSignature Language="C#" Value="public static void Prelink (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Prelink(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Prelink (m As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Prelink(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member Prelink : System.Reflection.MethodInfo -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Prelink m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="24ee1-1140">The method to be checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1140">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1141">Executes one-time method setup tasks without calling the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1141">Executes one-time method setup tasks without calling the method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1142">セットアップ タスクを使用して、事前に初期化して、対象のメソッドが呼び出されたときに自動的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1142">Setup tasks provide early initialization and are performed automatically when the target method is invoked.</span></span> <span data-ttu-id="24ee1-1143">最初の作業を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1143">First-time tasks include the following:</span></span>  
  
-   <span data-ttu-id="24ee1-1144">確認するプラットフォーム呼び出しのメタデータが正しく書式設定されています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1144">Verifying that the platform invoke metadata is correctly formatted.</span></span>  
  
-   <span data-ttu-id="24ee1-1145">関数を呼び出すすべてのマネージ型がプラットフォームの有効なパラメーターであることを確認します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1145">Verifying that all the managed types are valid parameters of platform invoke functions.</span></span>  
  
-   <span data-ttu-id="24ee1-1146">検索して、プロセスへのアンマネージ DLL の読み込みします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1146">Locating and loading the unmanaged DLL into the process.</span></span>  
  
-   <span data-ttu-id="24ee1-1147">プロセスのエントリ ポイントを検索しています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1147">Locating the entry point in the process.</span></span>  
  
 <span data-ttu-id="24ee1-1148">呼び出す<xref:System.Runtime.InteropServices.Marshal.Prelink%2A>プラットフォームの外部メソッドの呼び出しも何も起こりません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1148">Calling <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> on a method outside of platform invoke has no effect.</span></span> <span data-ttu-id="24ee1-1149">セットアップを実行するすべてのプラットフォームで実行できるタスクが使用して、型でメソッドを呼び出す<xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1149">To execute setup tasks on all platform invoke methods in a type, use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1150">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1150">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1151">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1151">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1152">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1152">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1153">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1153">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="PrelinkAll">
      <MemberSignature Language="C#" Value="public static void PrelinkAll (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrelinkAll(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrelinkAll (c As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrelinkAll(Type ^ c);" />
      <MemberSignature Language="F#" Value="static member PrelinkAll : Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PrelinkAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="24ee1-1154">The class whose methods are to be checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1154">The class whose methods are to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1155">Performs a pre-link check for all methods on a class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1155">Performs a pre-link check for all methods on a class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1156"><xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A>メソッドを呼び出して<xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType>指定された型のすべてのメソッドにします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1156">The <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> method invokes <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> on every method for a given type.</span></span> <span data-ttu-id="24ee1-1157"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> 各メソッドを呼び出さずに 1 回限りメソッド セットアップ タスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1157"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> executes one-time method setup tasks without calling each method.</span></span> <span data-ttu-id="24ee1-1158">使用することができます<xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A>プラットフォームに対してのみ呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1158">You can use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> only for platform invoke calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1159">The <paramref name="c" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1159">The <paramref name="c" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1160">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1160">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1161">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1161">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAnsi">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1162">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1162">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1163">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1163">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1164">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1164">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1165">A managed string that holds a copy of the unmanaged ANSI string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1165">A managed string that holds a copy of the unmanaged ANSI string.</span>
          </span>
          <span data-ttu-id="24ee1-1166">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1166">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1167"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1167"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1168">このメソッドは、アンマネージ文字列の内容のコピーを作成するため、必要に応じて、元の文字列を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1168">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="24ee1-1169">このメソッドは、の反対側の機能を提供、<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType>と<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1169">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1170">次の例では、<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>アンマネージからマネージ文字列を作成するメソッド`char`配列。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1170">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged `char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1171">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1171">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1172">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1172">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1173">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1173">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="24ee1-1174">The byte count of the input string to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1174">The byte count of the input string to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1175">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1175">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1176">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1176">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1177"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1177"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1178">このメソッドは、アンマネージ文字列の内容のコピーを作成するため、必要に応じて、元の文字列を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1178">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="24ee1-1179">このメソッドは、の反対側の機能を提供、<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType>と<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1179">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1180">次の例では、<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>アンマネージからマネージ文字列を作成するメソッド`char`配列。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1180">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged`char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1181">
            <paramref name="len" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1181">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1182">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1182">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1183">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1183">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAuto">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1184">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1184">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1185">For Unicode platforms, the address of the first Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1185">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="24ee1-1186">-or-  For ANSI plaforms, the address of the first ANSI character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1186">-or-  For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1187">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1187">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1188">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1188">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1189">かどうか、現在のプラットフォーム Unicode、ANSI の各文字が Unicode 文字に拡大変換は、このメソッドを呼び出します<xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1189">If the current platform is Unicode, each ANSI character is widened to a Unicode character and this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span></span> <span data-ttu-id="24ee1-1190">それ以外の場合、このメソッドを呼び出す<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1190">Otherwise, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span>  
  
 <span data-ttu-id="24ee1-1191"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1191"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1192">このメソッドは、アンマネージ文字列の内容のコピーを作成するため、必要に応じて、元の文字列を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1192">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="24ee1-1193"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 反対側の機能を提供、<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType>と<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1193"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1194">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1194">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1195">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1195">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1196">For Unicode platforms, the address of the first Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1196">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="24ee1-1197">-or-  For ANSI plaforms, the address of the first ANSI character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1197">-or-  For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="24ee1-1198">The number of characters to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1198">The number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1199">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1199">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1200">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1200">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1201">Unicode プラットフォームでは、このメソッドを呼び出す<xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>以外のプラットフォームでは ANSI、呼び出す<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1201">On Unicode platforms, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; on ANSI platforms, it calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span> <span data-ttu-id="24ee1-1202">これらのメソッドが呼び出される前に、変換は行われません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1202">No transformations are done before these methods are called.</span></span>  
  
 <span data-ttu-id="24ee1-1203"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1203"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1204">このメソッドは、アンマネージ文字列の内容のコピーを作成するため、必要に応じて、元の文字列を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1204">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="24ee1-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 反対側の機能を提供<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType>と<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1206">
            <paramref name="len" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1206">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1207">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1207">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1208">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1208">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringBSTR">
      <MemberSignature Language="C#" Value="public static string PtrToStringBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringBSTR (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringBSTR : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1209">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1209">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1210">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1210">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1211">A managed string that holds a copy of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1211">A managed string that holds a copy of the unmanaged string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1212">割り当てられた文字列でのみこのメソッドを呼び出すと、アンマネージ[SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx)と[SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx)関数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1212">Call this method only on strings that were allocated with the unmanaged [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) and [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) functions.</span></span>  
  
 <span data-ttu-id="24ee1-1213"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1213"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1214">このメソッドは、アンマネージ文字列の内容のコピーを作成するため、必要に応じて、元の文字列を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1214">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="24ee1-1215">このメソッドは、の反対側の機能を提供、<xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1215">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1216">
            <paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1216">
              <paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1217">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1217">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1218">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringUni">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1219">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1219">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1220">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1220">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1221">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1221">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1222">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1222">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1223"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> マネージ コードとアンマネージ コードを混在させる場合はカスタム マーシャ リング用、または使用するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1223"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1224">このメソッドは、アンマネージ文字列の内容のコピーを作成するため、必要に応じて、元の文字列を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1224">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="24ee1-1225">このメソッドは、の反対側の機能を提供、<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType>と<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1225">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1226">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1226">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1227">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1227">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1228">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1228">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="24ee1-1229">The number of Unicode characters to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1229">The number of Unicode characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1230">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1230">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1231">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1231">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1232"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1232"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1233">このメソッドは、アンマネージ文字列の内容のコピーを作成するため、必要に応じて、元の文字列を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1233">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="24ee1-1234">このメソッドは、の反対側の機能を提供、<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType>と<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1234">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1235">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1235">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1236">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1236">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr, int byteLen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr, int32 byteLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr, byteLen As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr, int byteLen);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 (ptr, byteLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="byteLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="byteLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStructure">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1237">Marshals data from an unmanaged block of memory to a managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1237">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static void PtrToStructure (IntPtr ptr, object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure(native int ptr, object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure (ptr As IntPtr, structure As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PtrToStructure(IntPtr ptr, System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * obj -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1238">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1238">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="24ee1-1239">The object to which the data is to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1239">The object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="24ee1-1240">This must be an instance of a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1240">This must be an instance of a formatted class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1241">Marshals data from an unmanaged block of memory to a managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1241">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1242"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> COM で必要な多くの場合、相互運用機能とプラットフォーム呼び出しとして構造体パラメーターが表示されるとき、<xref:System.IntPtr?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1242"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="24ee1-1243">値型では、このオーバー ロード メソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1243">You cannot use this overload method with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1244">Structure layout is not sequential or explicit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1244">Structure layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="24ee1-1245">-or-  Structure is a boxed value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1245">-or-  Structure is a boxed value type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1246">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1246">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1247">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1247">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static object PtrToStructure (IntPtr ptr, Type structureType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PtrToStructure(native int ptr, class System.Type structureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure (ptr As IntPtr, structureType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PtrToStructure(IntPtr ptr, Type ^ structureType);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structureType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1248">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1248">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structureType">
          <span data-ttu-id="24ee1-1249">The type of object to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1249">The type of object to be created.</span>
          </span>
          <span data-ttu-id="24ee1-1250">This object must represent a formatted class or a structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1250">This object must represent a formatted class or a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1251">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1251">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1252">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1252">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> COM で必要な多くの場合、相互運用機能とプラットフォーム呼び出しとして構造体パラメーターが表示されるとき、<xref:System.IntPtr?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="24ee1-1254">値の型は、このオーバー ロード メソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1254">You can pass a value type to this overload method.</span></span> <span data-ttu-id="24ee1-1255">この場合、返されたオブジェクトは、ボックス化されたインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1255">In this case, the returned object is a boxed instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1256">次の例は、マネージ構造体を作成し、アンマネージ メモリに転送し、マネージ メモリの使用するように転送、<xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1256">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 <span data-ttu-id="24ee1-1257">次の例では、マネージ構造体を使用して、メモリのアンマネージ ブロックをマーシャ リングする方法、<xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1257">The following example demonstrates how to marshal an unmanaged block of memory to a managed structure using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="24ee1-1258">このコードでは、32 ビットのコンパイルと仮定します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1258">This code assumes 32-bit compilation.</span></span> <span data-ttu-id="24ee1-1259">64 ビット コンパイラを使用する前に置き換える<xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType>で<xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1259">Before using a 64-bit compiler, replace <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> with <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[PtrToStructure#1](~/samples/snippets/cpp/VS_Snippets_CLR/PtrToStructure/CPP/pts.cpp#1)]
 [!code-csharp[PtrToStructure#1](~/samples/snippets/csharp/VS_Snippets_CLR/PtrToStructure/CS/pts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1260">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1260">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="24ee1-1261">-or-  The <paramref name="structureType" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1261">-or-  The <paramref name="structureType" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1262">
            <paramref name="structureType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1262">
              <paramref name="structureType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="24ee1-1263">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1263">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1264">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1264">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1265">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1265">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T PtrToStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T PtrToStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure(Of T) (ptr As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T PtrToStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-1266">データをコピーする先のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1266">The type of the object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="24ee1-1267">これは、書式指定クラスまたは構造体である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1267">This must be a formatted class or a structure.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="24ee1-1268">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1268">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1269">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1269">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1270">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1270">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1271"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> COM で必要な多くの場合、相互運用機能とプラットフォーム呼び出しとして構造体パラメーターが表されている<xref:System.IntPtr?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1271"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="24ee1-1272">値の型は、このメソッドのオーバー ロードに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1272">You can pass a value type to this method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1273">The layout of <typeparamref name="T" /> is not sequential or explicit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1273">The layout of <typeparamref name="T" /> is not sequential or explicit.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="24ee1-1274">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1274">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1275">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1275">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1276">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1276">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void PtrToStructure&lt;T&gt; (IntPtr ptr, T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure&lt;T&gt;(native int ptr, !!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure(Of T) (ptr As IntPtr, structure As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void PtrToStructure(IntPtr ptr, T structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * 'T -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-1277">型<c>構造</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1277">The type of <c>structure</c>.</span>
          </span>
          <span data-ttu-id="24ee1-1278">書式が設定されたクラスである必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1278">This must be a formatted class.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="24ee1-1279">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1279">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="24ee1-1280">The object to which the data is to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1280">The object to which the data is to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1281">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from an unmanaged block of memory to a managed object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1281">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from an unmanaged block of memory to a managed object of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1282"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> COM で必要な多くの場合、相互運用機能とプラットフォーム呼び出しとして構造体パラメーターが表されている<xref:System.IntPtr>値。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1282"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr> values.</span></span> <span data-ttu-id="24ee1-1283">値型では、このメソッドのオーバー ロードを使用できません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1283">You cannot use this method overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1284">Structure layout is not sequential or explicit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1284">Structure layout is not sequential or explicit.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1285">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1285">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1286">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1286">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="QueryInterface">
      <MemberSignature Language="C#" Value="public static int QueryInterface (IntPtr pUnk, ref Guid iid, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 QueryInterface(native int pUnk, valuetype System.Guid&amp; iid, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryInterface (pUnk As IntPtr, ByRef iid As Guid, ByRef ppv As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QueryInterface(IntPtr pUnk, Guid % iid, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberSignature Language="F#" Value="static member QueryInterface : nativeint *  *  -&gt; int" Usage="System.Runtime.InteropServices.Marshal.QueryInterface (pUnk, iid, ppv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="iid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppv" Type="System.IntPtr&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="24ee1-1287">The interface to be queried.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1287">The interface to be queried.</span>
          </span>
        </param>
        <param name="iid">
          <span data-ttu-id="24ee1-1288">The interface identifier (IID) of the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1288">The interface identifier (IID) of the requested interface.</span>
          </span>
        </param>
        <param name="ppv">
          <span data-ttu-id="24ee1-1289">When this method returns, contains a reference to the returned interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1289">When this method returns, contains a reference to the returned interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1290">Requests a pointer to a specified interface from a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1290">Requests a pointer to a specified interface from a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1291">An HRESULT that indicates the success or failure of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1291">An HRESULT that indicates the success or failure of the call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1292"><xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A>メソッドの公開、 [iunknown::queryinterface](http://go.microsoft.com/fwlink/?LinkID=144867) 、特定のインターフェイス ポインターを取得しようとしました。 COM オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1292">The <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> method exposes the [IUnknown::QueryInterface](http://go.microsoft.com/fwlink/?LinkID=144867) method of a COM object, which attempts to obtain a specific interface pointer.</span></span> <span data-ttu-id="24ee1-1293">使用して`QueryInterface`オブジェクトでは、com がマネージ コードで、キャスト演算を実行することと同じです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1293">Using `QueryInterface` on a COM object is the same as performing a cast operation in managed code.</span></span> <span data-ttu-id="24ee1-1294">このメソッドを使用してオブジェクトを呼び出すと、ポインターが返される前に、インターフェイス ポインターをインクリメントする参照カウントとします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1294">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="24ee1-1295">常に使用する<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>ポインターが完了したら、参照カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1295">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="24ee1-1296">取得する、<xref:System.IntPtr>を表す値、 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)インターフェイス ポインターを呼び出すことができます<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>、 <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>、または<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1296">To obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer, you can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1297">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1297">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1298">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1298">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1299">Reads a single byte from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1299">Reads a single byte from unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1300">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1300">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1301">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1301">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1302">Reads a single byte from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1302">Reads a single byte from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1303">The byte read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1303">The byte read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1304"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 0 の暗黙的なオフセットがあります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1304"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> has an implied offset of 0.</span></span> <span data-ttu-id="24ee1-1305">このメソッドのアンマネージ配列全体のコピーのコストが削減、アンマネージ C スタイルのバイト配列を直接操作できます (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1305">This method enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1306">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1306">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1307">次の例は、アンマネージ メモリのブロックを作成、バイトをアンマネージ メモリに書き込みます化し、アンマネージ メモリからのバイトを読み取り、アンマネージ メモリを破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1307">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 <span data-ttu-id="24ee1-1308">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.ReadByte%2A>アンマネージ文字の値を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1308">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1309">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1309">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1310">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1310">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1311">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1311">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1312">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1312">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1313">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1313">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1314">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1314">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1315">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1315">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1316">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1316">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1317">The byte read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1317">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1318"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 有効とは直接やり取りのアンマネージ配列全体のコピーのコストが削減、アンマネージ C スタイルのバイト配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1318"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1319">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1319">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1320">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadByte%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteByte%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1320">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 <span data-ttu-id="24ee1-1321">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.ReadByte%2A>アンマネージ文字の値を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1321">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1322">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1322">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1323">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1323">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1324">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1324">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As Object, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : obj * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1325">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1325">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1326">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1326">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1327">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1327">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1328">The byte read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1328">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1329"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 有効とは直接やり取りのアンマネージ配列全体のコピーのコストが削減、アンマネージ C スタイルのバイト配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1329"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1330">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1330">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1331">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1331">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1332">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1332">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1333">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1333">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1334">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1334">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1335">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1335">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1336">Reads a 16-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1336">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1337">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1337">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1338">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1338">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1339">Reads a 16-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1339">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1340">The 16-bit signed integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1340">The 16-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1341"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 0 の暗黙的なオフセットがあります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1341"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> has an implied offset of 0.</span></span> <span data-ttu-id="24ee1-1342">このメソッドにより、アンマネージの C スタイルとは直接やり取り`Int16`アンマネージ配列全体のコピーのコストが削減配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1342">This method enables direct interaction with an unmanaged C-style `Int16` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1343">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1343">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1344">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1344">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="24ee1-1345">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>アンマネージの値を読み取るメソッド`short`変数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1345">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1346">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1346">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1347">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1347">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1348">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1348">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1349">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1349">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1350">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1350">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1351">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1351">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1352">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1352">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1353">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1353">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1354">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1354">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1355"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 有効とは直接やり取りアンマネージ 16 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1355"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1356">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1356">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1357">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1357">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="24ee1-1358">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>アンマネージの値を読み取るメソッド`short`変数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1358">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1359">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1359">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1360">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1360">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1361">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1361">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As Object, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : obj * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1362">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1362">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1363">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1363">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1364">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1364">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1365">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1365">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1366"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 有効とは直接やり取りアンマネージ 16 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1366"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1367">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1367">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1368">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1368">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1369">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1369">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1370">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1370">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1371">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1371">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1372">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1372">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1373">Reads a 32-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1373">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1374">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1374">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1375">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1375">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1376">Reads a 32-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1376">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1377">The 32-bit signed integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1377">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1378"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 0 の暗黙的なオフセットがあります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1378"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> has an implied offset of 0.</span></span> <span data-ttu-id="24ee1-1379">このメソッドにより、アンマネージの C スタイルとは直接やり取り`Int32`アンマネージ配列全体のコピーのコストが削減配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1379">This method enables direct interaction with an unmanaged C-style `Int32` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1380">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1380">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1381">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1381">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="24ee1-1382">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>アンマネージの値を読み取るメソッド`int`変数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1382">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1383">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1383">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1384">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1384">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1385">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1385">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1386">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1386">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1387">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1387">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1388">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1388">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1389">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1389">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1390">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1390">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1391">The 32-bit signed integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1391">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1392"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 有効とは直接やり取りアンマネージ 32 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1392"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1393">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1393">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1394">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1394">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="24ee1-1395">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>アンマネージの値を読み取るメソッド`int`変数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1395">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1396">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1396">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1397">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1397">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1398">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1398">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As Object, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : obj * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1399">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1399">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1400">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1400">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1401">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1401">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1402">The 32-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1402">The 32-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1403"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 有効とは直接やり取りアンマネージ 32 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1403"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1404">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1404">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1405">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1405">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1406">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1406">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1407">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1407">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1408">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1408">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1409">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1409">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1410">Reads a 64-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1410">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1411">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1411">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1412">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1412">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1413">Reads a 64-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1413">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1414">The 64-bit signed integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1414">The 64-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1415"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 0 の暗黙的なオフセットがあります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1415"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> has an implied offset of 0.</span></span> <span data-ttu-id="24ee1-1416">このメソッドにより、アンマネージの C スタイルとは直接やり取り`Int64`アンマネージ配列全体のコピーのコストが削減配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1416">This method enables direct interaction with an unmanaged C-style `Int64` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1417">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1417">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1418">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1418">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="24ee1-1419">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>アンマネージの値を読み取るメソッド`__int64`変数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1419">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1420">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1420">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1421">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1421">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1422">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1422">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1423">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1423">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1424">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1424">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1425">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1425">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1426">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1426">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1427">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1427">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1428">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1428">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1429"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 有効とは直接やり取りアンマネージ 64 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1429"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1430">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1430">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1431">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1431">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="24ee1-1432">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>アンマネージの値を読み取るメソッド`__int64`変数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1432">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1433">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1433">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1434">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1434">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1435">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1435">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As Object, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : obj * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1436">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1436">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1437">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1437">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1438">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1438">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1439">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1439">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1440"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 有効とは直接やり取りアンマネージ 64 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1440"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1441">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1441">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1442">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1442">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1443">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1443">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1444">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1444">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1445">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1445">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1446">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1446">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1447">Reads a processor native sized integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1447">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1448">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1448">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1449">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1449">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1450">Reads a processor native-sized integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1450">Reads a processor native-sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1451">The integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1451">The integer read from unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1452">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1452">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1453"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 0 の暗黙的なオフセットがあります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1453"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> has an implied offset of 0.</span></span> <span data-ttu-id="24ee1-1454">このメソッドにより、アンマネージの C スタイルとは直接やり取り`IntPtr`アンマネージ配列全体のコピーのコストが削減配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1454">This method enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1455">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1455">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1456">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1456">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1457">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1457">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1458">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1458">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1459">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1459">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1460">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1460">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1461">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1461">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1462">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1462">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1463">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1463">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1464">Reads a processor native sized integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1464">Reads a processor native sized integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1465">The integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1465">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1466"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 有効とは直接やり取りアンマネージ C スタイル`IntPtr`アンマネージ配列全体のコピーのコストが削減配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1466"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1467">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1467">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1468">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1468">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1469">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1469">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1470">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1470">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1471">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1471">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As Object, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : obj * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1472">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1472">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1473">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1473">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1474">Reads a processor native sized integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1474">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1475">The integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1475">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1476"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 有効とは直接やり取りアンマネージ C スタイル`IntPtr`アンマネージ配列全体のコピーのコストが削減配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を読み取る前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1476"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1477">アライメントされていないメモリ位置からの読み取りはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1477">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1478">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1478">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1479">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1479">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1480">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1480">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1481">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1481">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1482">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1482">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocCoTaskMem (IntPtr pv, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocCoTaskMem(native int pv, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocCoTaskMem (pv As IntPtr, cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocCoTaskMem(IntPtr pv, int cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocCoTaskMem : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="24ee1-1483">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1483">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="24ee1-1484">The new size of the allocated block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1484">The new size of the allocated block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1485">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1485">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1486">An integer representing the address of the reallocated block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1486">An integer representing the address of the reallocated block of memory.</span>
          </span>
          <span data-ttu-id="24ee1-1487">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1487">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1488"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> 2 つのメモリ割り当ての変更方法の 1 つ、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1488"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> is one of two memory reallocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="24ee1-1489">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>は、その他)。再割り当てされたメモリのコンテンツの先頭は、元のコンテンツと同じただし、全体のメモリ ブロックは、別の場所にできます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1489">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is the other.) The beginning of the reallocated memory content is the same as the original content; however, the entire memory block can be in a different location.</span></span> <span data-ttu-id="24ee1-1490">このメソッドは、COM を公開[CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778)関数で、COM タスク メモリ アロケーターと呼びます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1490">This method exposes the COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1491">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1491">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1492">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1492">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1493">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1493">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocHGlobal (IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocHGlobal(native int pv, native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocHGlobal (pv As IntPtr, cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocHGlobal(IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocHGlobal : nativeint * nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocHGlobal (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="24ee1-1494">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1494">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="24ee1-1495">The new size of the allocated block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1495">The new size of the allocated block.</span>
          </span>
          <span data-ttu-id="24ee1-1496">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1496">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span>
          </span>
          <span data-ttu-id="24ee1-1497">If you pass a pointer, it is treated as a size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1497">If you pass a pointer, it is treated as a size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1498">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1498">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1499">A pointer to the reallocated memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1499">A pointer to the reallocated memory.</span>
          </span>
          <span data-ttu-id="24ee1-1500">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1500">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1501"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> API のメソッドは、2 つのメモリ割り当ての変更の 1 つ、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1501"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is one of two memory reallocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="24ee1-1502">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType>は、その他)。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1502">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> is the other.)</span></span>  
  
 <span data-ttu-id="24ee1-1503">このメソッドを公開、Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) Kernel32.dll から関数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1503">This method exposes the Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) function from Kernel32.dll.</span></span> <span data-ttu-id="24ee1-1504">返されたポインターの元とは異なることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1504">The returned pointer can differ from the original.</span></span> <span data-ttu-id="24ee1-1505">異なる場合は、元のメモリ ブロックの内容は、新しいブロックにコピーされているし、元のメモリ ブロックが解放されました。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1505">If it is different, the contents of the original memory block have been copied to the new block, and the original memory block has been freed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1506">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1506">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1507">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1507">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1508">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1508">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public static int Release (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Release(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Release (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Release(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member Release : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.Release pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="24ee1-1509">The interface to release.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1509">The interface to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1510">Decrements the reference count on the specified interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1510">Decrements the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1511">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1511">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1512">共通言語ランタイムでは、このメソッドを直接使用する必要がないようにする COM オブジェクトの参照カウントを管理します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1512">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="24ee1-1513">テスト目的でのみ、この値を使用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1513">Use this value only for testing purposes.</span></span> <span data-ttu-id="24ee1-1514">まれに、カスタム マーシャラーのテストなどでした方が、オブジェクトの有効期間を手動で操作するために必要です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1514">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="24ee1-1515">その呼び出しをのみプログラム<xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType>呼び出す必要があります<xref:System.Runtime.InteropServices.Marshal.Release%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1515">Only programs that call <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> should call <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span></span> <span data-ttu-id="24ee1-1516">呼び出す<xref:System.Runtime.InteropServices.Marshal.Release%2A>ゼロが未定義の動作を発生参照カウントに達した後にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1516">Calling <xref:System.Runtime.InteropServices.Marshal.Release%2A> after the reference count has reached zero causes undefined behavior.</span></span>  
  
 <span data-ttu-id="24ee1-1517">呼び出すことができます<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>、 <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>、または<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>を取得する、<xref:System.IntPtr>を表す値、 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)インターフェイス ポインターを解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1517">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer to release.</span></span> <span data-ttu-id="24ee1-1518">これらのメソッドを使用することも、<xref:System.Runtime.InteropServices.Marshal.Release%2A>メソッド、マネージ オブジェクトによって表される COM インターフェイスを解放するマネージ オブジェクトを[COM 呼び出し可能ラッパー](~/docs/framework/interop/com-callable-wrapper.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1518">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method on managed objects to release the COM interfaces represented by the managed object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1519">次の例は、取得する方法を示します、`IUnknown`インターフェイスを使用してマネージ オブジェクトを<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1519">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span> <span data-ttu-id="24ee1-1520">例では、呼び出すことでインターフェイス ポインターも解放し、<xref:System.Runtime.InteropServices.Marshal.Release%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1520">The example then releases the interface pointer by calling the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1521">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1521">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1522">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1522">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseComObject">
      <MemberSignature Language="C#" Value="public static int ReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member ReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="24ee1-1523">The COM object to release.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1523">The COM object to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1524">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1524">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1525">The new value of the reference count of the RCW associated with <paramref name="o" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1525">The new value of the reference count of the RCW associated with <paramref name="o" />.</span>
          </span>
          <span data-ttu-id="24ee1-1526">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1526">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1527">このメソッドは、マネージ コードから使用する COM オブジェクトの有効期間を明示的に制御を使用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1527">This method is used to explicitly control the lifetime of a COM object used from managed code.</span></span> <span data-ttu-id="24ee1-1528">このメソッドを使用すると、適切なタイミングで、または特定の順序でオブジェクトを解放する必要があります、リソースへの参照を保持する基になる COM オブジェクトを解放するのに必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1528">You should use this method to free the underlying COM object that holds references to resources in a timely manner or when objects must be freed in a specific order.</span></span>  
  
 <span data-ttu-id="24ee1-1529">COM インターフェイス ポインターでは、共通言語ランタイム (CLR) を入力、するたびに、RCW にラップします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1529">Every time a COM interface pointer enters the common language runtime (CLR), it is wrapped in an RCW.</span></span>  
  
 <span data-ttu-id="24ee1-1530">RCW に COM インターフェイス ポインターをマップするたびにインクリメントされる参照カウントがあります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1530">The RCW has a reference count that is incremented every time a COM interface pointer is mapped to it.</span></span> <span data-ttu-id="24ee1-1531"><xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>メソッド RCW の参照カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1531">The <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method decrements the reference count of an RCW.</span></span> <span data-ttu-id="24ee1-1532">ランタイムがアンマネージの COM オブジェクトのすべての参照を解放し、スロー、参照カウントが 0 になったときに、<xref:System.NullReferenceException?displayProperty=nameWithType>オブジェクトを使用して、さらにしようとするとします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1532">When the reference count reaches zero, the runtime releases all its references on the unmanaged COM object, and throws a <xref:System.NullReferenceException?displayProperty=nameWithType> if you attempt to use the object further.</span></span> <span data-ttu-id="24ee1-1533">ラッパーの参照カウントが呼び出すと、毎回インクリメントされた場合は、同じ COM インターフェイスが渡される 2 つ以上の時間アンマネージからマネージ コードに、<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>残っている参照の数を返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1533">If the same COM interface is passed more than one time from unmanaged to managed code, the reference count on the wrapper is incremented every time, and calling <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> returns the number of remaining references.</span></span>  
  
 <span data-ttu-id="24ee1-1534">このメソッドが正確にする必要がある場合に実行されるように、RCW 参照カウントの解放を強制することができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1534">This method enables you to force an RCW reference count release so that it occurs precisely when you want it to.</span></span> <span data-ttu-id="24ee1-1535">ただしの不適切な使用<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>が失敗し、アプリケーションが発生する可能性がありますか、アクセス違反が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1535">However, improper use of <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> may cause your application to fail, or may cause an access violation.</span></span>  
  
 <span data-ttu-id="24ee1-1536">アプリケーション ドメイン内のマネージ コードが COM コンポーネントを表す RCW を保持しているシナリオを検討してください。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1536">Consider a scenario in which managed code in an application domain is holding onto an RCW that represents a COM component.</span></span> <span data-ttu-id="24ee1-1537">呼び出す場合は、 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> RCW のメソッド、マネージ コードは、RCW にアクセスすることはできませんしが生成されます、<xref:System.Runtime.InteropServices.InvalidComObjectException>例外。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1537">If you call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the RCW, the managed code will be unable to access the RCW and will raise an <xref:System.Runtime.InteropServices.InvalidComObjectException> exception.</span></span>  
  
 <span data-ttu-id="24ee1-1538">重大なエラーは、RCW がリリースされたときに、RCW への呼び出しが実行されている場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1538">A more serious error may occur if a call to the RCW is executing when the RCW is released.</span></span> <span data-ttu-id="24ee1-1539">ここでは、呼び出しを行っているスレッドがアクセス違反が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1539">In this case, there is a good chance that the thread making the call will cause an access violation.</span></span> <span data-ttu-id="24ee1-1540">ただし、プロセス メモリが破損し、失敗した理由は、デバッグが困難にするまで実行し、プロセスを続行します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1540">However, process memory may become corrupted, and the process may continue to run until it fails for reasons that are very difficult to debug.</span></span>  
  
 <span data-ttu-id="24ee1-1541">このリスクはさらに悪化が使用されている COM コンポーネントの場合は、シングルトンでは、次の理由: CLR が COM を呼び出すことによって COM コンポーネントをアクティブに[CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894)を同じインターフェイス ポインターを返す関数をすべてシングルトン COM コンポーネントで呼び出された時刻。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1541">This risk is compounded when the COM component that is being used is a singleton, for the following reason: The CLR activates COM components by calling the COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894) function, which returns the same interface pointer every time it is called for singleton COM components.</span></span> <span data-ttu-id="24ee1-1542">したがって、アプリケーション ドメイン内のマネージ コードからは独立して個別の部分を使用して、同じ RCW シングルトン COM コンポーネントのいずれかと 1 つの呼び出し、 <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> COM コンポーネントのメソッドは、もう一方が壊れます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1542">Thus, separate and independent pieces of managed code in an application domain can be using the same RCW for a singleton COM component, and if either one calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the COM component, the other will be broken.</span></span>  
  
 <span data-ttu-id="24ee1-1543">そのため、使用、<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>絶対に必要な場合のみです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1543">Therefore, use the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> only if it is absolutely required.</span></span> <span data-ttu-id="24ee1-1544">COM コンポーネントが決定される時に解放されることを確認するには、このメソッドを呼び出す場合は、使用を検討、<xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1544">If you want to call this method to ensure that a COM component is released at a determined time, consider using the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method instead.</span></span> <span data-ttu-id="24ee1-1545"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> CLR が入った再回数にかかわらず、基になる COM コンポーネントをリリースします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1545"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> will release the underlying COM component regardless of how many times it has re-entered the CLR.</span></span> <span data-ttu-id="24ee1-1546">COM コンポーネントは、CLR を再入力するたびに、いずれかによって、RCW の内部参照カウントがインクリメントされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1546">The internal reference count of the RCW is incremented by one every time the COM component re-enters the CLR.</span></span> <span data-ttu-id="24ee1-1547">したがって、でしたを呼び出して、<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>値が返されるまでループ内のメソッドは 0 です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1547">Therefore, you could call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until the value returned is zero.</span></span> <span data-ttu-id="24ee1-1548">これは、場合と同じ結果が実現、<xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1548">This achieves the same result as the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1549">
            <paramref name="o" /> is not a valid COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1549">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="24ee1-1550">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1550">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1551">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1551">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1552">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1552">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseThreadCache">
      <MemberSignature Language="C#" Value="public static void ReleaseThreadCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseThreadCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseThreadCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseThreadCache();" />
      <MemberSignature Language="F#" Value="static member ReleaseThreadCache : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ReleaseThreadCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1553">Releases the thread cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1553">Releases the thread cache.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1554">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1554">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1555">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1555">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToBSTR (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToBSTR(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToBSTR (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToBSTR(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToBSTR : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1556">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1556">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1557">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1557">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1558">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1558">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1559"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A>メソッドは、カスタム マーシャ リングするために役立ちますまたはとの混合マネージ リソースとアンマネージ コードです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1559">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1560">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常に解放、`BSTR`を呼び出して完了すると、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1560">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1561">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1561">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="24ee1-1562">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1562">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1563">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1563">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1564">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1564">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1565">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1565">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="24ee1-1566">
            <para>このメソッドは、Windows 2000 Service Pack 3 を実行しているコンピューターでのみサポートされている以降です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1566">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1567">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1567">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1568">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1568">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1569">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1569">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1570"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A>メソッドは、カスタム マーシャ リングするために役立ちますまたはとの混合マネージ リソースとアンマネージ コードです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1570">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1571">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1571">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="24ee1-1572">文字列の文字は、ANSI 文字としてコピーされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1572">The characters of the string are copied as ANSI characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1573">次の例では、<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A>マーシャ リングし、のコンテンツを復号化するメソッド、<xref:System.Security.SecureString>アンマネージ メモリ ブロックへのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1573">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="24ee1-1574">次を使用して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>メソッドをゼロにしてアンマネージ ブロックを破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1574">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1575">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1575">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="24ee1-1576">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1576">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1577">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1577">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1578">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1578">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1579">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1579">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="24ee1-1580">
            <para>このメソッドは、Windows 2000 Service Pack 3 を実行しているコンピューターでのみサポートされている以降です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1580">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1581">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1581">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1582">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1582">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1583">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1583">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1584"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A>メソッドは、カスタム マーシャ リングするために役立ちますまたはとの混合マネージ リソースとアンマネージ コードです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1584">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1585">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1585">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="24ee1-1586">文字列の文字は、Unicode 文字としてコピーされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1586">The characters of the string are copied as Unicode characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1587">次の例では、<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A>マーシャ リングし、のコンテンツを復号化するメソッド、<xref:System.Security.SecureString>アンマネージ メモリ ブロックへのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1587">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="24ee1-1588">次を使用して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A>メソッドをゼロにしてアンマネージ ブロックを破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1588">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1589">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1589">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="24ee1-1590">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1590">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1591">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1591">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1592">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1592">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1593">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1593">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="24ee1-1594">
            <para>このメソッドは、Windows 2000 Service Pack 3 を実行しているコンピューターでのみサポートされている以降です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1594">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1595">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1595">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1596">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1596">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1597">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1597">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1598"><xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A>メソッドは、カスタム マーシャ リングするために役立ちますまたはとの混合マネージ リソースとアンマネージ コードです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1598">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1599">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1599">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1600">次の例では、<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A>マーシャ リングし、のコンテンツを復号化するメソッド、<xref:System.Security.SecureString>アンマネージ メモリ ブロックへのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1600">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="24ee1-1601">次を使用して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>メソッドをゼロにしてアンマネージ ブロックを破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1601">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1602">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1602">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="24ee1-1603">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1603">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1604">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1604">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1605">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1605">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1606">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1606">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="24ee1-1607">
            <para>このメソッドは、Windows 2000 Service Pack 3 を実行しているコンピューターでのみサポートされている以降です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1607">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1608">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1608">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1609">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1609">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1610">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1610">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1611"><xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A>メソッドは、マネージの混合コードとアンマネージ コードの場合、カスタム マーシャ リング用、または使用するために便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1611">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1612">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1612">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1613">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A>アンマネージ メソッド`LogonUser`を使用して偽装を実行する関数、<xref:System.Security.SecureString>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1613">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="24ee1-1614">使用して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A>をゼロにして、アンマネージ文字列の参照を解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1614">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1615">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1615">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="24ee1-1616">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1616">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1617">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1617">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1618">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1618">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1619">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1619">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="24ee1-1620">
            <para>このメソッドは、Windows 2000 Service Pack 3 を実行しているコンピューターでのみサポートされている以降です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1620">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetComObjectData">
      <MemberSignature Language="C#" Value="public static bool SetComObjectData (object obj, object key, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetComObjectData(object obj, object key, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetComObjectData (obj As Object, key As Object, data As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetComObjectData(System::Object ^ obj, System::Object ^ key, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetComObjectData : obj * obj * obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.SetComObjectData (obj, key, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="24ee1-1621">The COM object in which to store the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1621">The COM object in which to store the data.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="24ee1-1622">The key in the internal hash table of the COM object in which to store the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1622">The key in the internal hash table of the COM object in which to store the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="24ee1-1623">The data to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1623">The data to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1624">Sets data referenced by the specified key in the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1624">Sets data referenced by the specified key in the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1625">
            <see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1625">
              <see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1626">ラップされたすべての COM オブジェクト、[ランタイム呼び出し可能ラッパー](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) を関連付けられたハッシュ テーブルがある<xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A>データを追加します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1626">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) have an associated hash table, to which <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> adds data.</span></span> <span data-ttu-id="24ee1-1627"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> ハッシュ テーブルからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1627"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> retrieves data from the hash table.</span></span> <span data-ttu-id="24ee1-1628">メソッドを呼び出すか、コードからすることはありません。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1628">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1629">
            <paramref name="obj" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1629">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1630">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1630">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1631">
            <paramref name="obj" /> is not a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1631">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="24ee1-1632">-or-  <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1632">-or-  <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1633">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1633">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1634">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1634">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SizeOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1635">Returns the unmanaged size, in bytes, of a class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1635">Returns the unmanaged size, in bytes, of a class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (structure As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="24ee1-1636">The object whose size is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1636">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1637">Returns the unmanaged size of an object in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1637">Returns the unmanaged size of an object in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1638">The size of the specified object in unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1638">The size of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1639">このメソッドは、参照型またはボックス化された値型であることができます、構造体のインスタンスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1639">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="24ee1-1640">レイアウトには、シーケンシャルまたは明示的なをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1640">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="24ee1-1641">返されるサイズは、アンマネージ オブジェクトのサイズです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1641">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="24ee1-1642">オブジェクトのアンマネージ コードとマネージのサイズが異なることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1642">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="24ee1-1643">文字型のサイズが影響を受けた、<xref:System.Runtime.InteropServices.CharSet>そのクラスに適用される値。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1643">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="24ee1-1644">使用することができます、<xref:System.Runtime.InteropServices.Marshal.SizeOf%2A>メソッドを使用して割り当てをアンマネージ メモリの量を決定する、<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>と<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1644">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1645">次の例は、マネージ構造体を作成し、アンマネージ メモリに転送、マネージ メモリに転送します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1645">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory.</span></span> <span data-ttu-id="24ee1-1646">この例では、<xref:System.Runtime.InteropServices.Marshal.SizeOf%2A>アンマネージ メモリの量を割り当てることを確認します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1646">This example uses the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1647">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1647">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member SizeOf : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="24ee1-1648">The type whose size is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1648">The type whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1649">Returns the size of an unmanaged type in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1649">Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1650">The size of the specified type in unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1650">The size of the specified type in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1651">構造体があるない場合に、このメソッドを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1651">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="24ee1-1652">レイアウトには、シーケンシャルまたは明示的なをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1652">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="24ee1-1653">返されるサイズは、アンマネージ型のサイズです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1653">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="24ee1-1654">オブジェクトのアンマネージ コードとマネージのサイズが異なることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1654">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="24ee1-1655">文字型のサイズが影響を受けた、<xref:System.Runtime.InteropServices.CharSet>そのクラスに適用される値。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1655">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1656">次の例では、<xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1656">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method.</span></span> <span data-ttu-id="24ee1-1657">このコード例に示されている例の一部である、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1657">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#3](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#3)]
 [!code-csharp[Marshal#3](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#3)]
 [!code-vb[Marshal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1658">The <paramref name="t" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1658">The <paramref name="t" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1659">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1659">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberSignature Language="F#" Value="static member SizeOf : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-1660">サイズが返される型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1660">The type whose size is to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="24ee1-1661">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the size of an unmanaged type in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1661">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1662">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1662">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1663">構造体があるない場合に、このメソッドを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1663">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="24ee1-1664">レイアウトには、シーケンシャルまたは明示的なをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1664">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="24ee1-1665">返されるサイズは、アンマネージ型のサイズです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1665">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="24ee1-1666">オブジェクトのアンマネージ コードとマネージのサイズが異なることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1666">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="24ee1-1667">文字型のサイズが影響を受けた、<xref:System.Runtime.InteropServices.CharSet>そのクラスに適用される値。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1667">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; (T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;(!!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) (structure As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf(T structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : 'T -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-1668">型、<c>構造</c>パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1668">The type of the <c>structure</c> parameter.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="24ee1-1669">The object whose size is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1669">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1670">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the unmanaged size of an object of a specified type in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1670">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the unmanaged size of an object of a specified type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1671">The size, in bytes, of the specified object in unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1671">The size, in bytes, of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1672">このメソッドは、参照型またはボックス化された値型であることができます、構造体のインスタンスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1672">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="24ee1-1673">レイアウトには、シーケンシャルまたは明示的なをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1673">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="24ee1-1674">返されるサイズは、アンマネージ オブジェクトのサイズです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1674">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="24ee1-1675">オブジェクトのアンマネージ コードとマネージのサイズが異なることができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1675">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="24ee1-1676">文字型のサイズが影響を受けた、<xref:System.Runtime.InteropServices.CharSet>そのクラスに適用される値。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1676">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="24ee1-1677">使用することができます、<xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29>メソッドを使用して割り当てるをアンマネージ メモリの量を決定する、<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>と<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1677">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method to determine how much unmanaged memory to allocate by using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24ee1-1678">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1678">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr StringToBSTR (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToBSTR(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToBSTR (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToBSTR(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToBSTR : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1679">The managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1679">The managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1680">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1680">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1681">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1681">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1682"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1682"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1683">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常に解放、`BSTR`を呼び出して完了すると<xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1683">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-1684">このメソッドは、逆の<xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1684">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1685">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1685">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-1686">The length for <paramref name="s" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1686">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1687">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1687">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1688">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1688">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1689">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1689">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1690">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1690">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1691">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1691">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1692"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1692"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1693">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1693">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="24ee1-1694">このメソッドは、逆の<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1694">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-1695">文字列の文字は、ANSI 文字としてコピーされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1695">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1696">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1696">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-1697">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1697">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1698">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1698">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1699">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1699">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1700">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1700">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1701">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1701">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1702">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1702">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1703"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> マネージ コードとアンマネージ コードを混在させる場合はカスタム マーシャ リング用、または使用するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1703"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1704">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1704">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="24ee1-1705">このメソッドは、逆の<xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1705">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-1706">文字列の文字は、コードを実行しているオペレーティング システムに応じて、ANSI または Unicode のいずれかの文字としてコピーされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1706">The characters of the string are copied as either ANSI or Unicode characters, depending on the operating system where the code is executing.</span></span> <span data-ttu-id="24ee1-1707">Windows 98 では、文字は、ANSI 文字としてコピーされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1707">On Windows 98, the characters are copied as ANSI characters.</span></span> <span data-ttu-id="24ee1-1708">Windows NT 4.0、Windows 2000、Windows XP および Windows Server 2003 ファミリの文字は Unicode 文字としてコピーされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1708">On Windows NT 4.0, Windows 2000, Windows XP, and the Windows Server 2003 family, the characters are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1709">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1709">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-1710">The length for <paramref name="s" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1710">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1711">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1711">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1712">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1712">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1713">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1713">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1714">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1714">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1715">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1715">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1716"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> マネージ コードとアンマネージ コードを混在させる場合はカスタム マーシャ リング用、または使用するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1716"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1717">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1717">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-1718">このメソッドは、逆の<xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1718">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="24ee1-1719">文字列の文字は、Unicode 文字としてコピーされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1719">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-1720">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1720">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1721">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1721">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1722">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1722">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1723">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1723">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUTF8 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUTF8(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUTF8 (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUTF8(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUTF8 : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1724">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1724">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1725">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1725">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1726">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1726">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1727"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> カスタム マーシャ リング用、またはマネージ コードとアンマネージ コードを混在している場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1727"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1728">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1728">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="24ee1-1729"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> 反対側の機能を提供<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1729"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-1730">このメソッドは、埋め込まれた null 文字をコピーし、終端の null 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1730">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1731">次の例は、管理対象のコンテンツを変換する方法を示します<xref:System.String>クラスのアンマネージ メモリにし、完了時に、アンマネージ メモリの破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1731">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1732">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1732">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-1733">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1733">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1734">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1734">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1735">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1735">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1736">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1736">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1737">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1737">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1738">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1738">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1739"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> マネージ コードとアンマネージ コードを混在させる場合はカスタム マーシャ リング用、または使用するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1739"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1740">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1740">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="24ee1-1741">このメソッドは、逆の<xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1741">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-1742">このメソッドは、埋め込まれた null 文字をコピーし、終端の null 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1742">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1743">次の例は、管理対象のコンテンツを変換する方法を示します<xref:System.String>クラスのアンマネージ メモリにし、完了時に、アンマネージ メモリの破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1743">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAuto#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAuto/CPP/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1744">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1744">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1745">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1745">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1746">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1746">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-1747">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1747">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1748">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1748">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1749">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1749">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1750"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> マネージ コードとアンマネージ コードを混在させる場合はカスタム マーシャ リング用、または使用するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1750"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="24ee1-1751">このメソッドは、文字列に必要なアンマネージ メモリを割り当てて、ため常にメモリを解放するを呼び出して<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1751">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="24ee1-1752">このメソッドは、逆の<xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1752">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-1753">このメソッドは、埋め込まれた null 文字をコピーし、終端の null 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1753">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="24ee1-1754">The method could not allocate enough native heap memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1754">The method could not allocate enough native heap memory.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="24ee1-1755">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1755">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1756">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1756">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1757">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1757">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr">
      <MemberSignature Language="C#" Value="public static void StructureToPtr (object structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr(object structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr (structure As Object, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StructureToPtr(System::Object ^ structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : obj * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="24ee1-1758">A managed object that holds the data to be marshaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1758">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="24ee1-1759">This object must be a structure or an instance of a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1759">This object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="24ee1-1760">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1760">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="24ee1-1761">
            <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1761">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="24ee1-1762">The block must contain valid data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1762">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="24ee1-1763">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1763">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1764">Marshals data from a managed object to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1764">Marshals data from a managed object to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1765">場合`structure`値の型は、手書きまたはボックス化解除することができます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1765">If `structure` is a value type, it can be boxed or unboxed.</span></span> <span data-ttu-id="24ee1-1766">ボックス化される場合はボックス化されたコピーする前に</span><span class="sxs-lookup"><span data-stu-id="24ee1-1766">If it is boxed, it is unboxed before copying.</span></span>  
  
 <span data-ttu-id="24ee1-1767">書式設定されたクラスは、レイアウトを持つがで指定された参照型、<xref:System.Runtime.InteropServices.StructLayoutAttribute>属性のいずれかとして<xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>または<xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1767">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-1768"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> 内容をコピー `structure` 、事前に割り当てられたメモリ ブロックにする、`ptr`パラメーターをポイントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1768"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="24ee1-1769">場合`structure`COM インターフェイス ポインターをマーシャ リングできる参照型が含まれています (インターフェイス、レイアウト、なしのクラスと<xref:System.Object?displayProperty=nameWithType>)、マネージ オブジェクトは、参照カウントが維持されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1769">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="24ee1-1770">すべての他の参照型 (たとえば、文字列および配列) は、コピーにマーシャ リングされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1770">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="24ee1-1771">これらのマネージまたはアンマネージ オブジェクトを解放するを呼び出す必要があります、<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType>メソッドは、メモリ ブロックを解放する前にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1771">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="24ee1-1772">使用する場合、<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>メモリ ブロックを後で別のインスタンスをコピーする方法を指定する`true`の`fDeleteOld`参照を削除する参照型の前のインスタンスでカウントされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1772">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="24ee1-1773">それ以外の場合、マネージ参照アンマネージ typesand コピーは効果的にリークされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1773">Otherwise, the managed reference typesand unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="24ee1-1774">使用するため、全体的なパターン<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>のとおりです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1774">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> is as follows:</span></span>  
  
1.  <span data-ttu-id="24ee1-1775">最初の呼び出しで、<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>メソッド メモリ ブロックが割り当てられた後、`fDeleteOld`する必要があります`false`を消去するコンテンツが存在しないため、します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1775">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="24ee1-1776">指定`true`の`fDeleteOld`ブロックには、有効なデータが含まれている場合のみです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1776">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="24ee1-1777">メモリ ブロックを別のインスタンスにコピーして、オブジェクトが参照型を含む場合`fDeleteOld`する必要があります`true`に古い内容の種類の参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1777">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="24ee1-1778">オブジェクトの参照型が含まれている必要がありますを呼び出した場合、<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>メソッドは、メモリ ブロックを解放する前にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1778">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24ee1-1779">コピーせずに既存の構造をピン留めするには、<xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType>構造のピン留めされたハンドルを作成する型。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1779">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="24ee1-1780">ピン留めする方法の詳細については、「[コピーと固定](~/docs/framework/interop/copying-and-pinning.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1780">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1781">次の例は、マネージ構造体を作成、アンマネージ メモリの使用に転送、<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>メソッド、およびマネージ メモリを使用して、再度、転送、<xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1781">The following example creates a managed structure, transfers it to unmanaged memory using the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1782">
            <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1782">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
          <span data-ttu-id="24ee1-1783">-or-  <paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1783">-or-  <paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1784">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1784">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1785">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1785">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StructureToPtr&lt;T&gt; (T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr&lt;T&gt;(!!T structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr(Of T) (structure As T, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void StructureToPtr(T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : 'T * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-1786">マネージ オブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1786">The type of the managed object.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="24ee1-1787">A managed object that holds the data to be marshaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1787">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="24ee1-1788">The object must be a structure or an instance of a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1788">The object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="24ee1-1789">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1789">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="24ee1-1790">
            <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1790">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="24ee1-1791">The block must contain valid data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1791">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="24ee1-1792">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1792">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1793">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from a managed object of a specified type to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1793">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from a managed object of a specified type to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1794">書式設定されたクラスは、レイアウトを持つがで指定された参照型、<xref:System.Runtime.InteropServices.StructLayoutAttribute>属性のいずれかとして<xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>または<xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1794">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24ee1-1795"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> 内容をコピー `structure` 、事前に割り当てられたメモリ ブロックにする、`ptr`パラメーターをポイントします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1795"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="24ee1-1796">場合`structure`COM インターフェイス ポインターをマーシャ リングできる参照型が含まれています (インターフェイス、レイアウト、なしのクラスと<xref:System.Object?displayProperty=nameWithType>)、マネージ オブジェクトは、参照カウントが維持されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1796">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="24ee1-1797">すべての他の参照型 (たとえば、文字列および配列) は、コピーにマーシャ リングされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1797">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="24ee1-1798">これらのマネージまたはアンマネージ オブジェクトを解放するを呼び出す必要があります、<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29>メソッドは、メモリ ブロックを解放する前にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1798">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="24ee1-1799">使用する場合、<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29>メモリ ブロックを後で別のインスタンスをコピーする方法を指定する`true`の`fDeleteOld`参照を削除する参照型の前のインスタンスでカウントされます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1799">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="24ee1-1800">それ以外の場合、マネージ参照型とアンマネージのコピーが漏洩効果的にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1800">Otherwise, the managed reference types and unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="24ee1-1801">使用するため、全体的なパターン<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29>のとおりです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1801">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> is as follows:</span></span>  
  
1.  <span data-ttu-id="24ee1-1802">最初の呼び出しで、<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>メソッド メモリ ブロックが割り当てられた後、`fDeleteOld`する必要があります`false`を消去するコンテンツが存在しないため、します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1802">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="24ee1-1803">指定`true`の`fDeleteOld`ブロックには、有効なデータが含まれている場合のみです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1803">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="24ee1-1804">メモリ ブロックを別のインスタンスにコピーして、オブジェクトが参照型を含む場合`fDeleteOld`する必要があります`true`に古い内容の種類の参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1804">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="24ee1-1805">オブジェクトの参照型が含まれている必要がありますを呼び出した場合、<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>メソッドは、メモリ ブロックを解放する前にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1805">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24ee1-1806">コピーせずに既存の構造をピン留めするには、<xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType>構造のピン留めされたハンドルを作成する型。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1806">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="24ee1-1807">ピン留めする方法の詳細については、「[コピーと固定](~/docs/framework/interop/copying-and-pinning.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1807">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1808">
            <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1808">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1809">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1809">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1810">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1810">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="SystemDefaultCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemDefaultCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemDefaultCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemDefaultCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemDefaultCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemDefaultCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1811">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1811">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span>
          </span>
          <span data-ttu-id="24ee1-1812">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1812">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="24ee1-1813">次の例で、<xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1813">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="24ee1-1814">このコード例に示されている例の一部である、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1814">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemMaxDBCSCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemMaxDBCSCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemMaxDBCSCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemMaxDBCSCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1815">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1815">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span>
          </span>
          <span data-ttu-id="24ee1-1816">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1816">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="24ee1-1817">次の例で、<xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1817">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="24ee1-1818">このコード例に示されている例の一部である、<xref:System.Runtime.InteropServices.Marshal>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1818">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThrowExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1819">Throws an exception with a specific failure HRESULT value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1819">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="24ee1-1820">The HRESULT corresponding to the desired exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1820">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1821">Throws an exception with a specific failure HRESULT value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1821">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1822">このメソッドは、指定したエラーの HRESULT の例外オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1822">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="24ee1-1823">HRESULT が 0 または正の値 (成功コード) の場合は、作成または例外をスローせず、メソッドを返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1823">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="24ee1-1824">なお、<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29>に基づいて例外を返します、 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)が設定されている場合は、現在のスレッドのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1824">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="24ee1-1825">この場合、`errorCode`パラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1825">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="24ee1-1826">しないもの、いくつかのエラー Hresult は、定義済みの例外にマップします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1826">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="24ee1-1827">HRESULT は、定義済みの例外にマップされている場合<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>例外のインスタンスを作成し、それをスローします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1827">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="24ee1-1828">インスタンスを作成する場合は、 <xref:System.Runtime.InteropServices.COMException>hresult エラー コードのフィールドを初期化し、その例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1828">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="24ee1-1829">ときに<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>はアンマネージを使用して、エラーに関する追加情報の取得を試みます呼び出されると、 [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx)関数。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1829">When <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> is invoked, it attempts to retrieve extra information regarding the error by using the unmanaged [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) function.</span></span>  
  
 <span data-ttu-id="24ee1-1830">各 HRESULT から .NET Framework では、その比較可能な例外クラスへのマッピングを参照してください。[する方法: マップの Hresult と例外](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1830">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="24ee1-1831">場合によっては、<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>前の COM 呼び出しから例外を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1831">Occasionally, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> might return an exception from a previous COM call.</span></span> <span data-ttu-id="24ee1-1832">ここでは、次の回避策を使用して渡す`IntPtr(-1)`2 番目のパラメーターとして (`errorInfo`)。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1832">In this case, you can use the following workaround and pass `IntPtr(-1)` as the second parameter (`errorInfo`):</span></span>  
  
```  
[SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]  
public static void ThrowExceptionForHR(interrorCode,IntPtrerrorInfo)  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1833">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1833">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1834">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1834">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer, errorInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="24ee1-1835">The HRESULT corresponding to the desired exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1835">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="24ee1-1836">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1836">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="24ee1-1837">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1837">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1838">Throws an exception with a specific failure HRESULT, based on the specified [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1838">Throws an exception with a specific failure HRESULT, based on the specified [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1839">このメソッドは、指定したエラーの HRESULT の例外オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1839">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="24ee1-1840">HRESULT が 0 または正の値 (成功コード) の場合は、作成または例外をスローせず、メソッドを返します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1840">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="24ee1-1841"><xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>メソッド リリース、`errorInfo`パラメーター、減少、COM 参照の数、 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1841">The <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method releases the `errorInfo` parameter, decreasing the COM reference count of the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span></span>  
  
 <span data-ttu-id="24ee1-1842">なお、<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>に基づいて例外を返します、 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)が設定されている場合は、現在のスレッドのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1842">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="24ee1-1843">この場合、`errorCode`パラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1843">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="24ee1-1844">しないもの、いくつかのエラー Hresult は、定義済みの例外にマップします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1844">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="24ee1-1845">HRESULT は、定義済みの例外にマップされている場合<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>例外のインスタンスを作成し、それをスローします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1845">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="24ee1-1846">インスタンスを作成する場合は、 <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>hresult エラー コードのフィールドを初期化し、その例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1846">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="24ee1-1847">`errorInfo`エラーに関する追加情報を取得するパラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1847">The `errorInfo` parameter is used to retrieve extra information regarding the error.</span></span>  
  
 <span data-ttu-id="24ee1-1848">各 HRESULT から .NET Framework では、その比較可能な例外クラスへのマッピングを参照してください。[する方法: マップの Hresult と例外](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)です。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1848">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1849">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1849">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1850">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1850">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement (arr As Array, index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="24ee1-1851">The array that contains the desired element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1851">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="24ee1-1852">The index in the <c>arr</c> parameter of the desired element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1852">The index in the <c>arr</c> parameter of the desired element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1853">Gets the address of the element at the specified index inside the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1853">Gets the address of the element at the specified index inside the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1854">The address of <paramref name="index" /> inside <paramref name="arr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1854">The address of <paramref name="index" /> inside <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1855">使用して配列を固定する必要があります、<xref:System.Runtime.InteropServices.GCHandle>からこのメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1855">The array must be pinned using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="24ee1-1856">パフォーマンスを最大にするには、このメソッドは検証されません。 渡された配列予期しない動作になります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1856">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1857">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1857">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1858">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1858">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement&lt;T&gt; (T[] arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement&lt;T&gt;(!!T[] arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement(Of T) (arr As T(), index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(cli::array &lt;T&gt; ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : 'T[] * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="arr" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="24ee1-1859">配列の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1859">The type of the array.</span>
          </span>
        </typeparam>
        <param name="arr">
          <span data-ttu-id="24ee1-1860">The array that contains the desired element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1860">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="24ee1-1861">The index of the desired element in the <c>arr</c> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1861">The index of the desired element in the <c>arr</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1862">[Supported in the .NET Framework 4.5.1 and later versions]  Gets the address of the element at the specified index in an array of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1862">[Supported in the .NET Framework 4.5.1 and later versions]  Gets the address of the element at the specified index in an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24ee1-1863">The address of <paramref name="index" /> in <paramref name="arr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1863">The address of <paramref name="index" /> in <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1864">使用して配列を固定する必要があります、<xref:System.Runtime.InteropServices.GCHandle>からこのメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1864">The array must be pinned by using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="24ee1-1865">パフォーマンスを最大にするには、このメソッドは検証されません。 渡された配列予期しない動作になります。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1865">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1866">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1866">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1867">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1867">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1868">Writes a single byte value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1868">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1869">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1869">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1870">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1870">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1871">Writes a single byte value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1871">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1872"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 有効とは直接やり取りのアンマネージ配列全体のコピーのコストが削減、アンマネージ C スタイルのバイト配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1872"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1873">次の例は、アンマネージ メモリのブロックを作成、バイトをアンマネージ メモリに書き込みます化し、アンマネージ メモリからのバイトを読み取り、アンマネージ メモリを破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1873">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1874">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1874">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1875">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1875">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1876">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1876">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1877">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1877">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1878">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1878">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1879">The base address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1879">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1880">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1880">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1881">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1881">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1882">Writes a single byte value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1882">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1883"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 有効とは直接やり取りのアンマネージ配列全体のコピーのコストが削減、アンマネージ C スタイルのバイト配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1883"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1884">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadByte%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteByte%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1884">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1885">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1885">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1886">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1886">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1887">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1887">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (object ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte([out] object ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As Object, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(System::Object ^ ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : obj * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1888">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1888">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1889">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1889">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1890">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1890">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1891">Writes a single byte value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1891">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1892"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 有効とは直接やり取りのアンマネージ配列全体のコピーのコストが削減、アンマネージ C スタイルのバイト配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1892"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1893">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1893">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1894">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1894">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1895">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1895">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1896">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1896">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1897">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1897">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1898">Writes a 16-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1898">Writes a 16-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1899">Writing to unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1899">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1900">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1900">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1901">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1901">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1902">Writes a character as a 16-bit integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1902">Writes a character as a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1903"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 有効とは直接やり取りアンマネージ 16 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1903"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1904">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1904">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1905">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1905">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1906">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1906">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1907">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1907">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1908">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1908">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1909">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1909">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1910">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1910">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1911">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1911">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1912">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1912">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1913">Writes a 16-bit integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1913">Writes a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1914"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 有効とは直接やり取りアンマネージ 16 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1914"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1915">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1915">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1916">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1916">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1917">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1917">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1918">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1918">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1919">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1919">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1920">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1920">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1921">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1921">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1922">The base address in the native heap to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1922">The base address in the native heap to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1923">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1923">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1924">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1924">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1925">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1925">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1926"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 有効とは直接やり取りアンマネージ 16 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1926"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1927">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1927">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1928">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1928">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1929">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1929">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1930">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1930">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1931">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1931">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1932">The base address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1932">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1933">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1933">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1934">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1934">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1935">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1935">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1936"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 有効とは直接やり取りアンマネージ 16 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1936"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1937">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1937">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1938">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1938">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1939">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1939">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1940">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1940">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1941">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1941">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1942">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1942">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1943">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1943">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1944">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1944">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1945">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1945">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1946"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 有効とは直接やり取りアンマネージ 16 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1946"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1947">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1947">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1948">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1948">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1949">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1949">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1950">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1950">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1951">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1951">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1952">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1952">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1953">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1953">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1954">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1954">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1955">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1955">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1956">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1956">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1957"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 有効とは直接やり取りアンマネージ 16 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1957"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1958">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1958">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1959">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1959">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1960">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1960">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1961">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1961">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1962">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1962">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1963">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1963">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1964">Writes a 32-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1964">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1965">Writing to unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1965">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1966">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1966">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1967">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1967">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1968">Writes a 32-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1968">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 有効とは直接やり取りアンマネージ 32 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1970">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1970">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1971">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1971">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1972">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1972">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-1973">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1973">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-1974">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1974">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1975">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1975">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1976">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1976">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1977">The base address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1977">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1978">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1978">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1979">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1979">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1980">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1980">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1981"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 有効とは直接やり取りアンマネージ 32 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1981"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1982">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1982">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-1983">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1983">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1984">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1984">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1985">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1985">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1986">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1986">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (object ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32([out] object ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As Object, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(System::Object ^ ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : obj * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-1987">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1987">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-1988">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1988">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-1989">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1989">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-1990">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1990">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-1991"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 有効とは直接やり取りアンマネージ 32 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1991"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-1992">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-1992">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-1993">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1993">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-1994">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1994">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-1995">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1995">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-1996">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1996">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-1997">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1997">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-1998">Writes a 64-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1998">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-1999">Writing to unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-1999">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-2000">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2000">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-2001">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2001">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2002">Writes a 64-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2002">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 有効とは直接やり取りアンマネージ 64 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-2004">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2004">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-2005">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2005">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-2006">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2006">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-2007">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2007">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-2008">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2008">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2009">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2009">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2010">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2010">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-2011">The base address in unmanaged memory to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2011">The base address in unmanaged memory to write.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-2012">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2012">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-2013">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2013">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2014">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2014">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2015"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 有効とは直接やり取りアンマネージ 64 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2015"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-2016">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2016">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-2017">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2017">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-2018">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2018">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2019">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2019">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2020">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2020">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (object ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64([out] object ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As Object, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(System::Object ^ ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : obj * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-2021">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2021">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-2022">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2022">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-2023">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2023">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2024">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2024">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2025"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 有効とは直接やり取りアンマネージ 64 ビット符号付き配列、アンマネージ配列全体のコピーのコストが削減 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2025"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-2026">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2026">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-2027">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2027">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-2028">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2028">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-2029">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2029">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2030">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2030">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2031">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2031">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24ee1-2032">Writes a processor native-sized integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2032">Writes a processor native-sized integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="24ee1-2033">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2033">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span>
          </span>
          <span data-ttu-id="24ee1-2034">Writing to unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2034">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-2035">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2035">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-2036">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2036">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2037">Writes a processor native sized integer value into unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2037">Writes a processor native sized integer value into unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2038"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 有効とは直接やり取りアンマネージ C スタイル`IntPtr`アンマネージ配列全体のコピーのコストが削減配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2038"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-2039">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2039">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-2040">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2040">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-2041">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2041">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="24ee1-2042">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2042">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="24ee1-2043">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2043">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2044">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2044">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2045">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2045">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-2046">The base address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2046">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-2047">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2047">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-2048">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2048">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2049">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2049">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2050">このメソッドは、32 ビット システムと 64 ビット システムで 64 ビット整数の 32 ビット整数を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2050">This method writes a 32 bit integer on 32 bit systems, and a 64 bit integer on 64 bit systems.</span></span>  
  
 <span data-ttu-id="24ee1-2051"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 有効とは直接やり取りアンマネージ C スタイル`IntPtr`アンマネージ配列全体のコピーのコストが削減配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2051"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-2052">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2052">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-2053">次の例を使用して、アンマネージの配列を読み書きする方法を示しています、<xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A>と<xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2053">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-2054">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2054">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2055">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2055">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2056">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2056">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (object ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr([out] object ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As Object, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(System::Object ^ ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : obj * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="24ee1-2057">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2057">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="24ee1-2058">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2058">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="24ee1-2059">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2059">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2060">Writes a processor native sized integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2060">Writes a processor native sized integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2061"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 有効とは直接やり取りのアンマネージ配列全体のコピーのコストが削減、アンマネージ C スタイルのバイト配列 (を使用して<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>)、要素の値を設定する前に、個別のマネージ配列にします。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2061"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="24ee1-2062">アライメントされていないメモリ位置への書き込みはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2062">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="24ee1-2063">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2063">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24ee1-2064">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2064">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="24ee1-2065">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2065">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2066">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2066">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2067">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2067">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeBSTR">
      <MemberSignature Language="C#" Value="public static void ZeroFreeBSTR (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeBSTR(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeBSTR (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeBSTR(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-2068">The address of the <see langword="BSTR" /> to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2068">The address of the <see langword="BSTR" /> to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2069">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2069">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2070"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A>メソッドは、最初には、0、BSTR の内容を設定し、BSTR を解放します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2070">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method first sets the contents of the BSTR to zero, and then frees the BSTR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2071">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2071">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2072">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2072">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-2073">The address of the unmanaged string to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2073">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2074">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2074">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2075"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>メソッドは最初を消去しを使用して割り当てられたアンマネージ メモリを解放、<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2075">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-2076">次の例では、<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A>マーシャ リングし、のコンテンツを復号化するメソッド、<xref:System.Security.SecureString>アンマネージ メモリ ブロックへのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2076">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="24ee1-2077">次を使用して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>メソッドをゼロにしてアンマネージ ブロックを破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2077">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2078">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2078">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2079">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2079">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-2080">The address of the unmanaged string to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2080">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2081">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2081">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2082"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A>メソッドは最初を消去しを使用して割り当てられたアンマネージ メモリを解放、<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2082">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2083">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2083">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2084">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2084">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUTF8 (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUTF8(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUTF8 (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUTF8(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUTF8 : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-2085">The address of the unmanaged string to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2085">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2086">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2086">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2087"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>メソッドは最初を消去しを使用して割り当てられたアンマネージ メモリを解放、<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2087">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-2088">次の例では、<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A>マーシャ リングし、のコンテンツを復号化するメソッド、<xref:System.Security.SecureString>アンマネージ メモリ ブロックへのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2088">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="24ee1-2089">次を使用して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>メソッドをゼロにしてアンマネージ ブロックを破棄します。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2089">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2090">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2090">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2091">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2091">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="24ee1-2092">The address of the unmanaged string to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2092">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24ee1-2093">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2093">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24ee1-2094"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A>メソッドは最初を消去しを使用して割り当てられたアンマネージ メモリを解放、<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2094">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24ee1-2095">次の例で使用する方法、<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A>アンマネージ メソッド`LogonUser`を使用して偽装を実行する関数、<xref:System.Security.SecureString>クラスです。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2095">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="24ee1-2096">使用して、<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A>をゼロにして、アンマネージ文字列の参照を解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="24ee1-2096">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="24ee1-2097">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2097">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="24ee1-2098">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24ee1-2098">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>