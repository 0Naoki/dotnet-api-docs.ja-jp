<Type Name="IpcServerChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a55cb978ab93ace828e36dde62e0355dcbbf45b8" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46633816" /></Metadata><TypeSignature Language="C#" Value="public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcServerChannel&#xA;Implements IChannel, IChannelReceiver, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcServerChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type IpcServerChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="01e38-101">IPC システムを使用してメッセージを送信するリモート呼び出しのサーバー チャネルを実装します。</span><span class="sxs-lookup"><span data-stu-id="01e38-101">Implements a server channel for remote calls that uses the IPC system to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="01e38-102">チャネルは、リモート呼び出しを転送する、.NET Framework リモート処理インフラストラクチャによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="01e38-102">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="01e38-103">クライアントがリモート オブジェクトを呼び出すときに、呼び出しは、クライアント チャネルが送信され、サーバー チャネルで受信されるメッセージにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="01e38-103">When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="01e38-104">メッセージを受信すると、これとは逆シリアル化、処理します。</span><span class="sxs-lookup"><span data-stu-id="01e38-104">After the message is received, it is deserialized and processed.</span></span> <span data-ttu-id="01e38-105">戻り値はすべてがサーバー チャネルによって送信され、クライアント チャネルで受信します。</span><span class="sxs-lookup"><span data-stu-id="01e38-105">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="01e38-106"><xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>クラスは、同じコンピューター上のアプリケーション ドメイン間でメッセージの転送を Windows のプロセス間通信 (IPC) システムを使用します。</span><span class="sxs-lookup"><span data-stu-id="01e38-106">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer.</span></span> <span data-ttu-id="01e38-107">同じコンピューター上のアプリケーション ドメイン間で通信している場合、IPC チャネルは TCP または HTTP チャネルより高速です。</span><span class="sxs-lookup"><span data-stu-id="01e38-107">When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.</span></span>  
  
 <span data-ttu-id="01e38-108">サーバー側でメッセージの追加の処理を実行する指定の実装、<xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>によって処理されるすべてのメッセージのインターフェイス、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>インスタンスが渡されます。</span><span class="sxs-lookup"><span data-stu-id="01e38-108">To perform additional processing of messages on the server side, specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance are passed.</span></span>  
  
 <span data-ttu-id="01e38-109"><xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>インスタンスがバイナリ形式または SOAP 形式でシリアル化されたメッセージを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="01e38-109">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepts messages serialized in either binary or SOAP format.</span></span>  
  
 <span data-ttu-id="01e38-110">A<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>オブジェクトで設定できる構成プロパティが関連付けられている構成ファイルのいずれかの実行時 (静的なを呼び出すことによって<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType>メソッド) またはプログラムによって (を渡すことによって、<xref:System.Collections.IDictionary>コレクション、 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A>コンス トラクター)。</span><span class="sxs-lookup"><span data-stu-id="01e38-110">A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="01e38-111">これらの構成プロパティの一覧は、ドキュメントを参照してください、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="01e38-111">For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="01e38-112">設定するときに、`exclusiveAddressUse`プロパティを`false`で、`properties`引数、いくつか<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>同じ名前付きパイプのオブジェクトを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="01e38-112">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="01e38-113">このような場合は、要求が登録されているチャネルのいずれかに移動できます。</span><span class="sxs-lookup"><span data-stu-id="01e38-113">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="01e38-114">この設定は、Alc も使用されている場合にのみセキュリティで保護されたと見なされます。</span><span class="sxs-lookup"><span data-stu-id="01e38-114">This setting is considered secure only if ALCs are also used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-115">次のコード例は、使用する方法を示しています、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>クラス。</span><span class="sxs-lookup"><span data-stu-id="01e38-115">The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class.</span></span>  
  
 [!code-cpp[Remoting_Ipc#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#10)]
 [!code-csharp[Remoting_Ipc#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#10)]  
  
 <span data-ttu-id="01e38-116">上記のコードを使用して、次のリモート オブジェクトを公開できます。</span><span class="sxs-lookup"><span data-stu-id="01e38-116">The preceding code is used to expose the following remote object.</span></span>  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 <span data-ttu-id="01e38-117">このオブジェクトをリモートで使用するクライアントの例は、次を参照してください。<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>します。</span><span class="sxs-lookup"><span data-stu-id="01e38-117">For an example of a client using this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01e38-118"><see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="01e38-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel portName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName"><span data-ttu-id="01e38-119">チャネルによって使用される IPC ポートの名前。</span><span class="sxs-lookup"><span data-stu-id="01e38-119">The name of the IPC port to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="01e38-120">IPC ポート名を指定して <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="01e38-120">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified IPC port name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="01e38-121">次のコード例では、このコンス トラクターを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01e38-121">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[Remoting_Ipc#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#11)]
 [!code-csharp[Remoting_Ipc#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="01e38-122">チャネルで使用される構成プロパティの値を指定する <see cref="T:System.Collections.IDictionary" /> コレクション。</span><span class="sxs-lookup"><span data-stu-id="01e38-122">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="01e38-123">チャネルによって使用される <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="01e38-123">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="01e38-124">チャネル プロパティとシンクを指定して、<see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="01e38-124">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel properties and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-125">チャネルの構成プロパティの詳細については、次を参照してください。 [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="01e38-125">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 <span data-ttu-id="01e38-126">シンクの機能を必要としない場合は、設定、`sinkProvider`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="01e38-126">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="01e38-127">設定するときに、`exclusiveAddressUse`プロパティを`false`で、`properties`引数、いくつか<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>同じ名前付きパイプのオブジェクトを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="01e38-127">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="01e38-128">このような場合は、要求が登録されているチャネルのいずれかに移動できます。</span><span class="sxs-lookup"><span data-stu-id="01e38-128">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="01e38-129">この設定は、Alc も使用されている場合にのみセキュリティで保護されたと見なされます。</span><span class="sxs-lookup"><span data-stu-id="01e38-129">This setting is considered secure only if ALCs are also used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-130">次のコード例では、このコンス トラクターを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01e38-130">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#41)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="01e38-131">チャネルおよびフォーマッタの構成プロパティ</span><span class="sxs-lookup"><span data-stu-id="01e38-131">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string * string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (name, portName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="01e38-132">チャネルの名前。</span><span class="sxs-lookup"><span data-stu-id="01e38-132">The name of the channel.</span></span></param>
        <param name="portName"><span data-ttu-id="01e38-133">チャネルによって使用される IPC ポートの名前。</span><span class="sxs-lookup"><span data-stu-id="01e38-133">The name of the IPC port to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="01e38-134">チャネル名と IPC ポート名を指定して、<see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="01e38-134">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel name and IPC port name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-135">このコンス トラクターの設定、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A>プロパティを使用して、`name`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="01e38-135">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="01e38-136">1 つ以上のチャネルを登録する場合は、各チャネルは、一意の名前が必要です。</span><span class="sxs-lookup"><span data-stu-id="01e38-136">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-137">次のコード例では、このコンス トラクターを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01e38-137">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider, securityDescriptor As CommonSecurityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider, System::Security::AccessControl::CommonSecurityDescriptor ^ securityDescriptor);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider * System.Security.AccessControl.CommonSecurityDescriptor -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (properties, sinkProvider, securityDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="securityDescriptor" Type="System.Security.AccessControl.CommonSecurityDescriptor" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="01e38-138">チャネルで使用される構成プロパティの値を指定する <see cref="T:System.Collections.IDictionary" /> コレクション。</span><span class="sxs-lookup"><span data-stu-id="01e38-138">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="01e38-139">チャネルによって使用される <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="01e38-139">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <param name="securityDescriptor"><span data-ttu-id="01e38-140">チャネルによって使用される <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="01e38-140">A <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="01e38-141">チャネル プロパティ、シンク、およびセキュリティ記述子を指定して、<see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="01e38-141">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel properties, sink, and security descriptor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-142">チャネルの構成プロパティの詳細については、次を参照してください。 [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="01e38-142">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 <span data-ttu-id="01e38-143">シンクの機能を必要としない場合は、設定、`sinkProvider`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="01e38-143">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span> <span data-ttu-id="01e38-144">セキュリティ記述子を必要としない場合は、設定、`securityDescriptor`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="01e38-144">If you do not require a security descriptor, set the `securityDescriptor` parameter to `null`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="01e38-145">設定するときに、`exclusiveAddressUse`プロパティを`false`で、`properties`引数、いくつか<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>同じ名前付きパイプのオブジェクトを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="01e38-145">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="01e38-146">このような場合は、要求が登録されているチャネルのいずれかに移動できます。</span><span class="sxs-lookup"><span data-stu-id="01e38-146">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="01e38-147">この設定は、Alc も使用されている場合にのみセキュリティで保護されたと見なされます。</span><span class="sxs-lookup"><span data-stu-id="01e38-147">This setting is considered secure only if ALCs are also used.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="01e38-148">チャネルおよびフォーマッタの構成プロパティ</span><span class="sxs-lookup"><span data-stu-id="01e38-148">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string * string * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (name, portName, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="01e38-149">チャネルの名前。</span><span class="sxs-lookup"><span data-stu-id="01e38-149">The name of the channel.</span></span></param>
        <param name="portName"><span data-ttu-id="01e38-150">チャネルによって使用される IPC ポートの名前。</span><span class="sxs-lookup"><span data-stu-id="01e38-150">The name of the IPC port to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="01e38-151">チャネルによって使用される <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="01e38-151">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="01e38-152">チャネル名、IPC ポート名、およびシンクを指定して、<see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="01e38-152">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel name, IPC port name, and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-153">このコンス トラクターの設定、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A>プロパティを使用して、`name`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="01e38-153">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="01e38-154">1 つ以上のチャネルを登録する場合は、各チャネルは、一意の名前が必要です。</span><span class="sxs-lookup"><span data-stu-id="01e38-154">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="01e38-155">シンクの機能を必要としない場合は、設定、`sinkProvider`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="01e38-155">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-156">次のコード例では、このコンス トラクターを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01e38-156">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#43)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01e38-157">チャネル固有のデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="01e38-157">Gets channel-specific data.</span></span></summary>
        <value><span data-ttu-id="01e38-158">チャネル固有のデータを格納している <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="01e38-158">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-159">インスタンスとして返されますが、<xref:System.Object?displayProperty=nameWithType>クラスでは、このプロパティの値のインスタンスにキャストできる<xref:System.Runtime.Remoting.Channels.ChannelDataStore>するチャネルを記述する、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>待機オブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="01e38-159">Although returned as an instance of the <xref:System.Object?displayProperty=nameWithType> class, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> that describes the channel to which the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-160">次のコード例は、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="01e38-160">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#15)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01e38-161">現在のチャネルの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="01e38-161">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="01e38-162">チャネルの名前を格納している <see cref="T:System.String" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="01e38-162">A <see cref="T:System.String" /> instance that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-163">すべての登録済みのチャネルが、一意の名前。</span><span class="sxs-lookup"><span data-stu-id="01e38-163">Every registered channel has a unique name.</span></span> <span data-ttu-id="01e38-164">呼び出すときに、特定のチャネルを取得する名前が使用される、<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="01e38-164">The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method.</span></span> <span data-ttu-id="01e38-165">既定の名前とは、「ipc サーバー」です。</span><span class="sxs-lookup"><span data-stu-id="01e38-165">The default name is "ipc server".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-166">次のコード例は、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="01e38-166">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01e38-167">現在のチャネルの優先順位を取得します。</span><span class="sxs-lookup"><span data-stu-id="01e38-167">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="01e38-168">チャネルに割り当てられている優先順位を示す整数。</span><span class="sxs-lookup"><span data-stu-id="01e38-168">An integer that indicates the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-169">優先順位でどのチャネルでデータの表示順序を制御する、<xref:System.Runtime.Remoting.ObjRef>インスタンスは優先順位の低いチャネルの前に優先順位の高いチャネル。</span><span class="sxs-lookup"><span data-stu-id="01e38-169">The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels.</span></span> <span data-ttu-id="01e38-170">クライアントが記載されている順序でサーバー チャネルに接続しようとした場合、<xref:System.Runtime.Remoting.ObjRef>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="01e38-170">Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance.</span></span> <span data-ttu-id="01e38-171">既定の優先順位は 20 です。負の値の優先順位が許可されます。</span><span class="sxs-lookup"><span data-stu-id="01e38-171">The default priority is 20; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-172">次のコード例は、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="01e38-172">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#13)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChannelUri();" />
      <MemberSignature Language="F#" Value="member this.GetChannelUri : unit -&gt; string" Usage="ipcServerChannel.GetChannelUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01e38-173">現在のチャネルの URI を返します。</span><span class="sxs-lookup"><span data-stu-id="01e38-173">Returns the URI of the current channel.</span></span></summary>
        <returns><span data-ttu-id="01e38-174">チャネルの URI を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="01e38-174">A <see cref="T:System.String" /> that contains the URI of the channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-175">チャネル URI は、リモート サーバー チャネルを指定するクライアントによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="01e38-175">The channel URI is used by the client to specify a remote server channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-176">次のコード例は、使用する方法を示しています、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="01e38-176">The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> method.</span></span>  
  
 [!code-cpp[Remoting_Ipc#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#12)]
 [!code-csharp[Remoting_Ipc#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlsForUri (objectUri As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectUri);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="ipcServerChannel.GetUrlsForUri objectUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri"><span data-ttu-id="01e38-177">URL を要求するオブジェクトの URI。</span><span class="sxs-lookup"><span data-stu-id="01e38-177">The URI of the object for which URLs are required.</span></span></param>
        <summary><span data-ttu-id="01e38-178">指定した URI を持つオブジェクトのすべての URL のうち、現在の <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> インスタンスでホストされている URL の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="01e38-178">Returns an array of all the URLs for the object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> instance.</span></span></summary>
        <returns><span data-ttu-id="01e38-179">指定した URI を持つオブジェクトの URL のうち、現在の <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> インスタンスでホストされている URL の配列。</span><span class="sxs-lookup"><span data-stu-id="01e38-179">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-180">このメソッドを使用して、<xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="01e38-180">This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-181"><xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="01e38-181">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01e38-182">現在のチャネルをセキュリティで保護しているかどうかを示すブール値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01e38-182">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="01e38-183">現在のインスタンスをセキュリティで保護しているかどうかを示すブール値。</span><span class="sxs-lookup"><span data-stu-id="01e38-183">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string *  -&gt; string&#xA;override this.Parse : string *  -&gt; string" Usage="ipcServerChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="01e38-184">既知のリモート オブジェクトの URI の抽出元 URL。</span><span class="sxs-lookup"><span data-stu-id="01e38-184">The URL from which to extract the URI of the remote well-known object.</span></span></param>
        <param name="objectURI"><span data-ttu-id="01e38-185">このメソッドから制御が戻るときに、既知のリモート オブジェクトの URI を保持する <see cref="T:System.String" /> インスタンスが格納されます。</span><span class="sxs-lookup"><span data-stu-id="01e38-185">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span></span></param>
        <summary><span data-ttu-id="01e38-186">指定した URL からチャネル URI と既知のリモート オブジェクト URI を抽出します。</span><span class="sxs-lookup"><span data-stu-id="01e38-186">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="01e38-187">現在のチャネルの URI。</span><span class="sxs-lookup"><span data-stu-id="01e38-187">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-188">オブジェクトの URI は、特定のオブジェクトのインスタンスを一意に識別する値です。</span><span class="sxs-lookup"><span data-stu-id="01e38-188">The URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e38-189"><xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="01e38-189">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="ipcServerChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="01e38-190">初期化状態を指定するオブジェクト。特定の状態をチャネルに渡さない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="01e38-190">An object that specifies an initialization state, or <see langword="null" />, if you do not want to pass a specific state to the channel.</span></span></param>
        <summary><span data-ttu-id="01e38-191">現在のチャネルに対して、要求の待機を開始するように指示します。</span><span class="sxs-lookup"><span data-stu-id="01e38-191">Instructs the current channel to start listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-192">新しく初期化されたチャネルでリッスンを開始するには、このメソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="01e38-192">It is not necessary to call this method to begin listening on a newly initialized channel.</span></span>  
  
 <span data-ttu-id="01e38-193">このメソッドを使用して、再起動後、チャネルでリッスンしている、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A>チャネルのリッスンを停止するメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="01e38-193">Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> method has been called to stop listening on the channel.</span></span>  
  
 <span data-ttu-id="01e38-194">データ オブジェクトは、特定の初期化状態をチャネルに渡すには使用できます。</span><span class="sxs-lookup"><span data-stu-id="01e38-194">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="01e38-195">特定の状態をチャネルに渡すように場合は、渡す`null`として、`data`パラメーターの値。</span><span class="sxs-lookup"><span data-stu-id="01e38-195">If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="01e38-196">指定された待機ポートは利用できません。</span><span class="sxs-lookup"><span data-stu-id="01e38-196">The specified listening port is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="ipcServerChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="01e38-197">初期化状態を指定するオブジェクト。特定の状態をチャネルに渡さない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="01e38-197">An object that specifies an initialization state, or <see langword="null" />, if you do not want to pass a specific state to the channel.</span></span></param>
        <summary><span data-ttu-id="01e38-198">現在のチャネルに対して、要求の待機を停止するように指示します。</span><span class="sxs-lookup"><span data-stu-id="01e38-198">Instructs the current channel to stop listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e38-199">チャネルでリッスンを停止するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="01e38-199">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="01e38-200">リッスンを再起動して、使用、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="01e38-200">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="01e38-201">データ オブジェクトは、特定の初期化状態をチャネルに渡すには使用できます。</span><span class="sxs-lookup"><span data-stu-id="01e38-201">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="01e38-202">特定の状態をチャネルに渡すように場合は、渡す`null`として、`data`パラメーターの値。</span><span class="sxs-lookup"><span data-stu-id="01e38-202">If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>