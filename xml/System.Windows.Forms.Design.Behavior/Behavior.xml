<Type Name="Behavior" FullName="System.Windows.Forms.Design.Behavior.Behavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a722ae306063d73f41145f7be951e9ed952c703" /><Meta Name="ms.sourcegitcommit" Value="6089a30c0522e6f43256523e82e94b2ccedfb55b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/04/2019" /><Meta Name="ms.locfileid" Value="59015940" /></Metadata><TypeSignature Language="C#" Value="public abstract class Behavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Behavior extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.Behavior.Behavior" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Behavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class Behavior abstract" />
  <TypeSignature Language="F#" Value="type Behavior = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="116ac-101"><see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> によって管理される <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="116ac-101">Represents the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> objects that are managed by a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-102">このクラスは、任意の種類の選択、ドラッグを含む、ユーザー インターフェイスの動作の開発に拡張でき、動作のサイズを変更します。</span><span class="sxs-lookup"><span data-stu-id="116ac-102">This class can be extended to develop any type of user interface behavior, including selection, drag, and resize behaviors.</span></span>  
  
 <span data-ttu-id="116ac-103">詳細については、次を参照してください。[動作サービスの概要](https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f)します。</span><span class="sxs-lookup"><span data-stu-id="116ac-103">For more information, see [Behavior Service Overview](https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="116ac-104"><xref:System.Windows.Forms.Design.Behavior.Behavior>型が関連付けられる必要があります、<xref:System.Windows.Forms.Design.Behavior.Glyph>型。</span><span class="sxs-lookup"><span data-stu-id="116ac-104">Your <xref:System.Windows.Forms.Design.Behavior.Behavior> type must be associated with a <xref:System.Windows.Forms.Design.Behavior.Glyph> type.</span></span> <span data-ttu-id="116ac-105">グリフに依存しない動作がサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="116ac-105">Glyph-independent behaviors are not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="116ac-106">次のコード例がに基づいて、独自のクラスを作成する方法を示します、<xref:System.Windows.Forms.Design.Behavior.Behavior>ユーザーのクリックに応答するクラス。</span><span class="sxs-lookup"><span data-stu-id="116ac-106">The following code example demonstrates how to create your own class based on the <xref:System.Windows.Forms.Design.Behavior.Behavior> class that responds to user clicks.</span></span> <span data-ttu-id="116ac-107">このコード例が示されている例の一部、<xref:System.Windows.Forms.Design.Behavior.BehaviorService>クラス。</span><span class="sxs-lookup"><span data-stu-id="116ac-107">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
    <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-108">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-108">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f"><span data-ttu-id="116ac-109">動作サービスの概要</span><span class="sxs-lookup"><span data-stu-id="116ac-109">Behavior Service Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="116ac-110"><see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="116ac-110">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Behavior ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Behavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="116ac-111"><see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="116ac-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="116ac-112"><xref:System.Windows.Forms.Design.Behavior.Behavior> クラスの新しいインスタンスを初期化する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="116ac-112">The following code example demonstrates how to initialize a new instance of the <xref:System.Windows.Forms.Design.Behavior.Behavior> class.</span></span> <span data-ttu-id="116ac-113">このコード例が示されている例の一部、<xref:System.Windows.Forms.Design.Behavior.BehaviorService>クラス。</span><span class="sxs-lookup"><span data-stu-id="116ac-113">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-114">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-114">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f"><span data-ttu-id="116ac-115">動作サービスの概要</span><span class="sxs-lookup"><span data-stu-id="116ac-115">Behavior Service Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Behavior (bool callParentBehavior, System.Windows.Forms.Design.Behavior.BehaviorService behaviorService);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool callParentBehavior, class System.Windows.Forms.Design.Behavior.BehaviorService behaviorService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Behavior(bool callParentBehavior, System::Windows::Forms::Design::Behavior::BehaviorService ^ behaviorService);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.Behavior.Behavior : bool * System.Windows.Forms.Design.Behavior.BehaviorService -&gt; System.Windows.Forms.Design.Behavior.Behavior" Usage="new System.Windows.Forms.Design.Behavior.Behavior (callParentBehavior, behaviorService)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callParentBehavior" Type="System.Boolean" />
        <Parameter Name="behaviorService" Type="System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Parameters>
      <Docs>
        <param name="callParentBehavior"><see langword="true" /> <span data-ttu-id="116ac-116">: 親動作が存在すると、呼び出す必要がある場合。<see langword="false" />: それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="116ac-116">if the parent behavior should be called if it exists; otherwise, <see langword="false" />.</span></span></param>
        <param name="behaviorService"><span data-ttu-id="116ac-117">使用する <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-117">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to use.</span></span></param>
        <summary><span data-ttu-id="116ac-118">指定した <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="116ac-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class with the given <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-119">親動作は、[次へ] によって保持される動作スタックの動作、<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-119">The parent behavior is the next behavior on the behavior stack maintained by the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-120">場合、`callParentBehavior`パラメーターが`true`、`behaviorService`パラメーターがある必要がありますいない`null`します。</span><span class="sxs-lookup"><span data-stu-id="116ac-120">If the `callParentBehavior` parameter is `true`, then the `behaviorService` parameter must not be `null`.</span></span>  
  
 `callParentBehavior` <span data-ttu-id="116ac-121">示すかどうか、ベース<xref:System.Windows.Forms.Design.Behavior.Behavior>クラスが、親の動作を呼び出す必要がありますして、<xref:System.Windows.Forms.Design.Behavior.BehaviorService>正しい親動作を選択します。</span><span class="sxs-lookup"><span data-stu-id="116ac-121">indicates whether the base <xref:System.Windows.Forms.Design.Behavior.Behavior> class should call the parent behavior, and then allow the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> select the correct parent behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="callParentBehavior" /> <span data-ttu-id="116ac-122">が <see langword="true" /> で、<paramref name="behaviorService" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="116ac-122">is <see langword="true" />, and <paramref name="behaviorService" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor Cursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Design.Behavior.Behavior.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="116ac-123">この動作に対して表示する必要のあるカーソルを取得します。</span><span class="sxs-lookup"><span data-stu-id="116ac-123">Gets the cursor that should be displayed for this behavior.</span></span></summary>
        <value><span data-ttu-id="116ac-124">この動作に対して表示する必要のあるカーソルを表す <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-124">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that should be displayed for this behavior.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableAllCommands">
      <MemberSignature Language="C#" Value="public virtual bool DisableAllCommands { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableAllCommands" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisableAllCommands As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisableAllCommands { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DisableAllCommands : bool" Usage="System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="116ac-125"><see cref="T:System.ComponentModel.Design.MenuCommand" /> オブジェクトを無効にする必要があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="116ac-125">Gets a value indicating whether <see cref="T:System.ComponentModel.Design.MenuCommand" /> objects should be disabled.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="116ac-126">すべて<see cref="T:System.ComponentModel.Design.MenuCommand" />、デザイナーが受け取るオブジェクトの状態に設定する必要がありますがある<c>有効 = false</c>ときにこの<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />active。 それ以外は、 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-126">if all <see cref="T:System.ComponentModel.Design.MenuCommand" /> objects the designer receives should have states set to <c>Enabled = false</c> when this <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-127">A`true`値、<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A>にプロパティを示します、<xref:System.Windows.Forms.Design.Behavior.BehaviorService>をすべて<xref:System.ComponentModel.Design.MenuCommand>デザイナーが受け取るオブジェクトは、その状態がこの動作は、アクティブなときに無効になっているをある必要があります。</span><span class="sxs-lookup"><span data-stu-id="116ac-127">A `true` value for the <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> property indicates to the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> that all <xref:System.ComponentModel.Design.MenuCommand> objects the designer receives should have their state disabled when this behavior is active.</span></span>  
  
 <span data-ttu-id="116ac-128"><xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A>プロパティの動作と組み合わせて、<xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A>グリフと動作の間の相互作用をカスタマイズするためのメソッド。</span><span class="sxs-lookup"><span data-stu-id="116ac-128">The <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> property works in conjunction with the <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> method so you can customize the interaction between glyphs and behaviors.</span></span> <span data-ttu-id="116ac-129">次の表は、呼び出しの結果をまとめたものです。<xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A>特定の<xref:System.ComponentModel.Design.MenuCommand>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-129">The following table summarizes the results of a call to <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> for a particular <xref:System.ComponentModel.Design.MenuCommand>.</span></span>  
  
||<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> <span data-ttu-id="116ac-130">is</span><span class="sxs-lookup"><span data-stu-id="116ac-130">is</span></span> `true`|<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> <span data-ttu-id="116ac-131">is</span><span class="sxs-lookup"><span data-stu-id="116ac-131">is</span></span> `false`|  
|-|-|-|  
|<span data-ttu-id="116ac-132">グリフのヒット テストが割り当て済みの動作</span><span class="sxs-lookup"><span data-stu-id="116ac-132">Hit-tested glyph has an assigned behavior</span></span>|<span data-ttu-id="116ac-133">場合、 <xref:System.ComponentModel.Design.MenuCommand> 、指定した`command ID`で見つかりましたが、 <xref:System.ComponentModel.Design.IMenuCommandService>、その<xref:System.ComponentModel.Design.MenuCommand>は無効であるが返されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-133">If the <xref:System.ComponentModel.Design.MenuCommand> with the specified `command ID` is found in the <xref:System.ComponentModel.Design.IMenuCommandService>, that <xref:System.ComponentModel.Design.MenuCommand> is disabled and returned.</span></span> <span data-ttu-id="116ac-134">それ以外の場合は、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-134">Otherwise, `null` is returned.</span></span>|<xref:System.ComponentModel.Design.MenuCommandService.FindCommand%2A> <span data-ttu-id="116ac-135">動作に対して呼び出され、見つかった場合は、動作の<xref:System.ComponentModel.Design.MenuCommand>が返されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-135">is called on the behavior and, if found, the behavior's <xref:System.ComponentModel.Design.MenuCommand> is returned.</span></span> <span data-ttu-id="116ac-136">それ以外の場合、結果の<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType>、指定した`command ID`が返されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-136">Otherwise, the result of <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> with the specified `command ID` is returned.</span></span>|  
|<span data-ttu-id="116ac-137">グリフのヒット テストに割り当てられている動作がありません。</span><span class="sxs-lookup"><span data-stu-id="116ac-137">Hit-tested glyph has no assigned behavior</span></span>|<span data-ttu-id="116ac-138">結果<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType>、指定した`command ID`が返されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-138">The result of <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> with the specified `command ID` is returned.</span></span>|<span data-ttu-id="116ac-139">結果<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType>、指定した`command ID`が返されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-139">The result of <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> with the specified `command ID` is returned.</span></span>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="116ac-140">既定の実装では、常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="116ac-140">The default implementation always returns <see langword="false" />.</span></span></para></block>
        <altmember cref="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand" />
        <altmember cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-141">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-141">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandId);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand&#xA;override this.FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="behavior.FindCommand commandId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandId"><span data-ttu-id="116ac-142"><see cref="T:System.ComponentModel.Design.CommandID" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="116ac-142">A <see cref="T:System.ComponentModel.Design.CommandID" /> object.</span></span></param>
        <summary><span data-ttu-id="116ac-143">コマンドを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="116ac-143">Intercepts commands.</span></span></summary>
        <returns><span data-ttu-id="116ac-144"><see cref="T:System.ComponentModel.Design.MenuCommand" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-144">A <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span></span> <span data-ttu-id="116ac-145">既定では、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="116ac-145">By default, <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-146"><xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A>メソッドの呼び出し元、<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-146">The <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> method is called from the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-147">機会を提供しますが、<xref:System.Windows.Forms.Design.Behavior.Behavior>を返す独自のカスタム<xref:System.ComponentModel.Design.MenuCommand>のため、このメッセージを受信します。</span><span class="sxs-lookup"><span data-stu-id="116ac-147">It provides an opportunity for the <xref:System.Windows.Forms.Design.Behavior.Behavior> to return its own custom <xref:System.ComponentModel.Design.MenuCommand>, thereby intercepting this message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-148">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-148">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="public virtual void OnDragDrop (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragDrop (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragDrop(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragDrop (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-149">ドラッグ アンド ドロップ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="116ac-149">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> object on which to invoke drag-and-drop behavior.</span></span></param>
        <param name="e"><span data-ttu-id="116ac-150">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-150">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="116ac-151">カスタムのドラッグ アンド ドロップ動作を許可します。</span><span class="sxs-lookup"><span data-stu-id="116ac-151">Permits custom drag-and-drop behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="116ac-152">オーバーライドすることができます、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />メソッドように、<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />独自のドラッグ アンド ドロップの規則を指定できます。</span><span class="sxs-lookup"><span data-stu-id="116ac-152">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-and-drop rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-153">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-153">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="public virtual void OnDragEnter (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragEnter (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragEnter(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragEnter (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-154">領域内へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-154">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-enter behavior.</span></span></param>
        <param name="e"><span data-ttu-id="116ac-155">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-155">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="116ac-156">カスタムの領域内へのドラッグ動作を許可します。</span><span class="sxs-lookup"><span data-stu-id="116ac-156">Permits custom drag-enter behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="116ac-157">オーバーライドすることができます、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />メソッドように、<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />独自 drag-enter ルールを指定できます。</span><span class="sxs-lookup"><span data-stu-id="116ac-157">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-enter rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-158">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-158">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="public virtual void OnDragLeave (System.Windows.Forms.Design.Behavior.Glyph g, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragLeave(class System.Windows.Forms.Design.Behavior.Glyph g, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragLeave (g As Glyph, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragLeave(System::Windows::Forms::Design::Behavior::Glyph ^ g, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit" Usage="behavior.OnDragLeave (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-159">領域外へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-159">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-leave behavior.</span></span></param>
        <param name="e"><span data-ttu-id="116ac-160">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-160">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="116ac-161">カスタムの領域外へのドラッグ動作を許可します。</span><span class="sxs-lookup"><span data-stu-id="116ac-161">Permits custom drag-leave behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="116ac-162">オーバーライドすることができます、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />メソッドように、<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />ドラッグの独自の規則を指定できます。</span><span class="sxs-lookup"><span data-stu-id="116ac-162">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-leave rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-163">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-163">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="public virtual void OnDragOver (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragOver (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragOver(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragOver (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-164">領域上へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-164">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-over behavior.</span></span></param>
        <param name="e"><span data-ttu-id="116ac-165">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-165">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="116ac-166">カスタムの領域上へのドラッグ動作を許可します。</span><span class="sxs-lookup"><span data-stu-id="116ac-166">Permits custom drag-over behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="116ac-167">オーバーライドすることができます、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />メソッドように、<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />上へのドラッグの独自の規則を指定できます。</span><span class="sxs-lookup"><span data-stu-id="116ac-167">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-over rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-168">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-168">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="public virtual void OnGiveFeedback (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnGiveFeedback (g As Glyph, e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="behavior.OnGiveFeedback (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-169">ドラッグ アンド ドロップ フィードバック動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-169">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-and-drop behavior.</span></span></param>
        <param name="e"><span data-ttu-id="116ac-170">イベント データを格納している <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-170">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="116ac-171">カスタムのドラッグ アンド ドロップ フィードバック動作を許可します。</span><span class="sxs-lookup"><span data-stu-id="116ac-171">Permits custom drag-and-drop feedback behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="116ac-172">オーバーライドすることができます、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" />メソッドように、<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />独自のドラッグ アンド ドロップの規則を指定できます。</span><span class="sxs-lookup"><span data-stu-id="116ac-172">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-and-drop rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-173">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-173">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnLoseCapture">
      <MemberSignature Language="C#" Value="public virtual void OnLoseCapture (System.Windows.Forms.Design.Behavior.Glyph g, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLoseCapture(class System.Windows.Forms.Design.Behavior.Glyph g, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnLoseCapture (g As Glyph, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnLoseCapture(System::Windows::Forms::Design::Behavior::Glyph ^ g, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoseCapture : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit&#xA;override this.OnLoseCapture : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit" Usage="behavior.OnLoseCapture (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-174">ドラッグ アンド ドロップ フィードバック動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-174">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-and-drop behavior.</span></span></param>
        <param name="e"><span data-ttu-id="116ac-175">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-175">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="116ac-176">マウスのキャプチャが失われたときに装飾ウィンドウによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-176">Called by the adorner window when it loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-177">動作を自体で動作スタックにプッシュしてサービスの動作をマウスのキャプチャを要求できます、<xref:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="116ac-177">A behavior can request mouse capture through the behavior service by pushing itself onto the behavior stack with the <xref:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior%2A> method.</span></span> <span data-ttu-id="116ac-178">この場合から通知されます、<xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A>メソッド キャプチャが失われるとします。</span><span class="sxs-lookup"><span data-stu-id="116ac-178">If it does so, it will be notified through the <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> method when capture is lost.</span></span> <span data-ttu-id="116ac-179">一般に、動作自体をスタックから削除この時点でします。</span><span class="sxs-lookup"><span data-stu-id="116ac-179">Generally the behavior removes itself from the stack at this time.</span></span> <span data-ttu-id="116ac-180">キャプチャは、次の操作のいずれかが発生したときに失われます。</span><span class="sxs-lookup"><span data-stu-id="116ac-180">Capture is lost when one of the following actions occurs:</span></span>  
  
-   <span data-ttu-id="116ac-181">他のユーザーは、キャプチャを要求します。</span><span class="sxs-lookup"><span data-stu-id="116ac-181">Someone else requests capture.</span></span>  
  
-   <span data-ttu-id="116ac-182">別の動作がプッシュされます。</span><span class="sxs-lookup"><span data-stu-id="116ac-182">Another behavior is pushed.</span></span>  
  
-   <span data-ttu-id="116ac-183">この動作は削除されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-183">This behavior is removed.</span></span>  
  
 <span data-ttu-id="116ac-184">このような場合は、の各<xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A>動作でが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-184">In each of these cases, <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> will be called on the behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-185">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-185">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseDoubleClick (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseDoubleClick(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseDoubleClick (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseDoubleClick(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseDoubleClick (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-186"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-186">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="button"><span data-ttu-id="116ac-187">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</span><span class="sxs-lookup"><span data-stu-id="116ac-187">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</span></span></param>
        <param name="mouseLoc"><span data-ttu-id="116ac-188">クリックが発生した位置。</span><span class="sxs-lookup"><span data-stu-id="116ac-188">The location at which the click occurred.</span></span></param>
        <summary><span data-ttu-id="116ac-189"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにダブルクリック メッセージが渡されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-189">Called when any double-click message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="116ac-190">: メッセージが処理された場合。<see langword="false" />: それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="116ac-190">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-191"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A>ダブルクリック メッセージがメソッドを呼び出して、`WndProc`の装飾ウィンドウの<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-191">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any double-click message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-192">最上位に、メッセージがここでは、最初に渡される<xref:System.Windows.Forms.Design.Behavior.Behavior>動作スタックにします。</span><span class="sxs-lookup"><span data-stu-id="116ac-192">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="116ac-193">返す`true`このメソッドからによってメッセージが処理されたことを示します、<xref:System.Windows.Forms.Design.Behavior.Behavior>と処理を続行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="116ac-193">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="116ac-194">ここでは、メッセージは、適切な動作に送信されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-194">From here, the message is sent to the appropriate behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="116ac-195">次のコード例では、ダブルクリックしてメッセージを処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="116ac-195">The following code example demonstrates how to handle a double-click message.</span></span> <span data-ttu-id="116ac-196">完全なコード一覧については、次を参照してください。[方法。デザイン モードでコントロールの動作と外観を拡張](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120))します。</span><span class="sxs-lookup"><span data-stu-id="116ac-196">For a full code listing, see [How to: Extend the Appearance and Behavior of Controls in Design Mode](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)).</span></span>  
  
 [!code-csharp[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/CS/DesignerDemoControl.cs#10)]
 [!code-vb[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/VB/DesignerDemoControl.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-197">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-197">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseDown (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseDown(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseDown (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseDown(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseDown : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseDown (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-198"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-198">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="button"><span data-ttu-id="116ac-199">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</span><span class="sxs-lookup"><span data-stu-id="116ac-199">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</span></span></param>
        <param name="mouseLoc"><span data-ttu-id="116ac-200">クリックが発生した位置。</span><span class="sxs-lookup"><span data-stu-id="116ac-200">The location at which the click occurred.</span></span></param>
        <summary><span data-ttu-id="116ac-201"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスダウン メッセージが渡されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-201">Called when any mouse-down message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="116ac-202">: メッセージが処理された場合。<see langword="false" />: それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="116ac-202">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-203"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A>マウスダウン メッセージが、メソッドが呼び出されます、`WndProc`の装飾ウィンドウの<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-203">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-down message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-204">最上位に、メッセージがここでは、最初に渡される<xref:System.Windows.Forms.Design.Behavior.Behavior>動作スタックにします。</span><span class="sxs-lookup"><span data-stu-id="116ac-204">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="116ac-205">返す`true`このメソッドからによってメッセージが処理されたことを示します、<xref:System.Windows.Forms.Design.Behavior.Behavior>と処理を続行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="116ac-205">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="116ac-206">ここでは、メッセージは、適切な動作に送信されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-206">From here, the message is sent to the appropriate behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-207">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-207">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseEnter (System.Windows.Forms.Design.Behavior.Glyph g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseEnter(class System.Windows.Forms.Design.Behavior.Glyph g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseEnter (g As Glyph) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseEnter(System::Windows::Forms::Design::Behavior::Glyph ^ g);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool&#xA;override this.OnMouseEnter : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool" Usage="behavior.OnMouseEnter g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-208"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-208">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <summary><span data-ttu-id="116ac-209"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスエンター メッセージが渡されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-209">Called when any mouse-enter message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="116ac-210">: メッセージが処理された場合。<see langword="false" />: それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="116ac-210">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-211"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A>マウスエンター メッセージがメソッドを呼び出して、`WndProc`の装飾ウィンドウの<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-211">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-enter message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-212">ここでは、メッセージは、適切な動作に送信されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-212">From here, the message is sent to the appropriate behavior.</span></span>  
  
 <span data-ttu-id="116ac-213">マウス ポインターの場所が別に対し肯定的なヒット テストの場合<xref:System.Windows.Forms.Design.Behavior.Glyph>でこのメソッドを呼び出す前のヒット テストをよりも、<xref:System.Windows.Forms.Design.Behavior.Behavior>に関連付けられている、<xref:System.Windows.Forms.Design.Behavior.Glyph>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-213">When the mouse pointer's location is positively hit-tested with a different <xref:System.Windows.Forms.Design.Behavior.Glyph> than previous hit tests, this method is called on the <xref:System.Windows.Forms.Design.Behavior.Behavior> associated with the <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-214">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-214">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseHover (System.Windows.Forms.Design.Behavior.Glyph g, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseHover(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseHover (g As Glyph, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseHover(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : System.Windows.Forms.Design.Behavior.Glyph * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseHover : System.Windows.Forms.Design.Behavior.Glyph * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseHover (g, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-215"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-215">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="mouseLoc"><span data-ttu-id="116ac-216">ホバーが発生した位置。</span><span class="sxs-lookup"><span data-stu-id="116ac-216">The location at which the hover occurred.</span></span></param>
        <summary><span data-ttu-id="116ac-217"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスホバー メッセージが渡されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-217">Called when any mouse-hover message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="116ac-218">: メッセージが処理された場合。<see langword="false" />: それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="116ac-218">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-219"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A>マウス静止メッセージが、メソッドが呼び出されます、`WndProc`の装飾ウィンドウの<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-219">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-hover message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-220">最上位に、メッセージがここでは、最初に渡される<xref:System.Windows.Forms.Design.Behavior.Behavior>動作スタックにします。</span><span class="sxs-lookup"><span data-stu-id="116ac-220">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="116ac-221">返す`true`このメソッドからによってメッセージが処理されたことを示します、<xref:System.Windows.Forms.Design.Behavior.Behavior>と処理を続行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="116ac-221">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="116ac-222">ここでは、メッセージは、適切な動作に送信されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-222">From here, the message is sent to the appropriate behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-223">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-223">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseLeave (System.Windows.Forms.Design.Behavior.Glyph g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseLeave(class System.Windows.Forms.Design.Behavior.Glyph g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseLeave (g As Glyph) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseLeave(System::Windows::Forms::Design::Behavior::Glyph ^ g);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool&#xA;override this.OnMouseLeave : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool" Usage="behavior.OnMouseLeave g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-224"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-224">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <summary><span data-ttu-id="116ac-225"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスリーブ メッセージが渡されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-225">Called when any mouse-leave message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="116ac-226">: メッセージが処理された場合。<see langword="false" />: それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="116ac-226">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-227"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A>マウスリーブ メッセージが、メソッドが呼び出されます、`WndProc`の装飾ウィンドウの<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-227">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-leave message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-228">ここでは、メッセージは、適切な動作に送信されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-228">From here, the message is sent to the appropriate behavior.</span></span>  
  
 <span data-ttu-id="116ac-229">マウス ポインターが、確実にヒット テストを離れるとき<xref:System.Windows.Forms.Design.Behavior.Glyph>有効な<xref:System.Windows.Forms.Design.Behavior.Behavior>、このメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-229">When the mouse pointer leaves a positively hit-tested <xref:System.Windows.Forms.Design.Behavior.Glyph> with a valid <xref:System.Windows.Forms.Design.Behavior.Behavior>, this method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-230">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-230">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseMove (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseMove(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseMove (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseMove(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseMove : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseMove (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-231"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-231">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="button"><span data-ttu-id="116ac-232">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</span><span class="sxs-lookup"><span data-stu-id="116ac-232">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</span></span></param>
        <param name="mouseLoc"><span data-ttu-id="116ac-233">移動が発生した位置。</span><span class="sxs-lookup"><span data-stu-id="116ac-233">The location at which the move occurred.</span></span></param>
        <summary><span data-ttu-id="116ac-234"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウス移動メッセージが渡されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-234">Called when any mouse-move message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="116ac-235">: メッセージが処理された場合。<see langword="false" />: それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="116ac-235">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-236"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A>マウス移動メッセージが、メソッドが呼び出されます、`WndProc`の装飾ウィンドウの<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-236">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-move message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-237">最上位に、メッセージがここでは、最初に渡される<xref:System.Windows.Forms.Design.Behavior.Behavior>動作スタックにします。</span><span class="sxs-lookup"><span data-stu-id="116ac-237">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="116ac-238">返す`true`このメソッドからによってメッセージが処理されたことを示します、<xref:System.Windows.Forms.Design.Behavior.Behavior>と処理を続行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="116ac-238">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="116ac-239">ここでは、メッセージは、適切な動作に送信されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-239">From here, the message is sent to the appropriate behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-240">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-240">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseUp (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseUp(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseUp (g As Glyph, button As MouseButtons) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseUp(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons -&gt; bool&#xA;override this.OnMouseUp : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons -&gt; bool" Usage="behavior.OnMouseUp (g, button)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-241"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-241">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="button"><span data-ttu-id="116ac-242">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</span><span class="sxs-lookup"><span data-stu-id="116ac-242">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</span></span></param>
        <summary><span data-ttu-id="116ac-243"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスアップ メッセージが渡されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-243">Called when any mouse-up message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="116ac-244">: メッセージが処理された場合。<see langword="false" />: それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="116ac-244">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="116ac-245"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A>マウス アップ メッセージが、メソッドが呼び出されます、`WndProc`の装飾ウィンドウの<xref:System.Windows.Forms.Design.Behavior.BehaviorService>します。</span><span class="sxs-lookup"><span data-stu-id="116ac-245">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-up message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="116ac-246">最上位に、メッセージがここでは、最初に渡される<xref:System.Windows.Forms.Design.Behavior.Behavior>動作スタックにします。</span><span class="sxs-lookup"><span data-stu-id="116ac-246">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="116ac-247">返す`true`このメソッドからによってメッセージが処理されたことを示します、<xref:System.Windows.Forms.Design.Behavior.Behavior>と処理を続行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="116ac-247">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="116ac-248">ここでは、メッセージは、適切な動作に送信されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-248">From here, the message is sent to the appropriate behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-249">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-249">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="public virtual void OnQueryContinueDrag (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnQueryContinueDrag (g As Glyph, e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="behavior.OnQueryContinueDrag (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="116ac-250"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-250">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="e"><span data-ttu-id="116ac-251">イベント データを格納している <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="116ac-251">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="116ac-252">装飾ウィンドウから適切な <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> またはヒット テストされた <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> にこのドラッグ アンド ドロップ イベントが送信されます。</span><span class="sxs-lookup"><span data-stu-id="116ac-252">Sends this drag-and-drop event from the adorner window to the appropriate <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> or hit-tested <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="116ac-253">オーバーライドすることができます、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" />メソッドように、<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />独自のドラッグ アンド ドロップの規則を指定できます。</span><span class="sxs-lookup"><span data-stu-id="116ac-253">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-and-drop rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="116ac-254">方法 : デザイン モードでコントロールの外観と動作を拡張する</span><span class="sxs-lookup"><span data-stu-id="116ac-254">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>