<Type Name="ManipulationProcessor2D" FullName="System.Windows.Input.Manipulations.ManipulationProcessor2D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="856f631f0a31f18c48634f2d658c4838eb30429e" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53296944" /></Metadata><TypeSignature Language="C#" Value="public class ManipulationProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationProcessor2D" />
  <TypeSignature Language="F#" Value="type ManipulationProcessor2D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>共有座標空間での 2 次元 (2-D) 変換を行う、複数の入力および単一の出力を持つコンポジターを実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>オブジェクトは、マニピュレーターのコレクション、複合オブジェクトとして扱います。 アプリケーションは、追跡および個々 のマニピュレーターを管理する必要があることから解放されます。  
  
 単独の操作プロセッサでは、要素の移動は発生しません。 アプリケーション、必要に応じて操作を開始し、操作プロセッサから情報をリッスンすることにより受信、 <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>、<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta>と<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>イベント。 これらのイベントを使用して受信した値には、場所、サイズ、または必要に応じて要素の方向を変更することが有効にします。  
  
 操作の種類が許可されている操作プロセッサに通知する (変換、拡大縮小、回転) を設定して、<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A>プロパティ。 非条件付きロジックには、操作する要素の変換を行うことができます。 たとえば、要素の方向を変更する前に回転が有効になっていることを確認ではなく無条件に適用できます操作プロセッサから受信した回転率回転が有効でない場合は、回転の変更が発生しなかったこと操作プロセッサが報告されます。  
  
 操作する要素が解放されるときに (すべてのマニピュレーターは削除されます)、摩擦をシミュレートし、徐々 に停止する前にその動きを遅く要素に慣性の処理を使用することができます。 詳細については、<xref:System.Windows.Input.Manipulations.InertiaProcessor2D> クラスを参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しい <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> オブジェクトを作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.Manipulations.ManipulationProcessor2D : System.Windows.Input.Manipulations.Manipulations2D -&gt; System.Windows.Input.Manipulations.ManipulationProcessor2D" Usage="new System.Windows.Input.Manipulations.ManipulationProcessor2D supportedManipulations" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations">サポートされている操作の初期セット。</param>
        <summary>新しい <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> オブジェクトを作成します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="supportedManipulations" /> パラメーターが、<see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> 列挙値の有効な組み合わせではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, class System.Windows.Input.Manipulations.ManipulationPivot2D pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D, pivot As ManipulationPivot2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations, System::Windows::Input::Manipulations::ManipulationPivot2D ^ pivot);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.Manipulations.ManipulationProcessor2D : System.Windows.Input.Manipulations.Manipulations2D * System.Windows.Input.Manipulations.ManipulationPivot2D -&gt; System.Windows.Input.Manipulations.ManipulationProcessor2D" Usage="new System.Windows.Input.Manipulations.ManipulationProcessor2D (supportedManipulations, pivot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
        <Parameter Name="pivot" Type="System.Windows.Input.Manipulations.ManipulationPivot2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations">サポートされている操作の初期セット。</param>
        <param name="pivot">単一マニピュレーターの回転のピボット情報。</param>
        <summary>新しい <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> オブジェクトを作成します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="supportedManipulations" /> パラメーターが、<see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> 列挙値の有効な組み合わせではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作の完了時に発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public void CompleteManipulation (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteManipulation(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteManipulation (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteManipulation(long timestamp);" />
      <MemberSignature Language="F#" Value="member this.CompleteManipulation : int64 -&gt; unit" Usage="manipulationProcessor2D.CompleteManipulation timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp">操作を完了する 100 ナノ秒単位のタイムスタンプ。</param>
        <summary>現在の操作を強制的に完了し、<see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">タイムスタンプは、現在の操作の前のタイムスタンプより小さいです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberSignature Language="F#" Value="member this.Delta : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " Usage="member this.Delta : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作の起点が変更された場合や、変換、拡大と縮小、または回転が行われた場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType>イベントと<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType>イベントは、同じ型。 通常、両方のイベントの同じイベント ハンドラーを使用することができます。  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumScaleRotateRadius">
      <MemberSignature Language="C#" Value="public float MinimumScaleRotateRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinimumScaleRotateRadius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumScaleRotateRadius As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MinimumScaleRotateRadius { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumScaleRotateRadius : single with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マニピュレーターが拡大と縮小および回転に参加するために必要な座標単位の最小半径を取得または設定します。</summary>
        <value>マニピュレーターが拡大と縮小および回転に参加するために必要な座標単位の最小半径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マニピュレーターが非常に現在処理中のマニピュレーターの重心の近くにある場合は、マニピュレーターが非常に小さなモーションにより、回転やスケーリングに非常に大きな変更になります。 この問題を回避するには設定<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A>0 より大きい値にします。 重心には、その距離よりも近いマニピュレーターは、回転とスケーリング操作では含まれません。  
  
 使用する一般的な値は、可能性の高い、マニピュレーターの動作を「誤って」の大きさに基づく必要があります。 たとえば、マニピュレーターが画面に接触する人間指の場合は、センチメートルなどに対応する radius は適切なのようにあります。  
  
 値は、<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A>有限の正の数値でなければなりません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.ManipulationPivot2D Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::ManipulationPivot2D ^ Pivot { System::Windows::Input::Manipulations::ManipulationPivot2D ^ get(); void set(System::Windows::Input::Manipulations::ManipulationPivot2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pivot : System.Windows.Input.Manipulations.ManipulationPivot2D with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.ManipulationPivot2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作プロセッサのピボット情報を取得または設定します。</summary>
        <value>操作プロセッサのピボット情報。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A>単一マニピュレーターの回転のピボット情報を提供するプロパティを使用します。 このプロパティを null に設定すると、単一マニピュレーターの回転が無効にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessManipulators">
      <MemberSignature Language="C#" Value="public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessManipulators(int64 timestamp, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessManipulators (timestamp As Long, manipulators As IEnumerable(Of Manipulator2D))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessManipulators(long timestamp, System::Collections::Generic::IEnumerable&lt;System::Windows::Input::Manipulations::Manipulator2D&gt; ^ manipulators);" />
      <MemberSignature Language="F#" Value="member this.ProcessManipulators : int64 * seq&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; -&gt; unit" Usage="manipulationProcessor2D.ProcessManipulators (timestamp, manipulators)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
        <Parameter Name="manipulators" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt;" />
      </Parameters>
      <Docs>
        <param name="timestamp">100 ナノ秒単位のバッチのタイムスタンプ。</param>
        <param name="manipulators">現在スコープ内にあるマニピュレーターのセット。</param>
        <summary>指定されたマニピュレーターを単一のバッチ操作として処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーター`manipulators`リストが空または null にすることがあります。 この結果、ゼロに達したマニピュレーターの数の場合、<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>イベントが発生します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.UIElement.OnLostMouseCapture%2A>のメソッド、<xref:System.Windows.UIElement>を呼び出すオブジェクトがオーバーライドされる、<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A>メソッドの一覧を<xref:System.Windows.Input.Manipulations.Manipulator2D>オブジェクトを null に設定します。  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">タイムスタンプは、現在の操作の前のタイムスタンプより小さいです。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.ManipulationParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Input.Manipulations.ManipulationParameters2D -&gt; unit" Usage="manipulationProcessor2D.SetParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters">設定するパラメーター。</param>
        <summary>操作プロセッサのパラメーターを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of Manipulation2DStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DStartedEventArgs ^&gt; ^ Started;" />
      <MemberSignature Language="F#" Value="member this.Started : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; " Usage="member this.Started : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しい操作の開始時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、イベント ハンドラーを<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>慣性の処理が実行されている場合とそうである場合に表示するイベントのチェックで停止します。  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedManipulations">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportedManipulations As Manipulations2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::Manipulations2D SupportedManipulations { System::Windows::Input::Manipulations::Manipulations2D get(); void set(System::Windows::Input::Manipulations::Manipulations2D value); };" />
      <MemberSignature Language="F#" Value="member this.SupportedManipulations : System.Windows.Input.Manipulations.Manipulations2D with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.Manipulations2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サポートされている操作の現在のセットを取得または設定します。</summary>
        <value>サポートされている操作の現在のセット。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティは、<see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> 列挙値の有効な組み合わせではない値への設定を試みます。</exception>
      </Docs>
    </Member>
  </Members>
</Type>