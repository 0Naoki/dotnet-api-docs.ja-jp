<Type Name="TrackingParticipant" FullName="System.Activities.Tracking.TrackingParticipant">
  <Metadata><Meta Name="ms.openlocfilehash" Value="80ea45556f7796206c5a83c3a2d37924f15b6de3" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63922715" /></Metadata><TypeSignature Language="C#" Value="public abstract class TrackingParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Tracking.TrackingParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingParticipant abstract" />
  <TypeSignature Language="F#" Value="type TrackingParticipant = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e88fb-101">ワークフロー追跡インフラストラクチャおよびアクセス追跡レコードと対話するワークフロー拡張機能の基本クラス。</span><span class="sxs-lookup"><span data-stu-id="e88fb-101">The base class for workflow extensions that interact with the workflow tracking infrastructure and access tracking records.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e88fb-102">追跡参加要素は、追跡レコードを受け取るために登録されています。</span><span class="sxs-lookup"><span data-stu-id="e88fb-102">A tracking participant is registered to receive tracking records.</span></span> <span data-ttu-id="e88fb-103">現在、追跡参加要素を実装するクラスをワークフロー インスタンスに登録して、追跡レコードを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e88fb-103">Currently, any class that implements the tracking participant can be registered with the workflow instance to receive tracking records.</span></span> <span data-ttu-id="e88fb-104">追跡参加要素がサード パーティ コードの場合、このコードが悪意のあるコードではないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="e88fb-104">If the tracking participant is third party code, ensure that this is not malicious code.</span></span> <span data-ttu-id="e88fb-105">追跡参加要素は、ワークフロー インスタンスと同じプロセスで実行されます。悪意のある追跡参加要素の場合、このコードによってワークフローの実行全体が影響を受ける場合があります。</span><span class="sxs-lookup"><span data-stu-id="e88fb-105">The tracking participants run in the same process as the workflow instance and in the case of malicious tracking participants, this code could affect the overall workflow execution.</span></span> <span data-ttu-id="e88fb-106">追跡レコードは、ワークフローの実行時に登録済みの追跡参加要素に配信されます。このため開発者は、追跡メソッド内での意図しない操作によって、追跡参加要素が実行中のワークフローに影響を与えないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e88fb-106">The tracking records are delivered to the registered tracking participants as the workflow executes, so the developer should ensure that the tracking participant does not affect the running workflow by performing unintended operations within the track method.</span></span> <span data-ttu-id="e88fb-107">この例では、時間がかかるワークフロー変数または操作を変更できます。</span><span class="sxs-lookup"><span data-stu-id="e88fb-107">Examples of this could be the alteration of workflow variables or operations that take a long time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e88fb-108">派生クラスで実装された場合、派生クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="e88fb-108">When implemented in a derived class, creates a new instance of the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrack">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTrack (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTrack(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTrack (record As TrackingRecord, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTrack(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrack : System.Activities.Tracking.TrackingRecord * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrack : System.Activities.Tracking.TrackingRecord * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="trackingParticipant.BeginTrack (record, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="e88fb-109">生成された追跡レコード。</span><span class="sxs-lookup"><span data-stu-id="e88fb-109">The generated tracking record.</span></span></param>
        <param name="timeout"><span data-ttu-id="e88fb-110">プロバイダーが試行を中止してからの期間。</span><span class="sxs-lookup"><span data-stu-id="e88fb-110">The time period after which the provider aborts the attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="e88fb-111">操作が完了した時点で呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="e88fb-111">The method to be called on completion of the operation.</span></span></param>
        <param name="state"><span data-ttu-id="e88fb-112">この非同期操作を一意に識別するために使用するユーザー定義オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e88fb-112">A user-defined object that uniquely identifies this asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="e88fb-113">派生クラスとして実装された場合、追跡レコードの非同期処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="e88fb-113">When implemented in a derived class, begins asynchronous processing of the tracking record.</span></span></summary>
        <returns><span data-ttu-id="e88fb-114">操作の結果。</span><span class="sxs-lookup"><span data-stu-id="e88fb-114">The result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e88fb-115">参加要素は、レコードを処理するジョブを開始し、ワークフロー ランタイムによって使用される <xref:System.IAsyncResult> を返して、ジョブの完了を待ちます。</span><span class="sxs-lookup"><span data-stu-id="e88fb-115">Participants are expected to begin a job to process the records and return an <xref:System.IAsyncResult> that the workflow runtime uses to wait for completion.</span></span> <span data-ttu-id="e88fb-116">既定の実装では、<xref:System.Activities.Tracking.TrackingParticipant.Track%2A> を呼び出し、完了ステータスを返します。</span><span class="sxs-lookup"><span data-stu-id="e88fb-116">The default implementation is to call <xref:System.Activities.Tracking.TrackingParticipant.Track%2A> and return a Completed status.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrack">
      <MemberSignature Language="C#" Value="protected internal virtual void EndTrack (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EndTrack(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EndTrack (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EndTrack(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTrack : IAsyncResult -&gt; unit&#xA;override this.EndTrack : IAsyncResult -&gt; unit" Usage="trackingParticipant.EndTrack result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e88fb-117">操作の状態。</span><span class="sxs-lookup"><span data-stu-id="e88fb-117">The status of the operation.</span></span></param>
        <summary><span data-ttu-id="e88fb-118">派生クラスとして実装された場合、非同期追跡操作の終了を表します。</span><span class="sxs-lookup"><span data-stu-id="e88fb-118">When implemented in a derived class, represents the end of an asynchronous tracking operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e88fb-119">このメソッドは、追跡操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="e88fb-119">This method is expected to block until the tracking operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="protected internal abstract void Track (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Track(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Track (record As TrackingRecord, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Track(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Track : System.Activities.Tracking.TrackingRecord * TimeSpan -&gt; unit" Usage="trackingParticipant.Track (record, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="e88fb-120">生成された追跡レコード。</span><span class="sxs-lookup"><span data-stu-id="e88fb-120">The generated tracking record.</span></span></param>
        <param name="timeout"><span data-ttu-id="e88fb-121">プロバイダーが試行を中止してからの期間。</span><span class="sxs-lookup"><span data-stu-id="e88fb-121">The time period after which the provider aborts the attempt.</span></span></param>
        <summary><span data-ttu-id="e88fb-122">派生クラスとして実装された場合、追跡レコードの同期処理に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e88fb-122">When implemented in a derived class, used to synchronously process the tracking record.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e88fb-123">ワークフロー インスタンスによって追跡レコードが出力されると、追跡メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e88fb-123">The track method is called when the workflow instance emits a tracking record.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingProfile">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Tracking.TrackingProfile TrackingProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Tracking.TrackingProfile TrackingProfile" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Tracking.TrackingParticipant.TrackingProfile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TrackingProfile As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Activities::Tracking::TrackingProfile ^ TrackingProfile { System::Activities::Tracking::TrackingProfile ^ get(); void set(System::Activities::Tracking::TrackingProfile ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TrackingProfile : System.Activities.Tracking.TrackingProfile with get, set" Usage="System.Activities.Tracking.TrackingParticipant.TrackingProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e88fb-124">追跡参加要素によって使用される追跡プロファイル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e88fb-124">The tracking profile object used by the tracking participant.</span></span> <span data-ttu-id="e88fb-125">追跡プロファイルは、追跡参加要素をワークフロー拡張機能に追加する前に、参加要素で設定されます。</span><span class="sxs-lookup"><span data-stu-id="e88fb-125">Before adding the tracking participant to the workflow extensions, the tracking profile is set on the participant.</span></span></summary>
        <value><span data-ttu-id="e88fb-126">追跡プロファイル。</span><span class="sxs-lookup"><span data-stu-id="e88fb-126">The tracking profile.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e88fb-127">追跡プロファイルは、この追跡参加要素に送信される追跡イベントを定義します。</span><span class="sxs-lookup"><span data-stu-id="e88fb-127">The tracking profile defines which tracking events are sent to this tracking participant.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>