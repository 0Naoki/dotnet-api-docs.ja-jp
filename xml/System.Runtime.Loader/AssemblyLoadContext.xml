<Type Name="AssemblyLoadContext" FullName="System.Runtime.Loader.AssemblyLoadContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3cdf5b1dd5217e7f54ec5ce6fcb7f581a871d9d" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58455213" /></Metadata><TypeSignature Language="C#" Value="public abstract class AssemblyLoadContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AssemblyLoadContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Loader.AssemblyLoadContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AssemblyLoadContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyLoadContext abstract" />
  <TypeSignature Language="F#" Value="type AssemblyLoadContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Loader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="aaaff-101">バインディングに関するランタイムのスコープの概念を表します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-101">Represents the runtime's concept of a scope for binding.</span></span> <span data-ttu-id="aaaff-102">このクラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="aaaff-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="aaaff-103"><xref:System.Runtime.Loader.AssemblyLoadContext>読み込みコンテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-103">The <xref:System.Runtime.Loader.AssemblyLoadContext> represents a load context.</span></span> <span data-ttu-id="aaaff-104">概念的には、読み込みコンテキストでは、可能性のある一連のアセンブリをアンロードと読み込み、解決して、スコープを作成します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-104">Conceptually, a load context creates a scope for loading, resolving, and potentially unloading a set of assemblies.</span></span>
 
 <span data-ttu-id="aaaff-105"><xref:System.Runtime.Loader.AssemblyLoadContext> は抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="aaaff-105"><xref:System.Runtime.Loader.AssemblyLoadContext> is an abstract class.</span></span> <span data-ttu-id="aaaff-106"><xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType>具象クラスを作成するために実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="aaaff-106">The <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType> needs to be implemented to create a concrete class.</span></span>
 
 <span data-ttu-id="aaaff-107"><xref:System.Runtime.Loader.AssemblyLoadContext>アセンブリ バインディングの分離を提供するには、主に存在します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-107">The <xref:System.Runtime.Loader.AssemblyLoadContext> exists primarily to provide assembly binding isolation.</span></span> <span data-ttu-id="aaaff-108">これにより、1 つのプロセス内で読み込まれる同じアセンブリの複数のバージョンができます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-108">It allows multiple versions of the same assembly to be loaded within a single process.</span></span> <span data-ttu-id="aaaff-109">複数によって提供される分離メカニズムに置き換えられます<xref:System.AppDomain>.NET Framework 内のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="aaaff-109">It replaces the isolation mechanisms provided by multiple <xref:System.AppDomain> instances in the .NET Framework.</span></span>
 
 > [!NOTE]
 > <span data-ttu-id="aaaff-110"><xref:System.Runtime.Loader.AssemblyLoadContext> 任意のセキュリティ機能は提供されません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-110"><xref:System.Runtime.Loader.AssemblyLoadContext> does not provide any security features.</span></span> <span data-ttu-id="aaaff-111">すべてのコードでは、プロセスの完全なアクセス許可を持っています。</span><span class="sxs-lookup"><span data-stu-id="aaaff-111">All code has full permissions of the process.</span></span>

### <a name="usage-in-the-runtime"></a><span data-ttu-id="aaaff-112">ランタイムでの使用状況</span><span class="sxs-lookup"><span data-stu-id="aaaff-112">Usage in the runtime</span></span>
 <span data-ttu-id="aaaff-113">ランタイムは、2 つのアセンブリ読み込みコンテキストを実装します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-113">The runtime implements two assembly load contexts:</span></span>
 * <span data-ttu-id="aaaff-114"><xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType> アプリケーションのメイン アセンブリとその静的の依存関係に使用されるランタイムの既定のバインディング コンテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-114"><xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType> represents the runtime's default binding context which is used for the application main assembly and its static dependencies.</span></span>
 * <span data-ttu-id="aaaff-115"><xref:System.Reflection.Assembly.LoadFile(System.String)?displayProperty=nameWithType>メソッドは最も基本的なインスタンス化して読み込むアセンブリを分離<xref:System.Runtime.Loader.AssemblyLoadContext>します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-115">The <xref:System.Reflection.Assembly.LoadFile(System.String)?displayProperty=nameWithType> method isolates the assemblies it loads by instantiating the most basic <xref:System.Runtime.Loader.AssemblyLoadContext>.</span></span> <span data-ttu-id="aaaff-116">独自の各アセンブリを読み込みます単純な分離スキームが<xref:System.Runtime.Loader.AssemblyLoadContext>で依存関係解決策はありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-116">It has a simplistic isolation scheme which loads each assembly in its own <xref:System.Runtime.Loader.AssemblyLoadContext> with no dependency resolution.</span></span>
 
### <a name="application-usage"></a><span data-ttu-id="aaaff-117">アプリケーションの使用状況</span><span class="sxs-lookup"><span data-stu-id="aaaff-117">Application usage</span></span>
 <span data-ttu-id="aaaff-118">アプリケーションを作成できます独自<xref:System.Runtime.Loader.AssemblyLoadContext>バインディング シナリオを高度なカスタム ソリューションを作成します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-118">An application can create its own <xref:System.Runtime.Loader.AssemblyLoadContext> to create a custom solution for advanced binding scenarios.</span></span> <span data-ttu-id="aaaff-119">カスタマイズは、依存関係の解決メカニズムの定義について説明します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-119">The customization focuses on defining dependency resolution mechanisms.</span></span>
 
 <span data-ttu-id="aaaff-120"><xref:System.Runtime.Loader.AssemblyLoadContext>マネージ アセンブリの解決策を実装する 2 つの拡張ポイントを提供します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-120">The <xref:System.Runtime.Loader.AssemblyLoadContext> provides two extension points to implement managed assembly resolution:</span></span>
 1. <span data-ttu-id="aaaff-121"><xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType>の最初の機会を提供します、<xref:System.Runtime.Loader.AssemblyLoadContext>アセンブリを解決するには、読み込むことと、それを返します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-121">The <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType> provides the first chance for the <xref:System.Runtime.Loader.AssemblyLoadContext> to resolve the assembly, load it and return it.</span></span> <span data-ttu-id="aaaff-122">場合、<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType>返します`null`、ローダーにアセンブリをロードしようとしています、<xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-122">If the <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType> returns `null`, the loader will try to load the assembly into the <xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType>.</span></span>
 2. <span data-ttu-id="aaaff-123">場合、<xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType>が元のアセンブリを解決できない<xref:System.Runtime.Loader.AssemblyLoadContext>アセンブリを解決する 2 番目のチャンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-123">If the <xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType> is unable to resolve the assembly, the original <xref:System.Runtime.Loader.AssemblyLoadContext> gets a second chance to resolve the assembly.</span></span> <span data-ttu-id="aaaff-124">ランタイムを発生させます、<xref:System.Runtime.Loader.AssemblyLoadContext.Resolving>イベント。</span><span class="sxs-lookup"><span data-stu-id="aaaff-124">The runtime raises the <xref:System.Runtime.Loader.AssemblyLoadContext.Resolving> event.</span></span>
 
 <span data-ttu-id="aaaff-125">さらに、<xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)?displayProperty=nameWithType>仮想メソッドは、既定の非管理対象のアセンブリ解決のカスタマイズを使用します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-125">Additionally the <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)?displayProperty=nameWithType> virtual method allows customization of the default unmanaged assembly resolution.</span></span> <span data-ttu-id="aaaff-126">既定の実装を返します`null`、これにより、ほとんどのシナリオである既定の検索ポリシーを使用するランタイム検索します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-126">The default implementation returns `null`, which causes the runtime search to use its default search policy which is sufficient for most scenarios.</span></span>

### <a name="technical-challenges"></a><span data-ttu-id="aaaff-127">技術的な課題</span><span class="sxs-lookup"><span data-stu-id="aaaff-127">Technical challenges</span></span>
 * <span data-ttu-id="aaaff-128">1 つのプロセスのランタイムの複数のバージョンを読み込むことはできません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-128">It is not possible to load multiple versions of the runtime in a single process.</span></span>
     > [!CAUTION]
     > <span data-ttu-id="aaaff-129">複数のコピーまたは異なるバージョンの framework アセンブリの読み込み中は、予期しないと問題の診断が困難につながります。</span><span class="sxs-lookup"><span data-stu-id="aaaff-129">Loading multiple copies or different versions of framework assemblies can lead to unexpected and hard to diagnose behavior.</span></span>
     
     > [!TIP]
     > <span data-ttu-id="aaaff-130">リモート処理やプロセス間通信プロセスの境界を使用して、この分離の問題を解決します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-130">Use process boundaries with remoting and/or interprocess communication to solve this isolation problem.</span></span>
 
 * <span data-ttu-id="aaaff-131">アセンブリの読み込みのタイミング、テストおよびデバッグ困難になります。</span><span class="sxs-lookup"><span data-stu-id="aaaff-131">The timing of assembly loading can make testing and debugging difficult.</span></span> <span data-ttu-id="aaaff-132">アセンブリはすぐに解決される、依存関係を持たない通常読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-132">Assemblies are typically loaded without their dependencies immediately being resolved.</span></span> <span data-ttu-id="aaaff-133">必要とされるため、依存関係が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-133">The dependencies are loaded as they are needed:</span></span>
     * <span data-ttu-id="aaaff-134">ときに依存するアセンブリにコードを分岐します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-134">When code branches into a dependent assembly.</span></span>
     * <span data-ttu-id="aaaff-135">ときにコードでは、リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-135">When code loads resources.</span></span>
     * <span data-ttu-id="aaaff-136">ときにコードでは、明示的にアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-136">When code explicitly loads assemblies.</span></span>
 
 * <span data-ttu-id="aaaff-137">実装<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType>に存在するさまざまなバージョンを許可するために分離する必要がありますが、新しい依存関係を追加することができます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-137">The implementation of <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType> can add new dependencies which may need to be isolated to allow different versions to exist.</span></span> <span data-ttu-id="aaaff-138">最も自然な実装は、既定のコンテキストでこれらの依存関係を配置するとします。</span><span class="sxs-lookup"><span data-stu-id="aaaff-138">The most natural implementation would place these dependencies in the default context.</span></span> <span data-ttu-id="aaaff-139">慎重に設計では、新しい依存関係を分離できます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-139">Careful design can isolate the new dependencies.</span></span>
 
 * <span data-ttu-id="aaaff-140">バインドの分離プロセスでは、同じ型の名前を持つ複数の種類を作成します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-140">The binding isolation process creates multiple types with the same type name.</span></span>
     * <span data-ttu-id="aaaff-141">これにより、わかりづらいエラー メッセージ、たとえば「Foo.Foo 型にキャストできません Foo.Foo を入力します」</span><span class="sxs-lookup"><span data-stu-id="aaaff-141">This can lead to confusing error messages, for example "type Foo.Foo cannot be cast to type Foo.Foo."</span></span>
     * <span data-ttu-id="aaaff-142">分離の境界を越えてマーシャ リングすることが重要です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-142">Marshalling across isolation boundaries is non-trivial.</span></span> <span data-ttu-id="aaaff-143">一般的なソリューションは、既定の読み込みコンテキストにのみ読み込まれるアセンブリで定義されているインターフェイスを使用することです。</span><span class="sxs-lookup"><span data-stu-id="aaaff-143">A typical solution would be to use an interface defined in an assembly which is only loaded into the default load context.</span></span>
 
 ]]></format>
    </remarks>
    <related type="Article" href="https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/assemblyloadcontext.md"><span data-ttu-id="aaaff-144">AssemblyLoadContext CoreCLR の設計ドキュメント</span><span class="sxs-lookup"><span data-stu-id="aaaff-144">AssemblyLoadContext CoreCLR design document</span></span></related>
    <related type="Article" href="/en-us/dotnet/standard/assembly/unloadability-howto"><span data-ttu-id="aaaff-145">使用し、.NET Core でのアセンブリ unloadability をデバッグする方法</span><span class="sxs-lookup"><span data-stu-id="aaaff-145">How to use and debug assembly unloadability in .NET Core</span></span></related>
    <related type="Article" href="https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/unloadability.md"><span data-ttu-id="aaaff-146">AssemblyLoadContext unloadability デザイン ドキュメント</span><span class="sxs-lookup"><span data-stu-id="aaaff-146">AssemblyLoadContext unloadability design document</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AssemblyLoadContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AssemblyLoadContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aaaff-147"><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-147">Initializes a new instance of the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="aaaff-148">このコンストラクターは保護されています。</span><span class="sxs-lookup"><span data-stu-id="aaaff-148">This constructor is protected.</span></span> <span data-ttu-id="aaaff-149">のみ呼び出すことができます、<xref:System.Runtime.Loader.AssemblyLoadContext>クラスまたはその派生クラス。</span><span class="sxs-lookup"><span data-stu-id="aaaff-149">It can only be called from the <xref:System.Runtime.Loader.AssemblyLoadContext> class or its derived classes.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AssemblyLoadContext (bool isCollectible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isCollectible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isCollectible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AssemblyLoadContext(bool isCollectible);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Loader.AssemblyLoadContext : bool -&gt; System.Runtime.Loader.AssemblyLoadContext" Usage="new System.Runtime.Loader.AssemblyLoadContext isCollectible" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isCollectible" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="isCollectible"><span data-ttu-id="aaaff-150">ガベージ コレクションを有効にする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aaaff-150"><see langword="true" /> to enable garbage collection; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="aaaff-151">ガベージ コレクションが有効かどうかを示す値と共に、<see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-151">Initializes a new instance of the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> class with a value that indicates whether garbage collection is enabled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Runtime.Loader.AssemblyLoadContext Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Loader.AssemblyLoadContext Default" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Loader.AssemblyLoadContext.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As AssemblyLoadContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Loader::AssemblyLoadContext ^ Default { System::Runtime::Loader::AssemblyLoadContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Runtime.Loader.AssemblyLoadContext" Usage="System.Runtime.Loader.AssemblyLoadContext.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Loader.AssemblyLoadContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aaaff-152">既定の <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-152">Gets the default <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span> <span data-ttu-id="aaaff-153">既定のコンテキストには、メイン アプリケーション アセンブリとその静的依存関係が含まれます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-153">The default context contains the main application assembly and its static dependencies.</span></span></summary>
        <value><span data-ttu-id="aaaff-154">既定のアセンブリ読み込みコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="aaaff-154">The default assembly load context.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public static System.Reflection.AssemblyName GetAssemblyName (string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.AssemblyName GetAssemblyName(string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssemblyName (assemblyPath As String) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::AssemblyName ^ GetAssemblyName(System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="static member GetAssemblyName : string -&gt; System.Reflection.AssemblyName" Usage="System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName assemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyPath"><span data-ttu-id="aaaff-155">アセンブリへのパス。</span><span class="sxs-lookup"><span data-stu-id="aaaff-155">The path to the assembly.</span></span></param>
        <summary><span data-ttu-id="aaaff-156">アセンブリ パスの <see cref="T:System.Reflection.AssemblyName" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-156">Gets an <see cref="T:System.Reflection.AssemblyName" /> for an assembly path.</span></span></summary>
        <returns><span data-ttu-id="aaaff-157"><paramref name="assemblyPath" /> にあるアセンブリのすべて解析されたアセンブリ名を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="aaaff-157">An object that contains the fully parsed assembly name for the assembly at <paramref name="assemblyPath" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaaff-158"><paramref name="assemblyPath" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-158"><paramref name="assemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="aaaff-159">アセンブリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-159">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="aaaff-160">アセンブリは、有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-160">The assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadContext">
      <MemberSignature Language="C#" Value="public static System.Runtime.Loader.AssemblyLoadContext GetLoadContext (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Loader.AssemblyLoadContext GetLoadContext(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Loader::AssemblyLoadContext ^ GetLoadContext(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetLoadContext : System.Reflection.Assembly -&gt; System.Runtime.Loader.AssemblyLoadContext" Usage="System.Runtime.Loader.AssemblyLoadContext.GetLoadContext assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Loader.AssemblyLoadContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="aaaff-161">アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="aaaff-161">An assembly.</span></span></param>
        <summary><span data-ttu-id="aaaff-162">指定された <see cref="T:System.Reflection.Assembly" /> を含む <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-162">Gets the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> containing the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="aaaff-163"><paramref name="assembly" /> を含むアセンブリ読み込みコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="aaaff-163">The assembly load context containing the <paramref name="assembly" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaaff-164"><paramref name="assembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-164"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsCollectible">
      <MemberSignature Language="C#" Value="public bool IsCollectible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollectible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollectible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollectible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollectible : bool" Usage="System.Runtime.Loader.AssemblyLoadContext.IsCollectible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aaaff-165">この <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> が収集可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-165">Gets a value that indicates whether this <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> is collectible.</span></span></summary>
        <value><span data-ttu-id="aaaff-166"><see langword="true" /> この場合<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />収集可能な。 それ以外は<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-166"><see langword="true" /> if this <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> is collectible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aaaff-167">値がコンス トラクターで指定されていない場合、値は<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-167">If a value is not specified in the constructor, the value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="aaaff-168">詳細については、次を参照してください。<see href="/en-us/dotnet/standard/assembly/unloadability-howto">方法を使用して、デバッグで .NET Core アセンブリ unloadability</see>します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-168">For more information see <see href="/en-us/dotnet/standard/assembly/unloadability-howto">How to use and debug assembly unloadability in .NET Core</see>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="protected abstract System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.Load assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="aaaff-169">読み込むアセンブリを記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="aaaff-169">The object that describes the assembly to be loaded.</span></span></param>
        <summary><span data-ttu-id="aaaff-170">派生クラス内でオーバーライドされると、<see cref="T:System.Reflection.AssemblyName" /> に基づいてアセンブリを解決して読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-170">When overridden in a derived class, allows an assembly to be resolved and loaded based on its <see cref="T:System.Reflection.AssemblyName" />.</span></span></summary>
        <returns><span data-ttu-id="aaaff-171">読み込まれるアセンブリ。または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="aaaff-171">The loaded assembly, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 
## Remarks
 <span data-ttu-id="aaaff-172">アセンブリの解決時に、<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)>メソッドには、読み込まれたアセンブリに、アセンブリ名を解決するのには、ファースト チャンスです。</span><span class="sxs-lookup"><span data-stu-id="aaaff-172">During assembly resolution, the <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)> method has the first chance to resolve the assembly name to a loaded assembly.</span></span> <span data-ttu-id="aaaff-173">アセンブリを読み込むか、返すことできます`null`します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-173">It can either load an assembly or return `null`.</span></span> <span data-ttu-id="aaaff-174">返された場合`null`、解像度処理が続行されます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-174">If it returns `null`, the resolution process continues.</span></span> <span data-ttu-id="aaaff-175">参照してください<xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)>の完全なプロセスの説明。</span><span class="sxs-lookup"><span data-stu-id="aaaff-175">See <xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)> for the full process description.</span></span>
 
 > [!IMPORTANT]
 > <span data-ttu-id="aaaff-176">再帰的なスタック オーバーフローを防ぐためには、呼び出さないでくださいこのインスタンスの<xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)>このメソッドからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="aaaff-176">To prevent recursive stack overflow, do not call this instance's <xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)> method from this method.</span></span>
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromAssemblyName (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromAssemblyName(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromAssemblyName(System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssemblyName : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromAssemblyName assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="aaaff-177">読み込むアセンブリについて記述しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="aaaff-177">The object that describes the assembly to load.</span></span></param>
        <summary><span data-ttu-id="aaaff-178"><see cref="T:System.Reflection.AssemblyName" /> を指定してアセンブリを解決して読み込みます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-178">Resolves and loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span></span></summary>
        <returns><span data-ttu-id="aaaff-179">読み込まれるアセンブリ。またはスローされます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-179">The loaded assembly, or throws.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="aaaff-180"><xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName%2A> 解決することでアセンブリを読み込み、<xref:System.Reflection.AssemblyName>します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-180"><xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName%2A> loads an assembly by resolving the <xref:System.Reflection.AssemblyName>.</span></span> <span data-ttu-id="aaaff-181">これは、フル解像度をトリガーします。</span><span class="sxs-lookup"><span data-stu-id="aaaff-181">This triggers a full resolution.</span></span> <span data-ttu-id="aaaff-182">解像度の代替シーケンスは、このプロセスを次に示します。1.</span><span class="sxs-lookup"><span data-stu-id="aaaff-182">The resolution fallback sequence follows this process: 1.</span></span> <span data-ttu-id="aaaff-183">メソッド呼び出し<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)>します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-183">The method calls <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)>.</span></span>
         > [!IMPORTANT]
         > <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)> must not call this method to prevent recursive stack overflow.
     2. Unless the assembly is loaded or an exception is thrown, the method attempts to load the assembly in the default <xref:System.Runtime.Loader.AssemblyLoadContext>.
     3. Unless the assembly is loaded or an exception is thrown, the method fires the <xref:System.Runtime.Loader.AssemblyLoadContext.Resolving> event.
     4. Unless the assembly is loaded or an exception is thrown, the method fires the <xref:System.AppDomain.AssemblyResolve> event.
 
 > [!NOTE]
 > <span data-ttu-id="aaaff-184"><xref:System.IO.FileLoadException> 場合にスローされる`assemblyRef`完全なアセンブリ名と簡易名に一致する最初のアセンブリは、互換性のないバージョンまたはカルチャを指定します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-184"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name, and the first assembly that matches the simple name has a incompatible version or culture.</span></span> <span data-ttu-id="aaaff-185">ローダーは、単純な名前と一致する他のアセンブリのプローブを続行できません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-185">The loader does not continue probing for other assemblies that match the simple name.</span></span>
 
 <span data-ttu-id="aaaff-186">各<xref:System.Runtime.Loader.AssemblyLoadContext>のみ読み込むことができます。 \* 実行可能アセンブリの 1 つのバージョン。</span><span class="sxs-lookup"><span data-stu-id="aaaff-186">Each <xref:System.Runtime.Loader.AssemblyLoadContext> can load only: \* One version of an executable assembly.</span></span>
<span data-ttu-id="aaaff-187">\* 各カルチャのサテライト アセンブリの 1 つのバージョンです。</span><span class="sxs-lookup"><span data-stu-id="aaaff-187">\* One version of a satellite assembly for each culture.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaaff-188"><paramref name="assemblyName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-188"><paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="aaaff-189"><paramref name="assemblyName" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-189"><paramref name="assemblyName" /> is not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="aaaff-190"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-190"><paramref name="assemblyName" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="aaaff-191"><paramref name="assemblyName" /> と一致しないアセンブリまたはモジュールが読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="aaaff-191">An assembly or module was loaded which did not match the <paramref name="assemblyName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssemblyPath">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromAssemblyPath (string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromAssemblyPath(string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadFromAssemblyPath (assemblyPath As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromAssemblyPath(System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssemblyPath : string -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromAssemblyPath assemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyPath"><span data-ttu-id="aaaff-192">読み込むファイルの完全修飾パス。</span><span class="sxs-lookup"><span data-stu-id="aaaff-192">The fully qualified path of the file to load.</span></span></param>
        <summary><span data-ttu-id="aaaff-193">指定したパスのアセンブリ ファイルの内容を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-193">Loads the contents of an assembly file on the specified path.</span></span></summary>
        <returns><span data-ttu-id="aaaff-194">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="aaaff-194">The loaded assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aaaff-195"><paramref name="assemblyPath" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-195">The <paramref name="assemblyPath" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaaff-196"><paramref name="assemblyPath" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-196">The <paramref name="assemblyPath" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="aaaff-197">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="aaaff-197">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="aaaff-198"><paramref name="assemblyPath" /> パラメーターが空の文字列 ("") になっているか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-198">The <paramref name="assemblyPath" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="aaaff-199"><paramref name="assemblyPath" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-199"><paramref name="assemblyPath" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromNativeImagePath">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromNativeImagePath (string nativeImagePath, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromNativeImagePath(string nativeImagePath, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadFromNativeImagePath (nativeImagePath As String, assemblyPath As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromNativeImagePath(System::String ^ nativeImagePath, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.LoadFromNativeImagePath : string * string -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromNativeImagePath (nativeImagePath, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeImagePath" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nativeImagePath"><span data-ttu-id="aaaff-200">読み込むファイルの完全修飾パス。</span><span class="sxs-lookup"><span data-stu-id="aaaff-200">The fully qualified path of the file to load.</span></span></param>
        <param name="assemblyPath"><span data-ttu-id="aaaff-201">読み込むファイルの IL バージョンの完全修飾パス。または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="aaaff-201">The fully qualified path of the IL version of the file to load, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="aaaff-202">指定したパスにあるマネージド アセンブリ ファイルのネイティブ イメージの内容を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-202">Loads the contents of the native image of a managed assembly file on the specified path.</span></span></summary>
        <returns><span data-ttu-id="aaaff-203">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="aaaff-203">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="aaaff-204">マネージ アセンブリのネイティブ イメージでは、特定のプラットフォームで実行されているを最適化するには、jit です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-204">The native image of a managed assembly is pre-jitted to optimize running on a specific platform.</span></span>
 
 <span data-ttu-id="aaaff-205">アセンブリのパスは、アセンブリの IL バージョンへのパスを参照します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-205">The assembly path refers to the path to the IL version of the assembly.</span></span> <span data-ttu-id="aaaff-206">省略可能な引数は、IL は通常、ネイティブ イメージに含まれていることです。</span><span class="sxs-lookup"><span data-stu-id="aaaff-206">It is an optional argument as the IL is typically included in the native image.</span></span> <span data-ttu-id="aaaff-207">使用できます、ランタイムによってフォールバックとしてネイティブ イメージが見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="aaaff-207">It can be used by the runtime as a fallback if the native image is not found.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aaaff-208"><paramref name="nativeImagePath" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-208">The <paramref name="nativeImagePath" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aaaff-209"><paramref name="assemblyPath" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-209">The <paramref name="assemblyPath" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaaff-210"><paramref name="nativeImagePath" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-210">The <paramref name="nativeImagePath" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="aaaff-211">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="aaaff-211">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="aaaff-212"><paramref name="nativeImagePath" /> パラメーターが空の文字列 ("") になっているか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-212">The <paramref name="nativeImagePath" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="aaaff-213"><paramref name="assemblyPath" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-213"><paramref name="assemblyPath" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromStream">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromStream (System.IO.Stream assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromStream(class System.IO.Stream assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromStream(System::IO::Stream ^ assembly);" />
      <MemberSignature Language="F#" Value="member this.LoadFromStream : System.IO.Stream -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromStream assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="aaaff-214">マネージド アセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="aaaff-214">A byte array that is a COFF-based image containing a managed assembly.</span></span></param>
        <summary><span data-ttu-id="aaaff-215">マネージド アセンブリを含む COFF (Common Object File Format) ベースのイメージを使用して、アセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-215">Loads the assembly with a common object file format (COFF)-based image containing a managed assembly.</span></span></summary>
        <returns><span data-ttu-id="aaaff-216">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="aaaff-216">The loaded assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaaff-217"><paramref name="assembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-217"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="aaaff-218"><paramref name="assembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-218"><paramref name="assembly" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromStream">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromStream (System.IO.Stream assembly, System.IO.Stream assemblySymbols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromStream(class System.IO.Stream assembly, class System.IO.Stream assemblySymbols) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromStream(System::IO::Stream ^ assembly, System::IO::Stream ^ assemblySymbols);" />
      <MemberSignature Language="F#" Value="member this.LoadFromStream : System.IO.Stream * System.IO.Stream -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromStream (assembly, assemblySymbols)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.IO.Stream" />
        <Parameter Name="assemblySymbols" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="aaaff-219">マネージド アセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="aaaff-219">A byte array that is a COFF-based image containing a managed assembly.</span></span></param>
        <param name="assemblySymbols"><span data-ttu-id="aaaff-220">アセンブリのシンボルを表す生バイトを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="aaaff-220">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <summary><span data-ttu-id="aaaff-221">マネージド アセンブリが含まれている COFF (Common Object File Format) ベースのイメージを使用して、このアセンブリを読み込みます。アセンブリのシンボルを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-221">Loads the assembly with a common object file format (COFF)-based image containing a managed assembly, optionally including symbols for the assembly.</span></span></summary>
        <returns><span data-ttu-id="aaaff-222">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="aaaff-222">The loaded assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaaff-223"><paramref name="assembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-223"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="aaaff-224"><paramref name="assembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-224"><paramref name="assembly" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadUnmanagedDll">
      <MemberSignature Language="C#" Value="protected virtual IntPtr LoadUnmanagedDll (string unmanagedDllName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int LoadUnmanagedDll(string unmanagedDllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadUnmanagedDll (unmanagedDllName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr LoadUnmanagedDll(System::String ^ unmanagedDllName);" />
      <MemberSignature Language="F#" Value="abstract member LoadUnmanagedDll : string -&gt; nativeint&#xA;override this.LoadUnmanagedDll : string -&gt; nativeint" Usage="assemblyLoadContext.LoadUnmanagedDll unmanagedDllName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedDllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unmanagedDllName"><span data-ttu-id="aaaff-225">アンマネージ ライブラリの名前。</span><span class="sxs-lookup"><span data-stu-id="aaaff-225">Name of the unmanaged library.</span></span> <span data-ttu-id="aaaff-226">通常、これはパスまたは拡張子を含まないファイル名です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-226">Typically this is the filename without its path or extensions.</span></span></param>
        <summary><span data-ttu-id="aaaff-227">名前を指定してアンマネージ ライブラリを読み込むことを派生クラスに許可します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-227">Allows derived class to load an unmanaged library by name.</span></span></summary>
        <returns><span data-ttu-id="aaaff-228">読み込まれたライブラリのハンドル。または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="aaaff-228">A handle to the loaded library, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="aaaff-229">既定の実装を常に戻り`null`します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-229">The default implementation always return `null`.</span></span> <span data-ttu-id="aaaff-230">ときに`null`返されるか、ランタイムは既定のポリシーでライブラリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-230">When `null` is returned, the runtime loads the library with its default policy.</span></span>
 
 <span data-ttu-id="aaaff-231">アンマネージ ライブラリの検索アルゴリズムをカスタマイズするのには、この仮想メソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-231">This virtual method can be overridden to customize the unmanaged library search algorithm.</span></span> <span data-ttu-id="aaaff-232">オーバーライドされた場合、名前は、ライブラリを識別するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-232">When overridden the name can be used to identify the library.</span></span> <span data-ttu-id="aaaff-233">読み込まれたライブラリは、要求と一致する必要はありませんが、必要に応じて変換することができます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-233">The loaded library does not need to match the requested name, but can be transformed as needed.</span></span> <span data-ttu-id="aaaff-234">これには、プラットフォーム固有の名前付けの名前を調整することが含まれます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-234">This could include adjusting the name for platform specific naming.</span></span>
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadUnmanagedDllFromPath">
      <MemberSignature Language="C#" Value="protected IntPtr LoadUnmanagedDllFromPath (string unmanagedDllPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance native int LoadUnmanagedDllFromPath(string unmanagedDllPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function LoadUnmanagedDllFromPath (unmanagedDllPath As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IntPtr LoadUnmanagedDllFromPath(System::String ^ unmanagedDllPath);" />
      <MemberSignature Language="F#" Value="member this.LoadUnmanagedDllFromPath : string -&gt; nativeint" Usage="assemblyLoadContext.LoadUnmanagedDllFromPath unmanagedDllPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedDllPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unmanagedDllPath"><span data-ttu-id="aaaff-235">アンマネージ ライブラリのパス。</span><span class="sxs-lookup"><span data-stu-id="aaaff-235">The path to the unmanaged library.</span></span></param>
        <summary><span data-ttu-id="aaaff-236">指定したパスからアンマネージ ライブラリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-236">Loads an unmanaged library from the specified path.</span></span></summary>
        <returns><span data-ttu-id="aaaff-237">読み込まれたライブラリのハンドル。</span><span class="sxs-lookup"><span data-stu-id="aaaff-237">A handle to the loaded library.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aaaff-238"><paramref name="unmanagedDllPath" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-238"><paramref name="unmanagedDllPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="aaaff-239"><paramref name="unmanagedDllPath" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-239">The <paramref name="unmanagedDllPath" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="aaaff-240">アンマネージ ライブラリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-240">The unmanaged library cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolving">
      <MemberSignature Language="C#" Value="public event Func&lt;System.Runtime.Loader.AssemblyLoadContext,System.Reflection.AssemblyName,System.Reflection.Assembly&gt; Resolving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`3&lt;class System.Runtime.Loader.AssemblyLoadContext, class System.Reflection.AssemblyName, class System.Reflection.Assembly&gt; Resolving" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.Loader.AssemblyLoadContext.Resolving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Resolving As Func(Of AssemblyLoadContext, AssemblyName, Assembly) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Func&lt;System::Runtime::Loader::AssemblyLoadContext ^, System::Reflection::AssemblyName ^, System::Reflection::Assembly ^&gt; ^ Resolving;" />
      <MemberSignature Language="F#" Value="member this.Resolving : Func&lt;System.Runtime.Loader.AssemblyLoadContext, System.Reflection.AssemblyName, System.Reflection.Assembly&gt; " Usage="member this.Resolving : System.Func&lt;System.Runtime.Loader.AssemblyLoadContext, System.Reflection.AssemblyName, System.Reflection.Assembly&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Runtime.Loader.AssemblyLoadContext,System.Reflection.AssemblyName,System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aaaff-241">このアセンブリ読み込みコンテキストに読み込もうとしたときにアセンブリの解決に失敗したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-241">Occurs when the resolution of an assembly fails when attempting to load into this assembly load context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="aaaff-242">指定されているアセンブリを返すかを返すには、このイベントのハンドラーの役目です`null`アセンブリが認識されない場合。</span><span class="sxs-lookup"><span data-stu-id="aaaff-242">It is the responsibility of the handler for this event to return the assembly that is specified, or to return `null` if the assembly is not recognized.</span></span>
 
 > [!IMPORTANT]
 >  <span data-ttu-id="aaaff-243">イベント ハンドラーがない値を返すまでに、イベント ハンドラーが順序で呼び出されます場合、このイベントの 1 つ以上のイベント ハンドラーが登録されている、`null`します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-243">If more than one event handler is registered for this event, the event handlers are called in order until an event handler returns a value that isn't `null`.</span></span> <span data-ttu-id="aaaff-244">後続のイベント ハンドラーは無視されます。</span><span class="sxs-lookup"><span data-stu-id="aaaff-244">Subsequent event handlers are ignored.</span></span>
 
 <span data-ttu-id="aaaff-245">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aaaff-245">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>
 
 <span data-ttu-id="aaaff-246">いずれかでこのイベントのハンドラーを追加できることは<xref:System.Runtime.Loader.AssemblyLoadContext>既定のコンテキストを含むです。</span><span class="sxs-lookup"><span data-stu-id="aaaff-246">It is noteworthy that a handler can be added for this event on any <xref:System.Runtime.Loader.AssemblyLoadContext>, including the default context.</span></span>
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvingUnmanagedDll">
      <MemberSignature Language="C#" Value="public event Func&lt;System.Reflection.Assembly,string,IntPtr&gt; ResolvingUnmanagedDll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`3&lt;class System.Reflection.Assembly, string, native int&gt; ResolvingUnmanagedDll" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll" />
      <MemberSignature Language="VB.NET" Value="Public Event ResolvingUnmanagedDll As Func(Of Assembly, String, IntPtr) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Func&lt;System::Reflection::Assembly ^, System::String ^, IntPtr&gt; ^ ResolvingUnmanagedDll;" />
      <MemberSignature Language="F#" Value="member this.ResolvingUnmanagedDll : Func&lt;System.Reflection.Assembly, string, nativeint&gt; " Usage="member this.ResolvingUnmanagedDll : System.Func&lt;System.Reflection.Assembly, System.string, System.nativeint&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Reflection.Assembly,System.String,System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProfileOptimizationRoot">
      <MemberSignature Language="C#" Value="public void SetProfileOptimizationRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProfileOptimizationRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProfileOptimizationRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProfileOptimizationRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="member this.SetProfileOptimizationRoot : string -&gt; unit" Usage="assemblyLoadContext.SetProfileOptimizationRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartProfileOptimization">
      <MemberSignature Language="C#" Value="public void StartProfileOptimization (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartProfileOptimization(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartProfileOptimization (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartProfileOptimization(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="member this.StartProfileOptimization : string -&gt; unit" Usage="assemblyLoadContext.StartProfileOptimization profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="assemblyLoadContext.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aaaff-247">この <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> のアンロードを開始します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-247">Initiates an unload of this <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

+ <span data-ttu-id="aaaff-248">AssemblyLoadContext のみアンロードできますが、収集可能な場合です。</span><span class="sxs-lookup"><span data-stu-id="aaaff-248">An AssemblyLoadContext can only be unloaded if it is collectible.</span></span>
+ <span data-ttu-id="aaaff-249">アンロードが非同期的に発生します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-249">Unloading will occur asynchronously.</span></span>
+ <span data-ttu-id="aaaff-250">アンロードしても、中、AssemblyLoadContext への参照は行われません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-250">Unloading will not occur while there are references to the AssemblyLoadContext.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="aaaff-251">アンロードすることはできません。</span><span class="sxs-lookup"><span data-stu-id="aaaff-251">Unloading is not allowed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event Action&lt;System.Runtime.Loader.AssemblyLoadContext&gt; Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Action`1&lt;class System.Runtime.Loader.AssemblyLoadContext&gt; Unloading" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.Loader.AssemblyLoadContext.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloading As Action(Of AssemblyLoadContext) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Action&lt;System::Runtime::Loader::AssemblyLoadContext ^&gt; ^ Unloading;" />
      <MemberSignature Language="F#" Value="member this.Unloading : Action&lt;System.Runtime.Loader.AssemblyLoadContext&gt; " Usage="member this.Unloading : System.Action&lt;System.Runtime.Loader.AssemblyLoadContext&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Runtime.Loader.AssemblyLoadContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aaaff-252"><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> がアンロードされるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="aaaff-252">Occurs when the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>