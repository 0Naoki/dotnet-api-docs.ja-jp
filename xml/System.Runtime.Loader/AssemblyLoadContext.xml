<Type Name="AssemblyLoadContext" FullName="System.Runtime.Loader.AssemblyLoadContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe808c4c4c712badb2f053cd6b67adeb6ee31b76" /><Meta Name="ms.sourcegitcommit" Value="f991677a7374c45590a432ff7ab830beb05f2ccd" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/27/2019" /><Meta Name="ms.locfileid" Value="68591107" /></Metadata><TypeSignature Language="C#" Value="public abstract class AssemblyLoadContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AssemblyLoadContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Loader.AssemblyLoadContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AssemblyLoadContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyLoadContext abstract" />
  <TypeSignature Language="F#" Value="type AssemblyLoadContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Loader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc9ac-101">バインディングに関するランタイムのスコープの概念を表します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-101">Represents the runtime's concept of a scope for binding.</span></span> <span data-ttu-id="fc9ac-102">このクラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="fc9ac-103">は<xref:System.Runtime.Loader.AssemblyLoadContext>読み込みコンテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-103">The <xref:System.Runtime.Loader.AssemblyLoadContext> represents a load context.</span></span> <span data-ttu-id="fc9ac-104">概念的には、読み込みコンテキストによって、アセンブリのセットを読み込み、解決、およびアンロードするためのスコープが作成されます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-104">Conceptually, a load context creates a scope for loading, resolving, and potentially unloading a set of assemblies.</span></span>
 
 <span data-ttu-id="fc9ac-105"><xref:System.Runtime.Loader.AssemblyLoadContext> は抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-105"><xref:System.Runtime.Loader.AssemblyLoadContext> is an abstract class.</span></span> <span data-ttu-id="fc9ac-106">具象<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType>クラスを作成するには、を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-106">The <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType> needs to be implemented to create a concrete class.</span></span>
 
 <span data-ttu-id="fc9ac-107">は<xref:System.Runtime.Loader.AssemblyLoadContext>主にアセンブリバインディングの分離を提供するために存在します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-107">The <xref:System.Runtime.Loader.AssemblyLoadContext> exists primarily to provide assembly binding isolation.</span></span> <span data-ttu-id="fc9ac-108">これにより、同じアセンブリの複数のバージョンを1つのプロセス内に読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-108">It allows multiple versions of the same assembly to be loaded within a single process.</span></span> <span data-ttu-id="fc9ac-109">これにより、.NET Framework 内の複数<xref:System.AppDomain>のインスタンスによって提供される分離メカニズムが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-109">It replaces the isolation mechanisms provided by multiple <xref:System.AppDomain> instances in the .NET Framework.</span></span>
 
 > [!NOTE]
 > <span data-ttu-id="fc9ac-110"><xref:System.Runtime.Loader.AssemblyLoadContext>では、セキュリティ機能は提供されません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-110"><xref:System.Runtime.Loader.AssemblyLoadContext> does not provide any security features.</span></span> <span data-ttu-id="fc9ac-111">すべてのコードには、プロセスの完全なアクセス許可があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-111">All code has full permissions of the process.</span></span>

### <a name="usage-in-the-runtime"></a><span data-ttu-id="fc9ac-112">ランタイムでの使用</span><span class="sxs-lookup"><span data-stu-id="fc9ac-112">Usage in the runtime</span></span>
 <span data-ttu-id="fc9ac-113">ランタイムは、次の2つのアセンブリ読み込みコンテキストを実装します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-113">The runtime implements two assembly load contexts:</span></span>
 * <span data-ttu-id="fc9ac-114"><xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType>アプリケーションのメインアセンブリとその静的依存関係に使用されるランタイムの既定のバインディングコンテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-114"><xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType> represents the runtime's default binding context which is used for the application main assembly and its static dependencies.</span></span>
 * <span data-ttu-id="fc9ac-115">メソッド<xref:System.Reflection.Assembly.LoadFile(System.String)?displayProperty=nameWithType>は、最も基本的な<xref:System.Runtime.Loader.AssemblyLoadContext>をインスタンス化することによって、読み込まれるアセンブリを分離します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-115">The <xref:System.Reflection.Assembly.LoadFile(System.String)?displayProperty=nameWithType> method isolates the assemblies it loads by instantiating the most basic <xref:System.Runtime.Loader.AssemblyLoadContext>.</span></span> <span data-ttu-id="fc9ac-116">これには、依存関係の解決を行わずに各<xref:System.Runtime.Loader.AssemblyLoadContext>アセンブリを独自に読み込む、単純な分離方式があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-116">It has a simplistic isolation scheme which loads each assembly in its own <xref:System.Runtime.Loader.AssemblyLoadContext> with no dependency resolution.</span></span>
 
### <a name="application-usage"></a><span data-ttu-id="fc9ac-117">アプリケーションの使用状況</span><span class="sxs-lookup"><span data-stu-id="fc9ac-117">Application usage</span></span>
 <span data-ttu-id="fc9ac-118">アプリケーションで独自<xref:System.Runtime.Loader.AssemblyLoadContext>のを作成して、高度なバインドシナリオ用のカスタムソリューションを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-118">An application can create its own <xref:System.Runtime.Loader.AssemblyLoadContext> to create a custom solution for advanced binding scenarios.</span></span> <span data-ttu-id="fc9ac-119">カスタマイズでは、依存関係の解決メカニズムの定義に焦点を当てます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-119">The customization focuses on defining dependency resolution mechanisms.</span></span>
 
 <span data-ttu-id="fc9ac-120">に<xref:System.Runtime.Loader.AssemblyLoadContext>は、マネージアセンブリ解決を実装するための2つの拡張ポイントが用意されています。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-120">The <xref:System.Runtime.Loader.AssemblyLoadContext> provides two extension points to implement managed assembly resolution:</span></span>
 1. <span data-ttu-id="fc9ac-121">は、が<xref:System.Runtime.Loader.AssemblyLoadContext>アセンブリを解決するための最初の機会を提供し、それを読み込んで返します。<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fc9ac-121">The <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType> provides the first chance for the <xref:System.Runtime.Loader.AssemblyLoadContext> to resolve the assembly, load it and return it.</span></span> <span data-ttu-id="fc9ac-122">が<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType>を返す`null`場合、ローダーはアセンブリをに<xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType>読み込もうとします。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-122">If the <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType> returns `null`, the loader will try to load the assembly into the <xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType>.</span></span>
 2. <span data-ttu-id="fc9ac-123">がアセンブリを解決できない場合、元<xref:System.Runtime.Loader.AssemblyLoadContext>のはアセンブリを解決する機会をもう1つ取得します。 <xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fc9ac-123">If the <xref:System.Runtime.Loader.AssemblyLoadContext.Default?displayProperty=nameWithType> is unable to resolve the assembly, the original <xref:System.Runtime.Loader.AssemblyLoadContext> gets a second chance to resolve the assembly.</span></span> <span data-ttu-id="fc9ac-124">ランタイムはイベントを<xref:System.Runtime.Loader.AssemblyLoadContext.Resolving>発生させます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-124">The runtime raises the <xref:System.Runtime.Loader.AssemblyLoadContext.Resolving> event.</span></span>
 
 <span data-ttu-id="fc9ac-125">さらに<xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)?displayProperty=nameWithType> 、仮想メソッドでは、既定のアンマネージアセンブリ解決をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-125">Additionally the <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)?displayProperty=nameWithType> virtual method allows customization of the default unmanaged assembly resolution.</span></span> <span data-ttu-id="fc9ac-126">既定の実装は`null`を返します。これにより、ランタイム検索では、ほとんどのシナリオに十分な既定の検索ポリシーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-126">The default implementation returns `null`, which causes the runtime search to use its default search policy which is sufficient for most scenarios.</span></span>

### <a name="technical-challenges"></a><span data-ttu-id="fc9ac-127">技術的な課題</span><span class="sxs-lookup"><span data-stu-id="fc9ac-127">Technical challenges</span></span>
 * <span data-ttu-id="fc9ac-128">1つのプロセスで複数のバージョンのランタイムを読み込むことはできません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-128">It is not possible to load multiple versions of the runtime in a single process.</span></span>
     > [!CAUTION]
     > <span data-ttu-id="fc9ac-129">複数のコピーまたは異なるバージョンのフレームワークアセンブリを読み込むと、予期しない動作の診断が困難になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-129">Loading multiple copies or different versions of framework assemblies can lead to unexpected and hard to diagnose behavior.</span></span>
     
     > [!TIP]
     > <span data-ttu-id="fc9ac-130">この分離の問題を解決するには、リモート処理またはプロセス間通信でプロセス境界を使用します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-130">Use process boundaries with remoting and/or interprocess communication to solve this isolation problem.</span></span>
 
 * <span data-ttu-id="fc9ac-131">アセンブリの読み込みのタイミングによって、テストとデバッグが困難になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-131">The timing of assembly loading can make testing and debugging difficult.</span></span> <span data-ttu-id="fc9ac-132">アセンブリは通常、依存関係が直ちに解決されることなく読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-132">Assemblies are typically loaded without their dependencies immediately being resolved.</span></span> <span data-ttu-id="fc9ac-133">依存関係は、必要に応じて読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-133">The dependencies are loaded as they are needed:</span></span>
     * <span data-ttu-id="fc9ac-134">コードが依存アセンブリに分岐する場合。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-134">When code branches into a dependent assembly.</span></span>
     * <span data-ttu-id="fc9ac-135">コードがリソースを読み込むとき。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-135">When code loads resources.</span></span>
     * <span data-ttu-id="fc9ac-136">コードによってアセンブリが明示的に読み込まれるとき。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-136">When code explicitly loads assemblies.</span></span>
 
 * <span data-ttu-id="fc9ac-137">の実装に<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType>よって新しい依存関係を追加できるため、異なるバージョンの存在を許可するために分離する必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-137">The implementation of <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)?displayProperty=nameWithType> can add new dependencies which may need to be isolated to allow different versions to exist.</span></span> <span data-ttu-id="fc9ac-138">最も自然な実装では、これらの依存関係が既定のコンテキストに配置されます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-138">The most natural implementation would place these dependencies in the default context.</span></span> <span data-ttu-id="fc9ac-139">慎重に設計すると、新しい依存関係を分離できます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-139">Careful design can isolate the new dependencies.</span></span>
 
 * <span data-ttu-id="fc9ac-140">バインド分離プロセスでは、同じ型名を持つ複数の型が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-140">The binding isolation process creates multiple types with the same type name.</span></span>
     * <span data-ttu-id="fc9ac-141">これにより、"型 Foo. foo は型 foo. foo にキャストできません" など、エラーメッセージが混乱する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-141">This can lead to confusing error messages, for example "type Foo.Foo cannot be cast to type Foo.Foo."</span></span>
     * <span data-ttu-id="fc9ac-142">分離の境界を越えたマーシャリングは、簡単ではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-142">Marshaling across isolation boundaries is non-trivial.</span></span> <span data-ttu-id="fc9ac-143">一般的な解決策は、既定の読み込みコンテキストにのみ読み込まれるアセンブリで定義されているインターフェイスを使用することです。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-143">A typical solution would be to use an interface defined in an assembly which is only loaded into the default load context.</span></span>
 
 ]]></format>
    </remarks>
    <related type="Article" href="https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/assemblyloadcontext.md"><span data-ttu-id="fc9ac-144">AssemblyLoadContext CoreCLR デザインドキュメント</span><span class="sxs-lookup"><span data-stu-id="fc9ac-144">AssemblyLoadContext CoreCLR design document</span></span></related>
    <related type="Article" href="~/docs/standard/assembly/unloadability-howto.md"><span data-ttu-id="fc9ac-145">.NET Core でアセンブリのアンローダビリティを使用およびデバッグする方法</span><span class="sxs-lookup"><span data-stu-id="fc9ac-145">How to use and debug assembly unloadability in .NET Core</span></span></related>
    <related type="Article" href="https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/unloadability.md"><span data-ttu-id="fc9ac-146">AssemblyLoadContext unloadability design ドキュメント</span><span class="sxs-lookup"><span data-stu-id="fc9ac-146">AssemblyLoadContext unloadability design document</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AssemblyLoadContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AssemblyLoadContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9ac-147"><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-147">Initializes a new instance of the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9ac-148">このコンストラクターは保護されています。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-148">This constructor is protected.</span></span> <span data-ttu-id="fc9ac-149">これは、 <xref:System.Runtime.Loader.AssemblyLoadContext>クラスまたはその派生クラスからのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-149">It can only be called from the <xref:System.Runtime.Loader.AssemblyLoadContext> class or its derived classes.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AssemblyLoadContext (bool isCollectible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isCollectible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isCollectible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AssemblyLoadContext(bool isCollectible);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Loader.AssemblyLoadContext : bool -&gt; System.Runtime.Loader.AssemblyLoadContext" Usage="new System.Runtime.Loader.AssemblyLoadContext isCollectible" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isCollectible" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="isCollectible"><span data-ttu-id="fc9ac-150"><see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> を有効にするには <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-150"><see langword="true" /> to enable <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc9ac-151">アンロードを有効にするにはパフォーマンス コストがあるため、既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-151">The default value is <see langword="false" /> because there is a performance cost associated with enabling unloading.</span></span></param>
        <summary><span data-ttu-id="fc9ac-152">アンロードが有効かどうかを示す値を使用して、<see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-152">Initializes a new instance of the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> class with a value that indicates whether unloading is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9ac-153">このコンストラクターは保護されています。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-153">This constructor is protected.</span></span> <span data-ttu-id="fc9ac-154">これは、 <xref:System.Runtime.Loader.AssemblyLoadContext>クラスまたはその派生クラスからのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-154">It can only be called from the <xref:System.Runtime.Loader.AssemblyLoadContext> class or its derived classes.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyLoadContext (string name, bool isCollectible = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool isCollectible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, Optional isCollectible As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Runtime.Loader.AssemblyLoadContext : string * bool -&gt; System.Runtime.Loader.AssemblyLoadContext" Usage="new System.Runtime.Loader.AssemblyLoadContext (name, isCollectible)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="isCollectible" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc9ac-155">新しいインスタンスの <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> の値です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-155">The value for <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> in the new instance.</span></span> <span data-ttu-id="fc9ac-156">この値は <see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-156">Its value can be <see langword="null" />.</span></span></param>
        <param name="isCollectible"><span data-ttu-id="fc9ac-157"><see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> を有効にするには <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-157"><see langword="true" /> to enable <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc9ac-158">アンロードを有効にするにはパフォーマンス コストがあるため、既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-158">The default value is <see langword="false" /> because there is a performance cost associated with enabling unloading.</span></span></param>
        <summary><span data-ttu-id="fc9ac-159">アンロードが有効かどうかを示す名前と値を使用して、<see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-159">Initializes a new instance of the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> class with a name and a value that indicates whether unloading is enabled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Runtime.Loader.AssemblyLoadContext&gt; All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IEnumerable`1&lt;class System.Runtime.Loader.AssemblyLoadContext&gt; All" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Loader.AssemblyLoadContext.All" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property All As IEnumerable(Of AssemblyLoadContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IEnumerable&lt;System::Runtime::Loader::AssemblyLoadContext ^&gt; ^ All { System::Collections::Generic::IEnumerable&lt;System::Runtime::Loader::AssemblyLoadContext ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.All : seq&lt;System.Runtime.Loader.AssemblyLoadContext&gt;" Usage="System.Runtime.Loader.AssemblyLoadContext.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Runtime.Loader.AssemblyLoadContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-160"><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> のすべてのインスタンスのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-160">Returns a collection of all <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> instances.</span></span></summary>
        <value><span data-ttu-id="fc9ac-161">すべて<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />のインスタンスのコレクション。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-161">A collection of all <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> instances.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; Assemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; Assemblies" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assemblies As IEnumerable(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ Assemblies { System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assemblies : seq&lt;System.Reflection.Assembly&gt;" Usage="System.Runtime.Loader.AssemblyLoadContext.Assemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-162"><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> に読み込まれた <see cref="T:System.Reflection.Assembly" /> インスタンスのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-162">Returns a collection of the <see cref="T:System.Reflection.Assembly" /> instances loaded in the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span></summary>
        <value><span data-ttu-id="fc9ac-163">に読み込まれた<see cref="T:System.Reflection.Assembly" />インスタンスのコレクション。 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /></span><span class="sxs-lookup"><span data-stu-id="fc9ac-163">A collection of the <see cref="T:System.Reflection.Assembly" /> instances loaded in the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentContextualReflectionContext">
      <MemberSignature Language="C#" Value="public static System.Runtime.Loader.AssemblyLoadContext CurrentContextualReflectionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Loader.AssemblyLoadContext CurrentContextualReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentContextualReflectionContext As AssemblyLoadContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Loader::AssemblyLoadContext ^ CurrentContextualReflectionContext { System::Runtime::Loader::AssemblyLoadContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentContextualReflectionContext : System.Runtime.Loader.AssemblyLoadContext" Usage="System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Loader.AssemblyLoadContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-164"><see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> への一番最近の呼び出しを使用して、<see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-164">Gets the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> set by the most recent call to <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />.</span></span></summary>
        <value><span data-ttu-id="fc9ac-165">の<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />最後の<see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />呼び出しで設定された。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-165">The <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> set by the most recent call to <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />.</span></span> <span data-ttu-id="fc9ac-166">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-166">This value can be <see langword="null" />.</span></span> <span data-ttu-id="fc9ac-167">値はに格納さ<see cref="T:System.Threading.AsyncLocal`1" />れるため、値は非同期コンテキストごとに一意です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-167">The value is stored in an <see cref="T:System.Threading.AsyncLocal`1" />, so the value is unique per asynchronous context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="fc9ac-168">詳細については、「 [Assemblyloadcontext design doc in .Net Core](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/AssemblyLoadContext.ContextualReflection.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-168">For more information, see [AssemblyLoadContext.CurrentContextualReflectionContext design doc in .NET Core](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/AssemblyLoadContext.ContextualReflection.md).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Runtime.Loader.AssemblyLoadContext Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Loader.AssemblyLoadContext Default" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Loader.AssemblyLoadContext.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As AssemblyLoadContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Loader::AssemblyLoadContext ^ Default { System::Runtime::Loader::AssemblyLoadContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Runtime.Loader.AssemblyLoadContext" Usage="System.Runtime.Loader.AssemblyLoadContext.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Loader.AssemblyLoadContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-169">既定の <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-169">Gets the default <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span> <span data-ttu-id="fc9ac-170">既定のコンテキストには、メイン アプリケーション アセンブリとその静的依存関係が含まれます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-170">The default context contains the main application assembly and its static dependencies.</span></span></summary>
        <value><span data-ttu-id="fc9ac-171">既定のアセンブリ読み込みコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-171">The default assembly load context.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterContextualReflection">
      <MemberSignature Language="C#" Value="public System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope EnterContextualReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.Loader.AssemblyLoadContext/ContextualReflectionScope EnterContextualReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function EnterContextualReflection () As AssemblyLoadContext.ContextualReflectionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Loader::AssemblyLoadContext::ContextualReflectionScope EnterContextualReflection();" />
      <MemberSignature Language="F#" Value="member this.EnterContextualReflection : unit -&gt; System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope" Usage="assemblyLoadContext.EnterContextualReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Loader.AssemblyLoadContext+ContextualReflectionScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9ac-172"><see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> を <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-172">Sets <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> to <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-173"><see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> の以前の値を復元するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-173">An object to restore the previous value of <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />.</span></span> <span data-ttu-id="fc9ac-174">これは、<see langword="using" /> ブロックの <see cref="T:System.IDisposable" /> として使用されることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-174">It is intended to be used as an <see cref="T:System.IDisposable" /> in a <see langword="using" /> block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="fc9ac-175">詳細については、「 [Assemblyloadcontext design doc in .Net Core](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/AssemblyLoadContext.ContextualReflection.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-175">For more information, see [AssemblyLoadContext.CurrentContextualReflectionContext design doc in .NET Core](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/AssemblyLoadContext.ContextualReflection.md).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterContextualReflection">
      <MemberSignature Language="C#" Value="public static System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope EnterContextualReflection (System.Reflection.Assembly activating);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.Loader.AssemblyLoadContext/ContextualReflectionScope EnterContextualReflection(class System.Reflection.Assembly activating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnterContextualReflection (activating As Assembly) As AssemblyLoadContext.ContextualReflectionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Loader::AssemblyLoadContext::ContextualReflectionScope EnterContextualReflection(System::Reflection::Assembly ^ activating);" />
      <MemberSignature Language="F#" Value="static member EnterContextualReflection : System.Reflection.Assembly -&gt; System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope" Usage="System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection activating" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Loader.AssemblyLoadContext+ContextualReflectionScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activating" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="activating"><span data-ttu-id="fc9ac-176">要求された <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> インスタンスを決定するのに使用されるアセンブリです。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-176">The assembly that is used to determine the requested <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> instance.</span></span></param>
        <summary><span data-ttu-id="fc9ac-177">アセンブリをロードした <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> に <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-177">Sets <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> to the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> which loaded the assembly.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-178"><see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> の以前の値を復元するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-178">An object to restore the previous value of <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />.</span></span> <span data-ttu-id="fc9ac-179">これは、<see langword="using" /> ブロックの <see cref="T:System.IDisposable" /> として使用されることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-179">It is intended to be used as an <see cref="T:System.IDisposable" /> in a <see langword="using" /> block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="fc9ac-180">詳細については、「 [Assemblyloadcontext design doc in .Net Core](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/AssemblyLoadContext.ContextualReflection.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-180">For more information, see [AssemblyLoadContext.CurrentContextualReflectionContext design doc in .NET Core](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/AssemblyLoadContext.ContextualReflection.md).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AssemblyLoadContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AssemblyLoadContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="assemblyLoadContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public static System.Reflection.AssemblyName GetAssemblyName (string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.AssemblyName GetAssemblyName(string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssemblyName (assemblyPath As String) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::AssemblyName ^ GetAssemblyName(System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="static member GetAssemblyName : string -&gt; System.Reflection.AssemblyName" Usage="System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName assemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyPath"><span data-ttu-id="fc9ac-181">アセンブリへのパス。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-181">The path to the assembly.</span></span></param>
        <summary><span data-ttu-id="fc9ac-182">アセンブリ パスの <see cref="T:System.Reflection.AssemblyName" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-182">Gets an <see cref="T:System.Reflection.AssemblyName" /> for an assembly path.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-183"><paramref name="assemblyPath" /> にあるアセンブリのすべて解析されたアセンブリ名を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-183">An object that contains the fully parsed assembly name for the assembly at <paramref name="assemblyPath" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc9ac-184"><paramref name="assemblyPath" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-184"><paramref name="assemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fc9ac-185">アセンブリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-185">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="fc9ac-186">アセンブリは、有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-186">The assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadContext">
      <MemberSignature Language="C#" Value="public static System.Runtime.Loader.AssemblyLoadContext GetLoadContext (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Loader.AssemblyLoadContext GetLoadContext(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Loader::AssemblyLoadContext ^ GetLoadContext(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetLoadContext : System.Reflection.Assembly -&gt; System.Runtime.Loader.AssemblyLoadContext" Usage="System.Runtime.Loader.AssemblyLoadContext.GetLoadContext assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Loader.AssemblyLoadContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="fc9ac-187">アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-187">An assembly.</span></span></param>
        <summary><span data-ttu-id="fc9ac-188">指定された <see cref="T:System.Reflection.Assembly" /> を含む <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-188">Gets the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> containing the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-189"><paramref name="assembly" /> を含むアセンブリ読み込みコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-189">The assembly load context containing the <paramref name="assembly" />.</span></span> <span data-ttu-id="fc9ac-190">ランタイムから <paramref name="assembly" /> が提供されなかった場合、このメソッドは null を返します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-190">If the <paramref name="assembly" /> is not provided by the runtime, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc9ac-191"><paramref name="assembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-191"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsCollectible">
      <MemberSignature Language="C#" Value="public bool IsCollectible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollectible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollectible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollectible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollectible : bool" Usage="System.Runtime.Loader.AssemblyLoadContext.IsCollectible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-192">この <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> が収集可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-192">Gets a value that indicates whether this <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> is collectible.</span></span></summary>
        <value><span data-ttu-id="fc9ac-193"><see langword="true" />この<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />が収集可能な場合は<see langword="false" />。それ以外の場合は。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-193"><see langword="true" /> if this <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> is collectible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc9ac-194">コンストラクターで値が指定されていない場合、値<see langword="false" />はになります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-194">If a value is not specified in the constructor, the value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="fc9ac-195">詳細については、「 [How to use and debug assembly unloadability in .Net Core](~/docs/standard/assembly/unloadability-howto.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-195">For more information, see [How to use and debug assembly unloadability in .NET Core](~/docs/standard/assembly/unloadability-howto.md).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="protected abstract System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.Load assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="fc9ac-196">読み込むアセンブリを記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-196">The object that describes the assembly to be loaded.</span></span></param>
        <summary><span data-ttu-id="fc9ac-197">派生クラス内でオーバーライドされると、<see cref="T:System.Reflection.AssemblyName" /> に基づいてアセンブリを解決して読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-197">When overridden in a derived class, allows an assembly to be resolved and loaded based on its <see cref="T:System.Reflection.AssemblyName" />.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-198">読み込まれるアセンブリ。または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-198">The loaded assembly, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 
## Remarks
 <span data-ttu-id="fc9ac-199">アセンブリの解決<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)>中に、メソッドは、アセンブリ名を読み込んだアセンブリに解決する機会があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-199">During assembly resolution, the <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)> method has the first chance to resolve the assembly name to a loaded assembly.</span></span> <span data-ttu-id="fc9ac-200">アセンブリを読み込むか、またはを`null`返すことができます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-200">It can either load an assembly or return `null`.</span></span> <span data-ttu-id="fc9ac-201">が返さ`null`れた場合、解決プロセスは続行されます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-201">If it returns `null`, the resolution process continues.</span></span> <span data-ttu-id="fc9ac-202">プロセス<xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)>の詳細については、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-202">See <xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)> for the full process description.</span></span>
 
 > [!IMPORTANT]
 > <span data-ttu-id="fc9ac-203">再帰的なスタックオーバーフローを防ぐには、このメソッド<xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)>からこのインスタンスのメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-203">To prevent recursive stack overflow, do not call this instance's <xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)> method from this method.</span></span>
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromAssemblyName (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromAssemblyName(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromAssemblyName(System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssemblyName : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromAssemblyName assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="fc9ac-204">読み込むアセンブリについて記述しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-204">The object that describes the assembly to load.</span></span></param>
        <summary><span data-ttu-id="fc9ac-205"><see cref="T:System.Reflection.AssemblyName" /> を指定してアセンブリを解決して読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-205">Resolves and loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-206">読み込まれるアセンブリ。またはスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-206">The loaded assembly, or throws.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="fc9ac-207"><xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName%2A>を解決して、 <xref:System.Reflection.AssemblyName>アセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-207"><xref:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName%2A> loads an assembly by resolving the <xref:System.Reflection.AssemblyName>.</span></span> <span data-ttu-id="fc9ac-208">これにより、完全な解決がトリガーします。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-208">This triggers a full resolution.</span></span> <span data-ttu-id="fc9ac-209">解決フォールバックシーケンスは、次のプロセスに従います。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-209">The resolution fallback sequence follows this process:</span></span>

1. <span data-ttu-id="fc9ac-210">メソッドはを<xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-210">The method calls <xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)>.</span></span>

   > [!IMPORTANT]
   > <span data-ttu-id="fc9ac-211"><xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)>再帰的なスタックオーバーフローを防ぐために、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-211"><xref:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)> must not call this method to prevent recursive stack overflow.</span></span>

2. <span data-ttu-id="fc9ac-212">アセンブリが読み込まれていない場合、または例外がスローされた場合を除き<xref:System.Runtime.Loader.AssemblyLoadContext>、メソッドは既定でアセンブリの読み込みを試みます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-212">Unless the assembly is loaded or an exception is thrown, the method attempts to load the assembly in the default <xref:System.Runtime.Loader.AssemblyLoadContext>.</span></span>
3. <span data-ttu-id="fc9ac-213">アセンブリが読み込まれていない場合、または例外がスロー <xref:System.Runtime.Loader.AssemblyLoadContext.Resolving>された場合を除き、メソッドはイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-213">Unless the assembly is loaded or an exception is thrown, the method fires the <xref:System.Runtime.Loader.AssemblyLoadContext.Resolving> event.</span></span>
4. <span data-ttu-id="fc9ac-214">アセンブリが読み込まれていない場合、または例外がスロー <xref:System.AppDomain.AssemblyResolve>された場合を除き、メソッドはイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-214">Unless the assembly is loaded or an exception is thrown, the method fires the <xref:System.AppDomain.AssemblyResolve> event.</span></span>
 
> [!NOTE]
> <span data-ttu-id="fc9ac-215"><xref:System.IO.FileLoadException>が完全な`assemblyRef`アセンブリ名を指定し、簡易名と一致する最初のアセンブリに互換性のないバージョンまたはカルチャがある場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-215"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name, and the first assembly that matches the simple name has a incompatible version or culture.</span></span> <span data-ttu-id="fc9ac-216">ローダーは、簡易名と一致する他のアセンブリのプローブを続行しません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-216">The loader does not continue probing for other assemblies that match the simple name.</span></span>
 
<span data-ttu-id="fc9ac-217">それぞれ<xref:System.Runtime.Loader.AssemblyLoadContext>が読み込むことができるのは次のようになります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-217">Each <xref:System.Runtime.Loader.AssemblyLoadContext> can load only:</span></span>
 
* <span data-ttu-id="fc9ac-218">実行可能アセンブリの1つのバージョン。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-218">One version of an executable assembly.</span></span>
* <span data-ttu-id="fc9ac-219">カルチャごとに1つのバージョンのサテライトアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-219">One version of a satellite assembly for each culture.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc9ac-220"><paramref name="assemblyName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-220"><paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fc9ac-221"><paramref name="assemblyName" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-221"><paramref name="assemblyName" /> is not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="fc9ac-222"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-222"><paramref name="assemblyName" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="fc9ac-223"><paramref name="assemblyName" /> と一致しないアセンブリまたはモジュールが読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-223">An assembly or module was loaded which did not match the <paramref name="assemblyName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssemblyPath">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromAssemblyPath (string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromAssemblyPath(string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadFromAssemblyPath (assemblyPath As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromAssemblyPath(System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssemblyPath : string -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromAssemblyPath assemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyPath"><span data-ttu-id="fc9ac-224">読み込むファイルの完全修飾パス。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-224">The fully qualified path of the file to load.</span></span></param>
        <summary><span data-ttu-id="fc9ac-225">指定したパスのアセンブリ ファイルの内容を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-225">Loads the contents of an assembly file on the specified path.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-226">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-226">The loaded assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc9ac-227"><paramref name="assemblyPath" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-227">The <paramref name="assemblyPath" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc9ac-228"><paramref name="assemblyPath" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-228">The <paramref name="assemblyPath" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="fc9ac-229">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-229">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fc9ac-230"><paramref name="assemblyPath" /> パラメーターが空の文字列 ("") になっているか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-230">The <paramref name="assemblyPath" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="fc9ac-231"><paramref name="assemblyPath" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-231"><paramref name="assemblyPath" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromNativeImagePath">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromNativeImagePath (string nativeImagePath, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromNativeImagePath(string nativeImagePath, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadFromNativeImagePath (nativeImagePath As String, assemblyPath As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromNativeImagePath(System::String ^ nativeImagePath, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.LoadFromNativeImagePath : string * string -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromNativeImagePath (nativeImagePath, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeImagePath" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nativeImagePath"><span data-ttu-id="fc9ac-232">読み込むファイルの完全修飾パス。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-232">The fully qualified path of the file to load.</span></span></param>
        <param name="assemblyPath"><span data-ttu-id="fc9ac-233">読み込むファイルの IL バージョンの完全修飾パス。または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-233">The fully qualified path of the IL version of the file to load, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc9ac-234">指定したパスにあるマネージド アセンブリ ファイルのネイティブ イメージの内容を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-234">Loads the contents of the native image of a managed assembly file on the specified path.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-235">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-235">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="fc9ac-236">マネージアセンブリのネイティブイメージは、特定のプラットフォームでの実行を最適化するために事前に just-in-time されています。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-236">The native image of a managed assembly is pre-jitted to optimize running on a specific platform.</span></span>
 
 <span data-ttu-id="fc9ac-237">アセンブリパスは、アセンブリの IL バージョンへのパスを参照します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-237">The assembly path refers to the path to the IL version of the assembly.</span></span> <span data-ttu-id="fc9ac-238">IL は通常ネイティブイメージに含まれるため、これは省略可能な引数です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-238">It is an optional argument as the IL is typically included in the native image.</span></span> <span data-ttu-id="fc9ac-239">ネイティブイメージが見つからない場合は、ランタイムがフォールバックとして使用できます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-239">It can be used by the runtime as a fallback if the native image is not found.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc9ac-240"><paramref name="nativeImagePath" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-240">The <paramref name="nativeImagePath" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc9ac-241"><paramref name="assemblyPath" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-241">The <paramref name="assemblyPath" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc9ac-242"><paramref name="nativeImagePath" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-242">The <paramref name="nativeImagePath" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="fc9ac-243">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-243">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fc9ac-244"><paramref name="nativeImagePath" /> パラメーターが空の文字列 ("") になっているか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-244">The <paramref name="nativeImagePath" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="fc9ac-245"><paramref name="assemblyPath" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-245"><paramref name="assemblyPath" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromStream">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromStream (System.IO.Stream assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromStream(class System.IO.Stream assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromStream(System::IO::Stream ^ assembly);" />
      <MemberSignature Language="F#" Value="member this.LoadFromStream : System.IO.Stream -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromStream assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="fc9ac-246">マネージド アセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-246">A byte array that is a COFF-based image containing a managed assembly.</span></span></param>
        <summary><span data-ttu-id="fc9ac-247">マネージド アセンブリを含む COFF (Common Object File Format) ベースのイメージを使用して、アセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-247">Loads the assembly with a common object file format (COFF)-based image containing a managed assembly.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-248">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-248">The loaded assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc9ac-249"><paramref name="assembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-249"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="fc9ac-250"><paramref name="assembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-250"><paramref name="assembly" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromStream">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromStream (System.IO.Stream assembly, System.IO.Stream assemblySymbols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly LoadFromStream(class System.IO.Stream assembly, class System.IO.Stream assemblySymbols) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ LoadFromStream(System::IO::Stream ^ assembly, System::IO::Stream ^ assemblySymbols);" />
      <MemberSignature Language="F#" Value="member this.LoadFromStream : System.IO.Stream * System.IO.Stream -&gt; System.Reflection.Assembly" Usage="assemblyLoadContext.LoadFromStream (assembly, assemblySymbols)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.IO.Stream" />
        <Parameter Name="assemblySymbols" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="fc9ac-251">マネージド アセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-251">A byte array that is a COFF-based image containing a managed assembly.</span></span></param>
        <param name="assemblySymbols"><span data-ttu-id="fc9ac-252">アセンブリのシンボルを表す生バイトを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-252">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <summary><span data-ttu-id="fc9ac-253">マネージド アセンブリが含まれている COFF (Common Object File Format) ベースのイメージを使用して、このアセンブリを読み込みます。アセンブリのシンボルを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-253">Loads the assembly with a common object file format (COFF)-based image containing a managed assembly, optionally including symbols for the assembly.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-254">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-254">The loaded assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc9ac-255"><paramref name="assembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-255"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="fc9ac-256"><paramref name="assembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-256"><paramref name="assembly" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadUnmanagedDll">
      <MemberSignature Language="C#" Value="protected virtual IntPtr LoadUnmanagedDll (string unmanagedDllName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int LoadUnmanagedDll(string unmanagedDllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadUnmanagedDll (unmanagedDllName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr LoadUnmanagedDll(System::String ^ unmanagedDllName);" />
      <MemberSignature Language="F#" Value="abstract member LoadUnmanagedDll : string -&gt; nativeint&#xA;override this.LoadUnmanagedDll : string -&gt; nativeint" Usage="assemblyLoadContext.LoadUnmanagedDll unmanagedDllName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedDllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unmanagedDllName"><span data-ttu-id="fc9ac-257">アンマネージ ライブラリの名前。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-257">Name of the unmanaged library.</span></span> <span data-ttu-id="fc9ac-258">通常、これはパスまたは拡張子を含まないファイル名です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-258">Typically this is the filename without its path or extensions.</span></span></param>
        <summary><span data-ttu-id="fc9ac-259">名前を指定してアンマネージ ライブラリを読み込むことを派生クラスに許可します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-259">Allows derived class to load an unmanaged library by name.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-260">読み込まれたライブラリのハンドル。または <see cref="F:System.IntPtr.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-260">A handle to the loaded library, or <see cref="F:System.IntPtr.Zero" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="fc9ac-261">既定の実装では、常に <xref:System.IntPtr.Zero?displayProperty=nameWithType> を返します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-261">The default implementation always returns <xref:System.IntPtr.Zero?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fc9ac-262">が<xref:System.IntPtr.Zero?displayProperty=nameWithType>返されると、ランタイムは既定のポリシーを使用してライブラリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-262">When <xref:System.IntPtr.Zero?displayProperty=nameWithType> is returned, the runtime loads the library with its default policy.</span></span>
 
 <span data-ttu-id="fc9ac-263">この仮想メソッドをオーバーライドして、アンマネージライブラリ検索アルゴリズムをカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-263">This virtual method can be overridden to customize the unmanaged library search algorithm.</span></span> <span data-ttu-id="fc9ac-264">オーバーライドされた場合、名前を使用してライブラリを識別できます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-264">When overridden the name can be used to identify the library.</span></span> <span data-ttu-id="fc9ac-265">読み込まれたライブラリは、要求された名前と一致する必要はありませんが、必要に応じて変換できます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-265">The loaded library does not need to match the requested name, but can be transformed as needed.</span></span> <span data-ttu-id="fc9ac-266">これには、プラットフォーム固有の名前付けの名前の調整が含まれます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-266">This could include adjusting the name for platform specific naming.</span></span>
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadUnmanagedDllFromPath">
      <MemberSignature Language="C#" Value="protected IntPtr LoadUnmanagedDllFromPath (string unmanagedDllPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance native int LoadUnmanagedDllFromPath(string unmanagedDllPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function LoadUnmanagedDllFromPath (unmanagedDllPath As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IntPtr LoadUnmanagedDllFromPath(System::String ^ unmanagedDllPath);" />
      <MemberSignature Language="F#" Value="member this.LoadUnmanagedDllFromPath : string -&gt; nativeint" Usage="assemblyLoadContext.LoadUnmanagedDllFromPath unmanagedDllPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedDllPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unmanagedDllPath"><span data-ttu-id="fc9ac-267">アンマネージ ライブラリのパス。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-267">The path to the unmanaged library.</span></span></param>
        <summary><span data-ttu-id="fc9ac-268">指定したパスからアンマネージ ライブラリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-268">Loads an unmanaged library from the specified path.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-269">読み込まれたライブラリのハンドル。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-269">A handle to the loaded library.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc9ac-270"><paramref name="unmanagedDllPath" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-270"><paramref name="unmanagedDllPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc9ac-271"><paramref name="unmanagedDllPath" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-271">The <paramref name="unmanagedDllPath" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fc9ac-272">アンマネージ ライブラリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-272">The unmanaged library cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Loader.AssemblyLoadContext.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Loader.AssemblyLoadContext.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-273"><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-273">Get the name of the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span></summary>
        <value><span data-ttu-id="fc9ac-274"><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-274">The name of the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span> <span data-ttu-id="fc9ac-275">この値は <see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-275">Its value can be <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolving">
      <MemberSignature Language="C#" Value="public event Func&lt;System.Runtime.Loader.AssemblyLoadContext,System.Reflection.AssemblyName,System.Reflection.Assembly&gt; Resolving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`3&lt;class System.Runtime.Loader.AssemblyLoadContext, class System.Reflection.AssemblyName, class System.Reflection.Assembly&gt; Resolving" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.Loader.AssemblyLoadContext.Resolving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Resolving As Func(Of AssemblyLoadContext, AssemblyName, Assembly) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Func&lt;System::Runtime::Loader::AssemblyLoadContext ^, System::Reflection::AssemblyName ^, System::Reflection::Assembly ^&gt; ^ Resolving;" />
      <MemberSignature Language="F#" Value="member this.Resolving : Func&lt;System.Runtime.Loader.AssemblyLoadContext, System.Reflection.AssemblyName, System.Reflection.Assembly&gt; " Usage="member this.Resolving : System.Func&lt;System.Runtime.Loader.AssemblyLoadContext, System.Reflection.AssemblyName, System.Reflection.Assembly&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Runtime.Loader.AssemblyLoadContext,System.Reflection.AssemblyName,System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-276">このアセンブリ読み込みコンテキストに読み込もうとしたときにアセンブリの解決に失敗したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-276">Occurs when the resolution of an assembly fails when attempting to load into this assembly load context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="fc9ac-277">このイベントのハンドラーは、指定されたアセンブリを返すか、またはアセンブリが認識さ`null`れない場合にを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-277">It is the responsibility of the handler for this event to return the assembly that is specified, or to return `null` if the assembly is not recognized.</span></span>
 
 > [!IMPORTANT]
 >  <span data-ttu-id="fc9ac-278">このイベントに複数のイベントハンドラーが登録されている場合、イベントハンドラーは、ではない`null`値を返すまで順番に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-278">If more than one event handler is registered for this event, the event handlers are called in order until an event handler returns a value that isn't `null`.</span></span> <span data-ttu-id="fc9ac-279">後続のイベントハンドラーは無視されます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-279">Subsequent event handlers are ignored.</span></span>
 
 <span data-ttu-id="fc9ac-280">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-280">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>
 
 <span data-ttu-id="fc9ac-281">既定のコンテキストを含む任意<xref:System.Runtime.Loader.AssemblyLoadContext>のに対して、このイベントに対してハンドラーを追加できることに注目してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-281">It is noteworthy that a handler can be added for this event on any <xref:System.Runtime.Loader.AssemblyLoadContext>, including the default context.</span></span>
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvingUnmanagedDll">
      <MemberSignature Language="C#" Value="public event Func&lt;System.Reflection.Assembly,string,IntPtr&gt; ResolvingUnmanagedDll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`3&lt;class System.Reflection.Assembly, string, native int&gt; ResolvingUnmanagedDll" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolvingUnmanagedDll As Func(Of Assembly, String, IntPtr) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Func&lt;System::Reflection::Assembly ^, System::String ^, IntPtr&gt; ^ ResolvingUnmanagedDll;" />
      <MemberSignature Language="F#" Value="member this.ResolvingUnmanagedDll : Func&lt;System.Reflection.Assembly, string, nativeint&gt; " Usage="member this.ResolvingUnmanagedDll : System.Func&lt;System.Reflection.Assembly, System.string, System.nativeint&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Reflection.Assembly,System.String,System.IntPtr&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-282">ネイティブ ライブラリの解決が失敗したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-282">Occurs when the resolution of a native library fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="fc9ac-283">このイベントは、ネイティブライブラリを既定の解決ロジック (を含む<xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A>) で解決できない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-283">This event is raised if the native library cannot be resolved by the default resolution logic (including <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A>).</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProfileOptimizationRoot">
      <MemberSignature Language="C#" Value="public void SetProfileOptimizationRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProfileOptimizationRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProfileOptimizationRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProfileOptimizationRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="member this.SetProfileOptimizationRoot : string -&gt; unit" Usage="assemblyLoadContext.SetProfileOptimizationRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath"><span data-ttu-id="fc9ac-284">最適化プロファイルが格納されているディレクトリへの完全パス。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-284">The full path to the directory where the optimization profiles are stored.</span></span></param>
        <summary><span data-ttu-id="fc9ac-285">この読み込みコンテキストの最適化プロファイルが格納されるルート パスを設定します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-285">Sets the root path where the optimization profiles for this load context are stored.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks        

<span data-ttu-id="fc9ac-286">プロファイルの最適化では、前のコンパイル時に作成されたプロファイルに基づいて、実行される可能性のあるメソッドのバックグラウンドコンパイルを実行することで、マルチコアコンピューターでの読み込みコンテキストの起動パフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-286">The profile optimization improves the startup performance of the load context on multicore computers by performing background compilation of methods that are likely to be executed, based on profiles created during previous compilations.</span></span> <span data-ttu-id="fc9ac-287">詳細については、「<xref:System.Runtime.ProfileOptimization>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-287">For more information, see <xref:System.Runtime.ProfileOptimization>.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartProfileOptimization">
      <MemberSignature Language="C#" Value="public void StartProfileOptimization (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartProfileOptimization(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartProfileOptimization (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartProfileOptimization(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="member this.StartProfileOptimization : string -&gt; unit" Usage="assemblyLoadContext.StartProfileOptimization profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile"><span data-ttu-id="fc9ac-288">最適化プロファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-288">The name of the optimization profile.</span></span></param>
        <summary><span data-ttu-id="fc9ac-289">指定されたプロファイルのプロファイル最適化を開始します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-289">Starts the profile optimization for the specified profile.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks        

<span data-ttu-id="fc9ac-290">プロファイルの最適化では、前のコンパイル時に作成されたプロファイルに基づいて、実行される可能性のあるメソッドのバックグラウンドコンパイルを実行することで、マルチコアコンピューターでの読み込みコンテキストの起動パフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-290">The profile optimization improves the startup performance of the load context on multicore computers by performing background compilation of methods that are likely to be executed, based on profiles created during previous compilations.</span></span> <span data-ttu-id="fc9ac-291">詳細については、「<xref:System.Runtime.ProfileOptimization>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-291">For more information, see <xref:System.Runtime.ProfileOptimization>.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assemblyLoadContext.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9ac-292">この読み込みコンテキストの文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-292">Returns the string representation of this load context.</span></span></summary>
        <returns><span data-ttu-id="fc9ac-293">この読み込みコンテキストの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-293">The string representation of this load context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="assemblyLoadContext.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc9ac-294">この <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> のアンロードを開始します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-294">Initiates an unload of this <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

+ <span data-ttu-id="fc9ac-295">AssemblyLoadContext は、収集可能な場合にのみアンロードできます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-295">An AssemblyLoadContext can only be unloaded if it is collectible.</span></span>
+ <span data-ttu-id="fc9ac-296">アンロードは非同期的に行われます。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-296">Unloading will occur asynchronously.</span></span>
+ <span data-ttu-id="fc9ac-297">AssemblyLoadContext への参照がある間は、アンロードは行われません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-297">Unloading will not occur while there are references to the AssemblyLoadContext.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fc9ac-298">アンロードすることはできません。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-298">Unloading is not allowed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event Action&lt;System.Runtime.Loader.AssemblyLoadContext&gt; Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Action`1&lt;class System.Runtime.Loader.AssemblyLoadContext&gt; Unloading" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.Loader.AssemblyLoadContext.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloading As Action(Of AssemblyLoadContext) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Action&lt;System::Runtime::Loader::AssemblyLoadContext ^&gt; ^ Unloading;" />
      <MemberSignature Language="F#" Value="member this.Unloading : Action&lt;System.Runtime.Loader.AssemblyLoadContext&gt; " Usage="member this.Unloading : System.Action&lt;System.Runtime.Loader.AssemblyLoadContext&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Runtime.Loader.AssemblyLoadContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc9ac-299"><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> がアンロードされるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fc9ac-299">Occurs when the <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
