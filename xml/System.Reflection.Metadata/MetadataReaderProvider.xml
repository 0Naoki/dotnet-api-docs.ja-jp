<Type Name="MetadataReaderProvider" FullName="System.Reflection.Metadata.MetadataReaderProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f3f044832e22ed568f9cde10ec919ee90b7797d9" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70353901" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataReaderProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataReaderProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.MetadataReaderProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataReaderProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataReaderProvider sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type MetadataReaderProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="metadataReaderProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a309-101">リーダーによって割り当てられたすべてのメモリを破棄します。</span><span class="sxs-lookup"><span data-stu-id="7a309-101">Disposes all memory allocated by the reader.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMetadataImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="7a309-102">メタデータのイメージ。</span><span class="sxs-lookup"><span data-stu-id="7a309-102">Metadata image.</span></span></param>
        <summary><span data-ttu-id="7a309-103">バイト配列に対してプロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7a309-103">Creates a provider over a byte array.</span></span></summary>
        <returns><span data-ttu-id="7a309-104">新しいプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7a309-104">The new provider.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a309-105"><paramref name="image" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7a309-105"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="7a309-106">メタデータの BLOB の先頭へのポインター。</span><span class="sxs-lookup"><span data-stu-id="7a309-106">Pointer to the start of the metadata blob.</span></span></param>
        <param name="size"><span data-ttu-id="7a309-107">メタデータの BLOB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="7a309-107">The size of the metadata blob.</span></span></param>
        <summary><span data-ttu-id="7a309-108">メモリに格納されているイメージのメタデータ プロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7a309-108">Creates a metadata provider over an image stored in memory.</span></span></summary>
        <returns><span data-ttu-id="7a309-109">新しいメタデータ プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7a309-109">The new metadata provider.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a309-110"><paramref name="start" /> は <see cref="F:System.IntPtr.Zero" />です。</span><span class="sxs-lookup"><span data-stu-id="7a309-110"><paramref name="start" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7a309-111"><paramref name="size" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="7a309-111"><paramref name="size" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromMetadataStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="7a309-112"><see cref="T:System.IO.Stream" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="7a309-112">A <see cref="T:System.IO.Stream" /> instance.</span></span></param>
        <param name="options"><span data-ttu-id="7a309-113">ストリームから、イメージのセクションを読み取る方法を指定するオプション。</span><span class="sxs-lookup"><span data-stu-id="7a309-113">Options specifying how sections of the image are read from the stream.</span></span></param>
        <param name="size"><span data-ttu-id="7a309-114">ストリームのメタデータ BLOB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="7a309-114">Size of the metadata blob in the stream.</span></span> <span data-ttu-id="7a309-115">指定しない場合、メタデータ BLOB はストリームの末尾まで広がると見なされます。</span><span class="sxs-lookup"><span data-stu-id="7a309-115">If not specified, the metadata blob is assumed to span to the end of the stream.</span></span></param>
        <summary><span data-ttu-id="7a309-116">現在の位置を起点とする指定されたサイズのストリームのプロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7a309-116">Creates a provider for a stream of the specified size beginning at its current position.</span></span></summary>
        <returns><span data-ttu-id="7a309-117">新しいプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7a309-117">The new provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="7a309-118">が<xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType>指定されていない限り、成功した<xref:System.Reflection.Metadata.MetadataReaderProvider>引数の検証時にストリームの所有権がに転送されます。</span><span class="sxs-lookup"><span data-stu-id="7a309-118">Unless <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> is specified, ownership of the stream is transferred to the <xref:System.Reflection.Metadata.MetadataReaderProvider> upon successful argument validation.</span></span> <span data-ttu-id="7a309-119">このメソッドはによって<xref:System.Reflection.Metadata.MetadataReaderProvider>破棄され、呼び出し元は操作できません。</span><span class="sxs-lookup"><span data-stu-id="7a309-119">It will be disposed by the <xref:System.Reflection.Metadata.MetadataReaderProvider>, and the caller must not manipulate it.</span></span>
            
<span data-ttu-id="7a309-120">を<xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>指定しない限り、 <xref:System.Reflection.Metadata.MetadataReaderProvider>の構築時にストリームからデータが読み取られません。</span><span class="sxs-lookup"><span data-stu-id="7a309-120">Unless <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType> is specified, no data is read from the stream during construction of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span> <span data-ttu-id="7a309-121">さらに、 <xref:System.Reflection.Metadata.MetadataReaderProvider>が有効になっていて破棄されていない場合、ストリームは呼び出し元によって操作されてはなりません。</span><span class="sxs-lookup"><span data-stu-id="7a309-121">Furthermore, the stream must not be manipulated by caller while the <xref:System.Reflection.Metadata.MetadataReaderProvider> is alive and undisposed.</span></span>
            
<span data-ttu-id="7a309-122">の<xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>場合、 <xref:System.Reflection.Metadata.MetadataReaderProvider>は構築中に要求されたすべてのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="7a309-122">If <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>, the <xref:System.Reflection.Metadata.MetadataReaderProvider> will have read all of the data requested during construction.</span></span> <span data-ttu-id="7a309-123">そのため、が<xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType>指定されている場合、呼び出し元はストリームの完全な所有権を保持し、後での<xref:System.Reflection.Metadata.MetadataReaderProvider>構築時に操作されないことを保証します。</span><span class="sxs-lookup"><span data-stu-id="7a309-123">As such, if <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> is also specified, the caller retains full ownership of the stream and is assured that it will not be manipulated by the <xref:System.Reflection.Metadata.MetadataReaderProvider> after construction.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a309-124"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7a309-124"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a309-125"><paramref name="stream" /> は読み取りとシークの操作をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="7a309-125"><paramref name="stream" /> doesn't support read and seek operations.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7a309-126">サイズは負の値になるか、ストリームの末尾を超えます。</span><span class="sxs-lookup"><span data-stu-id="7a309-126">Size is negative or extends past the end of the stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="7a309-127">ストリームからの読み取り中のエラー (<see cref="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata" /> が指定されている場合のみ)。</span><span class="sxs-lookup"><span data-stu-id="7a309-127">Error reading from the stream (only when <see cref="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata" /> is specified).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPortablePdbImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="7a309-128">ポータブル PDB イメージ。</span><span class="sxs-lookup"><span data-stu-id="7a309-128">A portable PDB image.</span></span></param>
        <summary><span data-ttu-id="7a309-129">バイト配列に対して、ポータブル PDB のメタデータ プロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7a309-129">Creates a portable PDB metadata provider over a byte array.</span></span></summary>
        <returns><span data-ttu-id="7a309-130">新しいポータブル PDB のメタデータ プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7a309-130">The new portable PDB metadata provider .</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a309-131"><paramref name="image" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7a309-131"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="7a309-132">ポータブル PDB の BLOB の先頭へのポインター。</span><span class="sxs-lookup"><span data-stu-id="7a309-132">Pointer to the start of the portable PDB blob.</span></span></param>
        <param name="size"><span data-ttu-id="7a309-133">ポータブル PDB の BLOB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="7a309-133">The size of the portable PDB blob.</span></span></param>
        <summary><span data-ttu-id="7a309-134">メモリに格納された BLOB に対して、ポータブル PDB のメタデータ プロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7a309-134">Creates a portable PDB metadata provider over a blob stored in memory.</span></span></summary>
        <returns><span data-ttu-id="7a309-135">新しいポータブル PDB のメタデータ プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7a309-135">The new portable PDB metadata provider.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a309-136"><paramref name="start" /> は <see cref="F:System.IntPtr.Zero" />です。</span><span class="sxs-lookup"><span data-stu-id="7a309-136"><paramref name="start" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7a309-137"><paramref name="size" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="7a309-137"><paramref name="size" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="7a309-138">ストリーム。</span><span class="sxs-lookup"><span data-stu-id="7a309-138">The stream.</span></span></param>
        <param name="options"><span data-ttu-id="7a309-139">ストリームから、イメージのセクションを読み取る方法を指定するオプション。</span><span class="sxs-lookup"><span data-stu-id="7a309-139">Options specifying how sections of the image are read from the stream.</span></span></param>
        <param name="size"><span data-ttu-id="7a309-140">ストリームのメタデータ BLOB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="7a309-140">Size of the metadata blob in the stream.</span></span> <span data-ttu-id="7a309-141">指定しない場合、メタデータ BLOB はストリームの末尾まで広がると見なされます。</span><span class="sxs-lookup"><span data-stu-id="7a309-141">If not specified, the metadata blob is assumed to span to the end of the stream.</span></span></param>
        <summary><span data-ttu-id="7a309-142">現在の位置を起点とする指定されたサイズのストリームのプロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7a309-142">Creates a provider for a stream of the specified size beginning at its current position.</span></span></summary>
        <returns><span data-ttu-id="7a309-143"><see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="7a309-143">A <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="7a309-144">が<xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType>指定されていない限り、成功した<xref:System.Reflection.Metadata.MetadataReaderProvider>引数の検証時にストリームの所有権がに転送されます。</span><span class="sxs-lookup"><span data-stu-id="7a309-144">Unless <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> is specified, ownership of the stream is transferred to the <xref:System.Reflection.Metadata.MetadataReaderProvider> upon successful argument validation.</span></span> <span data-ttu-id="7a309-145">このメソッドはによって<xref:System.Reflection.Metadata.MetadataReaderProvider>破棄され、呼び出し元は操作できません。</span><span class="sxs-lookup"><span data-stu-id="7a309-145">It will be disposed by the <xref:System.Reflection.Metadata.MetadataReaderProvider>, and the caller must not manipulate it.</span></span>
            
<span data-ttu-id="7a309-146">を<xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>指定しない限り、 <xref:System.Reflection.Metadata.MetadataReaderProvider>の構築時にストリームからデータが読み取られません。</span><span class="sxs-lookup"><span data-stu-id="7a309-146">Unless <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType> is specified, no data is read from the stream during the construction of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span> <span data-ttu-id="7a309-147">さらに、 <xref:System.Reflection.Metadata.MetadataReaderProvider>が有効になっていて破棄されていない場合、ストリームは呼び出し元によって操作されてはなりません。</span><span class="sxs-lookup"><span data-stu-id="7a309-147">Furthermore, the stream must not be manipulated by caller while the <xref:System.Reflection.Metadata.MetadataReaderProvider> is alive and undisposed.</span></span>
            
<span data-ttu-id="7a309-148">の<xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>場合、 <xref:System.Reflection.Metadata.MetadataReaderProvider>は構築中に要求されたすべてのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="7a309-148">If <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>, the <xref:System.Reflection.Metadata.MetadataReaderProvider> will have read all of the data requested during construction.</span></span> <span data-ttu-id="7a309-149">そのため、が<xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType>指定されている場合、呼び出し元はストリームの完全な所有権を保持し、後での<xref:System.Reflection.Metadata.MetadataReaderProvider>構築時に操作されないことを保証します。</span><span class="sxs-lookup"><span data-stu-id="7a309-149">As such, if <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> is also specified, the caller retains full ownership of the stream and is assured that it will not be manipulated by the <xref:System.Reflection.Metadata.MetadataReaderProvider> after construction.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a309-150"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7a309-150"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a309-151"><paramref name="stream" /> は読み取りとシークの操作をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="7a309-151"><paramref name="stream" /> doesn't support read and seek operations.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7a309-152">サイズは負の値になるか、ストリームの末尾を超えます。</span><span class="sxs-lookup"><span data-stu-id="7a309-152">Size is negative or extends past the end of the stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataReader">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MetadataReader GetMetadataReader (System.Reflection.Metadata.MetadataReaderOptions options = System.Reflection.Metadata.MetadataReaderOptions.ApplyWindowsRuntimeProjections, System.Reflection.Metadata.MetadataStringDecoder utf8Decoder = null);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Metadata.MetadataReader GetMetadataReader(valuetype System.Reflection.Metadata.MetadataReaderOptions options, class System.Reflection.Metadata.MetadataStringDecoder utf8Decoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.GetMetadataReader(System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataReader (Optional options As MetadataReaderOptions = System.Reflection.Metadata.MetadataReaderOptions.ApplyWindowsRuntimeProjections, Optional utf8Decoder As MetadataStringDecoder = null) As MetadataReader" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.GetMetadataReader : System.Reflection.Metadata.MetadataReaderOptions * System.Reflection.Metadata.MetadataStringDecoder -&gt; System.Reflection.Metadata.MetadataReader" Usage="metadataReaderProvider.GetMetadataReader (options, utf8Decoder)" />
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MetadataReader GetMetadataReader (System.Reflection.Metadata.MetadataReaderOptions options = System.Reflection.Metadata.MetadataReaderOptions.Default, System.Reflection.Metadata.MetadataStringDecoder utf8Decoder = null);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataReader (Optional options As MetadataReaderOptions = System.Reflection.Metadata.MetadataReaderOptions.Default, Optional utf8Decoder As MetadataStringDecoder = null) As MetadataReader" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataReaderOptions" />
        <Parameter Name="utf8Decoder" Type="System.Reflection.Metadata.MetadataStringDecoder" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="7a309-153">メタデータの読み取り時の構成を表す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7a309-153">A bitwise combination of the enumeration values that represent the configuration when reading the metadata.</span></span></param>
        <param name="utf8Decoder"><span data-ttu-id="7a309-154">使用するエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="7a309-154">The encoding to use.</span></span></param>
        <summary><span data-ttu-id="7a309-155"><see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> から <see cref="T:System.Reflection.Metadata.MetadataReader" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="7a309-155">Gets a <see cref="T:System.Reflection.Metadata.MetadataReader" /> from a <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" />.</span></span></summary>
        <returns><span data-ttu-id="7a309-156"><see cref="T:System.Reflection.Metadata.MetadataReader" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="7a309-156">A <see cref="T:System.Reflection.Metadata.MetadataReader" /> instance..</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a309-157"><paramref name="utf8Decoder" /> のエンコードは、<see cref="T:System.Text.UTF8Encoding" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="7a309-157">The encoding of <paramref name="utf8Decoder" /> is not <see cref="T:System.Text.UTF8Encoding" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="7a309-158">現在のプラットフォームはビッグ エンディアンです。</span><span class="sxs-lookup"><span data-stu-id="7a309-158">The current platform is big-endian.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="7a309-159">基になるストリームからの読み取り中の入出力エラー。</span><span class="sxs-lookup"><span data-stu-id="7a309-159">IO error while reading from the underlying stream.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7a309-160">プロバイダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="7a309-160">Provider has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
