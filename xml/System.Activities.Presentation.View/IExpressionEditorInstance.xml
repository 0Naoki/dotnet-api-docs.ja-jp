<Type Name="IExpressionEditorInstance" FullName="System.Activities.Presentation.View.IExpressionEditorInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e985aa70fae98c38e0ec573433f4163f03cbd5af" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46678490" /></Metadata><TypeSignature Language="C#" Value="public interface IExpressionEditorInstance" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpressionEditorInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.IExpressionEditorInstance" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExpressionEditorInstance" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExpressionEditorInstance" />
  <TypeSignature Language="F#" Value="type IExpressionEditorInstance = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>式エディター インスタンスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 式エディター インスタンスの詳細については、「<xref:System.Activities.Presentation.View.IExpressionEditorService>」を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式エディター インスタンスが Return キーを受け付けるかどうかを示す値を取得または設定します。</summary>
        <value>式エディターが Return キーを受け付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式エディター インスタンスが Tab キーを受け付けるかどうかを示す値を取得または設定します。</summary>
        <value>式エディターが Tab キーを受け付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCompleteWord">
      <MemberSignature Language="C#" Value="public bool CanCompleteWord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCompleteWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCompleteWord" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCompleteWord () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCompleteWord();" />
      <MemberSignature Language="F#" Value="abstract member CanCompleteWord : unit -&gt; bool" Usage="iExpressionEditorInstance.CanCompleteWord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式エディター インスタンスがユーザーが入力中の文字列を補完できるかどうかを示すブール値を取得します。</summary>
        <returns><see langword="true" /> に設定された <see cref="T:System.Boolean" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCopy">
      <MemberSignature Language="C#" Value="public bool CanCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCopy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCopy();" />
      <MemberSignature Language="F#" Value="abstract member CanCopy : unit -&gt; bool" Usage="iExpressionEditorInstance.CanCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式をコピーできるかどうかを示すブール値を取得します。</summary>
        <returns>式をコピーできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCut">
      <MemberSignature Language="C#" Value="public bool CanCut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCut" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCut () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCut();" />
      <MemberSignature Language="F#" Value="abstract member CanCut : unit -&gt; bool" Usage="iExpressionEditorInstance.CanCut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式を切り取ることができるかどうかを示すブール値を取得します。</summary>
        <returns>式を切り取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool CanDecreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDecreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanDecreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function CanDecreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanDecreaseFilterLevel();" />
      <MemberSignature Language="F#" Value="abstract member CanDecreaseFilterLevel : unit -&gt; bool" Usage="iExpressionEditorInstance.CanDecreaseFilterLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>IntelliSense フィルター処理を使用する場合に、フィルター レベルを下げることができるかどうかを示す値を返します。</summary>
        <returns>フィルター レベルを下げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGlobalIntellisense">
      <MemberSignature Language="C#" Value="public bool CanGlobalIntellisense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanGlobalIntellisense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanGlobalIntellisense" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGlobalIntellisense () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanGlobalIntellisense();" />
      <MemberSignature Language="F#" Value="abstract member CanGlobalIntellisense : unit -&gt; bool" Usage="iExpressionEditorInstance.CanGlobalIntellisense " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式エディター インスタンスがグローバル IntelliSense を式に対して取得できるかどうかを示すブール値を取得します。</summary>
        <returns><see langword="true" /> に設定された <see cref="T:System.Boolean" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanIncreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool CanIncreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanIncreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanIncreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function CanIncreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanIncreaseFilterLevel();" />
      <MemberSignature Language="F#" Value="abstract member CanIncreaseFilterLevel : unit -&gt; bool" Usage="iExpressionEditorInstance.CanIncreaseFilterLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>IntelliSense フィルター処理を使用する場合に、フィルター レベルを上げることができるかどうかを示す値を返します。</summary>
        <returns>フィルター レベルを上げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanParameterInfo">
      <MemberSignature Language="C#" Value="public bool CanParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanParameterInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanParameterInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanParameterInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanParameterInfo();" />
      <MemberSignature Language="F#" Value="abstract member CanParameterInfo : unit -&gt; bool" Usage="iExpressionEditorInstance.CanParameterInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式エディター インスタンスがパラメーター情報を式に対して取得できるかどうかを示すブール値を取得します。</summary>
        <returns><see langword="true" /> に設定された <see cref="T:System.Boolean" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberSignature Language="F#" Value="abstract member CanPaste : unit -&gt; bool" Usage="iExpressionEditorInstance.CanPaste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式を貼り付けることができるかどうかを示すブール値を取得します。</summary>
        <returns>式を貼り付けることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanQuickInfo">
      <MemberSignature Language="C#" Value="public bool CanQuickInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanQuickInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanQuickInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanQuickInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanQuickInfo();" />
      <MemberSignature Language="F#" Value="abstract member CanQuickInfo : unit -&gt; bool" Usage="iExpressionEditorInstance.CanQuickInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式エディター インスタンスが IntelliSense クイック ツールヒントに表示する型情報を取得できるかどうかを示すブール値を取得します。</summary>
        <returns><see langword="true" /> に設定された <see cref="T:System.Boolean" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRedo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRedo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRedo();" />
      <MemberSignature Language="F#" Value="abstract member CanRedo : unit -&gt; bool" Usage="iExpressionEditorInstance.CanRedo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>システムでの操作をやり直すことができるかどうかを示すブール値を取得します。</summary>
        <returns>システムでの操作をやり直すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanUndo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanUndo();" />
      <MemberSignature Language="F#" Value="abstract member CanUndo : unit -&gt; bool" Usage="iExpressionEditorInstance.CanUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>システムでの操作を元に戻すことができるかどうかを示すブール値を取得します。</summary>
        <returns>システムでの操作を元に戻すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelection();" />
      <MemberSignature Language="F#" Value="abstract member ClearSelection : unit -&gt; unit" Usage="iExpressionEditorInstance.ClearSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>エディター インスタンスの選択を解除します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iExpressionEditorInstance.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>エディター項目を閉じて削除します。 これにより、特定の式エディター インスタンスが閉じられます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : EventHandler " Usage="member this.Closing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式エディター インスタンスが閉じるときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteWord">
      <MemberSignature Language="C#" Value="public bool CompleteWord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompleteWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CompleteWord" />
      <MemberSignature Language="VB.NET" Value="Public Function CompleteWord () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompleteWord();" />
      <MemberSignature Language="F#" Value="abstract member CompleteWord : unit -&gt; bool" Usage="iExpressionEditorInstance.CompleteWord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式エディター インスタンスが、ユーザーが入力した単語の一部に対して補完候補のリストを表示できるかどうかを判断します。 たとえば、ユーザーが入力中の単語を補完するために、メンバー名、引数名、およびメソッド名をユーザーに対して表示できるかどうかを判断します。</summary>
        <returns>このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public bool Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; bool" Usage="iExpressionEditorInstance.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アクティブな式をコピーします。</summary>
        <returns>コピーが成功すると <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public bool Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cut();" />
      <MemberSignature Language="F#" Value="abstract member Cut : unit -&gt; bool" Usage="iExpressionEditorInstance.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アクティブな式を切り取ります。</summary>
        <returns>正常に切り取られた場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool DecreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DecreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.DecreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function DecreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DecreaseFilterLevel();" />
      <MemberSignature Language="F#" Value="abstract member DecreaseFilterLevel : unit -&gt; bool" Usage="iExpressionEditorInstance.DecreaseFilterLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>フィルター レベルを下げて、すべての項目を IntelliSense フィルター リストに表示し、この操作が成功したかどうかを示す値を返します。</summary>
        <returns>このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; unit" Usage="iExpressionEditorInstance.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>エディター インスタンスにフォーカスを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommittedText">
      <MemberSignature Language="C#" Value="public string GetCommittedText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCommittedText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.GetCommittedText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommittedText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCommittedText();" />
      <MemberSignature Language="F#" Value="abstract member GetCommittedText : unit -&gt; string" Usage="iExpressionEditorInstance.GetCommittedText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式を生成するために使用されたテキストを取得します。</summary>
        <returns>式を生成するために使用されたテキストを含む <see cref="T:System.String" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalIntellisense">
      <MemberSignature Language="C#" Value="public bool GlobalIntellisense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalIntellisense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.GlobalIntellisense" />
      <MemberSignature Language="VB.NET" Value="Public Function GlobalIntellisense () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalIntellisense();" />
      <MemberSignature Language="F#" Value="abstract member GlobalIntellisense : unit -&gt; bool" Usage="iExpressionEditorInstance.GlobalIntellisense " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式エディターで式に対してグローバル IntelliSense を取得し、この操作に成功したかどうかを示す値を返します。</summary>
        <returns>このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotAggregateFocus">
      <MemberSignature Language="C#" Value="event EventHandler GotAggregateFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotAggregateFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.GotAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Event GotAggregateFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotAggregateFocus;" />
      <MemberSignature Language="F#" Value="member this.GotAggregateFocus : EventHandler " Usage="member this.GotAggregateFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式エディター インスタンスが集約フォーカスを取得した場合に発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAggregateFocus">
      <MemberSignature Language="C#" Value="public bool HasAggregateFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAggregateFocus" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HasAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAggregateFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAggregateFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAggregateFocus : bool" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.HasAggregateFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インスタンスに集約フォーカスがあるかどうかを示す値を取得します。</summary>
        <value>エディター インスタンスに集約フォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> または <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> によって作成された他のいずれかのコントロールにフォーカスがある場合、インスタンスに集約フォーカスがあります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>水平スクロール バーが表示されるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.ScrollBarVisibility" /> を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostControl">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Control HostControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Control HostControl" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Control ^ HostControl { System::Windows::Controls::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostControl : System.Windows.Controls.Control" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.HostControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="ExpressionTextBox" /> に表示するために使用できる <see cref="T:System.Windows.Controls.Control" /> インスタンスを取得します。</summary>
        <value><see cref="T:System.Windows.Controls.Control" /> を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool IncreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IncreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.IncreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function IncreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IncreaseFilterLevel();" />
      <MemberSignature Language="F#" Value="abstract member IncreaseFilterLevel : unit -&gt; bool" Usage="iExpressionEditorInstance.IncreaseFilterLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>フィルター レベルを上げて、よく使われる項目を IntelliSense フィルター リストに表示し、この操作が成功したかどうかを示す値を返します。</summary>
        <returns>このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostAggregateFocus">
      <MemberSignature Language="C#" Value="event EventHandler LostAggregateFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostAggregateFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.LostAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Event LostAggregateFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostAggregateFocus;" />
      <MemberSignature Language="F#" Value="member this.LostAggregateFocus : EventHandler " Usage="member this.LostAggregateFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式エディター インスタンスが集約フォーカスを失ったときに発生するイベントを表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> および <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> によって作成されたすべてのコントロールでフォーカスが失われると、インスタンスの集約フォーカスが失われます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLines : int with get, set" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="ExpressionTextBox" /> コントロールに表示されるテキストの最大行数を取得または設定します。 <see langword="ExpressionTextBox" /> コントロールに表示する内容が増えると、このプロパティによってコントロールの高さが適切なサイズに暗黙的に設定されます。</summary>
        <value><see langword="ExpressionTextBox" /> コントロールに表示されるテキストの最大行数を含む <see cref="T:System.Int32" /> を返します。</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLines : int with get, set" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="ExpressionTextBox" /> コントロールに表示されるテキストの最小行数を取得または設定します。 このプロパティによって <see langword="ExpressionTextBox" /> コントロールの高さが暗黙的に設定されます。</summary>
        <value>返します、<see cref="T:System.Int32" />によって表示されるテキストの行の最小数を格納している、<see langword="ExpressionTextBox" />コントロール。</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterInfo">
      <MemberSignature Language="C#" Value="public bool ParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParameterInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.ParameterInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function ParameterInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParameterInfo();" />
      <MemberSignature Language="F#" Value="abstract member ParameterInfo : unit -&gt; bool" Usage="iExpressionEditorInstance.ParameterInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>式エディターで式に対してパラメーター情報を取得し、この操作に成功したかどうかを示す値を返します。</summary>
        <returns>このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public bool Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Paste();" />
      <MemberSignature Language="F#" Value="abstract member Paste : unit -&gt; bool" Usage="iExpressionEditorInstance.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アクティブな式を貼り付けます。</summary>
        <returns>この貼り付けが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickInfo">
      <MemberSignature Language="C#" Value="public bool QuickInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.QuickInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function QuickInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool QuickInfo();" />
      <MemberSignature Language="F#" Value="abstract member QuickInfo : unit -&gt; bool" Usage="iExpressionEditorInstance.QuickInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>IntelliSense クイック ツールヒントに型情報が表示されるかどうかを判断します。</summary>
        <returns>このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberSignature Language="F#" Value="abstract member Redo : unit -&gt; bool" Usage="iExpressionEditorInstance.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>エディターで元に戻された最後の操作を再度適用します。つまり、元に戻す操作の効果を取り消します。</summary>
        <returns>やり直しが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストの値を取得または設定します。</summary>
        <value><see cref="T:System.String" /> を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式エディター インスタンスでテキストが変更されたときに発生するイベントを表します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberSignature Language="F#" Value="abstract member Undo : unit -&gt; bool" Usage="iExpressionEditorInstance.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>エディターでの最後の操作を元に戻します。</summary>
        <returns>元に戻すことに成功した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Activities.Presentation.View.IExpressionEditorInstance.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>垂直スクロール バーが表示されるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.ScrollBarVisibility" /> を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>