<Type Name="IExpressionEditorInstance" FullName="System.Activities.Presentation.View.IExpressionEditorInstance">
  <TypeSignature Language="C#" Value="public interface IExpressionEditorInstance" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpressionEditorInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.IExpressionEditorInstance" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExpressionEditorInstance" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExpressionEditorInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b5ff5-101">式エディター インスタンスを表します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-101">Represents an expression editor instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5ff5-102">式エディター インスタンスの詳細については、「<xref:System.Activities.Presentation.View.IExpressionEditorService>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-102">For a detailed description of an expression editor instance, see <xref:System.Activities.Presentation.View.IExpressionEditorService>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-103">式エディター インスタンスが Return キーを受け付けるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-103">Gets or sets a value that indicates whether the expression editor instance accepts the RETURN key.</span></span></summary>
        <value>
          <span data-ttu-id="b5ff5-104">式エディターが Return キーを受け付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-104"><see langword="true" /> if the expression editor accepts the RETURN key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-105">式エディター インスタンスが Tab キーを受け付けるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-105">Gets or sets a value that indicates whether the expression editor instance accepts the TAB key.</span></span></summary>
        <value>
          <span data-ttu-id="b5ff5-106">式エディターが Tab キーを受け付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-106"><see langword="true" /> if the expression editor accepts the TAB key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCompleteWord">
      <MemberSignature Language="C#" Value="public bool CanCompleteWord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCompleteWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCompleteWord" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCompleteWord () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCompleteWord();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-107">式エディター インスタンスがユーザーが入力中の文字列を補完できるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-107">Gets a Boolean value that indicates whether the expression editor instance can complete the string being typed by the user.</span></span></summary>
        <returns><span data-ttu-id="b5ff5-108"><see langword="true" /> に設定された <see cref="T:System.Boolean" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-108">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCopy">
      <MemberSignature Language="C#" Value="public bool CanCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCopy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-109">式をコピーできるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-109">Gets a Boolean value that indicates whether the expression editor instance can be closed.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-110">式をコピーできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-110"><see langword="true" /> if the expression editor instance can be closed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCut">
      <MemberSignature Language="C#" Value="public bool CanCut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanCut" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCut () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-111">式を切り取ることができるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-111">Gets a Boolean value that indicates whether the expression can be cut.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-112">式を切り取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-112"><see langword="true" /> if the expression can be cut; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool CanDecreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDecreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanDecreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function CanDecreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanDecreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-113">IntelliSense フィルター処理を使用する場合に、フィルター レベルを下げることができるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-113">Returns a value that indicates whether the filter level can be decreased when using Intellisense filtering.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-114">フィルター レベルを下げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-114"><see langword="true" /> if the filter level can be decreased; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGlobalIntellisense">
      <MemberSignature Language="C#" Value="public bool CanGlobalIntellisense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanGlobalIntellisense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanGlobalIntellisense" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGlobalIntellisense () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanGlobalIntellisense();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-115">式エディター インスタンスがグローバル IntelliSense を式に対して取得できるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-115">Gets a Boolean value that indicates whether the expression editor instance can retrieve global IntelliSense on the expression.</span></span></summary>
        <returns><span data-ttu-id="b5ff5-116"><see langword="true" /> に設定された <see cref="T:System.Boolean" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-116">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanIncreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool CanIncreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanIncreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanIncreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function CanIncreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanIncreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-117">IntelliSense フィルター処理を使用する場合に、フィルター レベルを上げることができるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-117">Returns a value that indicates whether the filter level can be increased when using Intellisense filtering.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-118">フィルター レベルを上げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-118"><see langword="true" /> if the filter level can be increased; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanParameterInfo">
      <MemberSignature Language="C#" Value="public bool CanParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanParameterInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanParameterInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanParameterInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanParameterInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-119">式エディター インスタンスがパラメーター情報を式に対して取得できるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-119">Gets a Boolean value that indicates whether the expression editor instance can retrieve parameter information on the expression.</span></span></summary>
        <returns><span data-ttu-id="b5ff5-120"><see langword="true" /> に設定された <see cref="T:System.Boolean" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-120">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-121">式を貼り付けることができるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-121">Gets a Boolean value that indicates whether the expression can be pasted.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-122">式を貼り付けることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-122"><see langword="true" /> if the expression can be pasted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanQuickInfo">
      <MemberSignature Language="C#" Value="public bool CanQuickInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanQuickInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanQuickInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanQuickInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanQuickInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-123">式エディター インスタンスが IntelliSense クイック ツールヒントに表示する型情報を取得できるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-123">Gets a Boolean value that indicates whether the expression editor instance can retrieve type information to be shown in an IntelliSense quick info tool tip.</span></span></summary>
        <returns><span data-ttu-id="b5ff5-124"><see langword="true" /> に設定された <see cref="T:System.Boolean" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-124">Returns a <see cref="T:System.Boolean" /> set to <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRedo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRedo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRedo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-125">システムでの操作をやり直すことができるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-125">Gets a Boolean value that indicates whether the system can redo the operation.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-126">システムでの操作をやり直すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-126"><see langword="true" /> if the system can redo the operation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public Function CanUndo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanUndo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-127">システムでの操作を元に戻すことができるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-127">Gets a Boolean value that indicates whether the system can undo the operation.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-128">システムでの操作を元に戻すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-128"><see langword="true" /> if the system can undo the operation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-129">エディター インスタンスの選択を解除します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-129">Clears the selection in the editor instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-130">エディター項目を閉じて削除します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-130">Closes and purges the editor items.</span></span> <span data-ttu-id="b5ff5-131">これにより、特定の式エディター インスタンスが閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-131">This will close the specific expression editor instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-132">式エディター インスタンスが閉じるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-132">Occurs when the expression editor instance is closing.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteWord">
      <MemberSignature Language="C#" Value="public bool CompleteWord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompleteWord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.CompleteWord" />
      <MemberSignature Language="VB.NET" Value="Public Function CompleteWord () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompleteWord();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-133">式エディター インスタンスが、ユーザーが入力した単語の一部に対して補完候補のリストを表示できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-133">Determines whether the expression editor instance can provide a list of completions for the partial word typed by the user.</span></span> <span data-ttu-id="b5ff5-134">たとえば、ユーザーが入力中の単語を補完するために、メンバー名、引数名、およびメソッド名をユーザーに対して表示できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-134">For example, member, argument, and method names can be shown to the user in an attempt to help them complete the word they are typing.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-135">このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-135"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public bool Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-136">アクティブな式をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-136">Copies the active expression.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-137">コピーが成功すると <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-137"><see langword="true" /> if the copy is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public bool Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-138">アクティブな式を切り取ります。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-138">Cuts the active expression.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-139">正常に切り取られた場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-139"><see langword="true" /> if the cut is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool DecreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DecreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.DecreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function DecreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DecreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-140">フィルター レベルを下げて、すべての項目を IntelliSense フィルター リストに表示し、この操作が成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-140">Decreases the filter level to show all items in the Intellisense filter list and returns a value that indicates whether this operation was successful.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-141">このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-141"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-142">エディター インスタンスにフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-142">Sets focus on the editor instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommittedText">
      <MemberSignature Language="C#" Value="public string GetCommittedText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCommittedText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.GetCommittedText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommittedText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCommittedText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-143">式を生成するために使用されたテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-143">Gets the text used to generate an expression.</span></span></summary>
        <returns><span data-ttu-id="b5ff5-144">式を生成するために使用されたテキストを含む <see cref="T:System.String" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-144">Returns a <see cref="T:System.String" /> that contains the text used to generate an expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalIntellisense">
      <MemberSignature Language="C#" Value="public bool GlobalIntellisense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalIntellisense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.GlobalIntellisense" />
      <MemberSignature Language="VB.NET" Value="Public Function GlobalIntellisense () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalIntellisense();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-145">式エディターで式に対してグローバル IntelliSense を取得し、この操作に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-145">Retrieves global IntelliSense on the expression in the expression editor and returns a value that indicates whether this operation was successful.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-146">このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-146"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotAggregateFocus">
      <MemberSignature Language="C#" Value="event EventHandler GotAggregateFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotAggregateFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.GotAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Event GotAggregateFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotAggregateFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-147">式エディター インスタンスが集約フォーカスを取得した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-147">Occurs when the expression editor instance has aggregate focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAggregateFocus">
      <MemberSignature Language="C#" Value="public bool HasAggregateFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAggregateFocus" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HasAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAggregateFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAggregateFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-148">インスタンスに集約フォーカスがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-148">Gets a value that indicates whether the instance has aggregate focus.</span></span></summary>
        <value>
          <span data-ttu-id="b5ff5-149">エディター インスタンスに集約フォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-149"><see langword="true" /> if the editor instance has aggregate focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5ff5-150"><xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> または <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> によって作成された他のいずれかのコントロールにフォーカスがある場合、インスタンスに集約フォーカスがあります。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-150">The instance has aggregate focus when the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> or any other control created by the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-151">水平スクロール バーが表示されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-151">Gets or sets a value that indicates whether the horizontal scrollbar is visible.</span></span></summary>
        <value><span data-ttu-id="b5ff5-152"><see cref="T:System.Windows.Controls.ScrollBarVisibility" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-152">Returns <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostControl">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Control HostControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Control HostControl" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Control ^ HostControl { System::Windows::Controls::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-153"><see langword="ExpressionTextBox" /> に表示するために使用できる <see cref="T:System.Windows.Controls.Control" /> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-153">Gets a <see cref="T:System.Windows.Controls.Control" /> instance that can be used to display in the <see langword="ExpressionTextBox" />.</span></span></summary>
        <value><span data-ttu-id="b5ff5-154"><see cref="T:System.Windows.Controls.Control" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-154">Returns <see cref="T:System.Windows.Controls.Control" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseFilterLevel">
      <MemberSignature Language="C#" Value="public bool IncreaseFilterLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IncreaseFilterLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.IncreaseFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function IncreaseFilterLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IncreaseFilterLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-155">フィルター レベルを上げて、よく使われる項目を IntelliSense フィルター リストに表示し、この操作が成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-155">Increases the filter level to show common items in the Intellisense filter list and returns a value that indicates whether this operation was successful.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-156">このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-156"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostAggregateFocus">
      <MemberSignature Language="C#" Value="event EventHandler LostAggregateFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostAggregateFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.LostAggregateFocus" />
      <MemberSignature Language="VB.NET" Value="Event LostAggregateFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostAggregateFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-157">式エディター インスタンスが集約フォーカスを失ったときに発生するイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-157">Represents an event that is raised when the expression editor instance loses aggregate focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5ff5-158"><xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> および <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> によって作成されたすべてのコントロールでフォーカスが失われると、インスタンスの集約フォーカスが失われます。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-158">The instance loses aggregate focus when the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> and every control created by the <xref:System.Activities.Presentation.View.IExpressionEditorInstance.HostControl%2A> loose focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-159"><see langword="ExpressionTextBox" /> コントロールに表示されるテキストの最大行数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-159">Gets or sets the maximum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span></span> <span data-ttu-id="b5ff5-160"><see langword="ExpressionTextBox" /> コントロールに表示する内容が増えると、このプロパティによってコントロールの高さが適切なサイズに暗黙的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-160">This property implicitly sets the height of the <see langword="ExpressionTextBox" /> control when growing to fit.</span></span></summary>
        <value><span data-ttu-id="b5ff5-161"><see langword="ExpressionTextBox" /> コントロールに表示されるテキストの最大行数を含む <see cref="T:System.Int32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-161">Returns an <see cref="T:System.Int32" /> that containing the maximum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-162"><see langword="ExpressionTextBox" /> コントロールに表示されるテキストの最小行数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-162">Gets or sets the minimum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span></span> <span data-ttu-id="b5ff5-163">このプロパティによって <see langword="ExpressionTextBox" /> コントロールの高さが暗黙的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-163">This property implicitly sets the height of the <see langword="ExpressionTextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="b5ff5-164">返します、<see cref="T:System.Int32" />によって表示されるテキストの行の最小数を格納している、<see langword="ExpressionTextBox" />コントロール。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-164">Returns an <see cref="T:System.Int32" /> that contains the minimum number of lines of text to be displayed by the <see langword="ExpressionTextBox" /> control.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterInfo">
      <MemberSignature Language="C#" Value="public bool ParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParameterInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.ParameterInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function ParameterInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParameterInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-165">式エディターで式に対してパラメーター情報を取得し、この操作に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-165">Retrieves parameter information on the expression in the expression editor and returns a value that indicates whether this operation was successful.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-166">このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-166"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public bool Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-167">アクティブな式を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-167">Pastes the active expression.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-168">この貼り付けが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-168"><see langword="true" /> if the paste is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickInfo">
      <MemberSignature Language="C#" Value="public bool QuickInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.QuickInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function QuickInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool QuickInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-169">IntelliSense クイック ツールヒントに型情報が表示されるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-169">Determines whether type information to be shown in an IntelliSense quick info tool tip.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-170">このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-170"><see langword="true" /> if this method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-171">エディターで元に戻された最後の操作を再度適用します。つまり、元に戻す操作の効果を取り消します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-171">Reapplies the last operation that was undone in the editor, that is, reverse the effects of the undo operation.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-172">やり直しが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-172"><see langword="true" /> if the redo is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-173">テキストの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-173">Gets or sets the value of the text.</span></span></summary>
        <value><span data-ttu-id="b5ff5-174"><see cref="T:System.String" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-174">Returns <see cref="T:System.String" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.IExpressionEditorInstance.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-175">式エディター インスタンスでテキストが変更されたときに発生するイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-175">Represents an event that is raised when the text in an expression editor instance is changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.IExpressionEditorInstance.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5ff5-176">エディターでの最後の操作を元に戻します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-176">Undoes the last operation in the editor.</span></span></summary>
        <returns>
          <span data-ttu-id="b5ff5-177">元に戻すことに成功した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-177"><see langword="true" /> if the undo is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.IExpressionEditorInstance.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5ff5-178">垂直スクロール バーが表示されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-178">Gets or sets a value that indicates whether the vertical scrollbar is visible.</span></span></summary>
        <value><span data-ttu-id="b5ff5-179"><see cref="T:System.Windows.Controls.ScrollBarVisibility" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b5ff5-179">Returns <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>