<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Transaction.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58447083ab2b602d3a8b02db3850e907e517696be.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8447083ab2b602d3a8b02db3850e907e517696be</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.Transaction">
          <source>Represents a transaction.</source>
          <target state="translated">トランザクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace provides both an explicit programming model based on the <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> class, as well as an implicit programming model using the <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class, in which transactions are automatically managed by the infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Transactions&gt;</ph> 名前空間は、<ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> クラスに基づく明示的なプログラミング モデルだけでなく、インフラストラクチャがトランザクションを自動的に管理する、<ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> クラスを使用した暗黙的なプログラミング モデルも提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>We recommend highly that you use the easier implicit model for development.</source>
          <target state="translated">お勧め高の開発が容易になりますの暗黙的なモデルを使用することです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>To get started, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">最初に、次を参照してください。、<bpt id="p1">[</bpt>を実装する、暗黙的なトランザクションを使用してトランザクション スコープ<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>For more information on writing a transactional application, see <bpt id="p1">[</bpt>Writing A Transactional Application<ept id="p1">](~/docs/framework/data/transactions/writing-a-transactional-application.md)</ept>.</source>
          <target state="translated">トランザクション アプリケーションの作成の詳細については、次を参照してください。 <bpt id="p1">[</bpt>A トランザクション アプリケーションの記述<ept id="p1">](~/docs/framework/data/transactions/writing-a-transactional-application.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>The <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> class contains methods used by developers implementing resource managers for enlistment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>クラスには、リソース マネージャーの参加を実装している開発者によって使用されるメソッドが含まれています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>It also provides functionalities for cloning a transaction and controlling the current transaction context.</source>
          <target state="translated">トランザクションを複製および現在のトランザクション コンテキストを制御するための機能も提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>You can obtain the current transaction, if one is set, using the static <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> property.</source>
          <target state="translated">現在のトランザクションを取得するには、1 つ設定されている場合、静的<ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>This type is thread safe.</source>
          <target state="translated">この型はスレッド セーフです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.Clone">
          <source>Creates a clone of the transaction.</source>
          <target state="translated">トランザクションの複製を作成します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> that is a copy of the current transaction object.</source>
          <target state="translated">現在のトランザクション オブジェクトのコピーである <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.Clone">
          <source>Clones are created to pass transactions.</source>
          <target state="translated">トランザクションを渡すには、複製が作成されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.Clone">
          <source>For example, you might not want to pass a <ph id="ph1">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph> to other applications, because you do not want others to commit your transaction.</source>
          <target state="translated">たとえば、たくないに渡す、<ph id="ph1">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph>他のアプリケーションに対するたくない、トランザクションをコミットするためです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.Clone">
          <source>If you try to marshal or serialize a transaction, a clone is created for you automatically.</source>
          <target state="translated">マーシャ リングやトランザクションをシリアル化しようとする場合、複製する自動的に作成されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Transactions.Transaction.Current">
          <source>Gets or sets the ambient transaction.</source>
          <target state="translated">アンビエント トランザクションを取得または設定します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.Current">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> that describes the current transaction.</source>
          <target state="translated">現在のトランザクションを説明する <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.Current">
          <source>For more information on ambient transactions, please see the "Managing transaction flow using TransactionScopeOption" section of the <bpt id="p1">[</bpt>Implementing an Implicit Transaction using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">アンビエント トランザクションの詳細については、「TransactionScopeOption を使用してトランザクション フローを管理する」セクションを参照してください、<bpt id="p1">[</bpt>トランザクション スコープを使用して、暗黙的なトランザクションを実装する<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.Current">
          <source>Although you can set the ambient transaction using this property, you should use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object to manipulate the ambient transaction whenever possible.</source>
          <target state="translated">使用する必要がありますが、このプロパティを使用してアンビエント トランザクションを設定することができます、<ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph>可能な場合は、アンビエント トランザクションを操作するオブジェクト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.Current">
          <source>This property is thread static.</source>
          <target state="translated">このプロパティは、静的なスレッドです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.Current">
          <source>If you change the ambient transaction using this property inside a <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when <ph id="ph3">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> is called, and the previous ambient transaction value is restored.</source>
          <target state="translated">内には、このプロパティを使用してアンビエント トランザクションを変更するかどうか、 <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> 、<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>場合にスローされる<ph id="ph3">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph>が呼び出されると、アンビエント トランザクションの前の値を復元します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
          <source>Creates a dependent clone of the transaction.</source>
          <target state="translated">トランザクションの依存する複製を作成します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.DependentTransaction" /&gt;</ph> that represents the dependent clone.</source>
          <target state="translated">依存する複製を表す <ph id="ph1">&lt;see cref="T:System.Transactions.DependentTransaction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
          <source>A dependent transaction is a transaction whose outcome depends on the outcome of the transaction from which it was cloned.</source>
          <target state="translated">従属トランザクションは、トランザクションの結果が複製元となるトランザクションの結果によって異なります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
          <source>The <ph id="ph1">`cloneoption`</ph> parameter controls what kind of dependent transaction to create.</source>
          <target state="translated"><ph id="ph1">`cloneoption`</ph>パラメーターが作成する従属トランザクションの種類を制御します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
          <source>If a dependent transaction is created with <ph id="ph1">&lt;xref:System.Transactions.DependentCloneOption.BlockCommitUntilComplete&gt;</ph>, it blocks the commit process of the transaction until the transaction times out, or <ph id="ph2">&lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt;</ph> is called on the <ph id="ph3">&lt;xref:System.Transactions.DependentTransaction&gt;</ph>.</source>
          <target state="translated">依存するトランザクションが作成された場合<ph id="ph1">&lt;xref:System.Transactions.DependentCloneOption.BlockCommitUntilComplete&gt;</ph>、トランザクションがタイムアウトするまでは、トランザクションのコミット処理をブロックまたは<ph id="ph2">&lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt;</ph>で呼び出されると、<ph id="ph3">&lt;xref:System.Transactions.DependentTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
          <source>If it is created with <ph id="ph1">&lt;xref:System.Transactions.DependentCloneOption.RollbackIfNotComplete&gt;</ph>, it automatically aborts the transaction if <ph id="ph2">&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</ph> is called before <ph id="ph3">&lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt;</ph> is called on the <ph id="ph4">&lt;xref:System.Transactions.DependentTransaction&gt;</ph>.</source>
          <target state="translated">使用して作成された場合<ph id="ph1">&lt;xref:System.Transactions.DependentCloneOption.RollbackIfNotComplete&gt;</ph>場合、トランザクションは自動的に中止<ph id="ph2">&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</ph>前に呼び出されます<ph id="ph3">&lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt;</ph>で呼び出されると、<ph id="ph4">&lt;xref:System.Transactions.DependentTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
          <source>The following example shows you how to create a dependent transaction.</source>
          <target state="translated">次の例では、依存するトランザクションを作成する方法を示します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.Dispose">
          <source>Releases the resources that are held by the object.</source>
          <target state="translated">オブジェクトによって保持されているリソースを解放します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.Dispose">
          <source>If you change the ambient transaction by setting <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> inside a <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when <ph id="ph4">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> is called, and the previous ambient transaction value is restored.</source>
          <target state="translated">設定して、アンビエント トランザクションを変更した場合<ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph>内、 <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> 、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>場合にスローされる<ph id="ph4">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph>が呼び出されると、アンビエント トランザクションの前の値を復元します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Transactions.Transaction">
          <source>Enlists a durable resource manager to participate in a transaction.</source>
          <target state="translated">トランザクションに参加する永続的リソース マネージャーを参加させます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This method uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph2">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>注<ept id="p1">**</ept>このメソッドを使用して<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>されないようにするで、信頼されていないコードから呼び出されます。 ただし、直前の呼び出し元だけが所有する必要が、<ph id="ph2">`FullTrust`</ph>権限セットです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.Transactions.Transaction">
          <source>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</source>
          <target state="translated">昇格可能な単一フェーズの参加リスト (PSPE) を使用して内部トランザクションを持つリソース マネージャーを参加させます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /&gt;</ph> interface implemented by the participant.</source>
          <target state="translated">参加者によって実装された <ph id="ph1">&lt;see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /&gt;</ph> インターフェイス。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>The type of the distributed transaction processor.</source>
          <target state="translated">分散トランザクション プロセッサの種類。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</source>
          <target state="translated">昇格可能な単一フェーズの参加リスト (PSPE) を使用して内部トランザクションを持つリソース マネージャーを参加させます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.SinglePhaseEnlistment" /&gt;</ph> interface implementation that describes the enlistment.</source>
          <target state="translated">参加リストを記述する <ph id="ph1">&lt;see cref="T:System.Transactions.SinglePhaseEnlistment" /&gt;</ph> インターフェイスの実装。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>If the value specified for the <ph id="ph1">`promoterType`</ph> parameter is <ph id="ph2">`TransactionInterop.PromoterTypeDtc`</ph>, the transaction <bpt id="p1">**</bpt>must<ept id="p1">**</ept> be promoted by MSDTC and the <ph id="ph3">`byte[]`</ph> returned from the <ph id="ph4">`IPromotableSinglePhaseNotification.Promote`</ph> method <bpt id="p2">**</bpt>must<ept id="p2">**</ept> be an MSDTC transaction propagation token.</source>
          <target state="translated">値が指定されている場合、<ph id="ph1">`promoterType`</ph>パラメーターは<ph id="ph2">`TransactionInterop.PromoterTypeDtc`</ph>、トランザクション<bpt id="p1">**</bpt>必要があります<ept id="p1">**</ept>MSDTC によって昇格され、<ph id="ph3">`byte[]`</ph>から返される、<ph id="ph4">`IPromotableSinglePhaseNotification.Promote`</ph>メソッド<bpt id="p2">**</bpt>必要があります<ept id="p2">**</ept>MSDTC トランザクション伝達トークンであります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>If the value specified for the <ph id="ph1">`promoterType`</ph> parameter is <bpt id="p1">**</bpt>not<ept id="p1">**</ept><ph id="ph2">`TransactionInterop.PromoterTypeDTC`</ph>, the transaction will not be promoted by MSDTC, but rather by the caller’s implementation of <ph id="ph3">`IPromotableSinglePhaseNotification`</ph>.</source>
          <target state="translated">値が指定されている場合、<ph id="ph1">`promoterType`</ph>パラメーターは<bpt id="p1">**</bpt>いない<ept id="p1">**</ept><ph id="ph2">`TransactionInterop.PromoterTypeDTC`</ph>、MSDTC によりがの呼び出し元の実装ではなく、トランザクションは昇格されません<ph id="ph3">`IPromotableSinglePhaseNotification`</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>If this call is successful, there is a set of subsequent operations on the transaction that will return a <ph id="ph1">`TransactionPromotionException`</ph>.</source>
          <target state="translated">返すトランザクションの後続の処理のセットがある場合、この呼び出しが成功すると、<ph id="ph1">`TransactionPromotionException`</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>These operations are:</source>
          <target state="translated">これらの操作は次のとおりです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>Serialization of a Transaction object</source>
          <target state="translated">トランザクション オブジェクトのシリアル化</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</source>
          <target state="translated">昇格可能な単一フェーズの参加リスト (PSPE) を使用して内部トランザクションを持つリソース マネージャーを参加させます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.SinglePhaseEnlistment" /&gt;</ph> interface implementation that describes the enlistment.</source>
          <target state="translated">参加リストを記述する <ph id="ph1">&lt;see cref="T:System.Transactions.SinglePhaseEnlistment" /&gt;</ph> インターフェイスの実装。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>Enlistments in a transaction are volatile; that is, they do not survive the failure of the participant.</source>
          <target state="translated">トランザクションの参加リストは揮発性です。つまり、参加者の障害は保持されません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>In addition, this method only suggests the transaction manager to escalate control, but the escalation itself is not guaranteed.</source>
          <target state="translated">さらに、このメソッドは、のみ制御をエスカレートするトランザクション マネージャーを提示は、エスカレーション自体とは限りません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>If escalation fails, the user is not notified and the transaction is rolled back.</source>
          <target state="translated">エスカレーションが失敗した場合、ユーザーは通知されず、トランザクションがロールバックします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>The parameter <ph id="ph1">`promotableSinglePhaseNotification`</ph> is used to communicate to the transaction manager the outcome of attempting to commit the resource manager's internal transaction.</source>
          <target state="translated">パラメーター<ph id="ph1">`promotableSinglePhaseNotification`</ph>リソース マネージャーの内部トランザクションをコミットしようとしての結果、トランザクション マネージャーと通信するために使用します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>If inconsistent data is reported, the transaction manager throws an exception.</source>
          <target state="translated">データの矛盾が報告された場合、トランザクション マネージャーは、例外をスローします。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>If an <ph id="ph1">&lt;xref:System.Transactions.TransactionStatus.InDoubt&gt;</ph> outcome is reported, the transaction manager looks for the outcome notification in its own internal enlistment and ignores the reported response.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Transactions.TransactionStatus.InDoubt&gt;</ph>結果が報告された、トランザクション マネージャーが、独自の社内参加リストの結果の通知を検索し、報告された応答を無視します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>For more information on enlistments and escalation of a transaction, please see <bpt id="p1">[</bpt>Transaction Management Escalation<ept id="p1">](http://msdn.microsoft.com/library/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)</ept>.</source>
          <target state="translated">参加リストと、トランザクションの昇格の詳細についてを参照してください<bpt id="p1">[</bpt>トランザクション管理のエスカレーション<ept id="p1">](http://msdn.microsoft.com/library/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)</ept>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source>For more information on PSPE, see <bpt id="p1">[</bpt>Optimization Using Single Phase Commit and Promotable Single Phase Notification<ept id="p1">](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>.</source>
          <target state="translated">PSPE の詳細については、次を参照してください。<bpt id="p1">[</bpt>最適化を使用して 1 つのフェーズをコミットし、昇格可能な 1 つのフェーズ通知<ept id="p1">](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This method uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph2">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>注<ept id="p1">**</ept>このメソッドを使用して<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>されないようにするで、信頼されていないコードから呼び出されます。 ただし、直前の呼び出し元だけが所有する必要が、<ph id="ph2">`FullTrust`</ph>権限セットです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Transactions.Transaction">
          <source>Enlists a volatile resource manager to participate in a transaction.</source>
          <target state="translated">トランザクションに参加する揮発性リソース マネージャーを参加させます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>Volatile resource managers cannot recovery from failure to complete a transaction in which they were participating.</source>
          <target state="translated">揮発性リソース マネージャーでは、関与してトランザクションを完了する障害からの復旧はできません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>For more information on volatile and durable resources, as well as how to enlist a resource, see <bpt id="p1">[</bpt>Implementing A Resource Manager<ept id="p1">](http://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)</ept>.</source>
          <target state="translated">揮発性および持続性のあるリソースだけでなく、リソースを参加させる方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>A リソース マネージャーの実装<ept id="p1">](http://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Transaction">
          <source>For more information on how a resource manager responds to commit notification and prepare the commit, see <bpt id="p1">[</bpt>Committing A Transaction In Single-Phase and Multi-Phase<ept id="p1">](http://msdn.microsoft.com/library/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)</ept>.</source>
          <target state="translated">リソース マネージャーが通知をコミットし、コミットの準備にどのように応答する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>Single-Phase で、トランザクションのコミットとマルチ フェーズ<ept id="p1">](http://msdn.microsoft.com/library/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
          <source>Enlists a volatile resource manager that supports two phase commit to participate in a transaction.</source>
          <target state="translated">トランザクションに参加する 2 フェーズ コミットをサポートしている揮発性リソース マネージャーを参加させます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph> object that describes the enlistment.</source>
          <target state="translated">参加リストについて記述している <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
          <source>Volatile resource managers cannot recovery from failure to complete a transaction in which they were participating.</source>
          <target state="translated">揮発性リソース マネージャーでは、関与してトランザクションを完了する障害からの復旧はできません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
          <source>To obtain a durable enlistment in a transaction, use the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> method.</source>
          <target state="translated">トランザクションで永続参加リストを取得するを使用して、<ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
          <source>Resource managers enlisted for participation in a transaction through this method receive two phase commit notifications that correspond to the methods defined on the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface.</source>
          <target state="translated">このメソッドをトランザクションに参加するために参加しているリソース マネージャーで定義されたメソッドに対応する 2 つのフェーズ コミットの通知を受信する、<ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
          <source>The following example shows an implementation of <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface, as well as enlisting the object as a participant in a transaction using the <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> method.</source>
          <target state="translated">次の例は、の実装を示しています。<ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph>インターフェイスだけでなくを使用して、トランザクションの参加者としてオブジェクトを参加させる、<ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>Enlists a volatile resource manager that supports single phase commit optimization to participate in a transaction.</source>
          <target state="translated">単一フェーズ コミットの最適化をサポートし、トランザクションに参加する揮発性リソース マネージャーを参加させます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph> object that describes the enlistment.</source>
          <target state="translated">参加リストについて記述している <ph id="ph1">&lt;see cref="T:System.Transactions.Enlistment" /&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>Volatile resource managers cannot recovery from failure to complete a transaction in which they were participating.</source>
          <target state="translated">揮発性リソース マネージャーでは、関与してトランザクションを完了する障害からの復旧はできません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>To obtain a durable enlistment in a transaction, use the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> method.</source>
          <target state="translated">トランザクションで永続参加リストを取得するを使用して、<ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>For more information on volatile and durable resources, as well as how to enlist a resource, see <bpt id="p1">[</bpt>Implementing A Resource Manager<ept id="p1">](http://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)</ept>.</source>
          <target state="translated">揮発性および持続性のあるリソースだけでなく、リソースを参加させる方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>A リソース マネージャーの実装<ept id="p1">](http://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>For more information on how a resource manager responds to commit notification and prepare the commit, see <bpt id="p1">[</bpt>Committing A Transaction In Single-Phase and Multi-Phase<ept id="p1">](http://msdn.microsoft.com/library/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)</ept>.</source>
          <target state="translated">リソース マネージャーが通知をコミットし、コミットの準備にどのように応答する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>Single-Phase で、トランザクションのコミットとマルチ フェーズ<ept id="p1">](http://msdn.microsoft.com/library/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)</ept>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>You should note that even when your resource manager implementation enlists with this method, it is not guaranteed that it receives a single phase commit.</source>
          <target state="translated">このメソッド、リソース マネージャーの実装に参加させた場合でもは保証されません単一フェーズのコミットを受け取ることに注意してください。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>The transaction manager can still send two phase commit notifications instead.</source>
          <target state="translated">トランザクション マネージャーは、2 フェーズ コミットの通知を代わりに送信することができますも。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
          <source>For more information on the single phase commit optimization, see <bpt id="p1">[</bpt>Optimization Using Single Phase Commit and Promotable Single Phase Notification<ept id="p1">](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>.</source>
          <target state="translated">単一フェーズのコミットの最適化の詳細については、次を参照してください。<bpt id="p1">[</bpt>最適化を使用して単一フェーズのコミットが、昇格可能な 1 つのフェーズ通知<ept id="p1">](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.Equals(System.Object)">
          <source>Determines whether this transaction and the specified object are equal.</source>
          <target state="translated">このトランザクションと指定したオブジェクトが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this transaction are identical; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph> とこのトランザクションが同一である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">このインスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 ビット符号付き整数ハッシュ コード。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.GetPromotedToken">
          <source>Gets the  <bpt id="p1">&lt;c&gt;</bpt>byte[]<ept id="p1">&lt;/c&gt;</ept> returned by the <bpt id="p2">&lt;c&gt;</bpt>Promote<ept id="p2">&lt;/c&gt;</ept> method when the transaction is promoted.</source>
          <target state="translated">トランザクションを昇格するときに、<bpt id="p2">&lt;c&gt;</bpt>Promote<ept id="p2">&lt;/c&gt;</ept> メソッドで返される <bpt id="p1">&lt;c&gt;</bpt>byte[]<ept id="p1">&lt;/c&gt;</ept> を取得します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.GetPromotedToken">
          <source>The  <bpt id="p1">&lt;c&gt;</bpt>byte[]<ept id="p1">&lt;/c&gt;</ept> returned by the <bpt id="p2">&lt;c&gt;</bpt>Promote<ept id="p2">&lt;/c&gt;</ept> method when the transaction is promoted.</source>
          <target state="translated">トランザクションを昇格するときに、<bpt id="p2">&lt;c&gt;</bpt>Promote<ept id="p2">&lt;/c&gt;</ept> メソッドで返される <bpt id="p1">&lt;c&gt;</bpt>byte[]<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.GetPromotedToken">
          <source>This method has the side effect of causing promotion of the transaction if it is not already promoted.</source>
          <target state="translated">このメソッドでは、既に昇格していない場合は、トランザクションの昇格の原因の副作用が発生します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.GetPromotedToken">
          <source>The format of the returned <ph id="ph1">`byte[]`</ph> is defined by the value of the <ph id="ph2">`Transation.PromoterType`</ph> property.</source>
          <target state="translated">返されたの形式<ph id="ph1">`byte[]`</ph>の値によって定義された、<ph id="ph2">`Transation.PromoterType`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.GetPromotedToken">
          <source>If the value of the <ph id="ph1">`Transaction.PromoterType`</ph> property is <ph id="ph2">`TransactionInterop.PromoterTypeDtc`</ph> or <ph id="ph3">`Guid.Empty`</ph>, then the <ph id="ph4">`byte[]`</ph> returned by this method is an MSDTC transmitter propagation token.</source>
          <target state="translated">場合の値、<ph id="ph1">`Transaction.PromoterType`</ph>プロパティは<ph id="ph2">`TransactionInterop.PromoterTypeDtc`</ph>または<ph id="ph3">`Guid.Empty`</ph>、 <ph id="ph4">`byte[]`</ph> MSDTC トランスミッター伝達トークンは、このメソッドによって返されます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.GetPromotedToken">
          <source>Any other value for the <ph id="ph1">`Transaction.PromoterType`</ph> property specifies a format that is defined by the caller of <ph id="ph2">`Transaction.EnlistPromotableSinglePhase`</ph> that specified the property type value.</source>
          <target state="translated">その他の値を<ph id="ph1">`Transaction.PromoterType`</ph>プロパティの呼び出し元が定義されている形式を指定する<ph id="ph2">`Transaction.EnlistPromotableSinglePhase`</ph>プロパティ型の値を指定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.GetPromotedToken">
          <source>In order to interpret the promoted token in this latter case, you will need to consult the documentation for the code that made the <ph id="ph1">`EnlistPromotableSinglePhase`</ph> call.</source>
          <target state="translated">昇格を解釈するためにトークンをこの後者の場合にする必要が行われたコードのマニュアルを参照、<ph id="ph1">`EnlistPromotableSinglePhase`</ph>呼び出します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Transactions.Transaction.IsolationLevel">
          <source>Gets the isolation level of the transaction.</source>
          <target state="translated">トランザクションの分離レベルを取得します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.IsolationLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> values that indicates the isolation level of the transaction.</source>
          <target state="translated">トランザクションの分離レベルを示す <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> 値のいずれか。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.IsolationLevel">
          <source>The isolation level of a transaction determines what level of access other transactions have to volatile data before a transaction completes.</source>
          <target state="translated">トランザクションの分離レベルは、完了の他のトランザクションがトランザクションの前に揮発性のデータに対して持つアクセス レベルを決定します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.IsolationLevel">
          <source>For more information about isolation levels, see the documentation for the <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel&gt;</ph> enumeration.</source>
          <target state="translated">分離レベルの詳細については、のドキュメントを参照して、<ph id="ph1">&lt;xref:System.Transactions.IsolationLevel&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance that is to the left of the equality operator.</source>
          <target state="translated">等値演算子の左側に表示される <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance that is to the right of the equality operator.</source>
          <target state="translated">等値演算子の右側に表示される <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source>Tests whether two specified <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instances are equivalent.</source>
          <target state="translated">指定した 2 つの <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> インスタンスが等価であるかどうかをテストします。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="x" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> と <ph id="ph2">&lt;paramref name="x" /&gt;</ph> が等しい場合は <ph id="ph3">&lt;paramref name="y" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Transactions.Transaction.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">この演算子を同等の方法は<ph id="ph1">&lt;xref:System.Transactions.Transaction.Equals%2A?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance that is to the left of the inequality operator.</source>
          <target state="translated">非等値演算子の左側に表示される <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance that is to the right of the inequality operator.</source>
          <target state="translated">非等値演算子の右側に表示される <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source>Returns a value that indicates whether two <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instances are not equal.</source>
          <target state="translated">2 つの <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> インスタンスが等しくないかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="x" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="x" /&gt;</ph> と <ph id="ph3">&lt;paramref name="y" /&gt;</ph> が等しくない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Transactions.Transaction.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">この演算子を同等の方法は<ph id="ph1">&lt;xref:System.Transactions.Transaction.Equals%2A?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Transactions.Transaction.PromoterType">
          <source>Uniquely identifies the format of the <bpt id="p1">&lt;c&gt;</bpt>byte[]<ept id="p1">&lt;/c&gt;</ept> returned by the Promote method when the transaction is promoted.</source>
          <target state="translated">トランザクションを昇格するときに、Promote メソッドで返される <bpt id="p1">&lt;c&gt;</bpt>byte[]<ept id="p1">&lt;/c&gt;</ept> の形式を一意に識別します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.PromoterType">
          <source>A guid that uniquely identifies the format of the <bpt id="p1">&lt;c&gt;</bpt>byte[]<ept id="p1">&lt;/c&gt;</ept> returned by the Promote method when the transaction is promoted.</source>
          <target state="translated">形式を一意に識別する guid、 <bpt id="p1">&lt;c&gt;</bpt>byte[]<ept id="p1">&lt;/c&gt;</ept>トランザクションを昇格するときに、Promote メソッドで返されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.PromoterType">
          <source>If the transaction has not yet been promoted and does not yet have a promotable single phase enlistment, the value of this property will be <ph id="ph1">`Guid.Empty`</ph>.</source>
          <target state="translated">トランザクションがまだ昇格されていない、昇格可能な単一フェーズの参加リストがない場合は、このプロパティの値になります<ph id="ph1">`Guid.Empty`</ph>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.PromoterType">
          <source>If the transaction has been or will be promoted to MSDTC, then the value of this property will be <ph id="ph1">`TransactionInterop.PromoterTypeDtc`</ph>.</source>
          <target state="translated">かどうか、トランザクションを超えたかは、MSDTC に昇格し、このプロパティの値になります<ph id="ph1">`TransactionInterop.PromoterTypeDtc`</ph>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.PromoterType">
          <source>If the transaction has been or will be promoted by a non-MSDTC promoter, the value of this property will be the value specified to an earlier call to <ph id="ph1">`Transaction.EnlistPromotableSinglePhase`</ph>.</source>
          <target state="translated">このプロパティの値が、以前の呼び出しに指定された値になりますかトランザクションが MSDTC でないプロモーターによって昇格されます、<ph id="ph1">`Transaction.EnlistPromotableSinglePhase`</ph>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="T:System.Transactions.Transaction">
          <source>Rolls back (aborts) the transaction.</source>
          <target state="translated">トランザクションをロールバック (中止) します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.Rollback">
          <source>Rolls back (aborts) the transaction.</source>
          <target state="translated">トランザクションをロールバック (中止) します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.Rollback">
          <source>Any copy of a transaction object can initiate the rollback of the transaction by calling this method.</source>
          <target state="translated">トランザクション オブジェクトのすべてのコピーは、このメソッドを呼び出すことによって、トランザクションのロールバックを開始できます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.Rollback">
          <source>Only the original transaction object, which is a <ph id="ph1">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph> object, can be used to initiate an attempt to commit the transaction.</source>
          <target state="translated">元のトランザクション オブジェクトのみ、これは、<ph id="ph1">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph>オブジェクト、トランザクションのコミットを開始するために使用できます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.Rollback">
          <source>An exception is thrown when this method is called after the outcome of the transaction has already been determined.</source>
          <target state="translated">トランザクションの結果が既に決定した後、このメソッドが呼び出されたときに、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.Rollback(System.Exception)">
          <source>Rolls back (aborts) the transaction.</source>
          <target state="translated">トランザクションをロールバック (中止) します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /&gt;</ph> interface implemented by the participant.</source>
          <target state="translated">参加者によって実装された <ph id="ph1">&lt;see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /&gt;</ph> インターフェイス。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>The identifier for the transaction used by the distributed transaction manager.</source>
          <target state="translated">分散トランザクション マネージャーによって使用されるトランザクションの識別子です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>Sets the distributed transaction identifier generated by the non-MSDTC promoter.</source>
          <target state="translated">MSDTC でないプロモーターによって生成される分散トランザクションの識別子を設定します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>This method can only be called successfully while the <ph id="ph1">`IPromotableSinglePhaseNotification.Promote`</ph> method is being processed.</source>
          <target state="translated">このメソッドは、正常にのみ呼び出すことができます中に、<ph id="ph1">`IPromotableSinglePhaseNotification.Promote`</ph>メソッドを処理しています。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>If this method is called at any other time, a <ph id="ph1">`TransactionException`</ph> is thrown.</source>
          <target state="translated">その他の任意の時にこのメソッドが呼び出された場合、<ph id="ph1">`TransactionException`</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>The specified value of the <ph id="ph1">`promotableNotification`</ph> parameter must be the same object that was originally specified to the <ph id="ph2">`Transaction.EnlistPromotableSinglePhase`</ph> invocation.</source>
          <target state="translated">指定された値、<ph id="ph1">`promotableNotification`</ph>パラメーターが指定されていたものを同じオブジェクトにする必要があります、<ph id="ph2">`Transaction.EnlistPromotableSinglePhase`</ph>呼び出しです。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
          <source>If this is not the case, then an <ph id="ph1">`InvalidOperationException`</ph> is thrown.</source>
          <target state="translated">この場合、これがない場合、<ph id="ph1">`InvalidOperationException`</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination (see <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> ) for this serialization.</source>
          <target state="translated">このシリアル化のシリアル化先 (<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> を参照)。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data required to serialize this transaction.</source>
          <target state="translated">このトランザクションのシリアル化に必要なデータを含む <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="E:System.Transactions.Transaction.TransactionCompleted">
          <source>Indicates that the transaction is completed.</source>
          <target state="translated">トランザクションが完了したことを示します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Transactions.Transaction.TransactionCompleted">
          <source>You can register for this event instead of using a volatile enlistment to get outcome information for transactions.</source>
          <target state="translated">揮発性参加リストを使用して、トランザクションの結果情報を取得する代わりにこのイベントを登録することができます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Transactions.Transaction.TransactionCompleted">
          <source>The parameter passed to the <ph id="ph1">&lt;xref:System.Transactions.TransactionCompletedEventHandler&gt;</ph> delegate is a <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> instance.</source>
          <target state="translated">渡されたパラメーター、<ph id="ph1">&lt;xref:System.Transactions.TransactionCompletedEventHandler&gt;</ph>デリゲートは、<ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Transactions.Transaction.TransactionCompleted">
          <source>You can then query the <ph id="ph1">&lt;xref:System.Transactions.Transaction.TransactionInformation%2A&gt;</ph> property of the specific instance to get an instance of <ph id="ph2">&lt;xref:System.Transactions.TransactionInformation&gt;</ph>, whose <ph id="ph3">&lt;xref:System.Transactions.TransactionInformation.Status%2A&gt;</ph> property contains the status of a transaction with either the <ph id="ph4">&lt;xref:System.Transactions.TransactionStatus.Committed&gt;</ph> or <ph id="ph5">&lt;xref:System.Transactions.TransactionStatus.Aborted&gt;</ph> value.</source>
          <target state="translated">クエリを実行できます、<ph id="ph1">&lt;xref:System.Transactions.Transaction.TransactionInformation%2A&gt;</ph>のインスタンスを取得する特定のインスタンスのプロパティを<ph id="ph2">&lt;xref:System.Transactions.TransactionInformation&gt;</ph>が<ph id="ph3">&lt;xref:System.Transactions.TransactionInformation.Status%2A&gt;</ph>プロパティがいずれかでトランザクションの状態を表す、<ph id="ph4">&lt;xref:System.Transactions.TransactionStatus.Committed&gt;</ph>または<ph id="ph5">&lt;xref:System.Transactions.TransactionStatus.Aborted&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Transactions.Transaction.TransactionCompleted">
          <source><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept> Signing up for this event negatively affects the performance of the transaction it is attached to.</source>
          <target state="translated"><bpt id="p1">**</bpt>注意<ept id="p1">**</ept>にアタッチされているトランザクションのパフォーマンスに影響を与える悪影響このイベントにサインアップします。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Transactions.Transaction.TransactionCompleted">
          <source>The following sample shows how an application can obtain the outcome of a transaction by subscribing to the <ph id="ph1">&lt;xref:System.Transactions.Transaction.TransactionCompleted&gt;</ph> event.</source>
          <target state="translated">次の例は、購読することにより、アプリケーションが、トランザクションの結果を取得する方法を示しています、<ph id="ph1">&lt;xref:System.Transactions.Transaction.TransactionCompleted&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="E:System.Transactions.Transaction.TransactionCompleted">
          <source>An attempt to subscribe this event on a transaction that has been disposed.</source>
          <target state="translated">破棄されたトランザクションでこのイベントをサブスクライブしようとしました。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Transactions.Transaction.TransactionInformation">
          <source>Retrieves additional information about a transaction.</source>
          <target state="translated">トランザクションの追加情報を取得します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Transactions.Transaction.TransactionInformation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionInformation" /&gt;</ph> that contains additional information about the transaction.</source>
          <target state="translated">トランザクションの追加情報を格納する <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionInformation" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>