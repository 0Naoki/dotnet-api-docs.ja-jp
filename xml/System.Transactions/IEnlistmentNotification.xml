<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7256756ee2810fe0aa45f03eee75996fac132199" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754200" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="39fcb-101">リソース マネージャーが参加の登録時にトランザクション マネージャーに対して 2 フェーズ コミット通知コールバックを提供するために実装する必要があるインターフェイスについて説明します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="39fcb-101">Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39fcb-102">リソース マネージャーをトランザクションに参加するためには、トランザクション マネージャーを介してトランザクションに参加にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="39fcb-102">In order for a resource manager to participate in a transaction, it must enlist in the transaction through the transaction manager.</span></span> <span data-ttu-id="39fcb-103"><xref:System.Transactions.Transaction> クラスは、この機能を提供する一連のメソッドを定義しています。これらのメソッドの名前は `Enlist` で始まります。</span><span class="sxs-lookup"><span data-stu-id="39fcb-103">The <xref:System.Transactions.Transaction> class defines a set of methods whose names begin with `Enlist` that provide this functionality.</span></span> <span data-ttu-id="39fcb-104">さまざまな`Enlist`メソッドは、リソース マネージャーが持つ参加のさまざまな種類に対応します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-104">The different `Enlist` methods correspond to the different types of enlistment that a resource maanger may have.</span></span>  
  
 <span data-ttu-id="39fcb-105">このクラスには、リソース マネージャーが参加の登録時にトランザクション マネージャーに対して 2 フェーズ コミット通知コールバックを提供するために実装する必要がありますインターフェイスについて説明します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-105">This class describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span></span> <span data-ttu-id="39fcb-106">各リソース マネージャーの実装については、<xref:System.Transactions.IEnlistmentNotification>インターフェイス、する必要がありますを参加させるを使用して、<xref:System.Transactions.Transaction.EnlistVolatile%2A>メソッドまたは<xref:System.Transactions.Transaction.EnlistDurable%2A>のメソッド、<xref:System.Transactions.Transaction>クラスで、リソースは、揮発性または持続性のあるかどうか。</span><span class="sxs-lookup"><span data-stu-id="39fcb-106">For each resource manager's implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, you should enlist it using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method or the <xref:System.Transactions.Transaction.EnlistDurable%2A> method of the <xref:System.Transactions.Transaction> class, depending on whether your resource is volatile or durable.</span></span> <span data-ttu-id="39fcb-107">参加リストと 2 pc の詳細については、次を参照してください。[トランザクションの参加者として参加リソース](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md)と[単一フェースおよび複数フェーズでトランザクションをコミットする](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md)それぞれします。</span><span class="sxs-lookup"><span data-stu-id="39fcb-107">For more information on enlistment and 2PC, see [Enlisting Resources as Participants in a Transaction](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) and [Committing a Transaction in Single-Phase and Multi-Phase](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) respectively.</span></span>  
  
 <span data-ttu-id="39fcb-108">トランザクション マネージャーは、次の方法で、2 フェーズ コミット プロトコルのさまざまなフェーズに参加しているオブジェクトを通知します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-108">The transaction manager notifies the enlisted object at different phases of the Two Phase Commit Protocol by the following methods.</span></span>  
  
|<span data-ttu-id="39fcb-109">メソッド</span><span class="sxs-lookup"><span data-stu-id="39fcb-109">Method</span></span>|<span data-ttu-id="39fcb-110">説明</span><span class="sxs-lookup"><span data-stu-id="39fcb-110">Description</span></span>|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|<span data-ttu-id="39fcb-111">参加しているオブジェクトのこのメソッドは、トランザクション マネージャーは、トランザクションをコミットできるかどうかの参加者が表示されたら、トランザクションの最初のフェーズ中にトランザクション マネージャーによってコールバックとして使用が。</span><span class="sxs-lookup"><span data-stu-id="39fcb-111">This method of an enlisted object is used as a callback by the Transaction Manager during the first phase of a transaction, when the transaction manager asks participants whether they can commit the transaction.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|<span data-ttu-id="39fcb-112">参加しているオブジェクトのこのメソッドは、トランザクションがコミットされた場合、2 番目のフェーズ、トランザクションのトランザクション マネージャーによってコールバックとして使用が。</span><span class="sxs-lookup"><span data-stu-id="39fcb-112">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is commited.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|<span data-ttu-id="39fcb-113">参加しているオブジェクトのこのメソッドは、(つまり、ロールバックし)、トランザクションが中止された場合、2 番目のフェーズ、トランザクションのトランザクション マネージャーによってコールバックとして使用が。</span><span class="sxs-lookup"><span data-stu-id="39fcb-113">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is aborted (that is, rolled back).</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|<span data-ttu-id="39fcb-114">参加しているオブジェクトのこのメソッドは、トランザクションの疑問がある場合、トランザクションの 2 番目のフェーズ中にトランザクション マネージャーによってコールバックとして使用が。</span><span class="sxs-lookup"><span data-stu-id="39fcb-114">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is in doubt.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="39fcb-115">順番に、または特定の順序では通知を送信しない場合がありますに注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39fcb-115">You should be aware that notifications might not be sent sequentially, or in a particular order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39fcb-116">次の例では、このインターフェイスとを使用して、トランザクションの参加者として、オブジェクトへの参加の実装、<xref:System.Transactions.Transaction.EnlistVolatile%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="39fcb-116">The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.</span></span>  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="39fcb-117">トランザクション マネージャーに対して応答を送信するために使用する <see cref="T:System.Transactions.Enlistment" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39fcb-117">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39fcb-118">トランザクションのコミット中であることを参加オブジェクトに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39fcb-118">Notifies an enlisted object that a transaction is being committed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39fcb-119">トランザクション マネージャーは、ときに、すべての参加者トランザクションをコミットするように指示します、コミットの 2 番目のフェーズ中に参加しているオブジェクトのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-119">The transaction manager calls this method of an enlisted object during the second phase of a commitment, when it instructs all participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="39fcb-120">リソース マネージャーがトランザクションを終了し、TM が呼び出すことによって完了したことを通知するために必要な作業を実行する必要があります、<xref:System.Transactions.Enlistment.Done%2A>メソッドを`enlistment`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="39fcb-120">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="39fcb-121">リソース マネージャーが、永続的に参加しているかどうかが呼び出すことで応答しない<xref:System.Transactions.Enlistment.Done%2A>メソッドでは、トランザクション マネージャーは、リソース マネージャーが受信したことを確認しますが、<xref:System.Transactions.IEnlistmentNotification.Commit%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-121">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Commit%2A> call.</span></span> <span data-ttu-id="39fcb-122">そのため、トランザクション マネージャーは、応答を待機中は保持し、このトランザクションに関連する情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-122">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="39fcb-123">場合<xref:System.Transactions.Enlistment.Done%2A>は呼び出されず、この特定の情報が保持しておく無期限にメモリまたはシステム全体のリソース。</span><span class="sxs-lookup"><span data-stu-id="39fcb-123">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="39fcb-124">これにより、リソースの再利用することはできません。</span><span class="sxs-lookup"><span data-stu-id="39fcb-124">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="39fcb-125">分散トランザクションの場合これでした MSDTC プロセスが中断される MSDTC のログをいっぱいになってしまいます。</span><span class="sxs-lookup"><span data-stu-id="39fcb-125">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="39fcb-126">によって管理されるトランザクションの場合<xref:System.Transactions>、この結果、リソース マネージャーのプロセスのメモリ消費量が段階的なと継続的な増加します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-126">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="39fcb-127">そのため、呼び出すことが重要です、<xref:System.Transactions.Enlistment.Done%2A>メソッドで、リソース マネージャーが完了したら、作業を準備します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-127">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="39fcb-128">トランザクション マネージャーに対して応答を送信するために使用する <see cref="T:System.Transactions.Enlistment" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39fcb-128">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39fcb-129">トランザクションのステータスが未決定であることを参加オブジェクトに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39fcb-129">Notifies an enlisted object that the status of a transaction is in doubt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39fcb-130">トランザクション マネージャーには、1 つの持続性のあるリソースを単一フェーズ コミット操作が呼び出されて、持続性のあるリソースへの接続がトランザクションの結果を取得する前に失われた、ときに、揮発性リソースをこのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="39fcb-130">This method is called for volatile resources when the transaction manager has invoked a single phase commit operation to a single durable resource, and then connection to the durable resource was lost prior to getting the transaction result.</span></span> <span data-ttu-id="39fcb-131">その時点では、トランザクションの結果に安全に判断できません。</span><span class="sxs-lookup"><span data-stu-id="39fcb-131">At that point, the transaction outcome cannot be safely determined.</span></span>  
  
 <span data-ttu-id="39fcb-132">として<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>はトランザクションの最後の状態にあると、呼び出す必要はありません<xref:System.Transactions.IEnlistmentNotification.Commit%2A>または<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>呼び出した後<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-132">As <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> is considered to be a final state for a transaction, you should not call <xref:System.Transactions.IEnlistmentNotification.Commit%2A> or <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> after calling <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39fcb-133">揮発性リソースには、このメソッドの実装に影響を受けるデータを認識する任意の回復または含有操作を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39fcb-133">Your implementation of this method for the volatile resource should perform whatever recovery or containment operation it understands on the affected data.</span></span>  <span data-ttu-id="39fcb-134">呼び出す必要があります、<xref:System.Transactions.Enlistment.Done%2A>メソッドを上、`enlistment`パラメーターの処理が完了したら。</span><span class="sxs-lookup"><span data-stu-id="39fcb-134">It must also call the <xref:System.Transactions.Enlistment.Done%2A> method on the on the `enlistment` parameter when it has finished its work.</span></span>  
  
 <span data-ttu-id="39fcb-135">リソース マネージャーが、永続的に参加しているかどうかが呼び出すことで応答しない<xref:System.Transactions.Enlistment.Done%2A>メソッドでは、トランザクション マネージャーは、リソース マネージャーが受信したことを確認しますが、<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-135">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> call.</span></span> <span data-ttu-id="39fcb-136">そのため、トランザクション マネージャーは、応答を待機中は保持し、このトランザクションに関連する情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-136">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="39fcb-137">場合<xref:System.Transactions.Enlistment.Done%2A>は呼び出されず、この特定の情報が保持しておく無期限にメモリまたはシステム全体のリソース。</span><span class="sxs-lookup"><span data-stu-id="39fcb-137">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="39fcb-138">これにより、リソースの再利用することはできません。</span><span class="sxs-lookup"><span data-stu-id="39fcb-138">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="39fcb-139">分散トランザクションの場合これでした MSDTC プロセスが中断される MSDTC のログをいっぱいになってしまいます。</span><span class="sxs-lookup"><span data-stu-id="39fcb-139">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="39fcb-140">によって管理されるトランザクションの場合<xref:System.Transactions>、この結果、リソース マネージャーのプロセスのメモリ消費量が段階的なと継続的な増加します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-140">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="39fcb-141">そのため、呼び出すことが重要です、<xref:System.Transactions.Enlistment.Done%2A>メソッドで、リソース マネージャーが完了したら、作業を準備します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-141">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">
          <span data-ttu-id="39fcb-142">トランザクション マネージャーに応答を送信するために使用する <see cref="T:System.Transactions.PreparingEnlistment" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39fcb-142">A <see cref="T:System.Transactions.PreparingEnlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39fcb-143">トランザクションのコミットの準備中であることを参加オブジェクトに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39fcb-143">Notifies an enlisted object that a transaction is being prepared for commitment.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39fcb-144">トランザクション マネージャーによっては、参加しているリソースのこのメソッドは、トランザクションをコミットできるかどうかの参加者に問い合わせる際、コミットのフェーズ 1 でマネージャー、</span><span class="sxs-lookup"><span data-stu-id="39fcb-144">The transaction manager calls this method of an enlisted resource manager during the phase 1 of a commitment, when it asks participants whether they can commit the transaction.</span></span>  
  
 <span data-ttu-id="39fcb-145">ログインする必要がある永続的リソース マネージャーを実装するとき、このフェーズ中にレコードを準備します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-145">When you are implementing a durable resource manager, you should log your prepare record during this phase.</span></span> <span data-ttu-id="39fcb-146">レコードには、回復を実行するために必要なすべての情報を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="39fcb-146">The record should contain all the necessary information to perform recovery.</span></span> <span data-ttu-id="39fcb-147">これが含まれています、<xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>プロパティは、トランザクション マネージャーに渡される、<xref:System.Transactions.TransactionManager.Reenlist%2A>復旧中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="39fcb-147">This includes the <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> property, which is passed to the transaction manager in the <xref:System.Transactions.TransactionManager.Reenlist%2A> method during recovery.</span></span> <span data-ttu-id="39fcb-148">回復の詳細については、次を参照してください。 [Performing Recovery](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-148">For more information on recovery, see [Performing Recovery](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).</span></span>  
  
 <span data-ttu-id="39fcb-149">Resource manager を呼び出す前に完了するすべての作業を完了する必要があります、<xref:System.Transactions.PreparingEnlistment.Prepared%2A>のメソッド、`preparingEnlistment`コミットメント、賛成票を投じてを示します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-149">Your resource manager should complete all work that must be finished before calling the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method of the `preparingEnlistment` parameter to indicate its vote for commitment.</span></span> <span data-ttu-id="39fcb-150">コミット、ロールバック、または状態が不明で、このような 2 フェーズ通知を受信する前にこれを行うことを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39fcb-150">You should make sure that this is accomplished before receiving any phase 2 notification such as commit, rollback or in doubt.</span></span> <span data-ttu-id="39fcb-151">これは、フェーズ 2 の通知で、インラインを呼び出した同じスレッドで発生することがあるため、<xref:System.Transactions.PreparingEnlistment.Prepared%2A>フェーズ 1 でのメソッド。</span><span class="sxs-lookup"><span data-stu-id="39fcb-151">This is because phase 2 notifications can happen inline on the same thread that called the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method in phase 1.</span></span> <span data-ttu-id="39fcb-152">このため、フェーズ 2 の通知を受け取る前に既に完了したと考えられる作業 (ロックの解除など) は、<xref:System.Transactions.PreparingEnlistment.Prepared%2A> 呼び出しの後には実行できません。</span><span class="sxs-lookup"><span data-stu-id="39fcb-152">As such, you should not do any work after the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> call (for example, releasing locks) that you would expect to have completed before receiving the phase 2 notifications.</span></span>  
  
 <span data-ttu-id="39fcb-153">メソッドを呼び出すこともできます、`preparingEnlistment`ロールバックのための投票を示します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-153">You can also call the method of the `preparingEnlistment` parameter to indicate a vote for rollback.</span></span>  
  
 <span data-ttu-id="39fcb-154">呼び出す必要がありますが、このメソッドの実装に参加することがなく、単に確認し、トランザクションの進行状況に対応するオブジェクトが必要な場合、<xref:System.Transactions.Enlistment.Done%2A>のメソッド、`preparingEnlistment`作業が完了したらパラメーター。</span><span class="sxs-lookup"><span data-stu-id="39fcb-154">If you want the object to merely observe and react to the progress of the transaction, without participating in it, your implementation of this method should call the <xref:System.Transactions.Enlistment.Done%2A> method of the `preparingEnlistment` parameter when it has finished its work.</span></span> <span data-ttu-id="39fcb-155">これにより、リソース マネージャーではフェーズ 2 の通知は表示されません。</span><span class="sxs-lookup"><span data-stu-id="39fcb-155">By doing so, your resource manager would not receive any phase 2 notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="39fcb-156">トランザクション マネージャーに応答を送信するために使用する <see cref="T:System.Transactions.Enlistment" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39fcb-156">A <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39fcb-157">トランザクションのロールバック (中止) 中であることを参加オブジェクトに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39fcb-157">Notifies an enlisted object that a transaction is being rolled back (aborted).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39fcb-158">トランザクション マネージャーは、トランザクションはロールバック中のトランザクションの参加要素を 1 つまたは複数のトランザクションをコミットできないのためには、(中止) ときに、参加しているオブジェクトのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-158">The transaction manager calls this method of an enlisted object when the transaction is being rolled back (aborted) due to the inability of one or more transaction participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="39fcb-159">リソース マネージャーがトランザクションを終了し、TM が呼び出すことによって完了したことを通知するために必要な作業を実行する必要があります、<xref:System.Transactions.Enlistment.Done%2A>メソッドを`enlistment`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="39fcb-159">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="39fcb-160">リソース マネージャーが、永続的に参加しているかどうかが呼び出すことで応答しない<xref:System.Transactions.Enlistment.Done%2A>メソッドでは、トランザクション マネージャーは、リソース マネージャーが受信したことを確認しますが、<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-160">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> call.</span></span> <span data-ttu-id="39fcb-161">そのため、トランザクション マネージャーは、応答を待機中は保持し、このトランザクションに関連する情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-161">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="39fcb-162">場合<xref:System.Transactions.Enlistment.Done%2A>は呼び出されず、この特定の情報が保持しておく無期限にメモリまたはシステム全体のリソース。</span><span class="sxs-lookup"><span data-stu-id="39fcb-162">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="39fcb-163">これにより、リソースの再利用することはできません。</span><span class="sxs-lookup"><span data-stu-id="39fcb-163">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="39fcb-164">分散トランザクションの場合これでした MSDTC プロセスが中断される MSDTC のログをいっぱいになってしまいます。</span><span class="sxs-lookup"><span data-stu-id="39fcb-164">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="39fcb-165">によって管理されるトランザクションの場合<xref:System.Transactions>、この結果、リソース マネージャーのプロセスのメモリ消費量が段階的なと継続的な増加します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-165">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="39fcb-166">そのため、呼び出すことが重要です、<xref:System.Transactions.Enlistment.Done%2A>メソッドで、リソース マネージャーが完了したら、作業を準備します。</span><span class="sxs-lookup"><span data-stu-id="39fcb-166">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>