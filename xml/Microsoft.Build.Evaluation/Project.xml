<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="36fc5-101">デザイン時のセマンティクスでプロジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="36fc5-102">このクラスは、プロジェクト ファイルを読み込み、項目とプロパティを編集し、プロジェクトをビルドできます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36fc5-103">グローバル プロジェクト コレクションのグローバル プロパティと既定のツール バージョンを使用して、空のプロジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36fc5-104">グローバル プロジェクト コレクションのグローバル プロパティと既定のツール バージョンを使用して、空のプロジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-105">通常、プロジェクトを保存することによって、ソース プロジェクト ファイルの完全なパスを指定した場合、このプロジェクトはグローバル プロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="36fc5-106">評価に使用する ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="36fc5-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="36fc5-107">空のプロジェクトを構築し、指定したプロジェクト ルート、グローバル プロジェクト コレクションのグローバル プロパティ、および既定のツール バージョンを使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-108">このプロジェクトまたは指定されたプロジェクトのルートには、ソース プロジェクト ファイルへの完全パスを指定した場合、このプロジェクトはグローバル プロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="36fc5-109">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-110">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="36fc5-111">新しいプロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="36fc5-112">指定したプロジェクト コレクションのグローバル プロパティと既定のツール バージョンを使用して、空のプロジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-113">通常、プロジェクトを保存することによってソース プロジェクト ファイルの完全なパスが指定されている場合、このプロジェクトは特定のプロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="36fc5-114">評価するソース プロジェクト ファイル。</span><span class="sxs-lookup"><span data-stu-id="36fc5-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="36fc5-115">プロジェクトを構築し、指定したソース プロジェクト ファイル、グローバル プロジェクト コレクションのグローバル プロパティ、および既定のツール バージョンを使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-116">プロジェクトがグローバル プロジェクト コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="36fc5-117">このソース プロジェクト ファイルを評価するプロジェクト コレクションでプロジェクトが既に InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="36fc5-118">IO 関連の例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="36fc5-119">評価が失敗した場合。</span><span class="sxs-lookup"><span data-stu-id="36fc5-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="36fc5-120">プロジェクトのソース コードを読み取る XML リーダー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="36fc5-121">プロジェクトを構築し、指定した XML リーダーからソース コードを読み取って評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="36fc5-122">ソース コードは、グローバル プロジェクト コレクションのグローバル プロパティと既定のツール バージョンを使用して評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-123">通常、プロジェクトを保存することによって、ソース プロジェクト ファイルの完全なパスを指定した場合、このプロジェクトはグローバル プロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="36fc5-124">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-125">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="36fc5-126">評価に使用するプロジェクト ルート。</span><span class="sxs-lookup"><span data-stu-id="36fc5-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-127">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-127">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-128">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-129">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-129">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-130">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-130">May be null.</span></span></param>
        <summary><span data-ttu-id="36fc5-131">空のプロジェクトを構築し、指定したプロジェクト ルート、グローバル プロパティ、およびツール バージョンを使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-132">このプロジェクトまたは指定されたプロジェクトのルートには、ソース プロジェクト ファイルへの完全パスを指定した場合、このプロジェクトはグローバル プロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="36fc5-133">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-134">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="36fc5-135">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-135">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-136">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-137">プロジェクトの評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="36fc5-138">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-139">新しいプロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="36fc5-140">空のプロジェクトを構築し、指定したプロジェクト コレクション、グローバル プロパティ、およびツール バージョンを使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-141">通常、プロジェクトを保存することによって、ソース プロジェクト ファイルの完全なパスを指定した場合、プロジェクトが指定されたプロジェクト コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="36fc5-142">評価するソース プロジェクト ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="36fc5-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-143">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-143">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-144">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-145">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-145">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-146">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-146">May be null.</span></span></param>
        <summary><span data-ttu-id="36fc5-147">プロジェクトを構築し、指定したソース プロジェクト ファイル、グローバル プロパティ、およびツール バージョンを使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-148">プロジェクトがグローバル プロジェクト コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="36fc5-149">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-150">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="36fc5-151">IO 関連の例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="36fc5-152">プロジェクトのソース コードを読み取る XML リーダー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-153">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-153">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-154">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-155">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-155">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-156">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-156">May be null.</span></span></param>
        <summary><span data-ttu-id="36fc5-157">プロジェクトを構築し、指定した XML リーダーからソース コードを読み取って評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="36fc5-158">ソース コードは、指定したグローバル プロパティとツール バージョンを使用して評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-159">通常、プロジェクトを保存することによって、ソース プロジェクト ファイルの完全なパスを指定した場合、このプロジェクトはグローバル プロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="36fc5-160">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-161">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="36fc5-162">評価に使用するプロジェクト ルート。</span><span class="sxs-lookup"><span data-stu-id="36fc5-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-163">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-163">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-164">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-165">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-165">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-166">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-167">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="36fc5-168">プロジェクトを構築し、指定したプロジェクト ルート、グローバル プロパティ、およびツール バージョンを使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-169">このプロジェクトまたは指定されたプロジェクトのルートには、ソース プロジェクト ファイルへの完全パスを指定した場合、このプロジェクトは特定のプロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="36fc5-170">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-171">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="36fc5-172">評価するソース プロジェクト ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="36fc5-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-173">グローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-173">The global properties.</span></span> <span data-ttu-id="36fc5-174">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-175">ツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-175">The tools version.</span></span> <span data-ttu-id="36fc5-176">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-177">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-177">The project collection the project is added to.</span></span> <span data-ttu-id="36fc5-178">null は指定できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="36fc5-179">プロジェクトを構築し、指定したソース プロジェクト ファイル、グローバル プロパティ、およびツール バージョンを使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-180">プロジェクトが特定のプロジェクト コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="36fc5-181">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-182">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="36fc5-183">IO 関連の例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="36fc5-184">プロジェクトのソース コードを読み取る XML リーダー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-185">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-185">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-186">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-187">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-187">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-188">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-189">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-189">The project collection the project is added to.</span></span> <span data-ttu-id="36fc5-190">null は指定できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="36fc5-191">プロジェクトを構築し、指定した XML リーダーからソース コードを読み取って評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="36fc5-192">ソース コードは、指定したグローバル プロパティとツール バージョンを使用して評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-193">このプロジェクトまたは指定されたプロジェクトのルートには、ソース プロジェクト ファイルへの完全パスを指定した場合、このプロジェクトは特定のプロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="36fc5-194">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-195">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="36fc5-196">評価に使用するプロジェクト ルート。</span><span class="sxs-lookup"><span data-stu-id="36fc5-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-197">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-197">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-198">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-199">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-199">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-200">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-201">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-201">The project collection the project is added to.</span></span> <span data-ttu-id="36fc5-202">null は指定できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="36fc5-203">評価に使用する読み込み設定。</span><span class="sxs-lookup"><span data-stu-id="36fc5-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="36fc5-204">プロジェクトを構築し、指定したプロジェクト ルート、グローバル プロパティ、ツール バージョン、および読み込み設定を使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-205">このプロジェクトまたは指定されたプロジェクトのルートには、ソース プロジェクト ファイルへの完全パスを指定した場合、このプロジェクトは特定のプロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="36fc5-206">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-207">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="36fc5-208">評価するソース プロジェクト ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="36fc5-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-209">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-209">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-210">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-211">ツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-211">The tools version.</span></span> <span data-ttu-id="36fc5-212">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-213">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-213">The project collection the project is added to.</span></span> <span data-ttu-id="36fc5-214">null は指定できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="36fc5-215">評価に使用する読み込み設定。</span><span class="sxs-lookup"><span data-stu-id="36fc5-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="36fc5-216">プロジェクトを構築し、指定したソース プロジェクト ファイル、グローバル プロパティ、ツール バージョン、および読み込み設定を使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-217">プロジェクトが特定のプロジェクト コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="36fc5-218">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-219">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="36fc5-220">IO 関連の例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="36fc5-221">プロジェクトのソース コードを読み取る XML リーダー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-222">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-222">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-223">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-224">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-224">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-225">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-226">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-226">The project collection the project is added to.</span></span> <span data-ttu-id="36fc5-227">null は指定できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="36fc5-228">評価に使用する読み込み設定。</span><span class="sxs-lookup"><span data-stu-id="36fc5-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="36fc5-229">プロジェクトを構築し、指定した XML リーダーからソース コードを読み取って評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="36fc5-230">ソース コードは、指定したグローバル プロパティとツール バージョンを使用して評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-231">このプロジェクトまたは指定されたプロジェクトのルートには、ソース プロジェクト ファイルへの完全パスを指定した場合、このプロジェクトは特定のプロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="36fc5-232">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-233">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="36fc5-234">評価に使用するプロジェクト ルート。</span><span class="sxs-lookup"><span data-stu-id="36fc5-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-235">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-235">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-236">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-237">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-237">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-238">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="36fc5-239">評価に使用するサブ ツールセットのバージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="36fc5-240">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-241">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-241">The project collection the project is added to.</span></span> <span data-ttu-id="36fc5-242">null は指定できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="36fc5-243">評価に使用する読み込み設定。</span><span class="sxs-lookup"><span data-stu-id="36fc5-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="36fc5-244">プロジェクトを構築し、指定したプロジェクト ルート、グローバル プロパティ、ツールとサブツールセット バージョン、プロジェクト コレクション、および読み込み設定を使用して評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-245">このプロジェクトまたは指定されたプロジェクトのルートには、ソース プロジェクト ファイルへの完全パスを指定した場合、このプロジェクトは特定のプロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="36fc5-246">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-247">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="36fc5-248">評価するソース プロジェクト ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="36fc5-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-249">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-249">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-250">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-251">ツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-251">The tools version.</span></span> <span data-ttu-id="36fc5-252">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="36fc5-253">サブ ツールセット バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-253">The sub toolset version.</span></span> <span data-ttu-id="36fc5-254">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-255">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-255">The project collection the project is added to.</span></span> <span data-ttu-id="36fc5-256">null は指定できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="36fc5-257">評価に使用する読み込み設定。</span><span class="sxs-lookup"><span data-stu-id="36fc5-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="36fc5-258">プロジェクトを構築し、指定したソース プロジェクト ファイル、グローバル プロパティ、ツールとサブツール セット バージョン、プロジェクト コレクション、および読み込み設定を使用して評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-259">プロジェクトが特定のプロジェクト コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="36fc5-260">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-261">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="36fc5-262">IO 関連の例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="36fc5-263">プロジェクトのソース コードを読み取る XML リーダー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="36fc5-264">評価に使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-264">Global properties to evaluate with.</span></span> <span data-ttu-id="36fc5-265">null も指定できます。その場合は、親プロジェクト コレクションのグローバル プロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="36fc5-266">評価に使用するツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-266">Tools version to evaluate with.</span></span> <span data-ttu-id="36fc5-267">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="36fc5-268">評価に使用するサブ ツールセットのバージョン。</span><span class="sxs-lookup"><span data-stu-id="36fc5-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="36fc5-269">null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="36fc5-270">プロジェクトを追加するプロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="36fc5-270">The project collection the project is added to.</span></span> <span data-ttu-id="36fc5-271">null は指定できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="36fc5-272">評価に使用する読み込み設定。</span><span class="sxs-lookup"><span data-stu-id="36fc5-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="36fc5-273">プロジェクトを構築し、指定した XML リーダーからソース コードを読み取って評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="36fc5-274">ソース コードは、特定のグローバル プロパティ、ツールとサブツールセット バージョン、プロジェクト コレクション、および読み込み設定を使用して評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-275">このプロジェクトまたは指定されたプロジェクトのルートには、ソース プロジェクト ファイルへの完全パスを指定した場合、このプロジェクトは特定のプロジェクト コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="36fc5-276">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="36fc5-277">スローされます InvalidOperationException 同等のプロジェクトが既にある場合は、プロジェクト コレクションに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36fc5-278">項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="36fc5-279">追加する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="36fc5-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="36fc5-280">追加する項目の Include 属性。</span><span class="sxs-lookup"><span data-stu-id="36fc5-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="36fc5-281">メタデータのない項目をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="36fc5-282">追加された項目を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-282">Returns the added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-283">すべてのメタデータは、後で追加できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-283">Any metadata can be added later.</span></span> <span data-ttu-id="36fc5-284">既にワイルドカードの式には、新しい項目が含まれている場合は、プロジェクトのソースを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="36fc5-285">評価は、ベスト エフォートの原則で行われます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="36fc5-286">次の新しい項目のプロジェクトのソースで定義されている項目を使用して、評価版の可能性があります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="36fc5-287">このアイテムのみが評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-287">Only this item is evaluated.</span></span> <span data-ttu-id="36fc5-288">依存しているその他の項目には影響しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="36fc5-289">追加する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="36fc5-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="36fc5-290">追加する項目の Include 属性。</span><span class="sxs-lookup"><span data-stu-id="36fc5-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="36fc5-291">追加する項目のメタデータ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="36fc5-292">指定したメタデータを持つ項目をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="36fc5-293">追加された項目を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-293">Returns the added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-294">メタデータがあります null でないことを示しますメタデータ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="36fc5-295">評価は、ベスト エフォートの原則で行われます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="36fc5-296">次の新しい項目のプロジェクトのソースで定義されている項目を使用して、評価版の可能性があります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="36fc5-297">このアイテムのみが評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-297">Only this item is evaluated.</span></span> <span data-ttu-id="36fc5-298">依存しているその他の項目には影響しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36fc5-299">メタデータのない項目をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="36fc5-300">新しい項目に既存のワイルドカードが一致するかどうかの確認は、その項目が項目グループの最初の項目でない限り行われません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="36fc5-301">新しい項目が類似の項目の近くに配置されることもありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="36fc5-302">追加する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="36fc5-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="36fc5-303">項目に追加する未評価の Include 属性。</span><span class="sxs-lookup"><span data-stu-id="36fc5-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="36fc5-304">メタデータのない項目をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="36fc5-305">新しい項目に既存のワイルドカードが一致するかどうかの確認は、その項目が項目グループの最初の項目でない限り行われません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="36fc5-306">新しい項目が類似の項目の近くに配置されることもありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="36fc5-307">追加されたプロジェクト項目のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-307">Returns a list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-308">最初の子は、同じ種類のアイテムまたはする条件を持たない、子がないか、最初の項目グループに、項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="36fc5-309">ベスト エフォートで評価:-すべての項目が展開されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="36fc5-310">実際の評価でことができない場合でも、新しい項目の下の XML で定義されている項目を使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="36fc5-311">このアイテムのみが評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-311">Only this item is evaluated.</span></span> <span data-ttu-id="36fc5-312">依存しているその他の項目には影響しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="36fc5-313">これは、利便性のため理解されているが必ずしものままにして完全に自己の一貫性のある状態でプロジェクトを再評価されるまでです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="36fc5-314">追加する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="36fc5-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="36fc5-315">項目に追加する未評価の Include 属性。</span><span class="sxs-lookup"><span data-stu-id="36fc5-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="36fc5-316">追加するメタデータ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="36fc5-317">メタデータを持つ項目をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="36fc5-318">メタデータは null にすることもできます。この場合、メタデータがないことを示します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="36fc5-319">新しい項目に既存のワイルドカードが一致するかどうかの確認は、その項目が項目グループの最初の項目でない限り行われません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="36fc5-320">新しい項目が類似の項目の近くに配置されることもありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="36fc5-321">追加されたプロジェクト項目のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-321">Returns a list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-322">最初の子は、同じ種類のアイテムまたはする条件を持たない、子がないか、最初の項目グループに、項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="36fc5-323">ベスト エフォートで評価:-すべての項目が展開されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="36fc5-324">実際の評価でことができない場合でも、新しい項目の下の XML で定義されている項目を使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="36fc5-325">このアイテムのみが評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-325">Only this item is evaluated.</span></span> <span data-ttu-id="36fc5-326">依存しているその他の項目は影響はありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="36fc5-327">これは、利便性のため理解されているが必ずしものままにして完全に自己の一貫性のある状態でプロジェクトを再評価されるまでです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-328">評価中に検出されたすべての項目定義メタデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="36fc5-329">評価中に検出されたすべての項目定義メタデータを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-329">Returns all item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="36fc5-330">これには、条件が true に評価されなかった要素や、最後の評価以降に追加された項目定義メタデータは含まれません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-331">項目メタデータは、2 つ目の評価パス中に読み取られます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="36fc5-332">異なり ItemDefinitions プロパティによって返されるメタデータは、このメタデータが順序付けに、項目の種類と同じ名前で後でオーバーライドされたメタデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="36fc5-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-333">評価中に検出されたすべての項目に対する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="36fc5-334">これらは 3 番目の評価パスで読み取られます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="36fc5-335">評価中に検出されたすべての項目に対する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-335">Returns an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="36fc5-336">これらは 3 番目の評価パスで読み取られます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-337">項目プロパティによって返されるそれらのアイテムとは異なり、同じ項目の種類の項目に対してだけでなく順序付けの評価中に発生した他のすべてのアイテムに関してこれら並べ替えられています。</span><span class="sxs-lookup"><span data-stu-id="36fc5-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="36fc5-338">一部のアプリケーションでこの完全な相互順序付けは重大であるとこのようなホストは、このプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="36fc5-339">列挙体では、条件が true に評価されなかったすべての要素は含まれません。 またが含まれて最後の評価以降に追加された項目には。</span><span class="sxs-lookup"><span data-stu-id="36fc5-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-340">評価中に検出されたすべてのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="36fc5-341">評価中に検出されたすべてのプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-341">Returns all properties encountered during evaluation.</span></span> <span data-ttu-id="36fc5-342">これには、条件が true に評価されなかったプロパティや、最後の評価以降に追加されたプロパティは含まれません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-343">これらのプロパティは、最初の評価パス中に読み取られます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="36fc5-344">プロパティがプロパティのプロパティによって返される、これらは順序付けし、異なり、同じ名前で後でオーバーライドされたプロパティを含みます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36fc5-345">既定のターゲットを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36fc5-346">既定のターゲットを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="36fc5-347">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-347">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-348">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-349">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="36fc5-350">ビルド時に使用するロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="36fc5-351">既定のターゲットと指定したロガーを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="36fc5-352">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-352">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-353">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-354">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="36fc5-355">ビルド時に使用するすべてのロガーに対する列挙子。</span><span class="sxs-lookup"><span data-stu-id="36fc5-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="36fc5-356">既定のターゲットと指定した複数のロガーを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="36fc5-357">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-357">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-358">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-359">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="36fc5-360">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="36fc5-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="36fc5-361">指定したターゲットを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="36fc5-362">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-362">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-363">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-364">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="36fc5-365">ビルドするターゲットの配列。</span><span class="sxs-lookup"><span data-stu-id="36fc5-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="36fc5-366">指定した複数のターゲットを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="36fc5-367">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-367">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-368">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-369">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="36fc5-370">ビルド時に使用する複数のロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="36fc5-371">ビルド時に使用する複数のリモート ロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="36fc5-372">既定のターゲットと指定した複数のロガーおよびリモート ロガーを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="36fc5-373">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-373">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-374">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-375">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="36fc5-376">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="36fc5-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="36fc5-377">ビルド時に使用する複数のロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="36fc5-378">指定したターゲットと指定した複数のロガーを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="36fc5-379">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-379">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-380">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-381">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="36fc5-382">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="36fc5-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="36fc5-383">ビルド時に使用する複数のロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="36fc5-384">指定した複数のターゲットと指定した複数のロガーを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="36fc5-385">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-385">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-386">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-387">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="36fc5-388">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="36fc5-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="36fc5-389">ビルド時に使用する複数のロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="36fc5-390">ビルド時に使用する複数のリモート ロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="36fc5-391">指定したターゲットと、指定した複数のロガーおよびリモート ロガーを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="36fc5-392">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-392">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-393">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-394">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="36fc5-395">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="36fc5-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="36fc5-396">ビルド時に使用する複数のロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="36fc5-397">ビルド時に使用する複数のリモート ロガー。</span><span class="sxs-lookup"><span data-stu-id="36fc5-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="36fc5-398">指定した複数のターゲットと、指定した複数のロガーおよびリモート ロガーを使用して、このプロジェクトをビルドします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="36fc5-399">正常に終了した場合は true を返します。それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-399">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-400">設定または仮想アイテム ビルドのため、プロジェクトのインスタンスを明示的に複製を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="36fc5-401">このメソッドは、プロジェクトのオブジェクトを変更しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-402">プロパティ、プロパティ グループ、インポート、および when に設定された条件の評価に使用されるプロパティの、有効なプロパティ値のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="36fc5-403">プロパティ、プロパティ グループ、インポート、および when に設定された条件の評価に使用されるプロパティの、有効なプロパティ値のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-403">Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="36fc5-404">コレクションは標準の形式です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-404">The collection is in canonical form.</span></span> <span data-ttu-id="36fc5-405">エントリの名前は評価されるプロパティの名前を示し、値は有効なプロパティ値のリストになります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-406">たとえば、プロジェクトのプロパティで、次の条件が存在していた場合: Condition="'$(Configuration)&#124;$(Platform)' = = ' デバッグ&#124;x 86'"Condition="'$(Configuration)' 'Release' = ="、テーブルに設定すると {「構成」{"Debug"、"Release"}} {"Platform"、{"x86"}} このコレクションは、プロジェクトで定義されている構成を決定するを Visual Studio によって使用</span><span class="sxs-lookup"><span data-stu-id="36fc5-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36fc5-407">このプロジェクトを基にして、このプロジェクトから完全に分離されたプロジェクト インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-408">個別にビルドするために使用します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-408">Can be used to build independently.</span></span> <span data-ttu-id="36fc5-409">必要に応じて、元のプロジェクトとしてマークされているように変更されていない場合、元のプロジェクトは、インスタンスを作成する前に評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36fc5-410">このプロジェクトを基にして、このプロジェクトから完全に分離されたプロジェクト インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="36fc5-411">プロジェクト インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-411">Returns the project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-412">個別にビルドするために使用します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-412">Can be used to build independently.</span></span> <span data-ttu-id="36fc5-413">必要に応じて、元のプロジェクトとしてマークされているように変更されていない場合、元のプロジェクトは、インスタンスを作成する前に評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="36fc5-414">作成したプロジェクト インスタンスが変更不可かどうか、およびパフォーマンスを向上させるルックアップ テーブルが含まれているかどうかを判定します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="36fc5-415">このプロジェクトを基にして、このプロジェクトから完全に分離されたプロジェクト インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="36fc5-416">プロジェクト インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-416">Returns the project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-417">個別にビルドするために使用します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-417">Can be used to build independently.</span></span> <span data-ttu-id="36fc5-418">必要に応じて、元のプロジェクトとしてマークされているように変更されていない場合、元のプロジェクトは、インスタンスを作成する前に評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-419">このプロジェクトのルート ディレクトリを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="36fc5-420">このプロジェクトのルート ディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-420">Returns the root directory for this project.</span></span> <span data-ttu-id="36fc5-421">ルート ディレクトリが null になることはありません。メモリ内のプロジェクトでは、プロジェクトが読み込まれた時点の現在のディレクトリが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-422"><see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> を一時的に無効にするかどうかを決定するフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-422">Gets or sets a flag the determines whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="36fc5-423">これにより、たとえば、グローバル プロパティを設定してもプロジェクトが要再評価としてマークされないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="36fc5-424"><see langword="MarkDirty" /> を一時的に無効にするかどうかを決定するフラグを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-424">Returns a flag the determines whether <see langword="MarkDirty" /> is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-425">プロジェクトが再評価されるたびにインクリメントされる値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="36fc5-426">インクリメントされた値を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-426">Returns the incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-427">この値は、プロジェクトが再度評価されたかどうかに表示する前の値と比較する必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="36fc5-428">1 つ以上の特定の再評価の増加する可能性がありますので、プロジェクトが再評価された回数を決定するは使用できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="36fc5-429">評価する文字列。</span><span class="sxs-lookup"><span data-stu-id="36fc5-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="36fc5-430">項目とプロパティを展開して、指定された文字列を評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="36fc5-431">文字列は、プロジェクト ファイルの末尾で検出された場合と同じように評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="36fc5-432">評価された文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-432">Returns the evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-433">このメソッドは、ベスト エフォートの評価であるための十分なときに使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-434">プロジェクト ソース ファイルの完全パスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="36fc5-435">プロジェクト ソース ファイルの完全パスを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-435">Returns the full path to the project source file.</span></span> <span data-ttu-id="36fc5-436">プロジェクトがディスクから読み込まれていない場合は、空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-436">Returns an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-437">プロジェクト コレクション内のプロジェクトでこのプロパティの設定、プロジェクトの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-437">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36fc5-438">指定した項目の Include 属性の評価されたエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-438">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="36fc5-439">評価してエスケープする項目。</span><span class="sxs-lookup"><span data-stu-id="36fc5-439">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="36fc5-440">指定した項目の Include 属性の評価されたエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-440">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="36fc5-441">指定した項目の Include 属性の評価されたエスケープ値を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-441">Returns the evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="36fc5-442">評価してエスケープする項目定義。</span><span class="sxs-lookup"><span data-stu-id="36fc5-442">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="36fc5-443">指定した項目定義の Include 属性の評価されたエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-443">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="36fc5-444">Include 属性の値を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-444">Returns the value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="36fc5-445">取得する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="36fc5-445">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="36fc5-446">プロジェクト内の項目のうち、指定した種類のすべての項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-446">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="36fc5-447">該当する項目がない場合は、空のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-447">If there are none, returns an empty list.</span></span> <span data-ttu-id="36fc5-448">このプロジェクト内の項目を変更するには、AddItem または RemoveItem を使用します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-448">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="36fc5-449">プロジェクト内の項目のうち、指定した種類のすべての項目を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-449">Returns all the items in the project of the given item type.</span></span> <span data-ttu-id="36fc5-450">指定した項目名を持つ項目がない場合は、空のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-450">Returns an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-451">このプロジェクト内の項目を変更するには、AddItem または RemoveItem を使用します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-451">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="36fc5-452">評価された Include 属性。</span><span class="sxs-lookup"><span data-stu-id="36fc5-452">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="36fc5-453">評価された指定の Include 属性を持つすべての項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-453">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="36fc5-454">評価された指定の Include 属性を持つすべての項目を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-454">Returns all items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-455">たとえば、このメソッドは、評価された Include 属性"component.cpp"を持つすべての項目を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-455">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="36fc5-456">通常、0 個または 1 つの項目が返されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-456">Typically zero or one items are returned.</span></span> <span data-ttu-id="36fc5-457">ただし、複数の項目を同じパスと異なる項目の種類、または項目の種類が同じでもあります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-457">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="36fc5-458">取得する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="36fc5-458">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="36fc5-459">プロジェクト内の項目のうち、指定した種類のすべての項目を取得します。Condition 属性が true に評価されるかどうかは問いません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-459">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="36fc5-460">これは読み取り専用のリストです。このプロジェクト内の項目を変更するには、AddItem または RemoveItem を使用します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-460">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="36fc5-461">プロジェクト内の項目のうち、指定した種類のすべての項目を返します。Condition 属性が true に評価されるかどうかは問いません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-461">Returns all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-462">これは読み取り専用のリストです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-462">This is a read-only list.</span></span> <span data-ttu-id="36fc5-463">このプロジェクト内の項目を変更するには、AddItem または RemoveItem を使用します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-463">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36fc5-464">"論理プロジェクト" 内のすべての要素に対する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-464">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="36fc5-465">論理プロジェクトとは、元の MSBuild プロジェクト マニフェスト ファイルのすべてのインポートのテキストをインライン展開し、その結果として得られた 1 つの MSBuild ファイルから取得される、評価されていないプロジェクトです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="36fc5-466">"論理プロジェクト" 内のすべての要素に対する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-466">Returns an enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-467">論理のプロジェクトは、元の MSBuild プロジェクトのマニフェスト ファイルのインポートはすべてのテキストのようなインラインの結果である 1 つの MSBuild ファイルから取得した未評価のプロジェクトに定義されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-467">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36fc5-468">指定した項目から、指定した名前を持つメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-468">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="36fc5-469">エスケープするメタデータ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-469">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="36fc5-470">指定したメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-470">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="36fc5-471">指定したメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-471">Gets the escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="36fc5-472">メタデータをエスケープする項目。</span><span class="sxs-lookup"><span data-stu-id="36fc5-472">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="36fc5-473">エスケープするメタデータの名前。</span><span class="sxs-lookup"><span data-stu-id="36fc5-473">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="36fc5-474">指定した項目から、指定した名前を持つメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-474">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="36fc5-475">指定した項目から、指定した名前を持つメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-475">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="36fc5-476">メタデータをエスケープする項目定義。</span><span class="sxs-lookup"><span data-stu-id="36fc5-476">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="36fc5-477">エスケープするメタデータの名前。</span><span class="sxs-lookup"><span data-stu-id="36fc5-477">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="36fc5-478">指定した項目定義から、指定した名前を持つメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-478">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="36fc5-479">指定した項目定義から、指定した名前を持つメタデータのエスケープ値を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-479">Returns the escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36fc5-480">取得するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="36fc5-480">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="36fc5-481">プロジェクト内の指定した名前のプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-481">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="36fc5-482">プロジェクト内の指定した名前のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-482">Returns any property in the project that has the specified name.</span></span> <span data-ttu-id="36fc5-483">その名前のプロパティが存在しない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-483">Returns null if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36fc5-484">値を取得するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="36fc5-484">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="36fc5-485">このプロジェクト内の指定したプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-485">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="36fc5-486">このプロジェクト内の指定したプロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-486">Returns the value of the given property in this project.</span></span> <span data-ttu-id="36fc5-487">その名前のプロパティが存在しない場合は、空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-487">Return an empty string if no property of that name exists.</span></span> <span data-ttu-id="36fc5-488">文字列を返す前に、エスケープ シーケンスが変換されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-488">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-489">空の文字列値を持つプロパティとプロパティはありませんすべてのでは区別されない間でこのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-489">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="36fc5-490">プロジェクトで、すべてのかどうか、プロパティを設定するには、GetProperty(name) を使用します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-490">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="36fc5-491">エスケープするプロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-491">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="36fc5-492">指定したプロパティのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-492">Get the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="36fc5-493">指定したプロパティのエスケープ値を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-493">Returns the escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-494">このプロジェクトの評価に使用されたグローバル プロパティのディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-494">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="36fc5-495">このプロジェクトの評価に使用されたグローバル プロパティのディクショナリを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-495">Returns a dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-496">これは、パブリックに公開された get アクセス操作子、読み取り専用の配信不能 IDictionary に変換する\<, string >。</span><span class="sxs-lookup"><span data-stu-id="36fc5-496">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="36fc5-497">しているダーティになったを簡単に判断するために設定して、グローバル プロパティを削除するが使用して行われます<xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A>と<xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-497">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-498">このプロジェクトの評価に使用されたすべてのファイルのリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-498">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="36fc5-499">このプロジェクトの評価に使用されたすべてのファイルのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-499">Returns a list of all the files that contributed to the evaluation of this project.</span></span>  
  
 <span data-ttu-id="36fc5-500">各項目の名前は、ファイルがインポートされる原因となった Import 要素です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-500">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="36fc5-501">各項目の値は、インポートされたプロジェクトのプロジェクト ルートです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-501">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="36fc5-502">Condition 属性が false に評価された Import 要素は含まれません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-502">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-503">このプロジェクトのプロジェクトのルートは含まれません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-503">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-504">インポートが複数回インポートされた場合に、重複するインポートのリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-504">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="36fc5-505">ただし、評価に使用されたのは最初のインポートだけです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-505">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="36fc5-506">重複するインポートのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-506">Returns a list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-507">このプロジェクトのターゲットとタスクがビルド可能かどうかを選択するプロパティを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-507">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="36fc5-508">このプロジェクトのターゲットとタスクがビルド可能な場合は true、それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-508">Returns true if the targets and tasks of this project can be built; false otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-509">セキュリティのために使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-509">Can be used for security purposes.</span></span> <span data-ttu-id="36fc5-510">新しいプロジェクトの既定値はそれを含む親プロジェクト コレクションと同じ IsBuildEnabled 設定です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-510">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="36fc5-511">IsBuildEnabled が false の場合は、このプロジェクトでビルド メソッドが失敗します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-511">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-512">このプロジェクトが変更されていて、再評価する必要があるかどうかを示すプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-512">Gets a property that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="36fc5-513">このプロジェクトが変更されていて、再評価する必要があるかどうかを示すプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-513">Returns a property that indicates whether this project has been modified so that it must be reevaluated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-514">プロジェクトが変更され、変更を含む、基になるプロジェクト ソース コード ファイルをインポートする場合に再評価する必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-514">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="36fc5-515">プロジェクトが変更も、プロジェクトのツール セットが変更された場合に再評価する必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-515">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-516">このプロジェクト内の項目定義のディクショナリを取得します。項目の種類がキーになります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-516">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="36fc5-517">このプロジェクト内の項目定義のディクショナリを返します。項目の種類がキーになります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-517">Returns a dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-518">このプロジェクト内のすべての項目を、項目の種類ごとに順番に列挙する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-518">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="36fc5-519">このプロジェクト内のすべての項目を、項目の種類ごとに順番に列挙する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-519">Returns an enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-520">このプロジェクト内のすべての項目を、項目の種類ごとに順番に列挙する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-520">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="36fc5-521">このプロジェクト内のすべての項目を、項目の種類ごとに順番に列挙する列挙子を返します。条件が false に評価される項目や、条件が false に評価される項目グループに含まれている項目も列挙されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-521">Returns an enumerator over all items in this project., ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-522">現在の構成でビルドの一部でない場合でも、すべての項目を表示する使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-522">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-523">このプロジェクト内のすべての項目の種類に対する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-523">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="36fc5-524">このプロジェクト内のすべての項目の種類に対する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-524">Returns an enumerator over all item types in this project.</span></span> <span data-ttu-id="36fc5-525">これは、順序付けられたコレクションです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-525">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36fc5-526">このプロジェクトを変更済みとしてマークします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-526">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-527">変更として自動的にプロジェクトに影響するすべての編集マークするため、明示的に、このメソッドを呼び出す必要はほとんどありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-527">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="36fc5-528">場合によっては、ただし、このメソッド呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-528">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="36fc5-529">たとえば、プロジェクトには、ディスク上に存在するファイルに条件が依存 Import 要素があります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-529">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="36fc5-530">場合は、評価時にそのファイルが存在しないため、変更項目として、プロジェクトを明示的に設定する必要がありますし、評価した後で作成されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-530">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="36fc5-531"><xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A>メソッドはこのプロパティを使用して、評価版が必要かを判断します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-531">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-532">このプロジェクトを含むプロジェクト コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-532">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="36fc5-533">このプロジェクトを含むプロジェクト コレクションを返します。null になることはありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-533">Returns the project collection which contains this project, which is never null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-534">発生元ファイルの場所。その中の特定のコンテンツではありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-534">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="36fc5-535">ファイルに名前が付けられなかった場合、これは空の場所です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-535">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="36fc5-536">これは、場所がないことの有効な例です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-536">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="36fc5-537">発生元ファイルの場所または空の場所を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-537">Returns the originating file location or an empty location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-538">このプロジェクト内のすべてのプロパティに対する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-538">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="36fc5-539">これは、順序付けられていないコレクションです。</span><span class="sxs-lookup"><span data-stu-id="36fc5-539">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="36fc5-540">このプロジェクト内のすべてのプロパティに対する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-540">Returns an enumerator over all properties in this project.</span></span> <span data-ttu-id="36fc5-541">プロパティは出現順に評価されるため、このコレクションは順序付けされません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-541">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36fc5-542">プロジェクトを再評価して変更を取り込みます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-542">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-543">プロジェクトが変更済みとしてマークされている場合にのみ再評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-543">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="36fc5-544">再評価には、プロジェクトのソース コードに加えられたすべての変更が組み込まれています。</span><span class="sxs-lookup"><span data-stu-id="36fc5-544">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="36fc5-545">評価に失敗した場合は、InvalidProjectFileException をスローします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-545">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36fc5-546">削除するグローバル プロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="36fc5-546">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="36fc5-547">グローバル プロパティを削除し、プロジェクトを変更済みとしてマークします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-547">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="36fc5-548">グローバル プロパティの値が設定された場合は、true を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-548">Returns true if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="36fc5-549">削除する項目。</span><span class="sxs-lookup"><span data-stu-id="36fc5-549">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="36fc5-550">プロジェクトから項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-550">Removes an item from the project.</span></span> <span data-ttu-id="36fc5-551">削除する項目は、プロジェクト内に存在している必要があります。また、インポートされたファイルに基づく項目でないことが必要です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-551">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="36fc5-552">項目がこの評価されたプロジェクトに存在する場合は true、それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-552">Returns true if the item is present in this evaluated project; otherwise false.</span></span> <span data-ttu-id="36fc5-553">このメソッドは、要求された項目が存在しないと例外をスローするため、通常は true が返されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-553">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="36fc5-554">ただし、項目が ItemsIgnoringCondition コレクションにのみ存在する場合は、false が返されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-554">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-555">項目を含む項目グループが空になった場合にも削除されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-555">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="36fc5-556">ワイルドカードまたはセミコロンで区切られた式から項目を生成する場合、式は最初に複数のアイテムに展開されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-556">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="36fc5-557">プロジェクトを更新するが再評価されるまでそれ以上の評価は行われません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-557">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="36fc5-558">たとえば場合の項目"i"の種類が削除、"j"から評価される"@(i)"再評価されるまでは変更されません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-558">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="36fc5-559">削除する項目。</span><span class="sxs-lookup"><span data-stu-id="36fc5-559">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="36fc5-560">指定したすべての項目をプロジェクトから削除します。ただし、インポートされたプロジェクトに基づいている項目は削除されません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-560">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-561">インポートされたプロジェクトから項目を生成する場合は単にスキップします。</span><span class="sxs-lookup"><span data-stu-id="36fc5-561">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="36fc5-562">削除するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fc5-562">The property to remove.</span></span></param>
        <summary><span data-ttu-id="36fc5-563">プロジェクトからプロパティを削除します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-563">Removes an property from the project.</span></span> <span data-ttu-id="36fc5-564">削除するプロパティは、プロジェクト内に存在している必要があります。また、インポートされたファイルに基づくプロパティでないことが必要です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-564">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="36fc5-565">プロパティがこの評価されたプロジェクトに存在する場合は true、それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-565">Returns true if the property is present in this evaluated project; otherwise false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-566">プロパティを含むプロパティ グループが空になった場合にも削除されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-566">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="36fc5-567">プロジェクトを更新するが再評価されるまでそれ以上の評価は行われません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-567">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="36fc5-568">たとえば、"p"が削除された場合は評価は「$(p)」から"q"が再評価されるまで変更されません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-568">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36fc5-569">プロジェクトが変更されている場合に、既定の文字エンコーディングを使用してプロジェクトをファイル システムに保存します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-569">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36fc5-570">プロジェクトが変更されている場合に、既定の文字エンコーディングを使用してプロジェクトをファイル システムに保存します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-570">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="36fc5-571">プロジェクトを保存するテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="36fc5-571">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="36fc5-572">プロジェクトが変更されているかどうかに関係なく、指定したテキスト ライターにプロジェクトを保存します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-572">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="36fc5-573">テキスト ライターの文字エンコーディングが使用され、プロジェクトは未変更としてマークされます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-573">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="36fc5-574">プロジェクト ソース コードのパス。</span><span class="sxs-lookup"><span data-stu-id="36fc5-574">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="36fc5-575">プロジェクトが変更されている場合、またはプロジェクト ソース コードのパスを変更する場合に、既定の文字エンコーディングを使用してプロジェクトをファイル システムに保存します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-575">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="36fc5-576">プロジェクトの保存に使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="36fc5-576">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="36fc5-577">プロジェクトが変更されている場合に、指定した文字エンコーディングを使用してプロジェクトをファイル システムに保存します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-577">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="36fc5-578">プロジェクト ソース コードのパス。</span><span class="sxs-lookup"><span data-stu-id="36fc5-578">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="36fc5-579">プロジェクトの保存に使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="36fc5-579">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="36fc5-580">プロジェクトが変更されている場合、またはプロジェクト ソース コードのパスを変更する場合に、指定した文字エンコーディングを使用してプロジェクトをファイル システムに保存します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-580">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="36fc5-581">プロジェクト ファイルを保存するライター。</span><span class="sxs-lookup"><span data-stu-id="36fc5-581">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="36fc5-582">"論理" (つまり "プリプロセス済み" の) プロジェクト ファイルを保存します。このプロジェクト ファイルには、インポートされたすべてのファイルが、単一のファイルの一部となる形で含められます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-582">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36fc5-583">設定するグローバル プロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="36fc5-583">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="36fc5-584">グローバル プロパティの新しい値。</span><span class="sxs-lookup"><span data-stu-id="36fc5-584">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="36fc5-585">プロジェクトが評価された後にグローバル プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-585">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="36fc5-586">値が変更されると、プロジェクトは要再評価としてマークされます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-586">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="36fc5-587">値が変更された場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-587">Returns <see langword="true" /> if the value changes, otherwise returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="36fc5-588">設定するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="36fc5-588">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="36fc5-589">プロパティの新しい未評価の値。</span><span class="sxs-lookup"><span data-stu-id="36fc5-589">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="36fc5-590">指定した名前と値のプロパティをプロジェクトに設定または追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-590">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="36fc5-591">同じ名前のプロパティの値は、インポートされたファイルに基づいている場合を除いて上書きされます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-591">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="36fc5-592">プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-592">Returns the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-593">指定した名前のプロパティが存在しない場合は、インポートされたファイル外の発生しない限り、指定した名前をそのリング自体またはそのプロパティ グループの条件を持たない最後の既存のプロパティを更新します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-593">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="36fc5-594">それ以外の場合、最初のプロパティ グループ、条件がない最後既存のプロパティ グループ、プロジェクトの開始時に他の後に必要な場合は、プロパティ グループを作成する新しいプロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-594">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="36fc5-595">評価は、ベスト エフォートの原則で行われます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-595">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="36fc5-596">新しいプロパティに続いて、プロジェクトのソースで定義されているプロパティは、評価のために使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-596">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="36fc5-597">このプロパティのみが評価されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-597">Only this property is evaluated.</span></span> <span data-ttu-id="36fc5-598">依存しているその他のプロパティは影響しません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-598">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-599">ReevaluateIfNecessary を一時的に無効にするかどうかを決定するフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-599">Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="36fc5-600">これは、ホストでプロジェクトに対して多数の読み書きを行う必要があり、一時的に正確性よりもパフォーマンスを優先する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-600">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="36fc5-601">ReevaluateIfNecessary を一時的に無効にするかどうかを決定するフラグを返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-601">Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-602">SubToolsetVersion 属性の値を取得します (ある場合)。</span><span class="sxs-lookup"><span data-stu-id="36fc5-602">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="36fc5-603">この値は、このプロジェクトのツールセットのプロパティを特定するために、ToolsVersion 属性の値と組み合わされていました。</span><span class="sxs-lookup"><span data-stu-id="36fc5-603">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="36fc5-604">SubToolsetVersion 属性の値を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-604">Returns the SubToolsetVersion attribute value.</span></span> <span data-ttu-id="36fc5-605">この属性が存在しない場合は、空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-605">Returns an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-606">このプロジェクト内のすべてのターゲットのディクショナリを取得します。ターゲット名がキーになります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-606">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="36fc5-607">このプロジェクト内のすべてのターゲットのディクショナリを返します。ターゲット名がキーになります。</span><span class="sxs-lookup"><span data-stu-id="36fc5-607">Returns a dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="36fc5-608">このコレクションには、オーバーライドされたターゲットは含まれません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-608">Overridden targets are not included in this collection.</span></span> <span data-ttu-id="36fc5-609">このディクショナリは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-609">This dictionary is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-610">このプロジェクトの評価時に使用されたツール バージョンがあれば取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-610">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="36fc5-611">このプロジェクトの評価時に使用されたツール バージョンがあれば取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-611">Gets the tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-612">コンス トラクターによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="36fc5-612">Set by the constructor.</span></span> <span data-ttu-id="36fc5-613">これは必ずしもプロジェクト タグでは、ツールのバージョンと同じです。可能性がありますが外部から指定されて、たとえばコマンド ラインで/tv スイッチを使用しています。</span><span class="sxs-lookup"><span data-stu-id="36fc5-613">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="36fc5-614">プロジェクト タグの実際のツール バージョンをから取得できる<xref:Microsoft.Build.Evaluation.Project.Xml%2A>です。</span><span class="sxs-lookup"><span data-stu-id="36fc5-614">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="36fc5-615">プロジェクトを作成した後、ツール バージョンを変更できません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-615">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36fc5-616">このプロジェクトに関連付けられているルート プロジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-616">Gets the root project associated with this project.</span></span> <span data-ttu-id="36fc5-617">null になることはありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-617">Can never be null</span></span></summary>
        <value><span data-ttu-id="36fc5-618">このプロジェクトに関連付けられているルート プロジェクトを返します。null になることはありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-618">Returns the root project associated with this project, which can never be null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fc5-619">このプロパティを設定する方法はありません。</span><span class="sxs-lookup"><span data-stu-id="36fc5-619">There is no way to set this property.</span></span> <span data-ttu-id="36fc5-620">新しいプロジェクトのルートがある場合は、新しいプロジェクトに評価します。</span><span class="sxs-lookup"><span data-stu-id="36fc5-620">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>