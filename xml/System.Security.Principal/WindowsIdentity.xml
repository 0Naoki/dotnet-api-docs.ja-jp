<Type Name="WindowsIdentity" FullName="System.Security.Principal.WindowsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f851e11b9f4d68ee549248393d4930433485f88" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsIdentity extends System.Security.Claims.ClaimsIdentity implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsIdentity&#xA;Inherits ClaimsIdentity&#xA;Implements IDeserializationCallback, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsIdentity : System::Security::Claims::ClaimsIdentity, IDisposable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsIdentity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="32c67-101">Windows ユーザーを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="32c67-101">Represents a Windows user.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-102">呼び出す、<xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A>メソッドを作成、<xref:System.Security.Principal.WindowsIdentity>を現在のユーザーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="32c67-102">Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="32c67-103">この型は、<xref:System.IDisposable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="32c67-104">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="32c67-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="32c67-105">型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="32c67-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="32c67-106">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="32c67-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="32c67-107">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="32c67-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-108">次の例は、のメンバーの使用を示しています。<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-108">The following example shows the use of members of <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  <span data-ttu-id="32c67-109">Windows を取得する方法を示す例については、アンマネージ Win32 への呼び出しでトークン アカウント`LogonUser`関数、および別のユーザーを偽装トークンを使用して参照してください、<xref:System.Security.Principal.WindowsImpersonationContext>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-109">For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 `LogonUser` function, and use that token to impersonate another user, see the <xref:System.Security.Principal.WindowsImpersonationContext> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#1)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-110">
            <see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-110">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="32c67-111">コードが実行されている対象ユーザーのアカウント トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-111">The account token for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-112">指定した Windows アカウント トークンによって表されるユーザーを表す、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-112">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-113">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Security.Principal.WindowsIdentity>です。</span><span class="sxs-lookup"><span data-stu-id="32c67-113">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="32c67-114">プロパティ</span><span class="sxs-lookup"><span data-stu-id="32c67-114">Property</span></span>|<span data-ttu-id="32c67-115">初期値</span><span class="sxs-lookup"><span data-stu-id="32c67-115">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
> [!NOTE]
>  <span data-ttu-id="32c67-116">によって表されるトークンを取得する`userToken`Win32 API などのアンマネージ コードを呼び出すことによって`LogonUser`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-116">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="32c67-117">常にリリース`userToken`Win32 API を呼び出すことによって`CloseHandle`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-117">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="32c67-118">アンマネージ コードの呼び出しの詳細については、次を参照してください。[アンマネージ DLL 関数の使用](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)です。</span><span class="sxs-lookup"><span data-stu-id="32c67-118">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="32c67-119">
            <paramref name="userToken" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-119">
              <paramref name="userToken" /> is 0.</span>
          </span>
          <span data-ttu-id="32c67-120">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-120">-or-</span>
          </span>
          <span data-ttu-id="32c67-121">
            <paramref name="userToken" /> は、複製され、偽装に対して無効になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-121">
              <paramref name="userToken" /> is duplicated and invalid for impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-122">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-122">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="32c67-123">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-123">-or-</span>
          </span>
          <span data-ttu-id="32c67-124">Win32 エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-124">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-125">アンマネージ コードへのアクセスに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-125">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="32c67-126">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (identity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WindowsIdentity(System::Security::Principal::WindowsIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="32c67-127">
            <see cref="T:System.Security.Principal.WindowsIdentity" /> の新しいインスタンスの生成元となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-127">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsIdentity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-128">指定した <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを使用して、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-128">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName">
          <span data-ttu-id="32c67-129">コードが実行されている対象ユーザーの UPN。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-129">The UPN for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-130">指定した UPN (User Principal Name) で表されるユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-130">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-131">UPN 形式には*username*@*domainname*.com、つまり、電子メール アドレス。</span><span class="sxs-lookup"><span data-stu-id="32c67-131">A UPN has the format *username*@*domainname*.com, in other words, an email address.</span></span> <span data-ttu-id="32c67-132">識別された UPN `sUserPrincipalName` Win32 API を通じてそのユーザーのトークンの取得に使用される`LsaLogonUser`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-132">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="32c67-133">さらにそのトークンは、ユーザーの識別に使用されます。</span><span class="sxs-lookup"><span data-stu-id="32c67-133">In turn that token is used to identify the user.</span></span> <span data-ttu-id="32c67-134">例外は、指定された UPN を使用してログオンすることができないのために返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="32c67-134">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32c67-135">このコンス トラクターは Windows Server 2003 またはそれ以降のドメインに参加しているコンピューターでのみ使用するものです。</span><span class="sxs-lookup"><span data-stu-id="32c67-135">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="32c67-136">以前のドメインの種類、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="32c67-136">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="32c67-137">この制限は、このコンス トラクターを使用しているため、 [KERB_S4U_LOGON 構造](http://go.microsoft.com/fwlink/?LinkId=143533)、最初を Windows Server 2003 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="32c67-137">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="32c67-138">Windows は、Windows NT ステータス コード STATUS_ACCESS_DENIED を返しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-138">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="32c67-139">使用できるメモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-139">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-140">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-140">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="32c67-141">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-141">-or-</span>
          </span>
          <span data-ttu-id="32c67-142">コンピューターは Windows 2003 以降のドメインに接続されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-142">The computer is not attached to a Windows 2003 or later domain.</span>
          </span>
          <span data-ttu-id="32c67-143">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-143">-or-</span>
          </span>
          <span data-ttu-id="32c67-144">コンピューターは Windows 2003 以降を実行していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-144">The computer is not running Windows 2003 or later.</span>
          </span>
          <span data-ttu-id="32c67-145">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-145">-or-</span>
          </span>
          <span data-ttu-id="32c67-146">ユーザーは、コンピューターが接続されているドメインのメンバーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-146">The user is not a member of the domain the computer is attached to.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-147">アンマネージ コードへのアクセスに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-147">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="32c67-148">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-148">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="32c67-149">コードが実行されている対象ユーザーのアカウント トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-149">The account token for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="32c67-150">(参照専用。)ユーザーを識別するために使用する認証の種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-150">(Informational use only.) The type of authentication used to identify the user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-151">指定した Windows アカウント トークンと指定した認証の種類によって表されるユーザーを表す、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-151">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token and the specified authentication type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-152">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Security.Principal.WindowsIdentity>です。</span><span class="sxs-lookup"><span data-stu-id="32c67-152">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="32c67-153">プロパティ</span><span class="sxs-lookup"><span data-stu-id="32c67-153">Property</span></span>|<span data-ttu-id="32c67-154">初期値</span><span class="sxs-lookup"><span data-stu-id="32c67-154">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="32c67-155">値、`type`パラメーターが設定に使用される、<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="32c67-155">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="32c67-156">場合`type`は`null`、セキュリティ システム セット<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>に`Negotiate`Windows Vista および Windows オペレーティング システムの以降のバージョンで`Kerberos`以前のバージョンの Windows オペレーティング システムにします。</span><span class="sxs-lookup"><span data-stu-id="32c67-156">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="32c67-157">セキュリティ システムがこの値を使用していません。これは情報のみを使用します。</span><span class="sxs-lookup"><span data-stu-id="32c67-157">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32c67-158">によって表されるトークンを取得する`userToken`Win32 API などのアンマネージ コードを呼び出すことによって`LogonUser`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-158">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="32c67-159">常にリリース`userToken`Win32 API を呼び出すことによって`CloseHandle`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-159">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="32c67-160">アンマネージ コードの呼び出しの詳細については、次を参照してください。[アンマネージ DLL 関数の使用](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)です。</span><span class="sxs-lookup"><span data-stu-id="32c67-160">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-161">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A>の新しいインスタンスを作成するコンス トラクター、<xref:System.Security.Principal.WindowsIdentity>指定した Windows アカウント トークンと、指定した認証の種類によって表されるユーザーのクラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-161">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the  <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token and the specified authentication type.</span></span> <span data-ttu-id="32c67-162">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-162">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#4)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#4)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="32c67-163">
            <paramref name="userToken" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-163">
              <paramref name="userToken" /> is 0.</span>
          </span>
          <span data-ttu-id="32c67-164">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-164">-or-</span>
          </span>
          <span data-ttu-id="32c67-165">
            <paramref name="userToken" /> は、複製され、偽装に対して無効になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-165">
              <paramref name="userToken" /> is duplicated and invalid for impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-166">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-166">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="32c67-167">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-167">-or-</span>
          </span>
          <span data-ttu-id="32c67-168">Win32 エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-168">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-169">アンマネージ コードへのアクセスに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-169">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="32c67-170">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-170">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="32c67-171">ユーザーのアカウント情報を格納するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-171">The object containing the account information for the user.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="32c67-172">ストリーム特性を示すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-172">An object that indicates the stream characteristics.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-173">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> ストリーム内の情報で表されるユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-173">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by information in a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="32c67-174">信頼できないデータをこのメソッドを呼び出すと、セキュリティ上のリスクです。</span><span class="sxs-lookup"><span data-stu-id="32c67-174">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="32c67-175">このメソッドでは、信頼されたデータだけです。</span><span class="sxs-lookup"><span data-stu-id="32c67-175">Call this method only with trusted data.</span></span> <span data-ttu-id="32c67-176">詳細については、次を参照してください。[データ検証](https://www.owasp.org/index.php/Data_Validation)です。</span><span class="sxs-lookup"><span data-stu-id="32c67-176">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="32c67-177">
            <see cref="T:System.Security.Principal.WindowsIdentity" /> はプロセス間でシリアル化することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-177">A <see cref="T:System.Security.Principal.WindowsIdentity" /> cannot be serialized across processes.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-178">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-178">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="32c67-179">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-179">-or-</span>
          </span>
          <span data-ttu-id="32c67-180">Win32 エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-180">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-181">プリンシパル オブジェクトを操作する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-181">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="32c67-182">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName, System::String ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName">
          <span data-ttu-id="32c67-183">コードが実行されている対象ユーザーの UPN。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-183">The UPN for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="32c67-184">(参照専用。)ユーザーを識別するために使用する認証の種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-184">(Informational use only.) The type of authentication used to identify the user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-185">指定した UPN (User Principal Name) と指定した認証の種類で表されるユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-185">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-186">値、`type`パラメーターが設定に使用される、<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="32c67-186">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="32c67-187">場合`type`は`null`、セキュリティ システム セット<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>に`Negotiate`Windows Vista および Windows オペレーティング システムの以降のバージョンで`Kerberos`以前のバージョンの Windows オペレーティング システムにします。</span><span class="sxs-lookup"><span data-stu-id="32c67-187">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="32c67-188">セキュリティ システムがこの値を使用していません。これは情報のみを使用します。</span><span class="sxs-lookup"><span data-stu-id="32c67-188">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="32c67-189">識別された UPN `sUserPrincipalName` Win32 API を通じてそのユーザーのトークンの取得に使用される`LsaLogonUser`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-189">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="32c67-190">さらにそのトークンは、ユーザーの識別に使用されます。</span><span class="sxs-lookup"><span data-stu-id="32c67-190">In turn that token is used to identify the user.</span></span> <span data-ttu-id="32c67-191">例外は、指定された UPN を使用してログオンすることができないのために返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="32c67-191">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32c67-192">このコンス トラクターは Windows Server 2003 またはそれ以降のドメインに参加しているコンピューターでのみ使用するものです。</span><span class="sxs-lookup"><span data-stu-id="32c67-192">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="32c67-193">以前のドメインの種類、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="32c67-193">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="32c67-194">この制限は、このコンス トラクターを使用しているため、 [KERB_S4U_LOGON 構造](http://go.microsoft.com/fwlink/?LinkId=143533)、最初を Windows Server 2003 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="32c67-194">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="32c67-195">Windows は、Windows NT ステータス コード STATUS_ACCESS_DENIED を返しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-195">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="32c67-196">使用できるメモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-196">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-197">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-197">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="32c67-198">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-198">-or-</span>
          </span>
          <span data-ttu-id="32c67-199">コンピューターは Windows 2003 以降のドメインに接続されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-199">The computer is not attached to a Windows 2003 or later domain.</span>
          </span>
          <span data-ttu-id="32c67-200">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-200">-or-</span>
          </span>
          <span data-ttu-id="32c67-201">コンピューターは Windows 2003 以降を実行していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-201">The computer is not running Windows 2003 or later.</span>
          </span>
          <span data-ttu-id="32c67-202">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-202">-or-</span>
          </span>
          <span data-ttu-id="32c67-203">ユーザーは、コンピューターが接続されているドメインのメンバーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-203">The user is not a member of the domain the computer is attached to.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-204">アンマネージ コードへのアクセスに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-204">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="32c67-205">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-205">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="32c67-206">コードが実行されている対象ユーザーのアカウント トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-206">The account token for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="32c67-207">(参照専用。)ユーザーを識別するために使用する認証の種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-207">(Informational use only.) The type of authentication used to identify the user.</span>
          </span>
        </param>
        <param name="acctType">
          <span data-ttu-id="32c67-208">列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-208">One of the enumeration values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-209">指定した Windows アカウント トークン、指定した認証の種類、および指定した Windows アカウントの種類によって表されるユーザーを表す、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-209">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-210">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Security.Principal.WindowsIdentity>です。</span><span class="sxs-lookup"><span data-stu-id="32c67-210">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="32c67-211">プロパティ</span><span class="sxs-lookup"><span data-stu-id="32c67-211">Property</span></span>|<span data-ttu-id="32c67-212">初期値</span><span class="sxs-lookup"><span data-stu-id="32c67-212">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="32c67-213">値、`type`パラメーターが設定に使用される、<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="32c67-213">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="32c67-214">場合`type`は`null`、セキュリティ システム セット<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>に`Negotiate`Windows Vista および Windows オペレーティング システムの以降のバージョンで`Kerberos`以前のバージョンの Windows オペレーティング システムにします。</span><span class="sxs-lookup"><span data-stu-id="32c67-214">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="32c67-215">セキュリティ システムがこの値を使用していません。これは情報のみを使用します。</span><span class="sxs-lookup"><span data-stu-id="32c67-215">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32c67-216">によって表されるトークンを取得する`userToken`Win32 API などのアンマネージ コードを呼び出すことによって`LogonUser`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-216">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="32c67-217">常にリリース`userToken`Win32 API を呼び出すことによって`CloseHandle`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-217">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="32c67-218">アンマネージ コードの呼び出しの詳細については、次を参照してください。[アンマネージ DLL 関数の使用](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)です。</span><span class="sxs-lookup"><span data-stu-id="32c67-218">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-219">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A>の新しいインスタンスを作成するコンス トラクター、<xref:System.Security.Principal.WindowsIdentity>指定した Windows アカウント トークン、指定した認証の種類、および指定した Windows アカウントの種類によって表されるユーザーのクラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-219">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span> <span data-ttu-id="32c67-220">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-220">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#7)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#7)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="32c67-221">
            <paramref name="userToken" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-221">
              <paramref name="userToken" /> is 0.</span>
          </span>
          <span data-ttu-id="32c67-222">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-222">-or-</span>
          </span>
          <span data-ttu-id="32c67-223">
            <paramref name="userToken" /> は、複製され、偽装に対して無効になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-223">
              <paramref name="userToken" /> is duplicated and invalid for impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-224">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-224">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="32c67-225">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-225">-or-</span>
          </span>
          <span data-ttu-id="32c67-226">Win32 エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-226">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-227">アンマネージ コードへのアクセスに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-227">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="32c67-228">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-228">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="32c67-229">コードが実行されている対象ユーザーのアカウント トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-229">The account token for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="32c67-230">(参照専用。)ユーザーを識別するために使用する認証の種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-230">(Informational use only.) The type of authentication used to identify the user.</span>
          </span>
        </param>
        <param name="acctType">
          <span data-ttu-id="32c67-231">列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-231">One of the enumeration values.</span>
          </span>
        </param>
        <param name="isAuthenticated">
          <span data-ttu-id="32c67-232">ユーザーが認証されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-232">
              <see langword="true" /> to indicate that the user is authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-233">指定した Windows アカウント トークン、指定した認証の種類、指定した Windows アカウントの種類、および指定した認証ステータスによって表されるユーザーを表す、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-233">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-234">値、`type`パラメーターが設定に使用される、<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="32c67-234">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="32c67-235">場合`type`は`null`、セキュリティ システム セット<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>に`Negotiate`Windows Vista および Windows オペレーティング システムの以降のバージョンで`Kerberos`以前のバージョンの Windows オペレーティング システムにします。</span><span class="sxs-lookup"><span data-stu-id="32c67-235">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="32c67-236">セキュリティ システムがこの値を使用していません。これは情報のみを使用します。</span><span class="sxs-lookup"><span data-stu-id="32c67-236">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="32c67-237">によって表されるトークンを取得する`userToken`Win32 API などのアンマネージ コードを呼び出すことによって`LogonUser`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-237">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="32c67-238">常にリリース`userToken`Win32 API を呼び出すことによって`CloseHandle`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-238">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="32c67-239">アンマネージ コードの呼び出しの詳細については、次を参照してください。[アンマネージ DLL 関数の使用](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)です。</span><span class="sxs-lookup"><span data-stu-id="32c67-239">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-240">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A>の新しいインスタンスを作成するコンス トラクター、<xref:System.Security.Principal.WindowsIdentity>指定した Windows アカウント トークン、指定した認証の種類、指定した Windows アカウントの種類によって表されるユーザー クラスおよび認証の状態を指定します。</span><span class="sxs-lookup"><span data-stu-id="32c67-240">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span> <span data-ttu-id="32c67-241">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-241">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#17)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#17)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="32c67-242">
            <paramref name="userToken" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-242">
              <paramref name="userToken" /> is 0.</span>
          </span>
          <span data-ttu-id="32c67-243">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-243">-or-</span>
          </span>
          <span data-ttu-id="32c67-244">
            <paramref name="userToken" /> は、複製され、偽装に対して無効になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-244">
              <paramref name="userToken" /> is duplicated and invalid for impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-245">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-245">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="32c67-246">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-246">-or-</span>
          </span>
          <span data-ttu-id="32c67-247">Win32 エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-247">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-248">アンマネージ コードへのアクセスに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-248">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="32c67-249">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-249">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessToken As SafeAccessTokenHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ AccessToken { Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeAccessTokenHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-250">この <see cref="T:System.Security.Principal.WindowsIdentity" /> インスタンスのこの <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-250">Gets this <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> for this <see cref="T:System.Security.Principal.WindowsIdentity" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-251">
            <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-251">Returns a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public override sealed string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-252">ユーザーを識別するために使用する認証の種類を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-252">Gets the type of authentication used to identify the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-253">ユーザーを識別するために使用する認証の種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-253">The type of authentication used to identify the user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-254">このプロパティは参照用です。セキュリティ システムでは使用されません。</span><span class="sxs-lookup"><span data-stu-id="32c67-254">This property is informational; it is not used by the security system.</span></span> <span data-ttu-id="32c67-255">このプロパティの既定値は、Windows Vista 以降のバージョンの Windows オペレーティング システムで`Negotiate`顧客が構成したセキュリティ ポリシーに基づいて最適なセキュリティ サポート プロバイダー (SSP) を選択します。</span><span class="sxs-lookup"><span data-stu-id="32c67-255">On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy.</span></span> <span data-ttu-id="32c67-256">以前のバージョンの Windows オペレーティング システムの既定のプロパティの値は`Kerberos`します。</span><span class="sxs-lookup"><span data-stu-id="32c67-256">The default property value for earlier versions of the Windows operating system is `Kerberos`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="32c67-257">Windows は、Windows NT ステータス コード STATUS_ACCESS_DENIED を返しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-257">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="32c67-258">使用できるメモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-258">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-259">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-259">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="32c67-260">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-260">-or-</span>
          </span>
          <span data-ttu-id="32c67-261">コンピューターは Windows 2003 以降のドメインに接続されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-261">The computer is not attached to a Windows 2003 or later domain.</span>
          </span>
          <span data-ttu-id="32c67-262">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-262">-or-</span>
          </span>
          <span data-ttu-id="32c67-263">コンピューターは Windows 2003 以降を実行していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-263">The computer is not running Windows 2003 or later.</span>
          </span>
          <span data-ttu-id="32c67-264">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-264">-or-</span>
          </span>
          <span data-ttu-id="32c67-265">ユーザーは、コンピューターが接続されているドメインのメンバーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-265">The user is not a member of the domain the computer is attached to.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__95))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-266">この Windows ID によって表されるユーザーのすべてのクレームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-266">Gets all claims for the user represented by this Windows identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-267">この <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトに対するクレームのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-267">A collection of claims for this <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32c67-268">現在のインスタンスのコピーである新しいオブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-268">Creates a new  object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32c67-269">現在のインスタンスのコピー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-269">A copy of the current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-270">既定の <see cref="T:System.Security.Claims.ClaimsIdentity" /> 発行元の名前を識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-270">Identifies the name of the default <see cref="T:System.Security.Claims.ClaimsIdentity" /> issuer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-271">
            <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> プロパティのキーを持つクレームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-271">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-272">
            <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> プロパティ キーを持つクレームのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-272">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-273">
            <see cref="T:System.Security.Principal.WindowsIdentity" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-273">Releases the resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32c67-274">
            <see cref="T:System.Security.Principal.WindowsIdentity" /> によって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-274">Releases all resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-275"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> を使い終わったら <xref:System.Security.Principal.WindowsIdentity> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="32c67-275">Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="32c67-276"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> メソッドによって、<xref:System.Security.Principal.WindowsIdentity> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="32c67-276">The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state.</span></span> <span data-ttu-id="32c67-277">呼び出した後<xref:System.Security.Principal.WindowsIdentity.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Security.Principal.WindowsIdentity>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Security.Principal.WindowsIdentity>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="32c67-277">After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying.</span></span> <span data-ttu-id="32c67-278">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="32c67-278">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32c67-279"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Security.Principal.WindowsIdentity> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="32c67-279">Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="32c67-280">そうしないと、ガベージ コレクターが <xref:System.Security.Principal.WindowsIdentity> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="32c67-280">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="32c67-281">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-281">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-282">
            <see cref="T:System.Security.Principal.WindowsIdentity" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-282">Releases the unmanaged resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-283">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="32c67-283">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="32c67-284">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="32c67-284">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="32c67-285"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="32c67-285"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="32c67-286">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Principal.WindowsIdentity> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="32c67-286">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references.</span></span> <span data-ttu-id="32c67-287">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="32c67-287">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="32c67-288">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="32c67-288">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="32c67-289">オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="32c67-289">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="32c67-290">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="32c67-290">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="32c67-291">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="32c67-291">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAnonymous">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetAnonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetAnonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAnonymous () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetAnonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32c67-292">匿名ユーザーを表すために、コード内で sentinel 値として使用できる <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-292">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that you can use as a sentinel value in your code to represent an anonymous user.</span>
          </span>
          <span data-ttu-id="32c67-293">プロパティ値は、Windows オペレーティング システムが使用する組み込み匿名 ID を表しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-293">The property value does not represent the built-in anonymous identity used by the Windows operating system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32c67-294">匿名のユーザーを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-294">An object that represents an anonymous user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-295">このプロパティは空白を返します<xref:System.Security.Principal.WindowsIdentity>オブジェクト匿名として操作を処理することができます。</span><span class="sxs-lookup"><span data-stu-id="32c67-295">This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous.</span></span> <span data-ttu-id="32c67-296">プロパティ値は、Windows の匿名ユーザーに対応していないと、なりすましに使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="32c67-296">The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</span></span> <span data-ttu-id="32c67-297">また、このプロパティによって返される id が static 以外ではないことに注意してください。各呼び出し<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>別の匿名 id を返します。</span><span class="sxs-lookup"><span data-stu-id="32c67-297">Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.</span></span>  
  
 <span data-ttu-id="32c67-298">使用することができます、<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>からの戻り値を検出するためにプロパティ<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>です。</span><span class="sxs-lookup"><span data-stu-id="32c67-298">You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>.</span></span> <span data-ttu-id="32c67-299">ただし、 <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> Windows 匿名の id と、このメソッドによって返された匿名の id の両方を検出します。</span><span class="sxs-lookup"><span data-stu-id="32c67-299">However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method.</span></span> <span data-ttu-id="32c67-300">後者の id を使用するのには、キャッシュ、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>戻り値ではなく、<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="32c67-300">To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-301">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>を返すメソッドを<xref:System.Security.Principal.WindowsIdentity>匿名の Windows ユーザーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="32c67-301">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents an anonymous Windows user.</span></span> <span data-ttu-id="32c67-302">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-302">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#15)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#15)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrent">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-303">現在の Windows ユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-303">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32c67-304">現在の Windows ユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-304">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32c67-305">現在のユーザーを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-305">An object that represents the current user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32c67-306">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A>を返すメソッドを<xref:System.Security.Principal.WindowsIdentity>を現在の Windows ユーザーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="32c67-306">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents the current Windows user.</span></span> <span data-ttu-id="32c67-307">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-307">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#13)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#13)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-308">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-308">The caller does not have the correct permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-309">プリンシパル オブジェクトを操作する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-309">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="32c67-310">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-310">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(bool ifImpersonating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (ifImpersonating As Boolean) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(bool ifImpersonating);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifImpersonating" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ifImpersonating">
          <span data-ttu-id="32c67-311">スレッドが現在偽装中の場合にだけ <see cref="T:System.Security.Principal.WindowsIdentity" /> を返すには、<see langword="true" />。スレッドが偽装中の場合にスレッドの <see cref="T:System.Security.Principal.WindowsIdentity" /> を返すか、またはスレッドが現在偽装中でない場合にプロセスの <see cref="T:System.Security.Principal.WindowsIdentity" /> を返すには、<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-311">
              <see langword="true" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> only if the thread is currently impersonating; <see langword="false" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the thread if it is impersonating or the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the process if the thread is not currently impersonating.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-312">
            <paramref name="ifImpersonating" /> パラメーターの値に応じてスレッドまたはプロセスの Windows ID を表す <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-312">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the Windows identity for either the thread or the process, depending on the value of the <paramref name="ifImpersonating" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32c67-313">Windows ユーザーを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-313">An object that represents a Windows user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-314">場合`ifImpersonating`は`true`とスレッドが偽装していない、返された<xref:System.Security.Principal.WindowsIdentity>オブジェクトに値がありません。</span><span class="sxs-lookup"><span data-stu-id="32c67-314">If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.</span></span>  <span data-ttu-id="32c67-315">場合`ifImpersonating`は`false`スレッドが偽装して、<xref:System.Security.Principal.WindowsIdentity>スレッドが返されます。</span><span class="sxs-lookup"><span data-stu-id="32c67-315">If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.</span></span>  <span data-ttu-id="32c67-316">場合`ifImpersonating`は`false`スレッドが偽装していないと、<xref:System.Security.Principal.WindowsIdentity>プロセスが返されます。</span><span class="sxs-lookup"><span data-stu-id="32c67-316">If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-317">プリンシパル オブジェクトを操作する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-317">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="32c67-318">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-318">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(valuetype System.Security.Principal.TokenAccessLevels desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (desiredAccess As TokenAccessLevels) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(System::Security::Principal::TokenAccessLevels desiredAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredAccess" Type="System.Security.Principal.TokenAccessLevels" />
      </Parameters>
      <Docs>
        <param name="desiredAccess">
          <span data-ttu-id="32c67-319">列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-319">A bitwise combination of the enumeration values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-320">目的のトークン アクセス レベルを指定して現在の Windows ユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-320">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user, using the specified desired token access level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32c67-321">現在のユーザーを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-321">An object that represents the current user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-322">`desiredAccess`パラメーターが要求されたアクセス トークンへのアクセスの種類を識別するアクセス マスクを指定します。</span><span class="sxs-lookup"><span data-stu-id="32c67-322">The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token.</span></span> <span data-ttu-id="32c67-323">これらの要求されたアクセス タイプは、トークンの随意アクセス制御リスト (DACL) がどの種類のアクセスを許可または拒否を決定すると比較されます。</span><span class="sxs-lookup"><span data-stu-id="32c67-323">These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-324">プリンシパル オブジェクトを操作する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-324">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="32c67-325">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-325">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IdentityReferenceCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IdentityReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IdentityReferenceCollection ^ Groups { System::Security::Principal::IdentityReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-326">現在の Windows ユーザーが属しているグループを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-326">Gets the groups the current Windows user belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-327">現在の Windows ユーザーが属しているグループを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-327">An object representing the groups the current Windows user belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32c67-328">次のコード例の使用を示しています、<xref:System.Security.Principal.WindowsIdentity.Groups%2A>が現在のユーザーが属しているグループの id の参照を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="32c67-328">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Groups%2A> property to display the identity references for the groups the current user belongs to.</span></span>  <span data-ttu-id="32c67-329">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-329">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#20)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-330">コードによって別の Windows ユーザーを偽装できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-330">Allows code to impersonate a different Windows user.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.WindowsImpersonationContext Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Impersonate () As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::WindowsImpersonationContext ^ Impersonate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32c67-331">
            <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトによって表されるユーザーを偽装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-331">Impersonates the user represented by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32c67-332">偽装前の Windows ユーザーを表すオブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-332">An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-333">Windows NT プラットフォームでは、権限借用を許可するための十分な権限が、現在のユーザーに必要です。</span><span class="sxs-lookup"><span data-stu-id="32c67-333">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-334">次の例は、アンマネージ win32 Windows アカウント トークンを取得する方法を示します`LogonUser`機能、およびトークンを使用してその他のユーザーを偽装し、元の id に、元に戻す方法です。</span><span class="sxs-lookup"><span data-stu-id="32c67-334">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]
 [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32c67-335">偽装を実行しようとした匿名 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-335">An anonymous identity attempted to perform an impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-336">Win32 エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-336">A Win32 error occurred.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="32c67-337">Microsoft Windows 98 および Windows Millennium Edition (Windows Me) プラットフォームでは、ユーザー トークンがあるない、ため偽装は、これらのプラットフォームになることはできません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="32c67-337">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="32c67-338">使用した後<see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />を呼び出すことが重要、<see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" />メソッドを権限の借用を終了します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="32c67-338">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsImpersonationContext Impersonate(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr) As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsImpersonationContext ^ Impersonate(IntPtr userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="32c67-339">Windows アカウント トークンのハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-339">The handle of a Windows account token.</span>
          </span>
          <span data-ttu-id="32c67-340">通常、このトークンは、Win32 API の <see langword="LogonUser" /> 関数の呼び出しなど、アンマネージ コードの呼び出しによって取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-340">This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <see langword="LogonUser" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-341">指定したユーザー トークンによって表されるユーザーを偽装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-341">Impersonates the user represented by the specified user token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32c67-342">偽装前の Windows ユーザーを表すオブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-342">An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-343">Windows NT プラットフォームでは、権限借用を許可するための十分な権限が、現在のユーザーに必要です。</span><span class="sxs-lookup"><span data-stu-id="32c67-343">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32c67-344">呼び出す、<xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29>メソッドを`userToken`値<xref:System.IntPtr.Zero>は、Win32 の呼び出しに相当`RevertToSelf`関数。</span><span class="sxs-lookup"><span data-stu-id="32c67-344">Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function.</span></span> <span data-ttu-id="32c67-345">別のユーザーが偽装されているが、コントロールは、元のユーザーに戻ります。</span><span class="sxs-lookup"><span data-stu-id="32c67-345">If another user is currently being impersonated, control reverts to the original user.</span></span>  
  
 <span data-ttu-id="32c67-346">アンマネージ コードへの呼び出しの詳細については、次を参照してください。[アンマネージ DLL 関数の使用](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)です。</span><span class="sxs-lookup"><span data-stu-id="32c67-346">For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-347">次の例は、アンマネージ win32 Windows アカウント トークンを取得する方法を示します`LogonUser`機能、およびトークンを使用してその他のユーザーを偽装し、元の id に、元に戻す方法です。</span><span class="sxs-lookup"><span data-stu-id="32c67-347">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-csharp[WindowsIdentity Impersonation2#1](~/samples/snippets/csharp/VS_Snippets_CLR/windowsidentity impersonation2/cs/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/windowsidentity impersonation2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="32c67-348">Windows は、Windows NT ステータス コード STATUS_ACCESS_DENIED を返しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-348">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="32c67-349">使用できるメモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-349">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="32c67-350">呼び出し元に、正しいアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-350">The caller does not have the correct permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-351">プリンシパル オブジェクトを操作し、アンマネージ コードにアクセスする権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-351">for the ability to manipulate the principal object and access unmanaged code.</span>
          </span>
          <span data-ttu-id="32c67-352">関連する列挙:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />と <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-352">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="32c67-353">Microsoft Windows 98 および Windows Millennium Edition (Windows Me) プラットフォームでは、ユーザー トークンがあるない、ため偽装は、これらのプラットフォームになることはできません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="32c67-353">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="32c67-354">使用した後<see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />を呼び出すことが重要、<see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" />メソッドを権限の借用を終了します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="32c67-354">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-355">ユーザーの偽装レベルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-355">Gets the impersonation level for the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-356">偽装レベルを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-356">One of the enumeration values that specifies the impersonation level.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-357">WMI (Windows Management Instrumentation) に接続するために使用する偽装レベルを記述します。</span><span class="sxs-lookup"><span data-stu-id="32c67-357">Describes the impersonation level to be used to connect to WMI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-358">次のコード例の使用を示しています、<xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A>プロパティを現在のユーザーの偽装レベルを表示します。</span><span class="sxs-lookup"><span data-stu-id="32c67-358">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> property to display the impersonation level for the current user.</span></span> <span data-ttu-id="32c67-359">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-359">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#21)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public virtual bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAnonymous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-360">システムによってユーザー アカウントが匿名アカウントとして識別されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-360">Gets a value that indicates whether the user account is identified as an anonymous account by the system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-361">ユーザー アカウントが匿名アカウントである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-361">
              <see langword="true" /> if the user account is an anonymous account; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-362"><xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>プロパティによって返された匿名の id および Windows の匿名 id の両方を検出、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="32c67-362">The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.</span></span>  
  
 <span data-ttu-id="32c67-363">匿名アカウントは通常ときにのみ発生からのみ ASP.NET ベースのアプリケーション内で匿名アクセスには、インターネット インフォメーション サービス (IIS) では許可されています。</span><span class="sxs-lookup"><span data-stu-id="32c67-363">Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-364">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>プロパティをシステムで、ユーザー アカウントが匿名アカウントとして識別されるかどうかを検出します。</span><span class="sxs-lookup"><span data-stu-id="32c67-364">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect whether the user account is identified as an anonymous account by the system.</span></span> <span data-ttu-id="32c67-365">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-365">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#9)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#9)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-366">ユーザーが Windows により認証されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-366">Gets a value indicating whether the user has been authenticated by Windows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-367">ユーザーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-367">
              <see langword="true" /> if the user was authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGuest">
      <MemberSignature Language="C#" Value="public virtual bool IsGuest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGuest" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsGuest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGuest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-368">システムによってユーザー アカウントが <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> アカウントとして識別されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-368">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account by the system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-369">ユーザー アカウントが <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> アカウントである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-369">
              <see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32c67-370">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.IsGuest%2A>プロパティとして、ユーザー アカウントが識別されているかどうかを示す値を返す、<xref:System.Security.Principal.WindowsAccountType.Guest>アカウント、システムで実行します。</span><span class="sxs-lookup"><span data-stu-id="32c67-370">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.Guest> account by the system.</span></span> <span data-ttu-id="32c67-371">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-371">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#12)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#12)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public virtual bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSystem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-372">システムによってユーザー アカウントが <see cref="F:System.Security.Principal.WindowsAccountType.System" /> アカウントとして識別されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-372">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account by the system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-373">ユーザー アカウントが <see cref="F:System.Security.Principal.WindowsAccountType.System" /> アカウントである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-373">
              <see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32c67-374">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.IsSystem%2A>プロパティとして、ユーザー アカウントが識別されているかどうかを示す値を返す、<xref:System.Security.Principal.WindowsAccountType.System>アカウント、システムで実行します。</span><span class="sxs-lookup"><span data-stu-id="32c67-374">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.System> account by the system.</span></span> <span data-ttu-id="32c67-375">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-375">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#11)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#11)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-376">ユーザーの Windows ログオン名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-376">Gets the user's Windows logon name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-377">コードが実行されている対象ユーザーの Windows ログオン名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-377">The Windows logon name of the user on whose behalf the code is being run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-378">Domain \username という形式では、ログオン名です。</span><span class="sxs-lookup"><span data-stu-id="32c67-378">The logon name is in the form DOMAIN\USERNAME.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-379">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.Name%2A>ユーザーの Windows ログオン名を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="32c67-379">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.Name%2A> property to get the user's Windows logon name.</span></span> <span data-ttu-id="32c67-380">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-380">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#8)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#8)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ Owner { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-381">トークン所有者のセキュリティ識別子 (SID) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-381">Gets the security identifier (SID) for the token owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-382">トークン所有者のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-382">An object for the token owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-383">SID は、ユーザーまたはすべての Windows NT 実装上のグループを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="32c67-383">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  <span data-ttu-id="32c67-384">返された SID では、新しく作成されたオブジェクトに適用される SID の既定の所有者を識別します。</span><span class="sxs-lookup"><span data-stu-id="32c67-384">The returned SID identifies the default owner SID that will be applied to newly created objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-385">次のコード例の使用を示しています、<xref:System.Security.Principal.WindowsIdentity.Owner%2A>トークン所有者のセキュリティ識別子を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="32c67-385">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Owner%2A> property to display the security identifier for the token owner.</span></span>  <span data-ttu-id="32c67-386">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラス</span><span class="sxs-lookup"><span data-stu-id="32c67-386">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#19)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated">
      <MemberSignature Language="C#" Value="public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunImpersonated(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Action ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="safeAccessTokenHandle">
          <span data-ttu-id="32c67-387">偽装した Windows ID の SafeAccessTokenHandle。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-387">The SafeAccessTokenHandle of the impersonated Windows identity.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="32c67-388">実行する System.Action。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-388">The System.Action to run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-389">指定したアクションを、偽装した Windows ID として実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-389">Runs the specified action as the impersonated Windows identity.</span>
          </span>
          <span data-ttu-id="32c67-390">偽装したメソッド呼び出しを使用して <see cref="T:System.Security.Principal.WindowsImpersonationContext" /> で関数を実行するのではなく、<see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> を使用して関数をパラメーターとして直接指定することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-390">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32c67-391">次の例での使用、<xref:System.Security.Principal.WindowsIdentity>ユーザーを偽装するクラス。</span><span class="sxs-lookup"><span data-stu-id="32c67-391">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="32c67-392">このサンプルは、コンソール画面にパスワードを入力するかどうかをたずねるメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="32c67-392">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="32c67-393">コンソール ウィンドウがマスクの入力をネイティブでサポートされていないために、パスワードは、画面に表示されます。</span><span class="sxs-lookup"><span data-stu-id="32c67-393">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T RunImpersonated&lt;T&gt; (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T RunImpersonated&lt;T&gt;(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Func&lt;T&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="32c67-394">関数によって使用され、関数によって返されるオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-394">The type of object used by and returned by the function.</span>
          </span>
        </typeparam>
        <param name="safeAccessTokenHandle">
          <span data-ttu-id="32c67-395">偽装した Windows ID の SafeAccessTokenHandle。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-395">The SafeAccessTokenHandle of the impersonated Windows identity.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="32c67-396">実行する System.Func。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-396">The System.Func to run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-397">指定した関数を、偽装した Windows ID として実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-397">Runs the specified function as the impersonated Windows identity.</span>
          </span>
          <span data-ttu-id="32c67-398">偽装したメソッド呼び出しを使用して <see cref="T:System.Security.Principal.WindowsImpersonationContext" /> で関数を実行するのではなく、<see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> を使用して関数をパラメーターとして直接指定することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-398">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32c67-399">関数の結果を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-399">Returns the result of the function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32c67-400">次の例での使用、<xref:System.Security.Principal.WindowsIdentity>ユーザーを偽装するクラス。</span><span class="sxs-lookup"><span data-stu-id="32c67-400">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="32c67-401">このサンプルは、コンソール画面にパスワードを入力するかどうかをたずねるメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="32c67-401">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="32c67-402">コンソール ウィンドウがマスクの入力をネイティブでサポートされていないために、パスワードは、画面に表示されます。</span><span class="sxs-lookup"><span data-stu-id="32c67-402">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="32c67-403">逆シリアル化イベントのソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-403">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-404">
            <see cref="T:System.Runtime.Serialization.ISerializable" /> インターフェイスを実装し、逆シリアル化が完了したときに逆シリアル化イベントによってコールバックされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-404">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="32c67-405">
            <see cref="T:System.Collections.Hashtable" /> をシリアル化するために必要な情報を格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-405">An object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="32c67-406">
            <see cref="T:System.Collections.Hashtable" /> に関連付けられているシリアル化ストリームのソースおよびデスティネーションを格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-406">An object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32c67-407">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、この実行コンテキストのインスタンスを再作成するのに必要な論理コンテキスト情報を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-407">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of this execution context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-408">このメソッドを設定、<xref:System.Runtime.Serialization.SerializationInfo>論理呼び出しコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="32c67-408">This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="32c67-409">逆シリアル化実行コンテキストのオブジェクトはから再構成、<xref:System.Runtime.Serialization.SerializationInfo>ストリームで転送します。</span><span class="sxs-lookup"><span data-stu-id="32c67-409">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="32c67-410">詳細については、「<xref:System.Runtime.Serialization.SerializationInfo>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="32c67-410">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="32c67-411">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-411">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="32c67-412">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-412">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual IntPtr Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Token" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Token { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-413">ユーザーの Windows アカウント トークンを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-413">Gets the Windows account token for the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-414">現在の実行スレッドに関連付けられているアクセス トークンのハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-414">The handle of the access token associated with the current execution thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-415">によって返されるアカウント トークン明示的にリリースしないで、<xref:System.Security.Principal.WindowsIdentity.Token%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="32c67-415">Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property.</span></span> <span data-ttu-id="32c67-416">トークンがによってリリースされた、<xref:System.Security.Principal.WindowsIdentity.Dispose%2A>メソッドで、コードで呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="32c67-416">The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code.</span></span> <span data-ttu-id="32c67-417"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> ガベージ コレクターによって自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="32c67-417"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32c67-418">によって返されるアカウント トークン、<xref:System.Security.Principal.WindowsIdentity.Token%2A>プロパティは、作成するために使用した Windows トークンの複製、<xref:System.Security.Principal.WindowsIdentity>オブジェクトし、.NET Framework によって自動的に解放します。</span><span class="sxs-lookup"><span data-stu-id="32c67-418">The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework.</span></span> <span data-ttu-id="32c67-419">これとは異なるアカウント トークン (、`userToken`コンス トラクターのパラメーター)、作成に使用される、<xref:System.Security.Principal.WindowsIdentity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="32c67-419">This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object.</span></span> <span data-ttu-id="32c67-420">`userToken` 呼び出しによって作成される Windows アカウント トークン`LogonUser`し、メモリ リークを防ぐために閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="32c67-420">`userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32c67-421">次のコードの使用を示しています、<xref:System.Security.Principal.WindowsIdentity.IsSystem%2A>ユーザーの Windows アカウント トークンを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="32c67-421">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to get the Windows account token for the user.</span></span> <span data-ttu-id="32c67-422">このコード例に示されている例の一部である、<xref:System.Security.Principal.WindowsIdentity>クラスです。</span><span class="sxs-lookup"><span data-stu-id="32c67-422">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#14)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#14)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32c67-423">アンマネージ コードへのアクセスに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-423">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="32c67-424">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-424">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier User" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ User { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-425">ユーザーのセキュリティ識別子 (SID) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-425">Gets the security identifier (SID) for the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-426">ユーザーのオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-426">An object for the user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c67-427">SID は、ユーザーまたはすべての Windows NT 実装上のグループを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="32c67-427">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32c67-428"><xref:System.Security.Principal.WindowsIdentity>によって返されるオブジェクト、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>メソッドは Windows の匿名ユーザーと同じではありません。</span><span class="sxs-lookup"><span data-stu-id="32c67-428">The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user.</span></span> <span data-ttu-id="32c67-429">このプロパティを取得`null`によって表される匿名のユーザー、<xref:System.Security.Principal.WindowsIdentity>によって返されるオブジェクト、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>メソッド、匿名の Windows ユーザーを表す SID を取得しません。</span><span class="sxs-lookup"><span data-stu-id="32c67-429">This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32c67-430">
            <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> プロパティのキーを持つクレームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-430">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32c67-431">
            <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> プロパティ キーを持つクレームのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32c67-431">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>