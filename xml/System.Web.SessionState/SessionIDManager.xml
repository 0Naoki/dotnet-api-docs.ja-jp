<Type Name="SessionIDManager" FullName="System.Web.SessionState.SessionIDManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="177162867ed7abc4eb54b7a8045bc10d76439cec" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37542635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionIDManager : System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionIDManager extends System.Object implements class System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionIDManager" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionIDManager&#xA;Implements ISessionIDManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionIDManager : System::Web::SessionState::ISessionIDManager" />
  <TypeSignature Language="F#" Value="type SessionIDManager = class&#xA;    interface ISessionIDManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionIDManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Manages unique identifiers for ASP.NET session state.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionIDManager>クラスは、ASP.NET セッション状態で使用するための一意のセッション識別子を管理する HTTP モジュールを取得します。 ASP.NET セッションの一意の識別子は、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>からアクセスできる、プロパティ、<xref:System.Web.HttpContext.Session%2A>プロパティ、現在の<xref:System.Web.HttpContext>または<xref:System.Web.UI.Page>します。 ASP.NET のセッション識別子は、小文字から成る 24 文字の文字列にエンコードされたランダムに生成された番号を z と 0 から 5 の数値にします。  
  
 既定で、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値は、ASP.NET アプリケーションには、各要求の cookie で送信されます。 格納するクッキーの名前、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値は、既定である asp.net_sessionid を使用します。 別の cookie 名を構成するには、設定、`cookieName`の属性、 [sessionState 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)必要な cookie 名にします。  
  
 でも行うことを ASP.NET アプリケーションで cookie の使用を無効にする場合、セッション状態の cookie ではなく、URL に設定してセッション識別子を格納するアプリケーションを構成することができます、`cookieless`の属性、 `sessionState`要素を`true`アプリケーションの Web.config ファイルにします。 詳細については、<xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A> プロパティを参照してください。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>継承するクラスを作成して、独自のカスタム セッション識別子を持つ ASP.NET セッションの識別子を置き換えることができます、<see cref="T:System.Web.SessionState.SessionIDManager" />クラスとオーバーライドを行う、<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />と<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />メソッドを独自のカスタム実装します。オーバーライドする例については、<see cref="T:System.Web.SessionState.SessionIDManager" />クラスし、これらのメソッドを実装するには、使用されている例を参照してください、<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />メソッド。全体を置き換えることができます<see cref="T:System.Web.SessionState.SessionIDManager" />を実装するクラスを作成して、カスタムのセッション ID マネージャーで、<see cref="T:System.Web.SessionState.ISessionIDManager" />インターフェイス。カスタムのセッション ID マネージャーは、クッキーなしのセッション識別子をサポートする場合は、送信および ISAPI フィルターなど、URL 内のセッション id を取得するためのソリューションを実装する必要があります。カスタムのセッション ID マネージャーの作成の詳細については、次を参照してください。<see cref="T:System.Web.SessionState.ISessionIDManager" />します。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionIDManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionIDManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.SessionState.SessionIDManager" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターは、アプリケーション コードから呼び出すためのものではありません。  
  
 ASP.NET のインスタンスを作成するこのコンス トラクターを呼び出し、<xref:System.Web.SessionState.SessionIDManager>クラス。 ASP.NET を呼び出し、コンス トラクターを呼び出した後、<xref:System.Web.SessionState.SessionIDManager.Initialize%2A>新しい初期化<xref:System.Web.SessionState.SessionIDManager>オブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public virtual string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionID : System.Web.HttpContext -&gt; string&#xA;override this.CreateSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.CreateSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Creates a unique session identifier for the session.</summary>
        <returns>A unique session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーション コードから呼び出すためのものではありません。  
  
 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッドは、小文字から成る 24 文字の文字列にエンコードされたランダムに生成された数である一意のセッション識別子を返します、z および 0 から 5 の数字にします。  
  
   
  
## Examples  
 次のコード例は、継承するクラスを示しています、<xref:System.Web.SessionState.SessionIDManager>クラスと上書き、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッドを指定し、検証するメソッドを持つ、<xref:System.Guid>として、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>します。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 この例で示すカスタム クラスを使用する構成の sessionIDManagerType 属性、 [sessionState 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)要素は、次の例に示すようにします。  
  
```  
<sessionState  
  Mode="InProc"  
  stateConnectionString="tcp=127.0.0.1:42424"  
  stateNetworkTimeout="10"  
  sqlConnectionString="data source=127.0.0.1;Integrated Security=SSPI"  
  sqlCommandTimeout="30"  
  customProvider=""  
  cookieless="false"  
  regenerateExpiredSessionId="false"  
  timeout="20"  
  sessionIDManagerType="Your.ID.Manager.Type,  
    CustomAssemblyNameInBinFolder"  
/>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>ASP.NET セッション状態が継承するクラスを作成して使用するカスタムのセッション識別子を指定することができます、<see cref="T:System.Web.SessionState.SessionIDManager" />クラスとオーバーライドを行う、<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />と<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />メソッドを独自のカスタム実装します。カスタムのセッション ID がの既定の実装によって適用される文字の制約を満たしていない場合、<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />メソッドをオーバーライドする必要がある、<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />カスタムのセッション id の検証を提供するメソッド。ここで、<see cref="T:System.Web.SessionState.SessionIDManager" />クラスは、カスタムのセッション識別子が、HTTP 応答でエンコードされた URL と HTTP 要求を使用してデコードされた URL であることを確認、<see cref="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />と<see cref="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />メソッドでは、それぞれします。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public virtual string Decode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Decode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Decode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Decode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Decode : string -&gt; string&#xA;override this.Decode : string -&gt; string" Usage="sessionIDManager.Decode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to decode.</param>
        <summary>Decodes a URL-encoded session identifier obtained from a cookie or the URL.</summary>
        <returns>The decoded session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーション コードから呼び出すためのものではありません。  
  
 このメソッドは内部で使用される、<xref:System.Web.SessionState.SessionIDManager>カスタムをデコードするクラス<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>を継承するクラスによって作成された値、<xref:System.Web.SessionState.SessionIDManager>クラスし、オーバーライド、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッド。 による HTTP 要求から取得したカスタムのセッション識別子の値の忠実性を確実に、<xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>メソッド、<xref:System.Web.SessionState.SessionIDManager>カスタム値を使用して、デコード、<xref:System.Web.HttpUtility.UrlDecode%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承するクラスの例については、<see cref="T:System.Web.SessionState.SessionIDManager" />クラスおよびオーバーライド、<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />と<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />メソッドの例を参照してください、<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />メソッド。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Encode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string&#xA;override this.Encode : string -&gt; string" Usage="sessionIDManager.Encode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to encode.</param>
        <summary>Encodes the session identifier for saving to either a cookie or the URL.</summary>
        <returns>The encoded session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーション コードから呼び出すためのものではありません。  
  
 このメソッドは内部で使用される、<xref:System.Web.SessionState.SessionIDManager>カスタムをエンコードするクラス<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>を継承するクラスによって作成された値、<xref:System.Web.SessionState.SessionIDManager>クラスし、オーバーライド、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッド。 HTTP 応答に格納されているカスタムのセッション識別子の値の忠実性を確実に、<xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>メソッド、<xref:System.Web.SessionState.SessionIDManager>カスタム値を使用して、エンコード、<xref:System.Web.HttpUtility.UrlEncode%2A>メソッド。  
  
 継承するクラスの例については、<xref:System.Web.SessionState.SessionIDManager>クラスおよびオーバーライド、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッドを参照してください、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetSessionID : System.Web.HttpContext -&gt; string&#xA;override this.GetSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.GetSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Gets the session-identifier value from the current Web request.</summary>
        <returns>The current <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーション コードから呼び出すためのものではありません。  
  
 <xref:System.Web.SessionState.SessionStateModule>呼び出し、<xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>メソッド中に、<xref:System.Web.HttpApplication.AcquireRequestState>を取得するイベント、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>現在から<xref:System.Web.HttpRequest>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The length of the session-identifier value retrieved from the HTTP request exceeds the <see cref="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="sessionIDManager.Initialize " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Initialize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the <see cref="T:System.Web.SessionState.SessionIDManager" /> object with information from configuration files.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionIDManager.Initialize%2A>メソッドからのセッションの構成データの読み取り、 [sessionState 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)構成ファイルの構成要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, [out] bool&amp; supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeRequest (context As HttpContext, suppressAutoDetectRedirect As Boolean, ByRef supportSessionIDReissue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InitializeRequest(System::Web::HttpContext ^ context, bool suppressAutoDetectRedirect, [Runtime::InteropServices::Out] bool % supportSessionIDReissue);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool&#xA;override this.InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool" Usage="sessionIDManager.InitializeRequest (context, suppressAutoDetectRedirect, supportSessionIDReissue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Web.HttpContext" /> object that contains information about the current request.</param>
        <param name="suppressAutoDetectRedirect">
          <see langword="true" /> to redirect to determine cookie support; otherwise, <see langword="false" /> to suppress automatic redirection to determine cookie support.</param>
        <param name="supportSessionIDReissue">When this method returns, contains a Boolean that indicates whether the <see cref="T:System.Web.SessionState.SessionIDManager" /> object supports issuing new session IDs when the original ID is out of date. This parameter is passed uninitialized.</param>
        <summary>Performs per-request initialization of the <see cref="T:System.Web.SessionState.SessionIDManager" /> object.</summary>
        <returns>
          <see langword="true" /> to indicate the <see cref="T:System.Web.SessionState.SessionIDManager" /> object has done a redirect to determine cookie support; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、`cookieless`の属性、`sessionState`要素に設定されて`AutoDetect`、<xref:System.Web.SessionState.SessionIDManager>オブジェクトは、接続元のブラウザーが cookie をサポートしているかどうかを判断する同じパスにリダイレクトされます。 場合、`suppressAutoDetectRedirect`パラメーターが`false`サーバーはこのリダイレクトを実行しません。  
  
 `supportSessionIDReissue`パラメーターが返される`false`要求は、セッション id の cookie を使用している場合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSessionID (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSessionID : System.Web.HttpContext -&gt; unit&#xA;override this.RemoveSessionID : System.Web.HttpContext -&gt; unit" Usage="sessionIDManager.RemoveSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Deletes the session-identifier cookie from the HTTP response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーション コードから呼び出すためのものではありません。  
  
 <xref:System.Web.SessionState.SessionStateModule>呼び出し、<xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>メソッド中に、<xref:System.Web.HttpApplication.ReleaseRequestState>からセッション識別子を削除するイベント、<xref:System.Web.HttpResponse.Cookies%2A>のコレクション、<xref:System.Web.HttpResponse>場合は、新しいセッションが作成されましたが、使用されませんでした。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, [out] bool&amp; redirected, [out] bool&amp; cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSessionID (context As HttpContext, id As String, ByRef redirected As Boolean, ByRef cookieAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveSessionID(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % redirected, [Runtime::InteropServices::Out] bool % cookieAdded);" />
      <MemberSignature Language="F#" Value="abstract member SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit&#xA;override this.SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit" Usage="sessionIDManager.SaveSessionID (context, id, redirected, cookieAdded)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <param name="id">The session identifier.</param>
        <param name="redirected">When this method returns, contains a Boolean value that is <see langword="true" /> if the response is redirected to the current URL with the session identifier added to the URL; otherwise, <see langword="false" />.</param>
        <param name="cookieAdded">When this method returns, contains a Boolean value that is <see langword="true" /> if a cookie has been added to the HTTP response; otherwise, <see langword="false" />.</param>
        <summary>Saves a newly created session identifier to the HTTP response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーション コードから呼び出すためのものではありません。  
  
 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>メソッドを呼び出して、<xref:System.Web.SessionState.SessionStateModule>オブジェクトの中に、<xref:System.Web.HttpApplication.AcquireRequestState>イベント。 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>メソッドは、(クッキーなしのセッション状態を使用) する場合、いずれかの URL またはセッションの有効期限がない cookie、セッション識別子を格納します。  
  
 既定で、<xref:System.Web.SessionState.SessionIDManager>セッションの有効期限がない cookie に一意のセッション識別子を配置し、設定、`cookieAdded`パラメーター`true`します。  
  
 クッキーなしのセッションの状態を<xref:System.Web.SessionState.SessionIDManager>オブジェクトが現在の URL に一意のセッション識別子を挿入、セッションの識別子が含まれていて、設定を新しい URL にブラウザーをリダイレクト、`redirected`パラメーター`true`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The response has already been sent.  -or-  The session ID passed to this method failed validation.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionIDMaxLength">
      <MemberSignature Language="C#" Value="public static int SessionIDMaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SessionIDMaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SessionIDMaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SessionIDMaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionIDMaxLength : int" Usage="System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum length of a valid session identifier.</summary>
        <value>有効なセッション識別子の最大長。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セッション識別子の最大長は 80 文字です。  
  
 によって作成されたセッション識別子の中に、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッドは 24 文字の長さで許可されているセッション識別子の最大長、<xref:System.Web.SessionState.SessionIDManager>クラスは 80 文字です。 これは、カスタムを実装する場合に特に重要<xref:System.Web.SessionState.SessionIDManager>します。 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>メソッドは、現在のセッション識別子の値を取得します<xref:System.Web.HttpRequest>、値を超えないことにより、<xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength%2A>値とのセッション識別子が 24 文字の文字列を小文字の文字のみを含む。z と呼び出すことによって数字 0 ~ 5 に、<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッド。 カスタムを実装する場合<xref:System.Web.SessionState.SessionIDManager>継承するクラス、<xref:System.Web.SessionState.SessionIDManager>クラスおよびオーバーライド、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッドがない、<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッド、カスタムのセッション識別子の値は、上記の制約を満たす必要があります。 オーバーライドする例については、<xref:System.Web.SessionState.SessionIDManager>クラスし、これらのメソッドを実装するには、使用されている例を参照してください、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Validate(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; bool&#xA;override this.Validate : string -&gt; bool" Usage="sessionIDManager.Validate id" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Validate(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to validate.</param>
        <summary>Gets a value indicating whether a session identifier is valid.</summary>
        <returns>
          <see langword="true" /> if the session identifier is valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーション コードから呼び出すためのものではありません。  
  
 <xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッドを検証する、指定された`id`24 文字の文字列を小文字から成る、z および数字の 0 ~ 5 とその最大の長さ、セッションに ID は 80 文字以内します。  
  
 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>メソッドの呼び出し、<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッドに提供されたセッション識別子が正しくフォーマットされていることを確認、HTTP 要求からセッション識別子を取得するときにします。  
  
   
  
## Examples  
 次のコード例は、継承するクラスを示しています、<xref:System.Web.SessionState.SessionIDManager>クラスと上書き、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッドを指定し、検証するメソッドを持つ、<xref:System.Guid>として、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>します。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 この例で示すカスタム クラスを使用するには、置換、 `SessionID` HTTP モジュールが次の例に示すように、カスタム クラスを使用して、Web.config ファイル。  
  
```  
<httpModules>  
  <remove name="SessionID" />  
  <add name="SessionID"  
       type="Samples.AspNet.Session.GuidSessionIDManager" />  
</httpModules>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>ASP.NET セッション状態が継承するクラスを作成して使用するカスタムのセッション識別子を指定することができます、<see cref="T:System.Web.SessionState.SessionIDManager" />クラスとオーバーライドを行う、<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />と<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />独自のカスタム実装を持つメソッド。作成する場合、カスタムのセッション識別子、セッション ID は 80 文字に制限されます、<see cref="T:System.Web.SessionState.SessionIDManager" />クラス。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>