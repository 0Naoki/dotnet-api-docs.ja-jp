<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1299e92b37ecdfb0f2887ebd0e4122379283e63" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46686623" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ ストアのセッション状態プロバイダーに必要なメンバーを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET セッション状態を読み取ってから、セッション状態を使用してデータ ストアにセッション データ ストア プロバイダーを書き込みます。 セッション状態ストア プロバイダーは、継承するクラス、<xref:System.Web.SessionState.SessionStateStoreProviderBase>抽象クラスと上書きデータに固有の実装では、そのメンバーを格納します。 セッション状態ストア プロバイダーを呼び出して、<xref:System.Web.SessionState.SessionStateModule>セッション変数とタイムアウト値などの関連のセッション情報の取得と、ストレージのデータ ストアとの通信に、ASP.NET ページの処理中にクラス。  
  
 各 ASP.NET アプリケーション内でセッション データがごとに個別に格納されている<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>プロパティ。 ASP.NET アプリケーションは、セッション データを共有していません。  
  
 カスタムを指定する<xref:System.Web.SessionState.SessionStateStoreProviderBase>を設定して ASP.NET アプリケーションの実装、`mode`の属性、`sessionState`構成要素を<xref:System.Web.SessionState.SessionStateMode.Custom>と`customProvider`属性をカスタムのプロバイダーの名前にこのトピックの例に示します。  
  
## <a name="locking-session-store-data"></a>セッション ストア データのロック  
 ASP.NET アプリケーションは、同時実行要求に応答をサポートするマルチ スレッド、ために、同時要求が同じセッションの情報にアクセスしようとする可能性があることができます。 すべてのフレーム セット内の複数のフレームが同じアプリケーションをアクセス シナリオを検討してください。 フレーム セット内の各フレームの個々 の要求は、異なるスレッドで同時に Web サーバーで実行できます。 各フレームのソースの ASP.NET ページは、セッション状態変数にアクセスする場合は、セッション ストアへのアクセスを同時に複数のスレッドをある可能性があります。  
  
 予期しないセッション状態の動作をセッション ストアにあるデータの競合を避けるため、<xref:System.Web.SessionState.SessionStateModule>と<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスには、特定のセッションの実行中のセッション ストアの項目を排他的ロックのロック機能が含まれます、。ASP.NET ページの実行。 注意してください、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性がマーク`ReadOnly`、同じアプリケーションの場合は、他の ASP.NET ページは、可能性がありますでもデータ ストアから、最終的に待つ読み取り専用のセッションの要求にするデータがロックされているため、セッション ストアへの書き込みできる可能性があります解放されます。  
  
 セッション ストア データへの呼び出しで、要求の開始時に、ロックが設定されて、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド。 呼び出し中にロックが解除要求が完了したら、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>メソッド。  
  
 場合、<xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し中にいずれかのセッションがロックされているデータを検出すると、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>または<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッドに再要求セッション データ 0.5 秒間隔で、ロックが解放されるかを時間の長さまで、セッション データがロックされての値を超える、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>プロパティ。 実行タイムアウトを超過した場合、<xref:System.Web.SessionState.SessionStateModule>オブジェクトが呼び出す、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>セッション ストア データを解放して、その時点でセッション ストア データを要求するメソッド。  
  
 セッション ストアがロックされているため、データへの呼び出しによって解放される可能性があります、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>メソッドを呼び出す前に別のスレッドで、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>メソッド、現在の応答がでした試行を設定し、セッション状態ストアのデータを持つリリース既にリリースされ、別のセッションで変更します。 このような状況を回避するために、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>と<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッドは、ロックの識別子を返します。 このロックの識別子をロックされたセッション ストア データを変更するには、各要求に含めることがあります。 セッション ストア データを変更すると、データ ストアでロック識別子によって指定されたロック識別子に一致する場合にのみ、<xref:System.Web.SessionState.SessionStateModule>します。  
  
## <a name="deleting-expired-session-store-data"></a>有効期限が切れたセッション ストア データを削除します。  
 ときに、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>特定のセッションのメソッドは、そのセッションのデータが使用して、データ ストアから削除、<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>メソッドは、データをセッションの後の要求のセッション データ ストアに保持は、それ以外の場合。 <xref:System.Web.SessionState.SessionStateStoreProviderBase>有効期限が切れたセッション データを削除する実装。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 次のコード例では、カスタム セッション状態ストア プロバイダーを使用するように構成された ASP.NET アプリケーションの Web.config ファイルを示します。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 継承するクラスのコンス トラクターを実装する必要はありません、<xref:System.Web.SessionState.SessionStateStoreProviderBase>抽象クラス。 初期化の値を<xref:System.Web.SessionState.SessionStateStoreProviderBase>に実装が渡される、<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>メソッドの実装。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="timeout">新しい <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> のセッション状態の <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 値。</param>
        <summary>現在の要求で使用する <see cref="T:System.Web.SessionState.SessionStateStoreData" /> オブジェクトを新規作成します。</summary>
        <returns>現在の要求に関する新しい <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> ASP.NET ページの要求の開始時のメソッド中に、<xref:System.Web.HttpApplication.AcquireRequestState>イベント。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>場合、メソッドが呼び出されます。  
  
-   受信要求がセッションの ID を持たないまたは  
  
-   受信要求は、セッション ID を持つが、データ ストア内に、セッションが見つかりません。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>メソッドを作成する新しい<xref:System.Web.SessionState.SessionStateStoreData>空のオブジェクト<xref:System.Web.SessionState.ISessionStateItemCollection>オブジェクト、<xref:System.Web.HttpStaticObjectsCollection>コレクション、および指定した`timeout`値。 <xref:System.Web.HttpStaticObjectsCollection>を使用して ASP.NET アプリケーションのコレクションを取得できます、<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>メソッド。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関する <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="timeout">現在の要求に関するセッション <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" />。</param>
        <summary>新しいセッション状態項目をデータ ストアに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>メソッドがセッションで使用されるときに、`cookieless`と`regenerateExpiredSessionId`属性は、どちらも`true`します。 `regenerateExpiredSessionId attribute`に設定`true`により、<xref:System.Web.SessionState.SessionStateModule>を生成する新しいオブジェクト<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>、有効期限が切れたときの値<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値が検出されました。  
  
 新しいを生成するプロセス<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値では、新しく生成されたを含む URL にブラウザーをリダイレクトする必要があります<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>メソッドは、有効期限が切れたを含む最初の要求中に<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値。 後に、<xref:System.Web.SessionState.SessionStateModule>オブジェクトを取得する新しい<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>期限切れの値を置換する値を呼び出します、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>セッション状態データ ストアに初期化されていないエントリを追加するメソッド。 新しく生成されたを含む URL にリダイレクトされて、ブラウザー<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値。 セッション データ ストアに初期化されていないエントリの存在により、リダイレクトされた要求を含む、新しく生成された<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値の有効期限が切れたセッションの要求が確かし、新しいセッションとして処理は、代わりに、します。  
  
 セッション データ ストアの初期化されていないエントリが新しく生成された関連付け<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値し、有効期限の日付と時刻に対応する値などに、既定値のみを含む、`actionFlags`パラメーター、の<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>と<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド。 セッション状態ストアの初期化されていないエントリを含める必要があります、`actionFlags`値と等しく、<xref:System.Web.SessionState.SessionStateActions.InitializeItem>列挙値。 この値は、<xref:System.Web.SessionState.SessionStateModule>オブジェクトを<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>と<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド、し、通知、<xref:System.Web.SessionState.SessionStateModule>現在のセッションは新しいがオブジェクトには、セッションが初期化されていません。 <xref:System.Web.SessionState.SessionStateModule>オブジェクトが新しいセッションが初期化されを発生させる、`Session_OnStart`イベント。  
  
 Cookie なしのセッションの詳細については、次を参照してください。、<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>プロパティ。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> の実装によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType>メソッドが呼び出されます、<xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType>メソッドがアプリケーション ドメインの終了時に実行されます。 継承するクラス、<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスは、このメソッドを使用して、使用されていないリソースを解放します。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <summary>要求の最後に <see cref="T:System.Web.SessionState.SessionStateModule" /> オブジェクトによって呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>メソッド要求の末尾に、ASP.NET ページの中に、<xref:System.Web.HttpApplication.EndRequest>イベント。 使用することができます、<xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>セッション状態ストア プロバイダーで必要な要求ごとのクリーンアップを実行するメソッド。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関する <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="locked">このメソッドが返されるときに、要求したセッション項目がセッション データ ストアでロックされているときはブール値 <see langword="true" />、それ以外の場合は <see langword="false" /> を含みます。</param>
        <param name="lockAge">このメソッドが返されるときに、セッション データ ストアの項目がロックされた時間に設定された <see cref="T:System.TimeSpan" /> オブジェクトを含みます。</param>
        <param name="lockId">このメソッドが返されるときに、現在の要求のロック識別子に設定されたオブジェクトを含みます。 ロック識別子の詳細については、<see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> クラスの概要の「セッション ストア データのロック」を参照してください。</param>
        <param name="actions">このメソッドが返されるときに、現在のセッションが初期化されていない cookieless セッションかどうかを示す <see cref="T:System.Web.SessionState.SessionStateActions" /> 値の 1 つを含みます。</param>
        <summary>セッション データ ストアから読み取り専用のセッション状態データを返します。</summary>
        <returns>セッション値およびセッション データ ストアからの情報を含む <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 、要求の開始時のメソッド中に、<xref:System.Web.HttpApplication.AcquireRequestState>イベント、ときに、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されて`ReadOnly`。 場合、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されて`true`、<xref:System.Web.SessionState.SessionStateModule>オブジェクト呼び出しの代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッドを返します。 を<xref:System.Web.SessionState.SessionStateStoreData>オブジェクトは、データ ストアからセッション情報と共に設定され、セッション データの有効期限を更新します。 データ ストアでは、セッション項目のデータが存在しない場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッドのセット、 `locked` `out`パラメーターを`false`返します`null`します。 これにより、<xref:System.Web.SessionState.SessionStateModule>を呼び出すオブジェクト、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>データ ストアに新しいセッション項目を作成します。  
  
 場合セッション項目データがデータ ストアで見つかりましたが、データがロックされている、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッドのセット、 `locked` `out`パラメーターを`true`、設定、 `lockAge` `out`パラメーターを現在の日付と時刻、日付から時刻の項目がロックされている場合 (これは、データ ストアから取得)、設定、 `lockId` `out`ロック識別子にパラメーターがデータ ストア、および返しますから取得した`null`します。 これにより、<xref:System.Web.SessionState.SessionStateModule>を呼び出すオブジェクト、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>セッション項目情報を取得しようとする 0.5 秒間隔の後にもう一度メソッド。  
  
 場合、値を`lockAge``out`を超えるパラメーターを設定、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>値、<xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>セッション項目データ、および、呼び出しのロックをオフにする方法、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッドを再度します。  
  
 `actionFlags`パラメーターが使用されるときに両方、`cookieless`と`regenerateExpiredSessionId`属性に設定されて`true`します。 `actionFlags`値に設定<xref:System.Web.SessionState.SessionStateActions.InitializeItem>セッション データ ストア内のエントリが初期化を必要とする新しいセッションであることを示します。 セッション データ ストアに初期化されていないエントリがへの呼び出しによって作成された、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>メソッド。 セッション データ ストアからの項目は、初期化されていない項目がない場合、`actionFlags`パラメーターを 0 に設定されます。  
  
 Cookie なしのセッションをサポートするカスタムのセッション状態ストアの実装を設定する必要があります、 `actionFlags` `out`パラメーターの値が現在のアイテムのセッション データ ストアから返されます。 場合、 `actionFlags` 、要求されたセッション ストアのパラメーター値が項目と等しい、<xref:System.Web.SessionState.SessionStateActions.InitializeItem>列挙の値、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッドは 0 を設定した後に、データ ストア内の値を設定する必要があります、 `actionFlags` `out`パラメーター。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関する <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="locked">このメソッドが返されるときに、ロックの取得に成功した場合はブール値 <see langword="true" />、それ以外の場合は <see langword="false" /> を含みます。</param>
        <param name="lockAge">このメソッドが返されるときに、セッション データ ストアの項目がロックされた時間に設定された <see cref="T:System.TimeSpan" /> オブジェクトを含みます。</param>
        <param name="lockId">このメソッドが返されるときに、現在の要求のロック識別子に設定されたオブジェクトを含みます。 ロック識別子の詳細については、<see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> クラスの概要の「セッション ストア データのロック」を参照してください。</param>
        <param name="actions">このメソッドが返されるときに、現在のセッションが初期化されていない cookieless セッションかどうかを示す <see cref="T:System.Web.SessionState.SessionStateActions" /> 値の 1 つを含みます。</param>
        <summary>セッション データ ストアから読み取り専用のセッション状態データを返します。</summary>
        <returns>セッション値およびセッション データ ストアからの情報を含む <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 、要求の開始時のメソッド中に、<xref:System.Web.HttpApplication.AcquireRequestState>イベント、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されて`true`、既定値します。 場合、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されて`ReadOnly`、<xref:System.Web.SessionState.SessionStateModule>オブジェクト呼び出しの代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッド。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッドを返します。 を<xref:System.Web.SessionState.SessionStateStoreData>、データ ストアからセッション情報が設定されたオブジェクトが格納されたデータの有効期限を更新し、要求の期間のデータ ストアでセッション項目データをロックします。 データ ストアでは、セッション項目のデータが存在しない場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッドのセット、 `locked` `out`パラメーターを`false`返します`null`します。 これにより、<xref:System.Web.SessionState.SessionStateModule>を呼び出すオブジェクト、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>データ ストアに新しいセッション項目を作成します。 場合セッション項目データがデータ ストアで見つかりましたが、データがロックされている、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッドのセット、 `locked` `out`パラメーターを`true`、設定、 `lockAge` `out`パラメーターを現在の日付と時刻、日付から時刻の項目がロックされている場合 (これは、データ ストアから取得)、設定、 `lockId` `out`ロック識別子にパラメーターがデータ ストア、および返しますから取得した`null`します。 これにより、<xref:System.Web.SessionState.SessionStateModule>を呼び出すオブジェクト、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>セッション項目情報を取得し、データのロックを取得しようとする 0.5 秒間隔の後にもう一度メソッド。 場合、値を`lockAge``out`パラメーターを超えるに設定されて、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>値、<xref:System.Web.SessionState.SessionStateModule>呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>セッション項目データ、および、呼び出しのロックをオフにする方法、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッドを再度します。  
  
 `actionFlags`パラメーターが使用されるときに、`cookieless`と`regenerateExpiredSessionId`属性に設定されて`true`します。 `actionFlags`値に設定<xref:System.Web.SessionState.SessionStateActions.InitializeItem>セッション データ ストア内のエントリが初期化を必要とする新しいセッションであることを示します。 セッション データ ストアに初期化されていないエントリがへの呼び出しによって作成された、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>メソッド。 セッション データ ストアからの項目は、初期化されていない項目がない場合、`actionFlags`パラメーターを 0 に設定されます。  
  
 Cookie なしのセッションをサポートするカスタムのセッション状態ストアの実装を設定する必要があります、 `actionFlags` `out`パラメーターの値が現在のアイテムのセッション データ ストアから返されます。 場合、 `actionFlags` 、要求されたセッション ストアのパラメーター値が項目と等しい、<xref:System.Web.SessionState.SessionStateActions.InitializeItem>列挙の値、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッドは 0 を設定した後に、データ ストア内の値を設定する必要があります、 `actionFlags` `out`パラメーター。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <summary>要求ごとの初期化のために、<see cref="T:System.Web.SessionState.SessionStateModule" /> オブジェクトによって呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A>他を呼び出す前にメソッド<xref:System.Web.SessionState.SessionStateStoreProviderBase>メソッド。 使用することができます、<xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A>セッション状態ストア プロバイダーで必要な要求ごとの初期化を実行するメソッド。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関するセッション識別子。</param>
        <param name="lockId">現在の要求に関するロック識別子。</param>
        <summary>セッション データ ストアの項目のロックを解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>メソッドを有効期限の日付を更新し、セッション データ ストア内の項目のロックを解放します。 中に、要求の終了時に呼び出されます、<xref:System.Web.HttpApplication.ReleaseRequestState>イベント、セッションの値が変更されていない場合。 セッションの値が変更された場合、<xref:System.Web.SessionState.SessionStateModule>オブジェクト呼び出しの代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>メソッド。  
  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出しも、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>メソッド セッション データ ストア内の項目のロックが超えたときに、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>値。 ロック識別子の詳細とロックの詳細については、「セッション ストア データのロック」を参照してください、<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスの概要。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>メソッドは、指定されたセッションに一致する現在のアプリケーションのセッション データ ストア内の項目から、ロックを削除するだけ`id`と`lockId`値。 場合、 `lockId` 、データ ストア内の 1 つと一致しません、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>メソッドは何も行いません。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関するセッション識別子。</param>
        <param name="lockId">現在の要求に関するロック識別子。</param>
        <param name="item">データ ストアから削除する項目を表す <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</param>
        <summary>セッション データ ストアから項目データを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> 、要求の終了時にメソッド中に、<xref:System.Web.HttpApplication.ReleaseRequestState>セッション データ ストアからセッションのアイテムのデータを削除する、イベント、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>メソッドが呼び出されました。 指定されたセッションに一致する現在のアプリケーションのセッション データのみ`id`と`lockId`値を削除します。 ロック識別子の詳細とロックの詳細については、「セッション ストア データのロック」を参照してください、<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスの概要。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関するセッション識別子。</param>
        <summary>セッション データ ストアの項目の有効期限の日時を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A>を現在の日付と時刻、セッションが有効期限の日付と時刻、セッションを更新するメソッドを<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>ときの値か。  
  
-   <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性が`true`、または  
  
-   要求が通知されませんでした、<xref:System.Web.HttpApplication.AcquireRequestState>と<xref:System.Web.HttpApplication.ReleaseRequestState>エラーのためのイベント。  
  
 ASP.NET ページが要求された場合、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されて`false`、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A>有効期限の日付と時刻、セッション データ ストア内のデータを更新するメソッドは呼び出されます。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">現在の要求に関するセッション識別子。</param>
        <param name="item">保存する現在のセッション値を含む <see cref="T:System.Web.SessionState.SessionStateStoreData" /> オブジェクト。</param>
        <param name="lockId">現在の要求に関するロック識別子。</param>
        <param name="newItem">セッション項目を新しい項目に指定する場合は <see langword="true" />。セッション項目を既存の項目に指定する場合は <see langword="false" />。</param>
        <summary>現在の要求の値を使用してセッション状態データ ストアのセッション項目の情報を更新し、データのロックを解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> 、要求の終了時にメソッド中に、<xref:System.Web.HttpApplication.ReleaseRequestState>イベント、データ ストアに現在のセッション項目情報を挿入または現在の値を持つデータ ストア内の既存のセッション項目情報を更新するにはこのアイテムでは、有効期限を更新して、データのロックを解除します。 指定されたセッションに一致する現在のアプリケーションのセッション データのみ`id`と`lockId`値を更新します。 ロックに関する詳細については、「セッション ストア データのロック」を参照してください、<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスの概要。  
  
 現在の要求のセッションの値が変更されていない場合、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>メソッドは呼び出されません。 代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>メソッドが呼び出されます。  
  
 場合、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>メソッドが呼び出された、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>メソッドは呼び出されません。 代わりに、<xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>セッション項目データ、データ ソースから削除するメソッド。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">Global.asax ファイルに定義されている <see langword="Session_OnEnd" /> イベントの <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> デリゲート。</param>
        <summary>Global.asax ファイルに定義されている <see langword="Session_OnEnd" /> イベントの <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> デリゲートへの参照を設定します。</summary>
        <returns>セッション状態ストア プロバイダーが <see langword="true" /> イベントの呼び出しをサポートする場合は <see langword="Session_OnEnd" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A>メソッドを決定する、モジュールが初期化されるかどうかへの呼び出し、`Session_OnEnd`によってイベントがサポートされている、<xref:System.Web.SessionState.SessionStateStoreProviderBase>実装を関連付けます、 <xref:System.Web.SessionState.SessionStateItemExpireCallback> を持つデリゲート`Session_OnEnd`イベント。  
  
 カスタム セッション状態ストア プロバイダー実装が使用する必要があります、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A>に通知するメソッド、<xref:System.Web.SessionState.SessionStateModule>オブジェクトかどうかを呼び出す、`Session_OnEnd`イベントがサポートされているローカル参照に設定して、 <xref:System.Web.SessionState.SessionStateItemExpireCallback> によって提供されるデリゲート`expireCallback`パラメーター。 カスタムの実装は、タイミングを決定する必要があります、ローカル<xref:System.Web.SessionState.SessionStateItemExpireCallback>デリゲートが呼び出されます。 たとえば、呼び出し中に、デリゲートを呼び出すことができます、<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>メソッドで、セッションが破棄されたときに呼び出されます。  
  
   
  
## Examples  
 セッション状態ストア プロバイダーの実装の例は、次を参照してください。[セッション状態ストア プロバイダーを実装する](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
  </Members>
</Type>