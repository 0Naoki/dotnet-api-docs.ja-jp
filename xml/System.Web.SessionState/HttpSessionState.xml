<Type Name="HttpSessionState" FullName="System.Web.SessionState.HttpSessionState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="434a60c7910e0f787849d79335655973e6df3862" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36394878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpSessionState : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpSessionState extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.HttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpSessionState&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSessionState sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HttpSessionState = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides access to session-state values as well as session-level settings and lifetime management methods.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET では、複数の要求の一意のブラウザー セッションに関連付けられている情報を格納するためにセッション状態管理を提供します。 キーの名前または数値インデックスで参照されている値のコレクションを格納することができます。 セッションの値との機能へのアクセスが利用可能なを使用して、<xref:System.Web.SessionState.HttpSessionState>経由でアクセスできるは、クラス、 <xref:System.Web.HttpContext.Session%2A> 、現在のプロパティ<xref:System.Web.HttpContext>、または<xref:System.Web.UI.Page.Session%2A>のプロパティ、<xref:System.Web.UI.Page>です。  
  
 セッション データは、一意の識別子を使用して特定のブラウザー セッションに関連付けられています。 ブラウザーで、期限切れのないセッション cookie に既定では、この識別子が格納されているが、URL に設定してセッションの識別子を格納するアプリケーションを構成することも、`cookieless`属性を`true`または<xref:System.Web.HttpCookieMode.UseUri>要素アプリケーションの構成。 ASP.NET の値を指定することによって、ブラウザーで cookie がサポートされるかどうかを判断することが<xref:System.Web.HttpCookieMode.UseDeviceProfile>の`cookieless`属性。 ASP.NET の値を指定することによって、ブラウザーの cookie を有効にするかどうかを判断することもできます<xref:System.Web.HttpCookieMode.AutoDetect>の`cookieless`属性。 Cookie がサポートされている場合と<xref:System.Web.HttpCookieMode.UseDeviceProfile>指定すると、または有効になっている場合は<xref:System.Web.HttpCookieMode.AutoDetect>が指定されて、セッション識別子がそれ以外の cookie に格納されているセッションの識別子は、URL に格納されます。  
  
 セッションが開始される最初の要求時、分単位で指定された数の前に、ブラウザーで新しい要求が行われる限り、セッションの値は保持されます、<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>プロパティ パスです。 新しいセッションを開始するとき、セッション<xref:System.Web.SessionState.SessionStateModule.Start>イベントが発生します。 このイベントを使用して、既定のセッションの値の設定など、セッションの開始時に追加の作業を行うことができます。 セッションがタイムアウトしたときに、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>メソッドが呼び出されると、か、ASP.NET アプリケーションをシャット ダウン、セッション<xref:System.Web.SessionState.SessionStateModule.End>イベントが発生します。 このイベントを使用して、必要なクリーンアップを実行することができます。 <xref:System.Web.SessionState.SessionStateModule.End>イベントが発生した場合にのみ、セッション状態`mode`に設定されている<xref:System.Web.SessionState.SessionStateMode.InProc>です。  
  
 パフォーマンスを向上させるには、クッキーを使用するセッションを割り当てないセッション ストレージで実際にデータが格納されるまで、<xref:System.Web.UI.Page.Session%2A>オブジェクト。 詳細については、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A> プロパティを参照してください。  
  
 セッション状態は、ASP.NET アプリケーションの境界を越えては保持されません。 別のアプリケーションに移動する、ブラウザー場合、は、セッション情報は、新しいアプリケーションを使用できません。  
  
 セッションの値は、既定では、Web サーバー上のメモリに格納されます。 SQL Server データベース、ASP.NET 状態サーバー、またはカスタムのサーバーでセッションの値を格納することもできます。 これにより、ASP.NET、IIS のプロセス、または ASP.NET アプリケーションを再起動する場合のセッションの値を保持して、Web ファーム内のすべてのサーバー間でセッションの値を使用できるようにすることができます。 この動作の構成には、設定、`mode`属性を有効な<xref:System.Web.SessionState.SessionStateMode>アプリケーションの構成の要素の値。 詳細については、次を参照してください。[セッション状態モード](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4)です。  
  
 セッション状態に代わる手段は、アプリケーションの状態 (を参照してください、<xref:System.Web.HttpApplication.Application%2A>プロパティ) と ASP.NET のキャッシュ (を参照してください、<xref:System.Web.Caching>名前空間)、どのストアの変数、ASP.NET アプリケーションのすべてのユーザーによってアクセスできます ASP.NET プロファイル (を参照してください、。<xref:System.Web.Profile>名前空間)、期限切れにすることがなく、データ ストア内のユーザーの値を永続化するタイムアウトを使用してASP.NET<xref:System.Web.UI.WebControls?displayProperty=nameWithType>でのコントロールの値を保持する、<xref:System.Web.UI.Control.ViewState%2A>です。<xref:System.Web.HttpResponse.Cookies%2A>;<xref:System.Web.HttpRequest.QueryString%2A>プロパティおよび HTTP で使用できる HTML フォームのフィールド`POST`を使用して、<xref:System.Web.HttpRequest.Form%2A>コレクション。 セッション状態とその他の状態管理の選択肢の違いの詳細については、次を参照してください。 [ASP.NET 状態管理に関する推奨事項](http://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732)です。  
  
   
  
## Examples  
 次のコード例では、設定し、セッション状態から値を取得します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[HttpSessionState#30](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/session2cs.aspx#30)]
 [!code-aspx-vb[HttpSessionState#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/session2vb.aspx#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Web.Profile" />
    <altmember cref="N:System.Web.Caching" />
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberSignature Language="F#" Value="member this.Abandon : unit -&gt; unit" Usage="httpSessionState.Abandon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels the current session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1 回、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>メソッドが呼び出され、現在のセッションが有効ではなく、新しいセッションを開始することができます。 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> により、<xref:System.Web.SessionState.SessionStateModule.End>イベントが発生します。 新しい<xref:System.Web.SessionState.SessionStateModule.Start>イベントは、次の要求で発生します。  
  
 既定では、破棄済みまたは期限切れのセッションのセッション識別子をリサイクルします。 セッションの有効期限が切れたか、中止されたセッション識別子を含む要求が行われた場合、新しいセッションが開始同じのセッション識別子を使用します。 設定して無効にすることができます`regenerateExpiredSessionId`する構成要素の属性`true`です。 詳細については、次を参照してください。[セッション識別子](http://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb)です。  
  
 <xref:System.Web.SessionState.SessionStateModule.End>イベントがサポートされている場合にのみ、<xref:System.Web.SessionState.HttpSessionState.Mode%2A>プロパティに設定されている<xref:System.Web.SessionState.SessionStateMode.InProc>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="httpSessionState.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the item to add to the session-state collection.</param>
        <param name="value">The value of the item to add to the session-state collection.</param>
        <summary>Adds a new item to the session-state collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`name`パラメーターは、既存のセッション状態の項目を参照、既存の項目は、指定された上書き`value`です。  
  
   
  
## Examples  
 次の例を使用して、セッション状態の値を格納する方法を示しています、<xref:System.Web.SessionState.HttpSessionState.Add%2A>メソッドです。 使用して、セッション状態に値を削除する方法も示します、<xref:System.Web.SessionState.HttpSessionState.Remove%2A>メソッドです。 A <xref:System.Web.UI.WebControls.Repeater> Web ページの内容のセッション状態を表示するコントロールを使用します。 <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A>メソッドの使用をセッション状態のコレクションを反復処理し、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpSessionState.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all keys and values from the session-state collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CodePage : int with get, set" Usage="System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the character-set identifier for the current session.</summary>
        <value>現在のセッションの文字セットの識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字セット (コード ページ) がマルチ バイト文字データ、文字値の決定を解釈し、並べ替え順序を使用します。 コード ページの設定は、されていない Unicode 文字データへのマルチ バイト文字データにのみ適用されます。  
  
 これは、<xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>プロパティは ASP の旧バージョンのみと互換性のために提供します。 ASP ページとの下位互換性を維持する必要がない場合を使用して、<xref:System.Web.HttpResponse.ContentEncoding%2A>プロパティ代わりにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Contents { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.SessionState.HttpSessionState" Usage="System.Web.SessionState.HttpSessionState.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the current session-state object.</summary>
        <value>現在の <see cref="T:System.Web.SessionState.HttpSessionState" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.Contents%2A>プロパティは、ASP の旧バージョンとの互換性を提供します。  
  
   
  
## Examples  
 次のコード例は、項目名を一覧表示し、の値が、<xref:System.Web.SessionState.HttpSessionState.Contents%2A>プロパティです。  
  
 [!code-csharp[HttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#9)]
 [!code-vb[HttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the application is configured for cookieless sessions.</summary>
        <value>1 つ、<see cref="T:System.Web.HttpCookieMode" />アプリケーションが cookie なしのセッションのように構成するかどうかを示す値。 既定値は <see cref="F:System.Web.HttpCookieMode.UseCookies" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>は`true`、<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A>プロパティから返される<xref:System.Web.HttpCookieMode.UseUri>以外の場合、<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A>プロパティから返される<xref:System.Web.HttpCookieMode.UseCookies>です。  
  
   
  
## Examples  
 次のコード例のセット、`cookieless`セッション属性を`true`Web.config ファイルにします。 このサンプル アプリケーションの構成には、<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A>プロパティが返す<xref:System.Web.HttpCookieMode.UseUri>です。  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="httpSessionState.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The <see cref="T:System.Array" /> that receives the session values.</param>
        <param name="index">The zero-based index in <c>array</c> from which copying starts.</param>
        <summary>Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.SessionState.HttpSessionState.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of items in the session-state collection.</summary>
        <value>コレクション内の項目数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="httpSessionState.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that can be used to read all the session-state variable names in the current session.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the variable names in the session-state collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例を使用して、セッション状態の値を格納する方法を示しています、<xref:System.Web.SessionState.HttpSessionState.Add%2A>メソッドです。 使用して、セッション状態に値を削除する方法も示します、<xref:System.Web.SessionState.HttpSessionState.Remove%2A>メソッドです。 A <xref:System.Web.UI.WebControls.Repeater> Web ページにセッション状態の内容を表示するコントロールを使用します。 <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A>メソッドの使用をセッション状態のコレクションを反復処理し、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCookieless : bool" Usage="System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.</summary>
        <value>
          <see langword="true" /> セッションが URL に埋め込まれている場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET は、各ブラウザーでセッションを一意に識別します。 既定では、セッションの一意の識別子は、ブラウザーに無期限のセッション cookie に格納されます。 セッション id を格納されないように、cookie に設定して指定することができます、`cookieless`属性を`true`構成要素。  
  
> [!NOTE]
>  アプリケーションのセキュリティを向上させるのには、アプリケーションがこの時点で呼び出す必要がありますをログアウト、ユーザーを許可する必要があります、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>メソッドです。 これにより、URL の一意識別子を使用して、ユーザーのセッションに格納されているプライベート データを取得する必要のないソースの可能性が減少します。  
  
 ASP.NET は、ページの URL に一意のセッション ID を自動的に挿入して cookie なしのセッション状態を保持します。 たとえば、次の URL は一意のセッション ID lit3py55t21z5v55vlm25s55 を含めるように ASP.NET によって変更されています。  
  
```  
http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx  
```  
  
 ASP.NET では、リンクの各ページをブラウザーに送信する前にセッション ID 値を埋め込むことによって、すべての要求されたページに含まれるリンクを変更します。 ユーザーが、サイトが提供するリンクのパスをたどっている限り、セッション状態が維持されます。 ただし、ユーザー エージェントは、URL をリライト、セッション状態のインスタンスが失われます。  
  
 セッション ID は、アプリケーション名に続くスラッシュの後と、残りのファイルまたは仮想ディレクトリ識別子の前に、URL に埋め込まれます。 これにより、ASP.NET に関連する前に、アプリケーション名を解決するのには、<xref:System.Web.SessionState.SessionStateModule>要求にします。  
  
 既定では、cookie なしのセッションで使用されるセッション識別子はリサイクルされます。 つまり、有効期限が切れたセッション ID を持つ要求が行われた場合、新しいセッションが開始要求によって指定したセッション ID を使用します。 この動作は、検索エンジンまたは他のプログラムを複数のブラウザーを cookie なしのセッション ID を含むリンクが共有される場合に、セッション データが不適切に共有になります。 セッション id のリサイクルを無効にして、複数のクライアントで共有されているセッション データの可能性を減らすことができます。 これを行うには、設定、`regenerateExpiredSessionId`する構成要素の属性`true`です。 これは、有効期限が切れたセッション ID を持つ cookie なしのセッションの要求が行われたときに生成される新しいセッション ID になります 有効期限が切れたセッション id が行われた要求が HTTP を使用している場合ことに注意して`POST`メソッドを投稿されたデータが失われる場合`regenerateExpiredSessionId`は`true`ASP.NET がブラウザーが URL で新しいセッション id を持つようにするためのリダイレクトを実行します。  
  
> [!NOTE]
>  設定中に、`regenerateExpiredSessionId`属性を`true`可能性を低減セッション データが共有の不要なは保護されない不適切なソースを取得して別のユーザーのセッションへのアクセスに対して、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値とサーバーへの要求に含めます。 プライベートまたは機密性の高い情報を格納する、セッション状態では場合、は、ブラウザーとを含むサーバー間の通信の暗号化に SSL を使用することをお勧めしますが、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>です。  
  
   
  
## Examples  
 次のコード例のセット、`cookieless`セッション属性を Web.config ファイルで true です。  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewSession : bool" Usage="System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the session was created with the current request.</summary>
        <value>
          <see langword="true" /> 現在の要求でセッションが作成された場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the session is read-only.</summary>
        <value>
          <see langword="true" /> 場合は、セッションが読み取り専用です。それ以外の場合、<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).</summary>
        <value>
          <see langword="true" /> 場合は、コレクションへのアクセスが同期されている (スレッド セーフである)それ以外の場合、<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets individual session values.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The numerical index of the session value.</param>
        <summary>Gets or sets a session value by numerical index.</summary>
        <value>指定したインデックス位置に格納されているセッション状態値または<see langword="null" />アイテムが存在しない場合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The key name of the session value.</param>
        <summary>Gets or sets a session value by name.</summary>
        <value>指定の名前を持つセッション状態の値または<see langword="null" />アイテムが存在しない場合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" Usage="System.Web.SessionState.HttpSessionState.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of the keys for all values stored in the session-state collection.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />すべてのセッション キーを格納しています。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="System.Web.SessionState.HttpSessionState.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the locale identifier (LCID) of the current session.</summary>
        <value>A<see cref="T:System.Globalization.CultureInfo" />インスタンスが、現在のセッションのカルチャを指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.LCID%2A>プロパティは ASP の旧バージョンのみと互換性のために提供します。 ASP ページとの下位互換性を維持する必要がない場合を使用して、<xref:System.Globalization.CultureInfo.LCID%2A>プロパティ代わりにします。  
  
 ASP.NET では、セッション状態でロケール識別子は保存されません。 <xref:System.Web.SessionState.HttpSessionState.LCID%2A>プロパティへのアクセス、<xref:System.Globalization.CultureInfo.LCID%2A>プロパティを取得し、識別子を設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.SessionState.SessionStateMode" Usage="System.Web.SessionState.HttpSessionState.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current session-state mode.</summary>
        <value>
          <see cref="T:System.Web.SessionState.SessionStateMode" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サーバーを構成する方法については<xref:System.Web.SessionState.SessionStateMode.StateServer>または<xref:System.Web.SessionState.SessionStateMode.SQLServer>セッション状態ストアの場合を参照してください[ASP.NET セッション状態の概要](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)です。  
  
   
  
## Examples  
 次のコード例のセット、`mode`セッション属性を<xref:System.Web.SessionState.SessionStateMode.SQLServer>Web.config ファイルにします。 SQL Server セッション モードの場合、`sqlConnectionString`属性も必要です。  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="SQLServer"  
      sqlConnectionString="Data Source=localhost;Integrated Security=SSPI"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpSessionState.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the item to delete from the session-state collection.</param>
        <summary>Deletes an item from the session-state collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セッション状態コレクションに指定した要素が含まれていないかどうかは`name`コレクションは変更されません。 例外をスローすることはありません。  
  
   
  
## Examples  
 次の例を使用して、セッション状態の値を格納する方法を示しています、<xref:System.Web.SessionState.HttpSessionState.Add%2A>メソッドです。 使用して、セッション状態に値を削除する方法も示します、<xref:System.Web.SessionState.HttpSessionState.Remove%2A>メソッドです。 A <xref:System.Web.UI.WebControls.Repeater> Web ページにセッション状態の内容を表示するコントロールを使用します。 <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A>メソッドの使用をセッション状態のコレクションを反復処理し、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="httpSessionState.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all keys and values from the session-state collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> 同じ機能を実行<xref:System.Web.SessionState.HttpSessionState.Clear%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="httpSessionState.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the item to remove from the session-state collection.</param>
        <summary>Deletes an item at a specified index from the session-state collection.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  \- or -  <paramref name="index" /> is equal to or greater than <see cref="P:System.Web.SessionState.HttpSessionState.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionID : string" Usage="System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unique identifier for the session.</summary>
        <value>一意のセッション識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>プロパティは、サーバー上のセッション データと、ブラウザーを一意に識別するために使用します。 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値がランダムに ASP.NET によって生成され、ブラウザーで期限切れのないセッション cookie に保存します。 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値は、ASP.NET アプリケーションに要求のたびに、cookie に送信されます。  
  
 場合は、ASP.NET アプリケーションでは cookie の使用を無効にし、依然としてセッション状態を使用して、cookie ではなく、URL に設定してセッション識別子を格納するアプリケーションを構成することができます、`cookieless`構成の属性要素を`true`、または<xref:System.Web.HttpCookieMode.UseUri>アプリケーションの Web.config ファイルにします。 ASP.NET の値を指定することによって、ブラウザーで cookie がサポートされるかどうかを判断することが<xref:System.Web.HttpCookieMode.UseDeviceProfile>の`cookieless`属性。 ASP.NET の値を指定することによって、ブラウザーの cookie を有効にするかどうかを判断することもできます<xref:System.Web.HttpCookieMode.AutoDetect>の`cookieless`属性。 Cookie がサポートされている場合と<xref:System.Web.HttpCookieMode.UseDeviceProfile>指定すると、または有効になっている場合は<xref:System.Web.HttpCookieMode.AutoDetect>が指定されて、セッション識別子がそれ以外の cookie に格納されているセッションの識別子は、URL に格納されます。 詳細については、<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> プロパティを参照してください。  
  
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>クッキーまたは URL で、クリア テキストで、サーバーとブラウザー間で送信します。 その結果、不適切なソースにアクセスできます別のユーザーのセッションを取得して、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値と、サーバーへの要求に含めます。 プライベートまたは機密性の高い情報を格納する、セッション状態では場合、は、ブラウザーとを含むサーバー間の通信の暗号化に SSL を使用することをお勧めしますが、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>です。  
  
 ASP.NET までセッション データを記憶域が割り当てられません cookie ベースのセッション状態を使用する場合、<xref:System.Web.UI.Page.Session%2A>オブジェクトを使用します。 その結果、セッション オブジェクトがアクセスされるまでページ要求ごとに新しいセッション ID が生成されます。 いずれかを実装することができます、アプリケーションでは、セッション全体に対して、静的なセッション ID が必要とする場合、`Session_Start`メソッドと、アプリケーションの Global.asax ファイルとストアのデータに、<xref:System.Web.UI.Page.Session%2A>セッション ID を解決するオブジェクト、またはコードの別の部分で使用できます明示的にデータを格納するアプリケーション、<xref:System.Web.UI.Page.Session%2A>オブジェクト。  
  
 場合は、アプリケーションが cookie なしのセッション状態を使用セッション ID は最初のページ ビューでが生成され、セッション全体で保持されます。  
  
   
  
## Examples  
 次のコード例では、cookie なしのセッション識別子を使用するセッションの状態を構成する Web.config ファイルを示します。 詳細については、<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> プロパティを参照してください。  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollection" Usage="System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of objects declared by <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> tags within the ASP.NET application file Global.asax.</summary>
        <value>
          <see cref="T:System.Web.HttpStaticObjectsCollection" /> Global.asax ファイルで宣言されたオブジェクトを含むです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページ上のオブジェクトがシリアル化をサポートしていないかどうか、<xref:System.Web.SessionState.HttpSessionState.Mode%2A>はアウト プロセス (<xref:System.Web.SessionState.SessionStateMode.SQLServer>または<xref:System.Web.SessionState.SessionStateMode.StateServer>)、オブジェクトは作成されませんし、このコレクションに追加されません。  
  
 <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A>プロパティは、ASP の旧バージョンとの互換性を提供します。  
  
   
  
## Examples  
 次のコード例の一覧、`id`および内のオブジェクトのオブジェクトの種類、<xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A>コレクション。  
  
 [!code-csharp[HttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#10)]
 [!code-vb[HttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the collection of session-state values.</summary>
        <value>コレクションへのアクセスを同期するために使用できるオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.</summary>
        <value>タイムアウト期間 (分)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>を使用して、アプリケーションの Web.config ファイルでプロパティを設定することができます、`timeout`構成要素の属性を設定できます、<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>アプリケーション コードを使用して直接プロパティ値。  
  
 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>プロパティに設定できません値 525,600 分 (1 年) を超えています。 既定値は、20 分です。  
  
   
  
## Examples  
 次のコード例のセット、`timeout`を 30 分に、Web.config ファイルでのセッションの属性です。  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>