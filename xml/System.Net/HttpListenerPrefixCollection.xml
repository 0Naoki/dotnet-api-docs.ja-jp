<Type Name="HttpListenerPrefixCollection" FullName="System.Net.HttpListenerPrefixCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9b1785f4db30b4d5fecdc48fb5ab30ca2262662" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52195100" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection&lt;string&gt;, System.Collections.Generic.IEnumerable&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpListenerPrefixCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;string&gt;, class System.Collections.Generic.IEnumerable`1&lt;string&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerPrefixCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpListenerPrefixCollection&#xA;Implements ICollection(Of String), IEnumerable(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerPrefixCollection : System::Collections::Generic::ICollection&lt;System::String ^&gt;, System::Collections::Generic::IEnumerable&lt;System::String ^&gt;" />
  <TypeSignature Language="F#" Value="type HttpListenerPrefixCollection = class&#xA;    interface ICollection&lt;string&gt;&#xA;    interface seq&lt;string&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cc864-101">
        <see cref="T:System.Net.HttpListener" /> オブジェクトの URI (Uniform Resource Identifier) プレフィックスの格納に使用するコレクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc864-101">Represents the collection used to store Uniform Resource Identifier (URI) prefixes for <see cref="T:System.Net.HttpListener" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-102"><xref:System.Net.HttpListener.Prefixes%2A>プロパティは、このコレクションのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="cc864-102">The <xref:System.Net.HttpListener.Prefixes%2A> property returns instances of this collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc864-103">次のコード例を作成、<xref:System.Net.HttpListener>をユーザーが指定したプレフィックスを追加します。 その<xref:System.Net.HttpListenerPrefixCollection>します。</span><span class="sxs-lookup"><span data-stu-id="cc864-103">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; unit&#xA;override this.Add : string -&gt; unit" Usage="httpListenerPrefixCollection.Add uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">
          <span data-ttu-id="cc864-104">受信要求で比較される URI 情報を識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-104">A <see cref="T:System.String" /> that identifies the URI information that is compared in incoming requests.</span>
          </span>
          <span data-ttu-id="cc864-105">プレフィックスは、スラッシュ ("/") で終了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-105">The prefix must be terminated with a forward slash ("/").</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc864-106">コレクションに URI プレフィックスを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-106">Adds a Uniform Resource Identifier (URI) prefix to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-107">このメソッドは、一連のプレフィックスは、関連する管理対象に、URI プレフィックスを追加します<xref:System.Net.HttpListener>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc864-107">This method adds a URI prefix to the set of prefixes managed by the associated <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="cc864-108">チェックするときに`uriPrefix`を確実には有効な場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cc864-108">When checking `uriPrefix` to ensure it is valid, case is ignored.</span></span>  
  
 <span data-ttu-id="cc864-109">URI プレフィックス文字列がスキーム (http または https)、ホスト、任意のポート、およびオプションのパスの例で構成される"`http://www.contoso.com:8080/customerData/`"。</span><span class="sxs-lookup"><span data-stu-id="cc864-109">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path, for example, "`http://www.contoso.com:8080/customerData/`".</span></span> <span data-ttu-id="cc864-110">プレフィックスは、スラッシュ ("/") で終了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc864-110">The prefix must be terminated with a forward slash ("/").</span></span> <span data-ttu-id="cc864-111"><xref:System.Net.HttpListener>要求 URI に最も一致するプレフィックスを持つ要求に応答します。</span><span class="sxs-lookup"><span data-stu-id="cc864-111">The <xref:System.Net.HttpListener> with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="cc864-112">複数<xref:System.Net.HttpListener>オブジェクトが同じプレフィックスを追加できません。</span><span class="sxs-lookup"><span data-stu-id="cc864-112">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix.</span></span> <span data-ttu-id="cc864-113"><xref:System.Net.HttpListenerException>例外がスローされます、<xref:System.Net.HttpListener>既に存在するプレフィックスを使用して追加します。</span><span class="sxs-lookup"><span data-stu-id="cc864-113">An <xref:System.Net.HttpListenerException> exception is thrown if an <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>  
  
 <span data-ttu-id="cc864-114">ホスト要素を置き換えることが、ポートを指定すると、"`*`"ことを示す、<xref:System.Net.HttpListener>要求された URI がその他の任意のプレフィックスと一致しない場合に、ポートに送信される要求を受け入れます。</span><span class="sxs-lookup"><span data-stu-id="cc864-114">When a port is specified, the host element can be replaced with "`*`" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="cc864-115">たとえば、すべての要求を受信するポート 8080 が要求された URI がその他で処理されないときに送信<xref:System.Net.HttpListener>、プレフィックスが"`http://*:8080/`"。</span><span class="sxs-lookup"><span data-stu-id="cc864-115">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any other <xref:System.Net.HttpListener>, the prefix is "`http://*:8080/`".</span></span> <span data-ttu-id="cc864-116">同様に、ことを指定する、 <xref:System.Net.HttpListener> 、ポートに送信されたすべての要求を受け入れるを持つホスト要素を交換して、"`+`、"character"`https://+:8080/`"。</span><span class="sxs-lookup"><span data-stu-id="cc864-116">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "`+`" character, "`https://+:8080/`".</span></span> <span data-ttu-id="cc864-117">"`*`「と」`+`"の文字をプレフィックスをインクルード パスに存在することができます。</span><span class="sxs-lookup"><span data-stu-id="cc864-117">The "`*`" and "`+`" characters can be present in prefixes that include paths.</span></span>  
  
 <span data-ttu-id="cc864-118">ワイルドカード サブドメインは .NET 4.5.3 および Windows 10 以降で管理されている URI プレフィックスでサポートされて、<xref:System.Net.HttpListener>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc864-118">Starting with .NET 4.5.3 and Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="cc864-119">ワイルドカード サブドメインを指定するには、使用、"\*"URI プレフィックスのホスト名の一部として文字: たとえば、 `http://*.foo.com/`、HttpListenerPrefixCollection.Add メソッドに引数として渡すとします。</span><span class="sxs-lookup"><span data-stu-id="cc864-119">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix: for example, `http://*.foo.com/`, and pass this as the argument to the HttpListenerPrefixCollection.Add method.</span></span> <span data-ttu-id="cc864-120">これは .NET 4.5.3 および Windows 10 の機能します。以前のバージョンでは、この生成は、 <xref:System.Net.HttpListenerException></span><span class="sxs-lookup"><span data-stu-id="cc864-120">This will work on .NET 4.5.3 and Windows 10; in earlier versions, this would generate an <xref:System.Net.HttpListenerException></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc864-121">次のコード例を作成、<xref:System.Net.HttpListener>をユーザーが指定したプレフィックスを追加します。 その<xref:System.Net.HttpListenerPrefixCollection>します。</span><span class="sxs-lookup"><span data-stu-id="cc864-121">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc864-122">
            <paramref name="uriPrefix" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-122">
              <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc864-123">
            <paramref name="uriPrefix" /> が、http:// または https:// スキームを使用していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-123">
              <paramref name="uriPrefix" /> does not use the http:// or https:// scheme.</span>
          </span>
          <span data-ttu-id="cc864-124">
            <see cref="T:System.Net.HttpListener" /> オブジェクトでは、これらのスキームのみがサポートされています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-124">These are the only schemes supported for <see cref="T:System.Net.HttpListener" /> objects.</span>
          </span>
          <span data-ttu-id="cc864-125">または</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-125">-or-</span>
          </span>
          <span data-ttu-id="cc864-126">
            <paramref name="uriPrefix" /> が、正しい書式の URI プレフィックスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-126">
              <paramref name="uriPrefix" /> is not a correctly formatted URI prefix.</span>
          </span>
          <span data-ttu-id="cc864-127">文字列が "/" で終わっていることを確認してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-127">Make sure the string is terminated with a "/".</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cc864-128">このコレクションに関連付けられている <see cref="T:System.Net.HttpListener" /> は閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-128">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="cc864-129">Windows 関数呼び出しが失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-129">A Windows function call failed.</span>
          </span>
          <span data-ttu-id="cc864-130">例外の <see cref="P:System.Net.HttpListenerException.ErrorCode" /> プロパティを調べて、例外の原因を確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-130">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
          <span data-ttu-id="cc864-131">この例外は、別の <see cref="T:System.Net.HttpListener" /> が既にプレフィックス <paramref name="uriPrefix" /> を追加している場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-131">This exception is thrown if another <see cref="T:System.Net.HttpListener" /> has already added the prefix <paramref name="uriPrefix" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="cc864-132">ネットワーク接続を受け入れる。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-132">To accept network connections.</span>
          </span>
          <span data-ttu-id="cc864-133">関連付けられた列挙体。 <see cref="F:System.Net.NetworkAccess.Accept" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-133">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="httpListenerPrefixCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc864-134">コレクションからすべての URI プレフィックスを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-134">Removes all the Uniform Resource Identifier (URI) prefixes from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-135">このメソッドを呼び出した後に起動できない場合、関連付けられている<xref:System.Net.HttpListener>新しいプレフィックスを追加せず、このようにしようとする場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cc864-135">After calling this method, you cannot start the associated <xref:System.Net.HttpListener> without adding new prefixes; if you try to do so, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc864-136">次のコード例は、すべてのプレフィックスを削除します。、<xref:System.Net.HttpListenerPrefixCollection>します。</span><span class="sxs-lookup"><span data-stu-id="cc864-136">The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="cc864-137">Windows 関数呼び出しが失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-137">A Windows function call failed.</span>
          </span>
          <span data-ttu-id="cc864-138">例外の <see cref="P:System.Net.HttpListenerException.ErrorCode" /> プロパティをチェックして、例外の原因を確認してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-138">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cc864-139">このコレクションに関連付けられている <see cref="T:System.Net.HttpListener" /> は閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-139">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="cc864-140">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="cc864-140">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="cc864-141">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="cc864-141">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Contains : string -&gt; bool&#xA;override this.Contains : string -&gt; bool" Usage="httpListenerPrefixCollection.Contains uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">
          <span data-ttu-id="cc864-142">テストする URI プレフィックスを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-142">A <see cref="T:System.String" /> that contains the Uniform Resource Identifier (URI) prefix to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc864-143">指定したプレフィックスがコレクションに含まれているかどうかを示す <see cref="T:System.Boolean" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-143">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified prefix is contained in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc864-144">このコレクションに <paramref name="uriPrefix" /> で指定したプレフィックスが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-144">
              <see langword="true" /> if this collection contains the prefix specified by <paramref name="uriPrefix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-145">指定したプレフィックスでは、既存の値を正確に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc864-145">The specified prefix must exactly match an existing value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc864-146">次のコードのプレフィックスのコレクションにユーザーが指定したプレフィックスが含まれるかどうかを確認する例をチェックする<xref:System.Net.HttpListener>します。</span><span class="sxs-lookup"><span data-stu-id="cc864-146">The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc864-147">
            <paramref name="uriPrefix" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-147">
              <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc864-148">指定した配列に <see cref="T:System.Net.HttpListenerPrefixCollection" /> の内容をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-148">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-149">配列は、文字列を含めることができる必要があり、多次元にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cc864-149">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, int offset);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="cc864-150">このコレクション内の URI プレフィックス文字列を受け取る、1 次元の <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-150">The one dimensional <see cref="T:System.Array" /> that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="cc864-151">コピーの開始位置となる、<paramref name="array" /> 内の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-151">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc864-152">指定した配列に <see cref="T:System.Net.HttpListenerPrefixCollection" /> の内容をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-152">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-153">配列は、文字列を含めることができる必要があり、多次元にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cc864-153">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc864-154">次のコード例のプレフィックスのコピーを<xref:System.Net.HttpListenerPrefixCollection>します。</span><span class="sxs-lookup"><span data-stu-id="cc864-154">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc864-155">
            <paramref name="array" /> の次元が 2 次元以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-155">
              <paramref name="array" /> has more than one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc864-156">このコレクションには、<paramref name="offset" /> から始まる <paramref name="array" /> に格納できる数以上の要素が格納されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-156">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cc864-157">このコレクションに関連付けられている <see cref="T:System.Net.HttpListener" /> は閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-157">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cc864-158">
            <paramref name="array" /> には文字列値を格納できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-158">
              <paramref name="array" /> cannot store string values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(string[] array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As String(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::String ^&gt; ^ array, int offset);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : string[] * int -&gt; unit&#xA;override this.CopyTo : string[] * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="cc864-159">このコレクション内の URI プレフィックス文字列を受け取る 1 次元文字列配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-159">The one dimensional string array that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="cc864-160">コピーの開始位置となる、<paramref name="array" /> 内の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-160">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc864-161">指定した文字列配列に <see cref="T:System.Net.HttpListenerPrefixCollection" /> の内容をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-161">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified string array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-162">配列は、文字列を含めることができる必要があり、多次元にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cc864-162">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc864-163">次のコード例のプレフィックスのコピーを<xref:System.Net.HttpListenerPrefixCollection>します。</span><span class="sxs-lookup"><span data-stu-id="cc864-163">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc864-164">
            <paramref name="array" /> の次元が 2 次元以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-164">
              <paramref name="array" /> has more than one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc864-165">このコレクションには、<paramref name="offset" /> から始まる <paramref name="array" /> に格納できる数以上の要素が格納されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-165">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cc864-166">このコレクションに関連付けられている <see cref="T:System.Net.HttpListener" /> は閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-166">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.HttpListenerPrefixCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc864-167">コレクションに格納されているプレフィックスの数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-167">Gets the number of prefixes contained in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc864-168">このコレクション内のプレフィックスの数を格納している <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-168">An <see cref="T:System.Int32" /> that contains the number of prefixes in this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc864-169">次のコード例では、コレクションの中に、プレフィックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="cc864-169">The following code example displays the prefixes in a collection.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;string&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;string&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::String ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;" Usage="httpListenerPrefixCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc864-170">コレクションを反復処理するために使用できるオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-170">Returns an object that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc864-171">
            <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装し、このコレクション内の文字列にアクセスできるようにするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-171">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-172">このメソッドによって返されるオブジェクトは最初に、このコレクションの最初の要素の前に配置します。</span><span class="sxs-lookup"><span data-stu-id="cc864-172">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="cc864-173">呼び出す必要があります、<xref:System.Collections.IEnumerator.MoveNext%2A>メソッドの最初の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="cc864-173">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="cc864-174">現在の位置にある要素にアクセスするには、呼び出し、<xref:System.Collections.IEnumerator.Current%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cc864-174">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="cc864-175">列挙子を使用しているときにコレクションを変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="cc864-175">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="cc864-176">列挙子の中に、コレクションが変更された場合の使用、呼び出すことで、位置を設定しようと<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>により、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="cc864-176">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="cc864-177">列挙子の詳細については、ドキュメントを参照してください、<xref:System.Collections.IEnumerator>クラスおよび<xref:System.Collections.IEnumerable.GetEnumerator%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="cc864-177">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc864-178">次のコード例では、コレクションの列挙を示します。</span><span class="sxs-lookup"><span data-stu-id="cc864-178">The following code example demonstrates enumerating through a collection.</span></span> <span data-ttu-id="cc864-179">Visual Basic と c# の例が、列挙子を取得する代わりにコレクションを列挙するために言語固有のステートメントを使用することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="cc864-179">Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc864-180">コレクションへのアクセスが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-180">Gets a value that indicates whether access to the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc864-181">常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-181">Always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc864-182">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-182">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc864-183">このプロパティは常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-183">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-184">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="cc864-184">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cc864-185">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="cc864-185">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cc864-186">列挙中にスレッド セーフを保証するためには、すべての列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="cc864-186">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="httpListenerPrefixCollection.Remove uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">
          <span data-ttu-id="cc864-187">削除する URI プレフィックスを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-187">A <see cref="T:System.String" /> that contains the URI prefix to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc864-188">
            <see cref="T:System.Net.HttpListener" /> オブジェクトが処理するプレフィックスのリストから、指定した URI を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-188">Removes the specified Uniform Resource Identifier (URI) from the list of prefixes handled by the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc864-189">
            <paramref name="uriPrefix" /> が <see cref="T:System.Net.HttpListenerPrefixCollection" /> に存在していたが削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-189">
              <see langword="true" /> if the <paramref name="uriPrefix" /> was found in the <see cref="T:System.Net.HttpListenerPrefixCollection" /> and removed; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-190">場合`uriPrefix`はこのメソッドでは、コレクション内にないは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="cc864-190">If `uriPrefix` is not in the collection, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc864-191">
            <paramref name="uriPrefix" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-191">
              <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="cc864-192">Windows 関数呼び出しが失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-192">A Windows function call failed.</span>
          </span>
          <span data-ttu-id="cc864-193">例外の原因を判断するには、例外のエラー コードをチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-193">To determine the cause of the exception, check the exception's error code.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cc864-194">このコレクションに関連付けられている <see cref="T:System.Net.HttpListener" /> は閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-194">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="cc864-195">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="cc864-195">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="cc864-196">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="cc864-196">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc864-197">コレクションを反復処理するために使用できるオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-197">Returns an object that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc864-198">
            <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装し、このコレクション内の文字列にアクセスできるようにするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc864-198">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc864-199">このメソッドによって返されるオブジェクトは最初に、このコレクションの最初の要素の前に配置します。</span><span class="sxs-lookup"><span data-stu-id="cc864-199">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="cc864-200">呼び出す必要があります、<xref:System.Collections.IEnumerator.MoveNext%2A>メソッドの最初の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="cc864-200">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="cc864-201">現在の位置にある要素にアクセスするには、呼び出し、<xref:System.Collections.IEnumerator.Current%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cc864-201">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="cc864-202">列挙子を使用しているときにコレクションを変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="cc864-202">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="cc864-203">列挙子の中に、コレクションが変更された場合の使用、呼び出すことで、位置を設定しようと<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>により、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="cc864-203">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="cc864-204">列挙子の詳細については、ドキュメントを参照してください、<xref:System.Collections.IEnumerator>クラスおよび<xref:System.Collections.IEnumerable.GetEnumerator%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="cc864-204">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
  </Members>
</Type>