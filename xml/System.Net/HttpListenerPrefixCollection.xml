<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListenerPrefixCollection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a910a92ea8338c314dd13300d5590ed784206a40.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a910a92ea8338c314dd13300d5590ed784206a40</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>Represents the collection used to store Uniform Resource Identifier (URI) prefixes for <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> オブジェクトの URI (Uniform Resource Identifier) プレフィックスの格納に使用するコレクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property returns instances of this collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>プロパティがこのコレクションのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> and adds user-specified prefixes to its <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>へのユーザーが指定したプレフィックスを追加し、その<ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the URI information that is compared in incoming requests.</source>
          <target state="translated">受信要求で比較される URI 情報を識別する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The prefix must be terminated with a forward slash ("/").</source>
          <target state="translated">プレフィックスは、スラッシュ ("/") で終了する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Adds a Uniform Resource Identifier (URI) prefix to the collection.</source>
          <target state="translated">URI (Uniform Resource Identifier) プレフィックスをコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>This method adds a URI prefix to the set of prefixes managed by the associated <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">このメソッドは、関連付けられたによって管理されるプレフィックスのセットに URI プレフィックスを追加<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>When checking <ph id="ph1">`uriPrefix`</ph> to ensure it is valid, case is ignored.</source>
          <target state="translated">チェックするときに<ph id="ph1">`uriPrefix`</ph>に有効であることを確認するには、大文字と小文字を区別します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path, for example, "<ph id="ph1">`http://www.contoso.com:8080/customerData``/`</ph>".</source>
          <target state="translated">URI のプレフィックス文字列がから成るスキーム (http または https)、ホスト、任意のポート、および省略可能なパスでは、たとえば、"<ph id="ph1">`http://www.contoso.com:8080/customerData``/`</ph>"です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The prefix must be terminated with a forward slash ("/").</source>
          <target state="translated">プレフィックスは、スラッシュ ("/") で終了する必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> with the prefix that most closely matches a requested URI responds to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>要求 URI に最も一致するプレフィックスを持つ要求に応答します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Multiple <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objects cannot add the same prefix.</source>
          <target state="translated">複数<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクトが同一のプレフィックスを追加できません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph> exception is thrown if an <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> adds a prefix that is already in use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>例外がスローされます、<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>で使用されるプレフィックスは既にを追加します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>When a port is specified, the host element can be replaced with "<ph id="ph1">`*`</ph>" to indicate that the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> accepts requests sent to the port if the requested URI does not match any other prefix.</source>
          <target state="translated">ホストの要素を置き換えることが、ポートを指定すると、"<ph id="ph1">`*`</ph>"ことを示す、<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>要求された URI が他のプレフィックスと一致しない場合、ポートに送信された要求を受け入れます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>For example, to receive all requests sent to port 8080 when the requested URI is not handled by any other <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the prefix is "<ph id="ph2">`http://*:8080``/`</ph>".</source>
          <target state="translated">たとえば、すべての要求を受信するポート 8080 が要求された URI が、その他の処理されないときに送信<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>、プレフィックスは"<ph id="ph2">`http://*:8080``/`</ph>"です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Similarly, to specify that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> accepts all requests sent to a port, replace the host element with the "<ph id="ph2">`+`</ph>" character, "<ph id="ph3">`https://+:8080`</ph>/".</source>
          <target state="translated">同様に、ことを指定する、 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 、ポートに送信されたすべての要求を受け入れるを持つホスト要素を交換して、"<ph id="ph2">`+`</ph>、"character"<ph id="ph3">`https://+:8080`</ph>/"です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The "<ph id="ph1">`*`</ph>" and "<ph id="ph2">`+`</ph>" characters can be present in prefixes that include paths.</source>
          <target state="translated">"<ph id="ph1">`*`</ph>「と」<ph id="ph2">`+`</ph>"文字のパスを含むプレフィックスに使用できます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Starting with .NET 4.5.3 and Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">.NET 4.5.3 および Windows 10 以降で管理されている URI プレフィックスでサブドメインをワイルドカードはサポートされて、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>To specify a wildcard subdomain, use the "*" character as part of the hostname in a URI prefix: for example, <ph id="ph1">`http://*.foo.com/`</ph>, and pass this as the argument to the HttpListenerPrefixCollection.Add method.</source>
          <target state="translated">ワイルドカードのサブドメインを指定する、"*"URI プレフィックスのホスト名の一部として文字: たとえば、 <ph id="ph1">`http://*.foo.com/`</ph>、HttpListenerPrefixCollection.Add メソッドを引数として渡すとします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>This will work on .NET 4.5.3 and Windows 10; in earlier versions, this would generate an <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph></source>
          <target state="translated">これは .NET 4.5.3 および Windows 10 の機能します。以前のバージョンでこの生成は、 <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> and adds user-specified prefixes to its <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>へのユーザーが指定したプレフィックスを追加し、その<ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> does not use the http:// or https:// scheme.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> が、http:// または https:// スキームを使用していません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>These are the only schemes supported for <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> オブジェクトでは、これらのスキームのみがサポートされています。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> is not a correctly formatted URI prefix.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> が、正しい書式の URI プレフィックスではありません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Make sure the string is terminated with a "/".</source>
          <target state="translated">文字列が "/" で終わっていることを確認してください。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">このコレクションに関連付けられている <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> は閉じています。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>A Windows function call failed.</source>
          <target state="translated">Windows の関数呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">例外の <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> プロパティを調べて、例外の原因を確認します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>This exception is thrown if another <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> has already added the prefix <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph>.</source>
          <target state="translated">この例外は、別の <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> が既にプレフィックス <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph> を追加している場合にスローされます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>To accept network connections.</source>
          <target state="translated">ネットワーク接続を受け入れます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Accept" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Accept" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>Removes all the Uniform Resource Identifier (URI) prefixes from the collection.</source>
          <target state="translated">コレクションからすべての URI プレフィックスを削除します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>After calling this method, you cannot start the associated <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> without adding new prefixes; if you try to do so, an exception is thrown.</source>
          <target state="translated">このメソッドを呼び出した後に起動できない場合、関連付けられている<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>; 新しいプレフィックスを追加することがなくしようとするためには、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>The following code example removes all prefixes in an <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">次のコード例は、のすべてのプレフィックスを削除、<ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>A Windows function call failed.</source>
          <target state="translated">Windows の関数呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">例外の <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> プロパティを調べて、例外の原因を確認します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">このコレクションに関連付けられている <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> は閉じています。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Clear">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the Uniform Resource Identifier (URI) prefix to test.</source>
          <target state="translated">テストする Uniform Resource Identifier (URI) プレフィックスを格納している <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the specified prefix is contained in the collection.</source>
          <target state="translated">指定したプレフィックスがコレクションに含まれているかどうかを示す <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を返します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this collection contains the prefix specified by <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このコレクションに <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph> で指定したプレフィックスが存在する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source>The specified prefix must exactly match an existing value.</source>
          <target state="translated">指定したプレフィックスでは、既存の値を正確に一致する必要があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source>The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">次のコード例のチェックのプレフィックス コレクションにユーザーが指定したプレフィックスが含まれているかどうかを表示する、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>Copies the contents of an <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> to the specified array.</source>
          <target state="translated">指定した配列に <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> の内容をコピーします。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerPrefixCollection">
          <source>The array must be able to contain strings and cannot be multidimensional.</source>
          <target state="translated">配列は、文字列を格納できる必要があり、多次元にすることはできません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The one dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</source>
          <target state="translated">このコレクション内の URI プレフィックス文字列を受け取る、1 次元の <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the contents of an <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> to the specified array.</source>
          <target state="translated">指定した配列に <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> の内容をコピーします。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The array must be able to contain strings and cannot be multidimensional.</source>
          <target state="translated">配列は、文字列を格納できる必要があり、多次元にすることはできません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The following code example copies the prefixes in a <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">次のコード例をコピーのプレフィックス、<ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> has more than one dimension.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> の次元が 2 次元以上です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>This collection contains more elements than can be stored in <ph id="ph1">&lt;paramref name="array" /&gt;</ph> starting at <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated">このコレクションには、<ph id="ph2">&lt;paramref name="offset" /&gt;</ph> から始まる <ph id="ph1">&lt;paramref name="array" /&gt;</ph> に格納できる数以上の要素が格納されています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">このコレクションに関連付けられている <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> は閉じています。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> cannot store string values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> には文字列値を格納できません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The one dimensional string array that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</source>
          <target state="translated">このコレクション内の URI プレフィックス文字列を受け取る 1 次元文字列配列。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>Copies the contents of an <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> to the specified string array.</source>
          <target state="translated">指定した文字列配列に <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> の内容をコピーします。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The array must be able to contain strings and cannot be multidimensional.</source>
          <target state="translated">配列は、文字列を格納できる必要があり、多次元にすることはできません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The following code example copies the prefixes in a <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>.</source>
          <target state="translated">次のコード例をコピーのプレフィックス、<ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> has more than one dimension.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> の次元が 2 次元以上です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>This collection contains more elements than can be stored in <ph id="ph1">&lt;paramref name="array" /&gt;</ph> starting at <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated">このコレクションには、<ph id="ph2">&lt;paramref name="offset" /&gt;</ph> から始まる <ph id="ph1">&lt;paramref name="array" /&gt;</ph> に格納できる数以上の要素が格納されています。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">このコレクションに関連付けられている <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> は閉じています。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerPrefixCollection.Count">
          <source>Gets the number of prefixes contained in the collection.</source>
          <target state="translated">コレクションに格納されているプレフィックスの数を取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.Count">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the number of prefixes in this collection.</source>
          <target state="translated">このコレクション内のプレフィックスの数を格納している <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.Count">
          <source>The following code example displays the prefixes in a collection.</source>
          <target state="translated">次のコード例では、コレクションの中に、プレフィックスが表示されます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>Returns an object that can be used to iterate through the collection.</source>
          <target state="translated">コレクションを反復処理するために使用できるオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface and provides access to the strings in this collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> インターフェイスを実装し、このコレクション内の文字列にアクセスできるようにするオブジェクト。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>The object that is returned by this method is initially positioned before the first element in this collection.</source>
          <target state="translated">このメソッドによって返されるオブジェクトは最初にこのコレクションの最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>You must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method before you can access the first element.</source>
          <target state="translated">呼び出す必要があります、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>メソッドの最初の要素にアクセスできるようにします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>To access the element at the current position, call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">現在の位置にある要素にアクセスするには、呼び出し、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>Do not modify the collection while using the enumerator.</source>
          <target state="translated">列挙子の使用中にコレクションを変更しないでください。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>If the collection is modified while an enumerator is in use, an attempt to set the position by calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">列挙中にコレクションが変更された場合を使用して、呼び出すことで位置を設定しようとすると、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>により、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>For a detailed description of enumerators, see the documentation for the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">列挙子の詳細については、ドキュメントを参照して、<ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph>クラスおよび<ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>The following code example demonstrates enumerating through a collection.</source>
          <target state="translated">次のコード例では、コレクションの列挙処理を示しています。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
          <source>Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.</source>
          <target state="translated">Visual Basic および c# の例で言語固有のステートメントを使用して、列挙子を取得する代わりに、コレクションを列挙することに注意してください。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
          <source>Gets a value that indicates whether access to the collection is read-only.</source>
          <target state="translated">コレクションへのアクセスが読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</source>
          <target state="translated">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the URI prefix to remove.</source>
          <target state="translated">削除する URI プレフィックスを格納している <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>Removes the specified Uniform Resource Identifier (URI) from the list of prefixes handled by the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> オブジェクトが処理するプレフィックスのリストから、指定した URI を削除します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph> was found in the <ph id="ph3">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> and removed; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="uriPrefix" /&gt;</ph> が <ph id="ph3">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> に存在していたが削除された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>If <ph id="ph1">`uriPrefix`</ph> is not in the collection, this method does nothing.</source>
          <target state="translated">場合<ph id="ph1">`uriPrefix`</ph>はこのメソッドでは、コレクションではなくは何も行われません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriPrefix" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>A Windows function call failed.</source>
          <target state="translated">Windows の関数呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>To determine the cause of the exception, check the exception's error code.</source>
          <target state="translated">例外の原因を判断するには、例外のエラー コードをチェックします。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> associated with this collection is closed.</source>
          <target state="translated">このコレクションに関連付けられている <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> は閉じています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an object that can be used to iterate through the collection.</source>
          <target state="translated">コレクションを反復処理するために使用できるオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface and provides access to the strings in this collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> インターフェイスを実装し、このコレクション内の文字列にアクセスできるようにするオブジェクト。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The object that is returned by this method is initially positioned before the first element in this collection.</source>
          <target state="translated">このメソッドによって返されるオブジェクトは最初にこのコレクションの最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>You must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method before you can access the first element.</source>
          <target state="translated">呼び出す必要があります、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>メソッドの最初の要素にアクセスできるようにします。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To access the element at the current position, call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">現在の位置にある要素にアクセスするには、呼び出し、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Do not modify the collection while using the enumerator.</source>
          <target state="translated">列挙子の使用中にコレクションを変更しないでください。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified while an enumerator is in use, an attempt to set the position by calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">列挙中にコレクションが変更された場合を使用して、呼び出すことで位置を設定しようとすると、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>により、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>For a detailed description of enumerators, see the documentation for the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">列挙子の詳細については、ドキュメントを参照して、<ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph>クラスおよび<ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph>メソッドです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>