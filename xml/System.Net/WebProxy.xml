<Type Name="WebProxy" FullName="System.Net.WebProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fd8b11840206b4d0638da8fd5458ab79a63de28" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58695610" /></Metadata><TypeSignature Language="C#" Value="public class WebProxy : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WebProxy extends System.Object implements class System.Net.IWebProxy, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class WebProxy&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebProxy : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebProxy = class&#xA;    interface ISerializable&#xA;    interface IWebProxy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebProxy</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.IWebProxy</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="654e5-101"><see cref="T:System.Net.WebRequest" /> クラスの HTTP プロキシ設定を格納します。</span><span class="sxs-lookup"><span data-stu-id="654e5-101">Contains HTTP proxy settings for the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-102"><xref:System.Net.WebProxy>クラスには、プロキシ設定が含まれていますを<xref:System.Net.WebRequest>Web プロキシが要求を送信するために使用するかどうかを判断するインスタンスを使用します。</span><span class="sxs-lookup"><span data-stu-id="654e5-102">The <xref:System.Net.WebProxy> class contains the proxy settings that <xref:System.Net.WebRequest> instances use to determine whether a Web proxy is used to send requests.</span></span> <span data-ttu-id="654e5-103">グローバルの Web プロキシ設定をコンピューターとアプリケーション構成ファイル、およびアプリケーションで指定できますがのインスタンスを使用して、 <xref:System.Net.WebProxy> Web プロキシの使用方法をカスタマイズするクラス。</span><span class="sxs-lookup"><span data-stu-id="654e5-103">Global Web proxy settings can be specified in machine and application configuration files, and applications can use instances of the <xref:System.Net.WebProxy> class to customize Web proxy use.</span></span> <span data-ttu-id="654e5-104"><xref:System.Net.WebProxy>クラスの基本実装は、<xref:System.Net.IWebProxy>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="654e5-104">The <xref:System.Net.WebProxy> class is the base implementation of the <xref:System.Net.IWebProxy> interface.</span></span>  
  
 <span data-ttu-id="654e5-105">Web プロキシ クラスのインスタンスを取得するには、次の方法のいずれかを使用できます。</span><span class="sxs-lookup"><span data-stu-id="654e5-105">To obtain instances of the Web proxy class, you can use any of the following methods:</span></span>  
  
-   <span data-ttu-id="654e5-106"><xref:System.Net.WebProxy.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="654e5-106">The <xref:System.Net.WebProxy.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="654e5-107"><xref:System.Net.WebProxy.GetDefaultProxy%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="654e5-107">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method.</span></span>  
  
-   <span data-ttu-id="654e5-108"><xref:System.Net.GlobalProxySelection.Select%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="654e5-108">The <xref:System.Net.GlobalProxySelection.Select%2A> method.</span></span>  
  
 <span data-ttu-id="654e5-109">これらの各メソッドの指定、<xref:System.Net.WebProxy>がさらにするインスタンスのカスタマイズは、両者の違いは、アプリケーションに返される前に、インスタンスを初期化する方法。</span><span class="sxs-lookup"><span data-stu-id="654e5-109">These methods each supply a <xref:System.Net.WebProxy> instance that you can further customize; the difference between them is how the instance is initialized before it is returned to your application.</span></span> <span data-ttu-id="654e5-110"><xref:System.Net.WebProxy.%23ctor%2A>コンス トラクターのインスタンスを返します、<xref:System.Net.WebProxy>クラス、<xref:System.Net.WebProxy.Address%2A>プロパティに設定`null`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-110">The <xref:System.Net.WebProxy.%23ctor%2A> constructor returns an instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A> property set to `null`.</span></span> <span data-ttu-id="654e5-111">要求を使用する場合、<xref:System.Net.WebProxy>要求を送信するこの状態では、プロキシなしでインスタンスを使用します。</span><span class="sxs-lookup"><span data-stu-id="654e5-111">When a request uses a <xref:System.Net.WebProxy> instance in this state, no proxy is used to send the request.</span></span>  
  
 <span data-ttu-id="654e5-112"><xref:System.Net.WebProxy.GetDefaultProxy%2A>メソッドのインスタンスを返します、<xref:System.Net.WebProxy>クラス、 <xref:System.Net.WebProxy.Address%2A>、 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>、および<xref:System.Net.WebProxy.BypassList%2A>Internet Explorer 5.5 以降を使用する値に設定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-112">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method returns an instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A>, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>, and <xref:System.Net.WebProxy.BypassList%2A> properties set to the values used by Internet Explorer 5.5 and later.</span></span>  
  
 <span data-ttu-id="654e5-113"><xref:System.Net.GlobalProxySelection.Select%2A>メソッドのインスタンスを返します、<xref:System.Net.WebProxy>クラスとプロパティ ファイルの設定を Internet Explorer と構成の組み合わせに従って設定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-113">The <xref:System.Net.GlobalProxySelection.Select%2A> method returns an instance of the <xref:System.Net.WebProxy> class with it properties set according to a combination of Internet Explorer and configuration file settings.</span></span>  
  
 <span data-ttu-id="654e5-114"><xref:System.Net.WebProxy>クラスには、自動検出し、プロキシ構成スクリプトの実行がサポートしています。</span><span class="sxs-lookup"><span data-stu-id="654e5-114">The <xref:System.Net.WebProxy> class supports automatic detection and execution of proxy configuration scripts.</span></span> <span data-ttu-id="654e5-115">この機能は、Web プロキシの自動検出 (WPAD) とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="654e5-115">This feature is also known as Web Proxy Auto-Discovery (WPAD).</span></span> <span data-ttu-id="654e5-116">自動プロキシ構成を使用して、通常 wpad.dat 構成スクリプトをする必要がありますにある、ダウンロード、コンパイルされると、され、実行します。</span><span class="sxs-lookup"><span data-stu-id="654e5-116">When using automatic proxy configuration, a configuration script, typically named Wpad.dat, must be located, downloaded, compiled, and run.</span></span> <span data-ttu-id="654e5-117">これらの操作が成功した場合は、スクリプトは、要求に対して使用できるプロキシを返します。</span><span class="sxs-lookup"><span data-stu-id="654e5-117">If these operations are successful, the script returns the proxies that can be used for a request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-118">次のコード例の割り当て、<xref:System.Net.WebProxy>インスタンスを<xref:System.Net.WebRequest>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-118">The following code example assigns a <xref:System.Net.WebProxy> instance to a <xref:System.Net.WebRequest> instance.</span></span> <span data-ttu-id="654e5-119"><xref:System.Net.WebRequest>インスタンスでは、プロキシを使用して、外部のインターネット リソースに接続します。</span><span class="sxs-lookup"><span data-stu-id="654e5-119">The <xref:System.Net.WebRequest> instance uses the proxy to connect to external Internet resources.</span></span> <span data-ttu-id="654e5-120">(WPAD 機能の使用方法を示す例では、ドキュメントを参照してください、<xref:System.Net.IWebProxyScript>クラスです)。</span><span class="sxs-lookup"><span data-stu-id="654e5-120">(For an example that demonstrates using the WPAD feature, see the documentation for the <xref:System.Net.IWebProxyScript> class.)</span></span>  
  
 [!code-cpp[Classic WebProxy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebProxy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebProxy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebProxy Example/CS/source.cs#1)]
 [!code-vb[Classic WebProxy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebProxy Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="654e5-121"><see cref="T:System.Net.WebProxy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-121">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="654e5-122"><see cref="T:System.Net.WebProxy" /> クラスの空のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-122">Initializes an empty instance of the <see cref="T:System.Net.WebProxy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-123">既定のコンス トラクターの空のインスタンスを初期化します、<xref:System.Net.WebProxy>クラス、<xref:System.Net.WebProxy.Address%2A>プロパティに設定`null`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-123">The default constructor initializes an empty instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A> property set to `null`.</span></span>  
  
 <span data-ttu-id="654e5-124">ときに、<xref:System.Net.WebProxy.Address%2A>プロパティは`null`、<xref:System.Net.WebProxy.IsBypassed%2A>メソッドを返します。`true`と<xref:System.Net.WebProxy.GetProxy%2A>メソッドは、宛先アドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="654e5-124">When the <xref:System.Net.WebProxy.Address%2A> property is `null`, the <xref:System.Net.WebProxy.IsBypassed%2A> method returns `true` and the <xref:System.Net.WebProxy.GetProxy%2A> method returns the destination address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-125">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-125">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#1)]
 [!code-csharp[NCLWebProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy Address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="654e5-126">プロキシ サーバーの URI。</span><span class="sxs-lookup"><span data-stu-id="654e5-126">The URI of the proxy server.</span></span></param>
        <summary><span data-ttu-id="654e5-127">指定した URI を使用して、<see cref="T:System.Net.WebProxy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-127">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-128"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定、<xref:System.Uri>インスタンスを含む`Address`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-128">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance containing `Address`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-129">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-129">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#6)]
 [!code-csharp[NCLWebProxy#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="654e5-130"><paramref name="Address" /> が無効な URI です。</span><span class="sxs-lookup"><span data-stu-id="654e5-130"><paramref name="Address" /> is an invalid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy Address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="654e5-131">プロキシ サーバーのアドレスを格納している <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-131">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></param>
        <summary><span data-ttu-id="654e5-132">指定した <see cref="T:System.Net.WebProxy" /> インスタンスから <see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-132">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class from the specified <see cref="T:System.Uri" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-133"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定、`Address`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="654e5-133">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to the `Address` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-134">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-134">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#2)]
 [!code-csharp[NCLWebProxy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebProxy (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebProxy(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="654e5-135">シリアル化データ。</span><span class="sxs-lookup"><span data-stu-id="654e5-135">The serialization data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="654e5-136">シリアル化されたデータのコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="654e5-136">The context for the serialized data.</span></span></param>
        <summary><span data-ttu-id="654e5-137">既にシリアル化されたコンテンツを使用して、<see cref="T:System.Net.WebProxy" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-137">Initializes an instance of the <see cref="T:System.Net.WebProxy" /> class using previously serialized content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-138">このメソッドは逆シリアル化するシステム、<xref:System.Net.WebProxy>インスタンスは呼び出さないでくださいアプリケーション操作を行います。</span><span class="sxs-lookup"><span data-stu-id="654e5-138">This method is called by the system to deserialize a <xref:System.Net.WebProxy> instance; applications do not call it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="654e5-139">プロキシ サーバーの URI。</span><span class="sxs-lookup"><span data-stu-id="654e5-139">The URI of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="654e5-140">ローカル アドレスのプロキシをバイパスする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-140"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="654e5-141">指定した URI とバイパス設定を使用して、<see cref="T:System.Net.WebProxy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-141">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI and bypass setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-142"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定、<xref:System.Uri>インスタンスを含む`Address`と<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>プロパティに設定`BypassOnLocal`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-142">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address` and the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-143">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-143">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#7)]
 [!code-csharp[NCLWebProxy#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="654e5-144"><paramref name="Address" /> が無効な URI です。</span><span class="sxs-lookup"><span data-stu-id="654e5-144"><paramref name="Address" /> is an invalid URI.</span></span></exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Host, int Port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Host, int32 Port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Host As String, Port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Host, int Port);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * int -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Host, Port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Host" Type="System.String" />
        <Parameter Name="Port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Host"><span data-ttu-id="654e5-145">プロキシ ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="654e5-145">The name of the proxy host.</span></span></param>
        <param name="Port"><span data-ttu-id="654e5-146">使用する <paramref name="Host" /> のポート番号。</span><span class="sxs-lookup"><span data-stu-id="654e5-146">The port number on <paramref name="Host" /> to use.</span></span></param>
        <summary><span data-ttu-id="654e5-147">指定したホストとポート番号を使用して、<see cref="T:System.Net.WebProxy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-147">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified host and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-148"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定する<xref:System.Uri>フォーム http:// のインスタンス`Host`:`Port`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-148">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance of the form http:// `Host` : `Port`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-149">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-149">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#5)]
 [!code-csharp[NCLWebProxy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="654e5-150"><paramref name="Host" /> と <paramref name="Port" /> の組み合わせによって形成される URI が有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="654e5-150">The URI formed by combining <paramref name="Host" /> and <paramref name="Port" /> is not a valid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="654e5-151">プロキシ サーバーのアドレスを格納している <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-151">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="654e5-152">ローカル アドレスのプロキシをバイパスする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-152"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="654e5-153"><see cref="T:System.Net.WebProxy" /> インスタンスとバイパス設定を使用して、<see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-153">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the <see cref="T:System.Uri" /> instance and bypass setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-154"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定`Address`を使用して、<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>プロパティに設定`BypassOnLocal`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-154">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address` and with the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-155">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-155">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#3)]
 [!code-csharp[NCLWebProxy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal, string[] BypassList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal, string[] BypassList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean, BypassList As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool * string[] -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="654e5-156">プロキシ サーバーの URI。</span><span class="sxs-lookup"><span data-stu-id="654e5-156">The URI of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="654e5-157">ローカル アドレスのプロキシをバイパスする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-157"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <param name="BypassList"><span data-ttu-id="654e5-158">バイパスするサーバーの URI を含む正規表現文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="654e5-158">An array of regular expression strings that contain the URIs of the servers to bypass.</span></span></param>
        <summary><span data-ttu-id="654e5-159">指定した URI、バイパス設定、およびバイパスする URI の一覧を使用して、<see cref="T:System.Net.WebProxy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-159">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, and list of URIs to bypass.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-160"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定、<xref:System.Uri>インスタンスを含む`Address`、<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>プロパティに設定`BypassOnLocal`、および<xref:System.Net.WebProxy.BypassList%2A>プロパティに設定`BypassList`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-160">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, and the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-161">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-161">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#8)]
 [!code-csharp[NCLWebProxy#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="654e5-162"><paramref name="Address" /> が無効な URI です。</span><span class="sxs-lookup"><span data-stu-id="654e5-162"><paramref name="Address" /> is an invalid URI.</span></span></exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
        <altmember cref="P:System.Net.WebProxy.BypassList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal, string[] BypassList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean, BypassList As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool * string[] -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="654e5-163">プロキシ サーバーのアドレスを格納している <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-163">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="654e5-164">ローカル アドレスのプロキシをバイパスする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-164"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <param name="BypassList"><span data-ttu-id="654e5-165">バイパスするサーバーの URI を含む正規表現文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="654e5-165">An array of regular expression strings that contains the URIs of the servers to bypass.</span></span></param>
        <summary><span data-ttu-id="654e5-166">指定した <see cref="T:System.Net.WebProxy" /> インスタンス、バイパス設定、およびバイパスする URI の一覧を使用して、<see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-166">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, and list of URIs to bypass.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-167"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定`Address`、<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>プロパティに設定`BypassOnLocal`、および<xref:System.Net.WebProxy.BypassList%2A>プロパティに設定`BypassList`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-167">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, and the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-168">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-168">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#4)]
 [!code-csharp[NCLWebProxy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal, string[] BypassList, class System.Net.ICredentials Credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean, BypassList As String(), Credentials As ICredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList, System::Net::ICredentials ^ Credentials);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool * string[] * System.Net.ICredentials -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList, Credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
        <Parameter Name="Credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="654e5-169">プロキシ サーバーの URI。</span><span class="sxs-lookup"><span data-stu-id="654e5-169">The URI of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="654e5-170">ローカル アドレスのプロキシをバイパスする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-170"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <param name="BypassList"><span data-ttu-id="654e5-171">バイパスするサーバーの URI を含む正規表現文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="654e5-171">An array of regular expression strings that contains the URIs of the servers to bypass.</span></span></param>
        <param name="Credentials"><span data-ttu-id="654e5-172">認証用にプロキシ サーバーに送信する <see cref="T:System.Net.ICredentials" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-172">An <see cref="T:System.Net.ICredentials" /> instance to submit to the proxy server for authentication.</span></span></param>
        <summary><span data-ttu-id="654e5-173">指定した URI、バイパス設定、バイパスする URI の一覧、および資格情報を使用して、<see cref="T:System.Net.WebProxy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-173">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, list of URIs to bypass, and credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-174"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定する<xref:System.Uri>インスタンスを含む`Address`、<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>プロパティに設定`BypassOnLocal`、<xref:System.Net.WebProxy.BypassList%2A>プロパティに設定`BypassList`と<xref:System.Net.WebProxy.Credentials%2A>プロパティに設定`Credentials`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-174">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`, and the <xref:System.Net.WebProxy.Credentials%2A> property set to `Credentials`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-175">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-175">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#9)]
 [!code-csharp[NCLWebProxy#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="654e5-176"><paramref name="Address" /> が無効な URI です。</span><span class="sxs-lookup"><span data-stu-id="654e5-176"><paramref name="Address" /> is an invalid URI.</span></span></exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
        <altmember cref="P:System.Net.WebProxy.BypassList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal, string[] BypassList, class System.Net.ICredentials Credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean, BypassList As String(), Credentials As ICredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList, System::Net::ICredentials ^ Credentials);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool * string[] * System.Net.ICredentials -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList, Credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
        <Parameter Name="Credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="654e5-177">プロキシ サーバーのアドレスを格納している <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-177">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="654e5-178">ローカル アドレスのプロキシをバイパスする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-178"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <param name="BypassList"><span data-ttu-id="654e5-179">バイパスするサーバーの URI を含む正規表現文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="654e5-179">An array of regular expression strings that contains the URIs of the servers to bypass.</span></span></param>
        <param name="Credentials"><span data-ttu-id="654e5-180">認証用にプロキシ サーバーに送信する <see cref="T:System.Net.ICredentials" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-180">An <see cref="T:System.Net.ICredentials" /> instance to submit to the proxy server for authentication.</span></span></param>
        <summary><span data-ttu-id="654e5-181">指定した <see cref="T:System.Net.WebProxy" /> インスタンス、バイパス設定、バイパスする URI の一覧、および資格情報を使用して、<see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-181">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, list of URIs to bypass, and credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-182"><xref:System.Net.WebProxy>でインスタンスを初期化、<xref:System.Net.WebProxy.Address%2A>プロパティに設定`Address`、<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>プロパティに設定`BypassOnLocal`、<xref:System.Net.WebProxy.BypassList%2A>プロパティに設定`BypassList`、および<xref:System.Net.WebProxy.Credentials%2A>に設定するプロパティ`Credentials`.</span><span class="sxs-lookup"><span data-stu-id="654e5-182">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`, and the <xref:System.Net.WebProxy.Credentials%2A> property set to `Credentials`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-183">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-183">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#13)]
 [!code-csharp[NCLWebProxy#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.Address" />
      <MemberSignature Language="VB.NET" Value="Public Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Address : Uri with get, set" Usage="System.Net.WebProxy.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="654e5-184">プロキシ サーバーのアドレスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-184">Gets or sets the address of the proxy server.</span></span></summary>
        <value><span data-ttu-id="654e5-185">プロキシ サーバーのアドレスを格納している <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-185">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-186"><xref:System.Net.WebProxy.Address%2A>プロパティには、プロキシ サーバーのアドレスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="654e5-186">The <xref:System.Net.WebProxy.Address%2A> property contains the address of the proxy server.</span></span> <span data-ttu-id="654e5-187">自動プロキシ検出が有効でないと自動構成スクリプトが指定されていないときに、<xref:System.Net.WebProxy.Address%2A>プロパティと<xref:System.Net.WebProxy.BypassList%2A>要求に使用されるプロキシを決定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-187">When automatic proxy detection is not enabled, and no automatic configuration script is specified, the <xref:System.Net.WebProxy.Address%2A> property and <xref:System.Net.WebProxy.BypassList%2A> determine the proxy used for a request.</span></span>  
  
 <span data-ttu-id="654e5-188">ときに、<xref:System.Net.WebProxy.Address%2A>プロパティは`null`要求は、プロキシを使用しないし、宛先ホストに直接接続します。</span><span class="sxs-lookup"><span data-stu-id="654e5-188">When the <xref:System.Net.WebProxy.Address%2A> property is `null`, requests bypass the proxy and connect directly to the destination host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-189">次のコード例は、プロパティを表示、<xref:System.Net.WebProxy>オブジェクトを含むその<xref:System.Net.WebProxy.Address%2A>します。</span><span class="sxs-lookup"><span data-stu-id="654e5-189">The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its <xref:System.Net.WebProxy.Address%2A>.</span></span>  
  
 [!code-cpp[NCLAutoProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#1)]
 [!code-csharp[NCLAutoProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassArrayList">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList BypassArrayList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList BypassArrayList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassArrayList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BypassArrayList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ BypassArrayList { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BypassArrayList : System.Collections.ArrayList" Usage="System.Net.WebProxy.BypassArrayList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="654e5-190">プロキシ サーバーを使用しないアドレスの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="654e5-190">Gets a list of addresses that do not use the proxy server.</span></span></summary>
        <value><span data-ttu-id="654e5-191">アクセス時にプロキシ サーバーを使用しない URI を表す <see cref="T:System.Collections.ArrayList" /> 配列の一覧を格納する <see cref="P:System.Net.WebProxy.BypassList" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-191">An <see cref="T:System.Collections.ArrayList" /> that contains a list of <see cref="P:System.Net.WebProxy.BypassList" /> arrays that represents URIs that do not use the proxy server when accessed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-192"><xref:System.Net.WebProxy.BypassList%2A>は、Uri を記述する正規表現文字列の配列のリストを<xref:System.Net.WebRequest>インスタンスがプロキシ サーバーではなく直接にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="654e5-192">The <xref:System.Net.WebProxy.BypassList%2A> is an array list of regular expression strings that describe the URIs that a <xref:System.Net.WebRequest> instance accesses directly instead of through the proxy server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassList">
      <MemberSignature Language="C#" Value="public string[] BypassList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] BypassList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassList" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassList As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ BypassList { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BypassList : string[] with get, set" Usage="System.Net.WebProxy.BypassList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="654e5-193">プロキシ サーバーを使用しないアドレスの配列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-193">Gets or sets an array of addresses that do not use the proxy server.</span></span></summary>
        <value><span data-ttu-id="654e5-194">アクセス時にプロキシ サーバーを使用しない URI を記述する正規表現の一覧を格納する配列。</span><span class="sxs-lookup"><span data-stu-id="654e5-194">An array that contains a list of regular expressions that describe URIs that do not use the proxy server when accessed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-195"><xref:System.Net.WebProxy.BypassList%2A>プロパティには、Uri を記述する正規表現の配列が含まれている<xref:System.Net.WebRequest>プロキシ サーバー経由ではなく直接インスタンスにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="654e5-195">The <xref:System.Net.WebProxy.BypassList%2A> property contains an array of regular expressions that describe URIs that a <xref:System.Net.WebRequest> instance accesses directly instead of through the proxy server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-196">次のコード例は、プロパティを表示、<xref:System.Net.WebProxy>オブジェクトを含むその<xref:System.Net.WebProxy.BypassList%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="654e5-196">The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its <xref:System.Net.WebProxy.BypassList%2A> property.</span></span>  
  
 [!code-cpp[NCLAutoProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#1)]
 [!code-csharp[NCLAutoProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.Net.WebProxy.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="654e5-197">ローカル アドレスでプロキシ サーバーをバイパスするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-197">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span></span></summary>
        <value><span data-ttu-id="654e5-198">ローカル アドレスのプロキシ サーバーをバイパスする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-198"><see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="654e5-199">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="654e5-199">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-200">設定、<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>プロパティを決定するかどうか<xref:System.Net.WebRequest>インスタンスは、ローカル インターネット リソースにアクセスするときにプロキシ サーバーを使用します。</span><span class="sxs-lookup"><span data-stu-id="654e5-200">The setting of the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property determines whether <xref:System.Net.WebRequest> instances use the proxy server when accessing local Internet resources.</span></span>  
  
 <span data-ttu-id="654e5-201"><xref:System.Net.WebProxy.BypassProxyOnLocal%2A> が `true` の場合、ローカル インターネット リソースへの要求はプロキシ サーバーを使用しません。</span><span class="sxs-lookup"><span data-stu-id="654e5-201">If <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="654e5-202">URI では、ピリオド (.) がないため、ローカルの要求が識別されますhttp://webserver/、またはローカルのサーバーへのアクセスを含むhttp://localhost、 http://loopback、またはhttp://127.0.0.1します。</span><span class="sxs-lookup"><span data-stu-id="654e5-202">Local requests are identified by the lack of a period (.) in the URI, as in http://webserver/, or access the local server, including http://localhost, http://loopback, or http://127.0.0.1.</span></span> <span data-ttu-id="654e5-203"><xref:System.Net.WebProxy.BypassProxyOnLocal%2A> が `false` の場合、すべてのインターネット要求はプロキシ サーバー経由で行われます。</span><span class="sxs-lookup"><span data-stu-id="654e5-203">When <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="654e5-204">ピリオドを含む URI を持つローカル ホストへの要求では、プロキシを使用します。</span><span class="sxs-lookup"><span data-stu-id="654e5-204">Requests to a local host with a URI that contain a period use the proxy.</span></span> <span data-ttu-id="654e5-205">このような場合、プロキシを使用してを回避するには、内のホストのエントリを作成、<xref:System.Net.WebProxy.BypassList%2A>します。</span><span class="sxs-lookup"><span data-stu-id="654e5-205">To avoid using a proxy in these cases, create an entry for the host in the <xref:System.Net.WebProxy.BypassList%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-206">このプロパティを設定するコンス トラクターを呼び出し、このプロパティの値を取得する次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="654e5-206">The following code example demonstrates calling a constructor that sets this property and getting the value of this property.</span></span>  
  
 [!code-cpp[NCLWebProxy#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#7)]
 [!code-csharp[NCLWebProxy#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy CreateDefaultProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy CreateDefaultProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.CreateDefaultProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ CreateDefaultProxy();" />
      <MemberSignature Language="F#" Value="static member CreateDefaultProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebProxy.CreateDefaultProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebProxy.Credentials" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Net.IWebProxy.Credentials</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="654e5-207">認証用のプロキシ サーバーに送信する資格情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-207">Gets or sets the credentials to submit to the proxy server for authentication.</span></span></summary>
        <value><span data-ttu-id="654e5-208">認証用にプロキシ サーバーに送信する資格情報を格納する <see cref="T:System.Net.ICredentials" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-208">An <see cref="T:System.Net.ICredentials" /> instance that contains the credentials to submit to the proxy server for authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-209"><xref:System.Net.WebProxy.Credentials%2A>プロパティには 407 (プロキシ認証) の HTTP 状態コードへの応答でプロキシ サーバーに送信する認証資格情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="654e5-209">The <xref:System.Net.WebProxy.Credentials%2A> property contains the authentication credentials to send to the proxy server in response to an HTTP 407 (proxy authorization) status code.</span></span> <span data-ttu-id="654e5-210">ほとんどのクライアント シナリオで使用する必要があります、 <xref:System.Net.CredentialCache.DefaultCredentials%2A>、現在ログオンしているユーザーの資格情報であります。</span><span class="sxs-lookup"><span data-stu-id="654e5-210">In most client scenarios, you should use the <xref:System.Net.CredentialCache.DefaultCredentials%2A>, which are the credentials of the currently logged on user.</span></span> <span data-ttu-id="654e5-211">これを行うには、設定、<xref:System.Net.WebProxy.UseDefaultCredentials%2A>プロパティを`true`このプロパティを設定する代わりにします。</span><span class="sxs-lookup"><span data-stu-id="654e5-211">To do this, set the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true` instead of setting this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="654e5-212">設定した場合、<xref:System.Net.WebProxy.Credentials%2A>プロパティ以外の資格情報を<xref:System.Net.CredentialCache.DefaultCredentials%2A>で、設定、<xref:System.Net.WebProxy.UseDefaultCredentials%2A>プロパティを`true`により、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="654e5-212">If you set the <xref:System.Net.WebProxy.Credentials%2A> property to credentials other than the <xref:System.Net.CredentialCache.DefaultCredentials%2A>, setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true` causes a <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="654e5-213">これを防ぐためには、設定する必要があります、<xref:System.Net.WebProxy.Credentials%2A>プロパティを`null`設定する前に、<xref:System.Net.WebProxy.UseDefaultCredentials%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-213">To prevent this, you must set the <xref:System.Net.WebProxy.Credentials%2A> property to `null` before setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true`.</span></span> <span data-ttu-id="654e5-214">同様に、いずれかにこのプロパティを設定することはできません値と<xref:System.Net.WebProxy.UseDefaultCredentials%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-214">Likewise, you cannot set this property to any value when <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="654e5-215"><see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> プロパティが <see langword="true" /> に設定されているときにこのプロパティを設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="654e5-215">You attempted to set this property when the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> property was set to <see langword="true" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProxy">
      <MemberSignature Language="C#" Value="public static System.Net.WebProxy GetDefaultProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebProxy GetDefaultProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetDefaultProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProxy () As WebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebProxy ^ GetDefaultProxy();" />
      <MemberSignature Language="F#" Value="static member GetDefaultProxy : unit -&gt; System.Net.WebProxy" Usage="System.Net.WebProxy.GetDefaultProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use the proxy selected for you by default. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use the proxy selected for you by default. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="654e5-216">Internet Explorer の非動的なプロキシ設定を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="654e5-216">Reads the Internet Explorer nondynamic proxy settings.</span></span></summary>
        <returns><span data-ttu-id="654e5-217">Internet Explorer 5.5 以降からの非動的なプロキシ設定を格納する <see cref="T:System.Net.WebProxy" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-217">A <see cref="T:System.Net.WebProxy" /> instance that contains the nondynamic proxy settings from Internet Explorer 5.5 and later.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-218"><xref:System.Net.WebProxy.GetDefaultProxy%2A>メソッドは、Internet Explorer 5.5 以降で、格納されている非動的なプロキシ設定を読み取りし、作成、<xref:System.Net.WebProxy>これらの設定を持つインスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-218">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method reads the nondynamic proxy settings stored by Internet Explorer 5.5 and later, and creates a <xref:System.Net.WebProxy> instance with those settings.</span></span>  
  
 <span data-ttu-id="654e5-219"><xref:System.Net.WebProxy.GetDefaultProxy%2A> Internet Explorer によって実行されるスクリプトから、自動構成エントリ、または DHCP または DNS の参照から生成されるすべての動的な設定メソッドは取得されません。</span><span class="sxs-lookup"><span data-stu-id="654e5-219">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method does not pick up any dynamic settings that are generated from scripts run by Internet Explorer, from automatic configuration entries, or from DHCP or DNS lookups.</span></span>  
  
 <span data-ttu-id="654e5-220">アプリケーションを使用する必要があります、<xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=nameWithType>プロパティおよび<xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=nameWithType>メソッドの代わりに、<xref:System.Net.WebProxy.GetDefaultProxy%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="654e5-220">Applications should use the <xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=nameWithType> property and the <xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=nameWithType> method instead of the <xref:System.Net.WebProxy.GetDefaultProxy%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-221">次のコード例では、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="654e5-221">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLWebProxy#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#11)]
 [!code-csharp[NCLWebProxy#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="654e5-222">ネットワーク リソースに無制限のアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="654e5-222">for unrestricted access to network resources.</span></span> <span data-ttu-id="654e5-223">関連付けられた列挙:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />します。</span><span class="sxs-lookup"><span data-stu-id="654e5-223">Associated Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webProxy.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="654e5-224">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-224">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="654e5-225">このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-225">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="654e5-226"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-226">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data that is needed to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-227">含まれる任意のオブジェクト、<xref:System.Runtime.Serialization.SerializationInfo>自動的に追跡され、フォーマッタがシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="654e5-227">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxy">
      <MemberSignature Language="C#" Value="public Uri GetProxy (Uri destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GetProxy(class System.Uri destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetProxy(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxy (destination As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ GetProxy(Uri ^ destination);" />
      <MemberSignature Language="F#" Value="abstract member GetProxy : Uri -&gt; Uri&#xA;override this.GetProxy : Uri -&gt; Uri" Usage="webProxy.GetProxy destination" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.IWebProxy.GetProxy(System.Uri)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="654e5-228">要求されたインターネット リソースの <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-228">The <see cref="T:System.Uri" /> instance of the requested Internet resource.</span></span></param>
        <summary><span data-ttu-id="654e5-229">要求に対するプロキシの URI を返します。</span><span class="sxs-lookup"><span data-stu-id="654e5-229">Returns the proxied URI for a request.</span></span></summary>
        <returns><span data-ttu-id="654e5-230">インターネット リソースがバイパス一覧に含まれている場合は、そのリソースの <see cref="T:System.Uri" /> インスタンス。それ以外の場合はプロキシの <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-230">The <see cref="T:System.Uri" /> instance of the Internet resource, if the resource is on the bypass list; otherwise, the <see cref="T:System.Uri" /> instance of the proxy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-231"><xref:System.Net.WebProxy.GetProxy%2A>メソッドの取得、URI、<xref:System.Net.WebRequest>インターネット リソースにアクセスするインスタンスを使用します。</span><span class="sxs-lookup"><span data-stu-id="654e5-231">The <xref:System.Net.WebProxy.GetProxy%2A> method returns the URI that the <xref:System.Net.WebRequest> instance uses to access the Internet resource.</span></span>  
  
 <span data-ttu-id="654e5-232"><xref:System.Net.WebProxy.GetProxy%2A> 比較`destination`の内容を<xref:System.Net.WebProxy.BypassList%2A>を使用して、<xref:System.Net.WebProxy.IsBypassed%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="654e5-232"><xref:System.Net.WebProxy.GetProxy%2A> compares `destination` with the contents of <xref:System.Net.WebProxy.BypassList%2A>, using the <xref:System.Net.WebProxy.IsBypassed%2A> method.</span></span> <span data-ttu-id="654e5-233">場合<xref:System.Net.WebProxy.IsBypassed%2A>返します`true`、<xref:System.Net.WebProxy.GetProxy%2A>返します`destination`と<xref:System.Net.WebRequest>インスタンスでプロキシ サーバーが使用されていません。</span><span class="sxs-lookup"><span data-stu-id="654e5-233">If <xref:System.Net.WebProxy.IsBypassed%2A> returns `true`, <xref:System.Net.WebProxy.GetProxy%2A> returns `destination` and the <xref:System.Net.WebRequest> instance does not use the proxy server.</span></span>  
  
 <span data-ttu-id="654e5-234">場合`destination`内にない<xref:System.Net.WebProxy.BypassList%2A>、<xref:System.Net.WebRequest>インスタンスがプロキシ サーバーを使用して、<xref:System.Net.WebProxy.Address%2A>プロパティが返されます。</span><span class="sxs-lookup"><span data-stu-id="654e5-234">If `destination` is not in <xref:System.Net.WebProxy.BypassList%2A>, the <xref:System.Net.WebRequest> instance uses the proxy server and the <xref:System.Net.WebProxy.Address%2A> property is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-235">次のコード例を作成、<xref:System.Net.WebProxy>オブジェクトし、リソースの選択されているプロキシを取得するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="654e5-235">The following code example creates a <xref:System.Net.WebProxy> object and calls this method to get the proxy that is selected for a resource.</span></span>  
  
 [!code-cpp[NCLAutoProxy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#2)]
 [!code-csharp[NCLAutoProxy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="654e5-236"><paramref name="destination" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="654e5-236">The <paramref name="destination" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsBypassed">
      <MemberSignature Language="C#" Value="public bool IsBypassed (Uri host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBypassed(class System.Uri host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.IsBypassed(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBypassed (host As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBypassed(Uri ^ host);" />
      <MemberSignature Language="F#" Value="abstract member IsBypassed : Uri -&gt; bool&#xA;override this.IsBypassed : Uri -&gt; bool" Usage="webProxy.IsBypassed host" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.IWebProxy.IsBypassed(System.Uri)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="654e5-237">プロキシの使用を確認するホストの <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="654e5-237">The <see cref="T:System.Uri" /> instance of the host to check for proxy use.</span></span></param>
        <summary><span data-ttu-id="654e5-238">指定したホストでプロキシ サーバーを使用するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="654e5-238">Indicates whether to use the proxy server for the specified host.</span></span></summary>
        <returns><span data-ttu-id="654e5-239"><paramref name="host" /> でプロキシ サーバーを使用しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-239"><see langword="true" /> if the proxy server should not be used for <paramref name="host" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-240"><xref:System.Net.WebProxy.IsBypassed%2A>メソッドを使用して、インターネット リソースにアクセスするときに、プロキシ サーバーをバイパスするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="654e5-240">The <xref:System.Net.WebProxy.IsBypassed%2A> method is used to determine whether to bypass the proxy server when accessing an Internet resource.</span></span>  
  
 <span data-ttu-id="654e5-241"><xref:System.Net.WebProxy.BypassProxyOnLocal%2A>と<xref:System.Net.WebProxy.BypassList%2A>プロパティの戻り値の制御、<xref:System.Net.WebProxy.IsBypassed%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="654e5-241">The <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> and <xref:System.Net.WebProxy.BypassList%2A> properties control the return value of the <xref:System.Net.WebProxy.IsBypassed%2A> method.</span></span>  
  
 <span data-ttu-id="654e5-242"><xref:System.Net.WebProxy.IsBypassed%2A> 返します`true`次の条件のいずれか。</span><span class="sxs-lookup"><span data-stu-id="654e5-242"><xref:System.Net.WebProxy.IsBypassed%2A> returns `true` under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="654e5-243">場合<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>は`true`と`host`ローカル URI です。</span><span class="sxs-lookup"><span data-stu-id="654e5-243">If <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `true` and `host` is a local URI.</span></span> <span data-ttu-id="654e5-244">URI では、ピリオド (.) がないため、ローカルの要求が識別されます"http://webserver/"。</span><span class="sxs-lookup"><span data-stu-id="654e5-244">Local requests are identified by the lack of a period (.) in the URI, as in "http://webserver/".</span></span>  
  
-   <span data-ttu-id="654e5-245">場合`host`で正規表現と一致<xref:System.Net.WebProxy.BypassList%2A>します。</span><span class="sxs-lookup"><span data-stu-id="654e5-245">If `host` matches a regular expression in <xref:System.Net.WebProxy.BypassList%2A>.</span></span>  
  
-   <span data-ttu-id="654e5-246"><xref:System.Net.WebProxy.Address%2A> が `null` の場合。</span><span class="sxs-lookup"><span data-stu-id="654e5-246">If <xref:System.Net.WebProxy.Address%2A> is `null`.</span></span>  
  
 <span data-ttu-id="654e5-247">その他のすべての条件を返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="654e5-247">All other conditions return `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="654e5-248">次のコード例を作成、<xref:System.Net.WebProxy>オブジェクトし、バイパス リストが正しく設定されているかどうかを確認するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="654e5-248">The following code example creates a <xref:System.Net.WebProxy> object and calls this method to check whether the bypass list is properly set.</span></span>  
  
 [!code-cpp[NCLWebProxy#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#12)]
 [!code-csharp[NCLWebProxy#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="654e5-249"><paramref name="host" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="654e5-249">The <paramref name="host" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="654e5-250">データを読み込む先の <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="654e5-250">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="654e5-251">シリアル化の転送先を示す <see cref="T:System.Runtime.Serialization.StreamingContext" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="654e5-251">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that indicates the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="654e5-252"><see cref="T:System.Net.WebProxy" /> オブジェクトをシリアル化するためにシステムによって使用されるシリアル化データとコンテキストを作成します。</span><span class="sxs-lookup"><span data-stu-id="654e5-252">Creates the serialization data and context that are used by the system to serialize a <see cref="T:System.Net.WebProxy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-253">システムは、オブジェクトをシリアル化するには、このメソッドを呼び出しますアプリケーションは、直接呼び出しません。</span><span class="sxs-lookup"><span data-stu-id="654e5-253">The system calls this method to serialize an object; applications do not call it directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebProxy.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="654e5-254"><see cref="T:System.Boolean" /> が要求と共に送信されるかどうかを制御する <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="654e5-254">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</span></span></summary>
        <value><span data-ttu-id="654e5-255">既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="654e5-255"><see langword="true" /> if the default credentials are used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="654e5-256">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="654e5-256">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="654e5-257">このプロパティを設定`true`この要求を行ったとき<xref:System.Net.WebProxy>オブジェクト認証が必要で、サーバーから要求された場合、現在ログオンしているユーザーの資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="654e5-257">Set this property to `true` when requests made by this <xref:System.Net.WebProxy> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="654e5-258">クライアント アプリケーションは、これはほとんどのシナリオでは、目的の動作です。</span><span class="sxs-lookup"><span data-stu-id="654e5-258">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="654e5-259">設定する通常、このプロパティを使用する代わりに、ASP.NET アプリケーションなどの中間層アプリケーションの<xref:System.Net.WebProxy.Credentials%2A>プロパティを要求が行われる要因となったクライアントの資格情報。</span><span class="sxs-lookup"><span data-stu-id="654e5-259">For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.WebProxy.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 <span data-ttu-id="654e5-260">次の表に、設定の効果、<xref:System.Net.WebProxy.UseDefaultCredentials%2A>の値に基づいて、値、<xref:System.Net.WebProxy.Credentials%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="654e5-260">The following table shows the effect of setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> value, based on the value of the <xref:System.Net.WebProxy.Credentials%2A> property.</span></span>  
  
|<span data-ttu-id="654e5-261"><xref:System.Net.WebProxy.Credentials%2A> の値</span><span class="sxs-lookup"><span data-stu-id="654e5-261"><xref:System.Net.WebProxy.Credentials%2A> value</span></span>|<span data-ttu-id="654e5-262"><xref:System.Net.WebProxy.UseDefaultCredentials%2A> の値</span><span class="sxs-lookup"><span data-stu-id="654e5-262"><xref:System.Net.WebProxy.UseDefaultCredentials%2A> value</span></span>|<span data-ttu-id="654e5-263">効果</span><span class="sxs-lookup"><span data-stu-id="654e5-263">Effect</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|  
|<xref:System.Net.CredentialCache.DefaultCredentials%2A>|`true`|<span data-ttu-id="654e5-264">影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="654e5-264">No effect.</span></span>|  
|<xref:System.Net.CredentialCache.DefaultCredentials%2A>|`false`|<span data-ttu-id="654e5-265"><xref:System.Net.WebProxy.Credentials%2A> が `null` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="654e5-265"><xref:System.Net.WebProxy.Credentials%2A> is set to `null`.</span></span>|  
|`null`|`true`|<span data-ttu-id="654e5-266"><xref:System.Net.WebProxy.Credentials%2A> が <xref:System.Net.CredentialCache.DefaultCredentials%2A> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="654e5-266"><xref:System.Net.WebProxy.Credentials%2A> is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span>|  
|<span data-ttu-id="654e5-267">以外の値<xref:System.Net.CredentialCache.DefaultCredentials%2A>または `null`</span><span class="sxs-lookup"><span data-stu-id="654e5-267">Any value other than <xref:System.Net.CredentialCache.DefaultCredentials%2A> or `null`</span></span>|<span data-ttu-id="654e5-268">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="654e5-268">`true` or `false`</span></span>|<span data-ttu-id="654e5-269">設定<xref:System.Net.WebProxy.UseDefaultCredentials%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="654e5-269">Setting <xref:System.Net.WebProxy.UseDefaultCredentials%2A> throws an exception.</span></span>|  
  
 <span data-ttu-id="654e5-270">場合<xref:System.Net.WebProxy.UseDefaultCredentials%2A>は`false`、変更することができます、<xref:System.Net.WebProxy.Credentials%2A>プロパティを任意の資格情報。</span><span class="sxs-lookup"><span data-stu-id="654e5-270">If <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `false`, you can change the <xref:System.Net.WebProxy.Credentials%2A> property to any credentials.</span></span> <span data-ttu-id="654e5-271">場合<xref:System.Net.WebProxy.UseDefaultCredentials%2A>は`true`を変更する、<xref:System.Net.WebProxy.Credentials%2A>プロパティから<xref:System.Net.CredentialCache.DefaultCredentials%2A>(ときに設定されている値、<xref:System.Net.WebProxy.UseDefaultCredentials%2A>プロパティに設定されて`true`) 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="654e5-271">If <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `true`, changing the <xref:System.Net.WebProxy.Credentials%2A> property from <xref:System.Net.CredentialCache.DefaultCredentials%2A> (the value that is set when the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property is set to `true`) will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="654e5-272"><see cref="P:System.Net.WebProxy.Credentials" /> プロパティに既定の資格情報以外の資格情報が格納されている場合に、このプロパティを設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="654e5-272">You attempted to set this property when the <see cref="P:System.Net.WebProxy.Credentials" /> property contains credentials other than the default credentials.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>