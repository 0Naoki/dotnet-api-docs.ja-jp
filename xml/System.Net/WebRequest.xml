<Type Name="WebRequest" FullName="System.Net.WebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6922a3e087808595658ed122c92bc373c82b5bc" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70355173" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebRequest extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRequest&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequest abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebRequest = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4d663-101">Uniform Resource Identifier (URI) に対する要求を実行します。</span><span class="sxs-lookup"><span data-stu-id="4d663-101">Makes a request to a Uniform Resource Identifier (URI).</span></span> <span data-ttu-id="4d663-102">これは <see langword="abstract" /> クラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-102">This is an <see langword="abstract" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="4d663-103">新しい開発では、また`WebRequest`はその派生クラスを使用しないことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4d663-103">We don't recommend that you use `WebRequest` or its derived classes for new development.</span></span> <span data-ttu-id="4d663-104">代わりに、 <xref:System.Net.Http.HttpClient?displayProperty=nameWithType>クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="4d663-104">Instead, use the <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> class.</span></span>

 <span data-ttu-id="4d663-105"><xref:System.Net.WebRequest>は、 `abstract`の基本クラスです。インターネットからデータにアクセスするための、NET の要求/応答モデル。</span><span class="sxs-lookup"><span data-stu-id="4d663-105"><xref:System.Net.WebRequest> is the `abstract` base class for .NET's request/response model for accessing data from the Internet.</span></span> <span data-ttu-id="4d663-106">要求/応答モデルを使用するアプリケーションは、プロトコルに依存しない方法でインターネットからデータを要求できます。この方法では、アプリケーション<xref:System.Net.WebRequest>はクラスのインスタンスと連携しますが、プロトコル固有の子孫クラスは詳細を実行します。要求。</span><span class="sxs-lookup"><span data-stu-id="4d663-106">An application that uses the request/response model can request data from the Internet in a protocol-agnostic manner, in which the application works with instances of the <xref:System.Net.WebRequest> class while protocol-specific descendant classes carry out the details of the request.</span></span>  
  
 <span data-ttu-id="4d663-107">要求は、サーバー上の Web ページなどの特定の URI にアプリケーションから送信されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-107">Requests are sent from an application to a particular URI, such as a Web page on a server.</span></span> <span data-ttu-id="4d663-108">URI は、アプリケーションに登録されている子孫の<xref:System.Net.WebRequest>リストから作成する適切な派生クラスを決定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-108">The URI determines the proper descendant class to create from a list of <xref:System.Net.WebRequest> descendants registered for the application.</span></span> <span data-ttu-id="4d663-109"><xref:System.Net.WebRequest>通常、子孫は、HTTP や FTP などの特定のプロトコルを処理するように登録されますが、サーバー上の特定のサーバーまたはパスへの要求を処理するように登録できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-109"><xref:System.Net.WebRequest> descendants are typically registered to handle a specific protocol, such as HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</span></span>  
  
 <span data-ttu-id="4d663-110">この<xref:System.Net.WebRequest>クラスは、 <xref:System.Net.WebException>インターネットリソースへのアクセス中にエラーが発生した場合に、をスローします。</span><span class="sxs-lookup"><span data-stu-id="4d663-110">The <xref:System.Net.WebRequest> class throws a <xref:System.Net.WebException> when errors occur while accessing an Internet resource.</span></span> <span data-ttu-id="4d663-111">プロパティは、エラーの原因<xref:System.Net.WebExceptionStatus>を示す値の1つです。 <xref:System.Net.WebException.Status%2A></span><span class="sxs-lookup"><span data-stu-id="4d663-111">The <xref:System.Net.WebException.Status%2A> property is one of the <xref:System.Net.WebExceptionStatus> values that indicates the source of the error.</span></span> <span data-ttu-id="4d663-112">が<xref:System.Net.WebException.Status%2A> <xref:System.Net.WebException.Response%2A> <xref:System.Net.WebResponse>の場合、プロパティはインターネットリソースから受信したを格納します。 <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4d663-112">When <xref:System.Net.WebException.Status%2A> is <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, the <xref:System.Net.WebException.Response%2A> property contains the <xref:System.Net.WebResponse> received from the Internet resource.</span></span>  
  
 <span data-ttu-id="4d663-113">クラスはクラスであるため、実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、メソッドによっ<xref:System.Net.WebRequest.Create%2A>て返される派生クラスによって決まります。 `abstract` <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="4d663-113">Because the <xref:System.Net.WebRequest> class is an `abstract` class, the actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by <xref:System.Net.WebRequest.Create%2A> method.</span></span> <span data-ttu-id="4d663-114">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-114">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-115">メソッドを<xref:System.Net.WebRequest.Create%2A>使用して、 <xref:System.Net.WebRequest>新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-115">Use the <xref:System.Net.WebRequest.Create%2A> method to initialize new <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="4d663-116">コンストラクターは<xref:System.Net.WebRequest>使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="4d663-116">Do not use the <xref:System.Net.WebRequest> constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-117">WebRequest オブジェクトを作成するアプリケーションが通常のユーザーの資格情報で実行されている場合、そのユーザーに対してアクセス許可が明示的に付与されていない限り、アプリケーションはローカルコンピューターストアにインストールされている証明書にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="4d663-117">If the application that creates the WebRequest object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-118">次の例では、 <xref:System.Net.WebRequest>インスタンスを作成し、応答を返す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4d663-118">The following example shows how to create a <xref:System.Net.WebRequest> instance and return the response.</span></span>  
  
 [!code-cpp[NclWebRequestSimple#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#1)]
 [!code-csharp[NclWebRequestSimple#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#1)]
 [!code-vb[NclWebRequestSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission"><span data-ttu-id="4d663-119">要求された URI または要求のリダイレクト先の URI にアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="4d663-119">To access the requested URI or any URI that the request is redirected to.</span></span> <span data-ttu-id="4d663-120"><see cref="F:System.Net.NetworkAccess.Connect" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="4d663-120">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" />.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="4d663-121">から<see cref="T:System.Net.WebRequest" /> <see cref="P:System.Net.WebRequest.Headers" />継承する場合は<see cref="P:System.Net.WebRequest.ContentLength" /> <see cref="P:System.Net.WebRequest.Method" /> <see cref="P:System.Net.WebRequest.RequestUri" /> 、、<see cref="P:System.Net.WebRequest.PreAuthenticate" />、、 、、<see cref="M:System.Net.WebRequest.GetRequestStream" />、、、、の各メンバーをオーバーライドする必要があります。 <see cref="P:System.Net.WebRequest.ContentType" /> <see cref="P:System.Net.WebRequest.Credentials" /> <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />、 <see cref="M:System.Net.WebRequest.GetResponse" />、、および。 <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" /></span><span class="sxs-lookup"><span data-stu-id="4d663-121">When you inherit from <see cref="T:System.Net.WebRequest" />, you must override the following members: <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />, <see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, and <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />.</span></span> <span data-ttu-id="4d663-122">さらに、を呼び出す<see cref="T:System.Net.IWebRequestCreate" /> <see cref="M:System.Net.WebRequest.Create(System.Uri)" />ときに使用される<see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" />メソッドを定義するインターフェイスの実装を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d663-122">In addition, you must provide an implementation of the <see cref="T:System.Net.IWebRequestCreate" /> interface, which defines the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method used when you call <see cref="M:System.Net.WebRequest.Create(System.Uri)" />.</span></span> <span data-ttu-id="4d663-123"><see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />メソッドまたは構成ファイルを使用し<see cref="T:System.Net.IWebRequestCreate" />て、インターフェイスを実装するクラスを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d663-123">You must register the class that implements the <see cref="T:System.Net.IWebRequestCreate" /> interface, using the <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> method or the configuration file.</span></span></para></block>
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="~/docs/framework/network-programming/requesting-data.md"><span data-ttu-id="4d663-124">データの要求</span><span class="sxs-lookup"><span data-stu-id="4d663-124">Requesting Data</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md"><span data-ttu-id="4d663-125">プラグ可能なプロトコルのプログラミング</span><span class="sxs-lookup"><span data-stu-id="4d663-125">Programming Pluggable Protocols</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d663-126"><see cref="T:System.Net.WebRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-126">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d663-127"><see cref="T:System.Net.WebRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-127">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-128">メソッドを<xref:System.Net.WebRequest.Create%2A>使用して、 <xref:System.Net.WebRequest>新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-128">Use the <xref:System.Net.WebRequest.Create%2A> method to initialize new <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="4d663-129">コンストラクターは使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="4d663-129">Do not use the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-130">クラスの<xref:System.Net.WebRequest> <xref:System.Net.WebRequest.Create%2A>メソッドを呼び出すことによってインスタンスを作成する方法を次の例に示します。 <xref:System.Net.WebRequest></span><span class="sxs-lookup"><span data-stu-id="4d663-130">The following example shows how to create a <xref:System.Net.WebRequest> instance by calling the <xref:System.Net.WebRequest.Create%2A> method on the <xref:System.Net.WebRequest> class.</span></span>  
  
 [!code-cpp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest.WebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebRequest : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebRequest" Usage="new System.Net.WebRequest (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="4d663-131">新しい <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスをシリアル化するために必要な情報を格納する <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-131">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.WebRequest" /> instance.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="4d663-132">新しい <see cref="T:System.Runtime.Serialization.StreamingContext" /> インスタンスに関連付けられているシリアル化ストリームのソースを示す <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-132">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the source of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" /> instance.</span></span></param>
        <summary><span data-ttu-id="4d663-133"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスと <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの指定したインスタンスから、<see cref="T:System.Net.WebRequest" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-133">Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-134">派生クラスによって実装された場合、 <xref:System.Runtime.Serialization.ISerializable>このコンストラクターは<xref:System.Net.WebRequest>子孫のインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="4d663-134">When implemented by a descendant class, this constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Net.WebRequest> descendant.</span></span>  
  
 <span data-ttu-id="4d663-135">シリアル化を使用する場合は、アプリケーションを完全信頼モードで実行する必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-135">Notice that an application must run in full trust mode when using serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-136">コンストラクターが派生クラスでオーバーライドされていないのに、そのコンストラクターへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-136">Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.</span></span></exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="4d663-137">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="4d663-137">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public abstract void Abort ();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Abort ()" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Abort();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="webRequest.Abort " FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual void Abort ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webRequest.Abort " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d663-138">要求を中止します。</span><span class="sxs-lookup"><span data-stu-id="4d663-138">Aborts the request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-139">メソッド<xref:System.Net.WebRequest.Abort%2A>は、 <xref:System.Net.WebRequest.BeginGetResponse%2A>メソッドを使用して開始されたインターネットリソースへの非同期要求をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="4d663-139">The <xref:System.Net.WebRequest.Abort%2A> method cancels asynchronous requests to Internet resources started with the <xref:System.Net.WebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-140"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-140">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-141">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-141">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-142">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-142">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-143">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-143">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationLevel : System.Net.Security.AuthenticationLevel with get, set" Usage="System.Net.WebRequest.AuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-144">この要求で使用する認証レベルおよび偽装レベルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-144">Gets or sets values indicating the level of authentication and impersonation used for this request.</span></span></summary>
        <value><span data-ttu-id="4d663-145"><see cref="T:System.Net.Security.AuthenticationLevel" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="4d663-145">A bitwise combination of the <see cref="T:System.Net.Security.AuthenticationLevel" /> values.</span></span> <span data-ttu-id="4d663-146">既定値は <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> です。</span><span class="sxs-lookup"><span data-stu-id="4d663-146">The default value is <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.</span></span>  
  
<span data-ttu-id="4d663-147">相互認証では、クライアントとサーバーの両方が、それらの身元を証明する資格情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="4d663-147">In mutual authentication, both the client and server present credentials to establish their identity.</span></span> <span data-ttu-id="4d663-148"><see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> と <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> は、Kerberos 認証に関連する値です。</span><span class="sxs-lookup"><span data-stu-id="4d663-148">The <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> and <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> values are relevant for Kerberos authentication.</span></span> <span data-ttu-id="4d663-149">Kerberos 認証は、直接サポートすることも、Negotiate セキュリティ プロトコルを使用して実際のセキュリティ プロトコルを選択する場合に使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="4d663-149">Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol.</span></span> <span data-ttu-id="4d663-150">認証プロトコルの詳細については、「[インターネット認証](https://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-150">For more information about authentication protocols, see [Internet Authentication](https://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a).</span></span>  
  
<span data-ttu-id="4d663-151">相互認証が行われたかどうかを確認するには、<see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> プロパティをチェックします。</span><span class="sxs-lookup"><span data-stu-id="4d663-151">To determine whether mutual authentication occurred, check the <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> property.</span></span>  
  
<span data-ttu-id="4d663-152"><see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 認証フラグの値を指定していて相互認証が行われない場合、アプリケーションは、相互認証が失敗したことを示す <see cref="T:System.Net.ProtocolViolationException" /> 内部例外を持つ <see cref="T:System.IO.IOException" /> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="4d663-152">If you specify the <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> authentication flag value and mutual authentication does not occur, your application will receive an <see cref="T:System.IO.IOException" /> with a <see cref="T:System.Net.ProtocolViolationException" /> inner exception indicating that mutual authentication failed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d663-153">次のコード例では、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-153">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NclCredPolicy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetRequestStream (callback, state)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetRequestStream (callback, state)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="4d663-154"><see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="4d663-154">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="4d663-155">非同期要求の状態情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4d663-155">An object containing state information for this asynchronous request.</span></span></param>
        <summary><span data-ttu-id="4d663-156">派生クラスでオーバーライドされると、<see cref="M:System.Net.WebRequest.GetRequestStream" /> メソッドの非同期バージョンを提供します。</span><span class="sxs-lookup"><span data-stu-id="4d663-156">When overridden in a descendant class, provides an asynchronous version of the <see cref="M:System.Net.WebRequest.GetRequestStream" /> method.</span></span></summary>
        <returns><span data-ttu-id="4d663-157">非同期の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-157">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-158">メソッド<xref:System.Net.WebRequest.BeginGetRequestStream%2A>は、インターネットリソースにデータを送信するために使用されるストリームの非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="4d663-158">The <xref:System.Net.WebRequest.BeginGetRequestStream%2A> method starts an asynchronous request for a stream used to send data to an Internet resource.</span></span> <span data-ttu-id="4d663-159"><xref:System.AsyncCallback>デリゲートを実装するコールバックメソッドは、 <xref:System.Net.WebRequest.EndGetRequestStream%2A>メソッドを使用して要求ストリームを返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-159">The callback method that implements the <xref:System.AsyncCallback> delegate uses the <xref:System.Net.WebRequest.EndGetRequestStream%2A> method to return the request stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-160"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-160">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-161">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-161">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-162">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-162">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-163">次の例では<xref:System.Net.WebRequest.BeginGetRequestStream%2A> 、を使用して、要求ストリームを非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="4d663-163">The following example uses the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> to asynchronously obtain the request stream.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-164">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-164">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="4d663-165">非同期要求を行う</span><span class="sxs-lookup"><span data-stu-id="4d663-165">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetResponse (callback, state)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetResponse (callback, state)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="4d663-166"><see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="4d663-166">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="4d663-167">非同期要求の状態情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4d663-167">An object containing state information for this asynchronous request.</span></span></param>
        <summary><span data-ttu-id="4d663-168">派生クラスでオーバーライドされると、インターネット リソースの非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="4d663-168">When overridden in a descendant class, begins an asynchronous request for an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="4d663-169">非同期の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-169">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-170">メソッド<xref:System.Net.WebRequest.BeginGetResponse%2A>は、応答の非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="4d663-170">The <xref:System.Net.WebRequest.BeginGetResponse%2A> method starts an asynchronous request for a response.</span></span> <span data-ttu-id="4d663-171"><xref:System.AsyncCallback>デリゲートを実装するコールバックメソッドは、 <xref:System.Net.WebRequest.EndGetResponse%2A>メソッドを使用し<xref:System.Net.WebResponse>て、インターネットリソースからを返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-171">The callback method that implements the <xref:System.AsyncCallback> delegate uses the <xref:System.Net.WebRequest.EndGetResponse%2A> method to return the <xref:System.Net.WebResponse> from the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-172"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-172">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-173">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-173">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-174">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-174">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-175">WebException がスローされた場合は<xref:System.Net.WebException.Response%2A> 、 <xref:System.Net.WebException.Status%2A>例外のプロパティとプロパティを使用して、サーバーからの応答を確認します。</span><span class="sxs-lookup"><span data-stu-id="4d663-175">If a WebException is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-176">次の例で<xref:System.Net.WebRequest.BeginGetResponse%2A>は、を使用して、ターゲットリソースを非同期に要求します。</span><span class="sxs-lookup"><span data-stu-id="4d663-176">The following example uses <xref:System.Net.WebRequest.BeginGetResponse%2A> to asynchronously request the target resource.</span></span> <span data-ttu-id="4d663-177">リソースが取得されると、指定されたコールバックメソッドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-177">When the resource has been obtained, the specified callback method will be executed.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#2)]
 [!code-csharp[WebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#2)]
 [!code-vb[WebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-178">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-178">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <altmember cref="M:System.Net.WebRequest.GetResponse" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="4d663-179">非同期要求を行う</span><span class="sxs-lookup"><span data-stu-id="4d663-179">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-180">この要求のキャッシュ ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-180">Gets or sets the cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="4d663-181">キャッシュ ポリシーを定義する <see cref="T:System.Net.Cache.RequestCachePolicy" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4d663-181">A <see cref="T:System.Net.Cache.RequestCachePolicy" /> object that defines a cache policy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-182">キャッシュから応答を取得できるかどうかは、現在のキャッシュポリシーとキャッシュ内の要求されたリソースの存在によって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-182">The current cache policy and the presence of the requested resource in the cache determine whether a response can be retrieved from the cache.</span></span> <span data-ttu-id="4d663-183">キャッシュされた応答を使用すると、通常はアプリケーションのパフォーマンスが向上しますが、キャッシュ内の応答がサーバーの応答と一致しないというリスクがあります。</span><span class="sxs-lookup"><span data-stu-id="4d663-183">Using cached responses usually improves application performance, but there is a risk that the response in the cache does not match the response on the server.</span></span>  
  
 <span data-ttu-id="4d663-184">既定のキャッシュポリシーは、machine.config 構成ファイルで指定するか、ハイパーテキスト転送<xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>プロトコル (HTTP) または Secure ハイパーテキスト転送プロトコル (HTTPS) URI スキームを使用する要求のプロパティを設定することによって指定できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-184">Default cache policy can be specified in the Machine.config configuration file or by setting the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property for requests that use the Hypertext Transfer Protocol (HTTP) or Secure Hypertext Transfer Protocol (HTTPS) URI scheme.</span></span>  
  
 <span data-ttu-id="4d663-185">リソースのコピーは、リソースの応答ストリームが取得され、ストリームの末尾に読み取られる場合にのみ、キャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-185">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="4d663-186">そのため、同じリソースに対する別の要求では、この要求のキャッシュポリシーレベルに応じて、キャッシュされたコピーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-186">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-187">次のコード例は、Web 要求のキャッシュポリシーを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4d663-187">The following code example demonstrates setting the cache policy for a Web request.</span></span>  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.DefaultCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public virtual string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.WebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-188">派生クラスでオーバーライドされると、要求で使用する接続グループの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-188">When overridden in a descendant class, gets or sets the name of the connection group for the request.</span></span></summary>
        <value><span data-ttu-id="4d663-189">要求で使用する接続グループの名前。</span><span class="sxs-lookup"><span data-stu-id="4d663-189">The name of the connection group for the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-190">プロパティ<xref:System.Net.WebRequest.ConnectionGroupName%2A>は、アプリケーション内の特定の要求を1つ以上の接続プールに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="4d663-190">The <xref:System.Net.WebRequest.ConnectionGroupName%2A> property associates specific requests within an application to one or more connection pools.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-191"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-191">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-192">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-192">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-193">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-193">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-194">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-194">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="4d663-195">通常<see cref="P:System.Net.WebRequest.ConnectionGroupName" /> 、プロパティは、一連の資格情報を共有する要求のグループをインターネットリソースへの接続と関連付け、セキュリティエラーの可能性を回避します。</span><span class="sxs-lookup"><span data-stu-id="4d663-195">The <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> property typically associates a group of requests that share a set of credentials with a connection to an Internet resource to avoid potential security failures.</span></span></para></block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
        <related type="Article" href="~/docs/framework/network-programming/connection-grouping.md"><span data-ttu-id="4d663-196">接続のグループ化</span><span class="sxs-lookup"><span data-stu-id="4d663-196">Connection Grouping</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.WebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-197">派生クラスでオーバーライドされると、送信している要求データのコンテンツ長を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-197">When overridden in a descendant class, gets or sets the content length of the request data being sent.</span></span></summary>
        <value><span data-ttu-id="4d663-198">送信している要求データのバイト数。</span><span class="sxs-lookup"><span data-stu-id="4d663-198">The number of bytes of request data being sent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-199">プロパティ<xref:System.Net.WebRequest.ContentLength%2A>には、 <xref:System.Net.WebRequest>インスタンスによってインターネットリソースに送信されるデータのバイト数が格納されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-199">The <xref:System.Net.WebRequest.ContentLength%2A> property contains the number of bytes of data sent to the Internet resource by the <xref:System.Net.WebRequest> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-200"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-200">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-201">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-201">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-202">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-202">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-203">次の例では<xref:System.Net.WebRequest.ContentLength%2A> 、プロパティを、送信バイトバッファーのバイト数に設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-203">The following example sets the <xref:System.Net.WebRequest.ContentLength%2A> property to the amount of bytes in the outgoing byte buffer.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-204">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-204">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public abstract string ContentType { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ContentType As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.WebRequest.ContentType" />
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-205">派生クラスでオーバーライドされると、送信している要求データのコンテンツ タイプを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-205">When overridden in a descendant class, gets or sets the content type of the request data being sent.</span></span></summary>
        <value><span data-ttu-id="4d663-206">要求データのコンテンツ タイプ。</span><span class="sxs-lookup"><span data-stu-id="4d663-206">The content type of the request data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-207">プロパティ<xref:System.Net.WebRequest.ContentType%2A>は、要求のメディアの種類を格納します。</span><span class="sxs-lookup"><span data-stu-id="4d663-207">The <xref:System.Net.WebRequest.ContentType%2A> property contains the media type of the request.</span></span> <span data-ttu-id="4d663-208">これは、通常、コンテンツの MIME エンコードです。</span><span class="sxs-lookup"><span data-stu-id="4d663-208">This is typically the MIME encoding of the content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-209"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-209">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-210">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-210">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-211">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-211">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-212">次の例では<xref:System.Net.WebRequest.ContentType%2A> 、プロパティを適切なメディアの種類に設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-212">The following example sets the <xref:System.Net.WebRequest.ContentType%2A> property to the appropriate media type.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-213">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-213">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d663-214">新しい <see cref="T:System.Net.WebRequest" /> を初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-214">Initializes a new <see cref="T:System.Net.WebRequest" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUriString As String) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString"><span data-ttu-id="4d663-215">インターネット リソースを識別する URI。</span><span class="sxs-lookup"><span data-stu-id="4d663-215">The URI that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="4d663-216">指定した URI スキーム用に新しい <see cref="T:System.Net.WebRequest" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-216">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="4d663-217">特定の URI スキーム用の <see cref="T:System.Net.WebRequest" /> 派生クラス。</span><span class="sxs-lookup"><span data-stu-id="4d663-217">A <see cref="T:System.Net.WebRequest" /> descendant for the specific URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-218">メソッド<xref:System.Net.WebRequest.Create%2A>は、実行時に、 <xref:System.Net.WebRequest>に`requestUri`最も近い登録済みの一致として決定されたクラスの子孫を返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-218">The <xref:System.Net.WebRequest.Create%2A> method returns a descendant of the <xref:System.Net.WebRequest> class determined at run time as the closest registered match for `requestUri`.</span></span>  
  
 <span data-ttu-id="4d663-219">`http://`たとえば、 <xref:System.Net.WebRequest.Create%2A>または`https://`で始まる URI <xref:System.Net.HttpWebRequest>が渡さ`requestUri`れた場合、によってが返されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-219">For example, when a URI beginning with `http://` or `https://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.Create%2A>.</span></span> <span data-ttu-id="4d663-220">で`ftp://`始まる URI が代わりに渡される場合<xref:System.Net.WebRequest.Create%2A> 、メソッドはインスタンスを<xref:System.Net.FtpWebRequest>返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-220">If a URI beginning with `ftp://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FtpWebRequest> instance.</span></span> <span data-ttu-id="4d663-221">で`file://`始まる URI が代わりに渡される場合<xref:System.Net.WebRequest.Create%2A> 、メソッドはインスタンスを<xref:System.Net.FileWebRequest>返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-221">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span>  
  
 <span data-ttu-id="4d663-222">登録済みの事前登録済みの予約の種類には、次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="4d663-222">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="4d663-223">.Net `http://`には`https://` `file://` 、、、、および URI スキームのサポートが含まれています。 `ftp://`</span><span class="sxs-lookup"><span data-stu-id="4d663-223">.NET includes support for the `http://`, `https://`, `ftp://`, and `file://` URI schemes.</span></span> <span data-ttu-id="4d663-224">他<xref:System.Net.WebRequest>の要求を処理するためのカスタム子孫<xref:System.Net.WebRequest.RegisterPrefix%2A>は、メソッドに登録されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-224">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span>  
  
 <span data-ttu-id="4d663-225">メソッド<xref:System.Net.WebRequest.Create%2A>は、 `requestUriString`パラメーターを使用して<xref:System.Uri> 、新しい<xref:System.Net.WebRequest>に渡すインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4d663-225">The <xref:System.Net.WebRequest.Create%2A> method uses the `requestUriString` parameter to create a <xref:System.Uri> instance that it passes to the new <xref:System.Net.WebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-226">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="4d663-226">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="4d663-227">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-227">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4d663-228">次の例で<xref:System.Net.WebRequest.Create%2A>は、を<xref:System.Net.HttpWebRequest>使用してインスタンスをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-228">The following example uses <xref:System.Net.WebRequest.Create%2A> to instantiate an <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="4d663-229">ターゲット URL を表す文字列は、コンストラクターパラメーターとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-229">A string representing the target URL is used as the constructor parameter.</span></span>  
  
 [!code-cpp[WebResponse_ResponseUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse_ResponseUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse_ResponseUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4d663-230"><paramref name="requestUriString" /> で指定された要求スキームが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="4d663-230">The request scheme specified in <paramref name="requestUriString" /> has not been registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d663-231"><paramref name="requestUriString" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4d663-231"><paramref name="requestUriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4d663-232">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="4d663-232">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="4d663-233"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.FormatException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="4d663-233">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="4d663-234"><paramref name="requestUriString" /> で指定された URI は、有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4d663-234">The URI specified in <paramref name="requestUriString" /> is not a valid URI.</span></span></exception>
        <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md"><span data-ttu-id="4d663-235">プラグ可能なプロトコルのプログラミング</span><span class="sxs-lookup"><span data-stu-id="4d663-235">Programming Pluggable Protocols</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="4d663-236">要求されたリソースの URI を格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-236">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</span></span></param>
        <summary><span data-ttu-id="4d663-237">指定した URI スキーム用に新しい <see cref="T:System.Net.WebRequest" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-237">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="4d663-238">指定した URI スキーム用の <see cref="T:System.Net.WebRequest" /> 派生クラス。</span><span class="sxs-lookup"><span data-stu-id="4d663-238">A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-239">メソッド<xref:System.Net.WebRequest.Create%2A>は、実行時に、 <xref:System.Net.WebRequest>に`requestUri`最も近い登録済みの一致として決定されたクラスの子孫を返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-239">The <xref:System.Net.WebRequest.Create%2A> method returns a descendant of the <xref:System.Net.WebRequest> class determined at run time as the closest registered match for `requestUri`.</span></span>  
  
 <span data-ttu-id="4d663-240">たとえば、Handler1 を<xref:System.Net.WebRequest>作成し`http://www.contoso.com/text/`て、への要求`http://www.contoso.com/code/`を処理する別の Handler2 という名前の要求を処理する場合、 <xref:System.Net.WebRequest.Create%2A>メソッドを使用して、次のいずれかに関連付けられている WebRequest 子孫を返すことができます。指定された URI。</span><span class="sxs-lookup"><span data-stu-id="4d663-240">For example, if you create a <xref:System.Net.WebRequest> descendant, Handler1, to handle requests to `http://www.contoso.com/text/` and another named Handler2 to handle requests to `http://www.contoso.com/code/`, you can use <xref:System.Net.WebRequest.Create%2A> method to return the WebRequest descendant associated with either specified URI.</span></span>  
  
 <span data-ttu-id="4d663-241">URI のスキーム部分のみに<xref:System.Net.WebRequest>基づいてクラスの子孫を返すには、 <xref:System.Net.WebRequest.CreateDefault%2A>メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="4d663-241">To return a descendant of the <xref:System.Net.WebRequest> class based on only the scheme portion of a URI, use the <xref:System.Net.WebRequest.CreateDefault%2A> method.</span></span>  
  
 <span data-ttu-id="4d663-242">`http://`たとえば、 <xref:System.Net.WebRequest.Create%2A>または`https://`で始まる URI <xref:System.Net.HttpWebRequest>が渡さ`requestUri`れた場合、によってが返されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-242">For example, when a URI beginning with `http://` or `https://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.Create%2A>.</span></span> <span data-ttu-id="4d663-243">で`ftp://`始まる URI が代わりに渡される場合<xref:System.Net.WebRequest.Create%2A> 、メソッドはインスタンスを<xref:System.Net.FileWebRequest>返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-243">If a URI beginning with `ftp://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span> <span data-ttu-id="4d663-244">で`file://`始まる URI が代わりに渡される場合<xref:System.Net.WebRequest.Create%2A> 、メソッドはインスタンスを<xref:System.Net.FileWebRequest>返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-244">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.Create%2A> method will return a <xref:System.Net.FileWebRequest> instance.</span></span>  
  
 <span data-ttu-id="4d663-245">登録済みの事前登録済みの予約の種類には、次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="4d663-245">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="4d663-246">.Net `http://`には`https://` `file://` 、、、、および URI スキームのサポートが含まれています。 `ftp://`</span><span class="sxs-lookup"><span data-stu-id="4d663-246">.NET includes support for the `http://`, `https://`, `ftp://`, and `file://` URI schemes.</span></span> <span data-ttu-id="4d663-247">他<xref:System.Net.WebRequest>の要求を処理するためのカスタム子孫<xref:System.Net.WebRequest.RegisterPrefix%2A>は、メソッドに登録されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-247">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-248">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="4d663-248">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="4d663-249">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-249">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-250">次の例で<xref:System.Net.WebRequest.Create%2A>は、を<xref:System.Net.HttpWebRequest>使用してインスタンスをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-250">The following example uses <xref:System.Net.WebRequest.Create%2A> to instantiate an <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="4d663-251">ターゲット URL を表す Uri は、コンストラクターパラメーターとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-251">A Uri representing the target URL is used as the constructor parameter.</span></span>  
  
 [!code-cpp[WebRequest_Create#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Create/CPP/webrequest_create.cpp#1)]
 [!code-csharp[WebRequest_Create#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Create/CS/webrequest_create.cs#1)]
 [!code-vb[WebRequest_Create#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Create/VB/webrequest_create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4d663-252"><paramref name="requestUri" /> で指定された要求スキームが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="4d663-252">The request scheme specified in <paramref name="requestUri" /> is not registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d663-253"><paramref name="requestUri" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4d663-253"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4d663-254">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="4d663-254">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest CreateDefault (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest CreateDefault(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ CreateDefault(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateDefault : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.CreateDefault requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="4d663-255">要求されたリソースの URI を格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-255">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</span></span></param>
        <summary><span data-ttu-id="4d663-256">指定した URI スキーム用に新しい <see cref="T:System.Net.WebRequest" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-256">Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</span></span></summary>
        <returns><span data-ttu-id="4d663-257">指定した URI スキーム用の <see cref="T:System.Net.WebRequest" /> 派生クラス。</span><span class="sxs-lookup"><span data-stu-id="4d663-257">A <see cref="T:System.Net.WebRequest" /> descendant for the specified URI scheme.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-258">メソッド<xref:System.Net.WebRequest.CreateDefault%2A>は、URI <xref:System.Net.WebRequest>のスキーム部分のみに基づいて、子孫のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-258">The <xref:System.Net.WebRequest.CreateDefault%2A> method returns a <xref:System.Net.WebRequest> descendant instance based on only the scheme portion of a URI.</span></span>  
  
 <span data-ttu-id="4d663-259">たとえば`http://` 、で始まる URI が`requestUri`渡さ<xref:System.Net.HttpWebRequest>れると、によって<xref:System.Net.WebRequest.CreateDefault%2A>が返されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-259">For example, when a URI beginning with `http://` is passed in `requestUri`, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateDefault%2A>.</span></span> <span data-ttu-id="4d663-260">で`file://`始まる URI が代わりに渡される場合<xref:System.Net.WebRequest.CreateDefault%2A> 、メソッドはを<xref:System.Net.FileWebRequest>返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-260">If a URI beginning with `file://` is passed instead, the <xref:System.Net.WebRequest.CreateDefault%2A> method will return a <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-261">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="4d663-261">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="4d663-262">詳細については、「 [.net のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-262">For more information, see [Network Tracing in .NET](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4d663-263"><paramref name="requestUri" /> で指定された要求スキームが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="4d663-263">The request scheme specified in <paramref name="requestUri" /> is not registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d663-264"><paramref name="requestUri" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4d663-264"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4d663-265">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="4d663-265">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateHttp">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d663-266">指定した URI 用に新しい <see cref="T:System.Net.HttpWebRequest" /> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-266">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUriString As String) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : string -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString"><span data-ttu-id="4d663-267">インターネット リソースを識別する URI 文字列。</span><span class="sxs-lookup"><span data-stu-id="4d663-267">A URI string that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="4d663-268">指定した URI 文字列用に新しい <see cref="T:System.Net.HttpWebRequest" /> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-268">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI string.</span></span></summary>
        <returns><span data-ttu-id="4d663-269">指定した URI 文字列の <see cref="T:System.Net.HttpWebRequest" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="4d663-269">An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-270">メソッド<xref:System.Net.WebRequest.CreateHttp%28System.String%29>は<xref:System.Net.HttpWebRequest> 、`requestUriString`のクラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-270">The <xref:System.Net.WebRequest.CreateHttp%28System.String%29> method returns an instance of the <xref:System.Net.HttpWebRequest> class for the `requestUriString`.</span></span>  
  
 <span data-ttu-id="4d663-271">`http://`または`requestUriString` <xref:System.Net.HttpWebRequest> <xref:System.Net.WebRequest.CreateHttp%28System.String%29>で始まる URI がパラメーターで渡されると、によってが返されます。 `https://`</span><span class="sxs-lookup"><span data-stu-id="4d663-271">When a URI that begins with `http://` or `https://` is passed in the `requestUriString` parameter, a <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateHttp%28System.String%29>.</span></span> <span data-ttu-id="4d663-272">他のスキームでは、 <xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4d663-272">Any other scheme will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="4d663-273">メソッド<xref:System.Net.WebRequest.CreateHttp%28System.String%29>は、 `requestUriString`パラメーターを使用して<xref:System.Uri> 、新しい<xref:System.Net.HttpWebRequest>に渡すインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4d663-273">The <xref:System.Net.WebRequest.CreateHttp%28System.String%29> method uses the `requestUriString` parameter to create a <xref:System.Uri> instance that it passes to the new <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="4d663-274">メソッドが成功した場合、 <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A>返さ<xref:System.Net.HttpWebRequest>れたインスタンスのプロパティはに`false`設定されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-274">If the method is successful, the <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> property on the returned <xref:System.Net.HttpWebRequest> instance is set to `false`.</span></span>  
  
 <span data-ttu-id="4d663-275">.Net には、 `http://`および`https://` URI スキームのサポートが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4d663-275">.NET includes support for the `http://` and  `https://` URI schemes.</span></span> <span data-ttu-id="4d663-276">他<xref:System.Net.WebRequest>の要求を処理するためのカスタム子孫<xref:System.Net.WebRequest.RegisterPrefix%2A>は、メソッドに登録されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-276">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span> <span data-ttu-id="4d663-277">メソッドを使用すると、他のスキームの<xref:System.Net.WebRequest>クラスの子孫を作成できます。 <xref:System.Net.WebRequest.Create%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="4d663-277">The <xref:System.Net.WebRequest.Create%28System.String%29> method can be used to create a descendant of the <xref:System.Net.WebRequest> class for other schemes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4d663-278"><paramref name="requestUriString" /> で指定された要求スキームが、http スキームまたは https スキームです。</span><span class="sxs-lookup"><span data-stu-id="4d663-278">The request scheme specified in <paramref name="requestUriString" /> is the http or https scheme.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d663-279"><paramref name="requestUriString" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4d663-279"><paramref name="requestUriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4d663-280">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="4d663-280">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4d663-281"><paramref name="requestUriString" /> で指定された URI は、有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4d663-281">The URI specified in <paramref name="requestUriString" /> is not a valid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUri As Uri) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : Uri -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri"><span data-ttu-id="4d663-282">インターネット リソースを識別する URI。</span><span class="sxs-lookup"><span data-stu-id="4d663-282">A URI that identifies the Internet resource.</span></span></param>
        <summary><span data-ttu-id="4d663-283">指定した URI 用に新しい <see cref="T:System.Net.HttpWebRequest" /> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4d663-283">Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="4d663-284">指定した URI 文字列の <see cref="T:System.Net.HttpWebRequest" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="4d663-284">An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-285">メソッド<xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>は<xref:System.Net.HttpWebRequest> 、`requestUri`のクラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-285">The <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> method returns an instance of the <xref:System.Net.HttpWebRequest> class for the `requestUri`.</span></span>  
  
 <span data-ttu-id="4d663-286">`http://`または`requestUri` <xref:System.Net.HttpWebRequest> <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>で始まる URI がパラメーターで渡されると、によってが返されます。 `http://`</span><span class="sxs-lookup"><span data-stu-id="4d663-286">When a URI that begins with `http://` or `http://` is passed in the `requestUri` parameter, an <xref:System.Net.HttpWebRequest> is returned by <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>.</span></span> <span data-ttu-id="4d663-287">もう1つのスキームで<xref:System.NotSupportedException>は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4d663-287">Another other scheme will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="4d663-288">メソッド<xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>は、パラメーター `requestUri`を使用して新しい<xref:System.Net.HttpWebRequest>インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4d663-288">The <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> method uses the `requestUri` parameter to create a new <xref:System.Net.HttpWebRequest> instance.</span></span> <span data-ttu-id="4d663-289">メソッドが成功した場合、 <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A>返さ<xref:System.Net.HttpWebRequest>れたインスタンスのプロパティはに`false`設定されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-289">If the method is successful, the <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> property on the returned <xref:System.Net.HttpWebRequest> instance is set to `false`.</span></span>  
  
 <span data-ttu-id="4d663-290">.Net には、 `http://`および`https://` URI スキームのサポートが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4d663-290">.NET includes support for the `http://` and  `https://` URI schemes.</span></span> <span data-ttu-id="4d663-291">他<xref:System.Net.WebRequest>の要求を処理するためのカスタム子孫<xref:System.Net.WebRequest.RegisterPrefix%2A>は、メソッドに登録されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-291">Custom <xref:System.Net.WebRequest> descendants to handle other requests are registered with the <xref:System.Net.WebRequest.RegisterPrefix%2A> method.</span></span> <span data-ttu-id="4d663-292">メソッドを使用すると、他のスキームの<xref:System.Net.WebRequest>クラスの子孫を作成できます。 <xref:System.Net.WebRequest.Create%28System.Uri%29></span><span class="sxs-lookup"><span data-stu-id="4d663-292">The <xref:System.Net.WebRequest.Create%28System.Uri%29> method can be used to create a descendant of the <xref:System.Net.WebRequest> class for other schemes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4d663-293"><paramref name="requestUri" /> で指定された要求スキームが、http スキームまたは https スキームです。</span><span class="sxs-lookup"><span data-stu-id="4d663-293">The request scheme specified in <paramref name="requestUri" /> is the http or https scheme.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d663-294"><paramref name="requestUri" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4d663-294"><paramref name="requestUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4d663-295">呼び出し元には、要求された URI または要求のリダイレクト先である URI に接続するための <see cref="T:System.Net.WebPermissionAttribute" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="4d663-295">The caller does not have <see cref="T:System.Net.WebPermissionAttribute" /> permission to connect to the requested URI or a URI that the request is redirected to.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4d663-296"><paramref name="requestUri" /> で指定された URI は、有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4d663-296">The URI specified in <paramref name="requestUri" /> is not a valid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebRequestCreate CreatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebRequestCreate CreatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CreatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreatorInstance As IWebRequestCreate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebRequestCreate ^ CreatorInstance { System::Net::IWebRequestCreate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreatorInstance : System.Net.IWebRequestCreate" Usage="System.Net.WebRequest.CreatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebRequestCreate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-297">派生クラスでオーバーライドされると、<see cref="T:System.Net.IWebRequestCreate" /> クラスから派生するファクトリ オブジェクトを取得します。このクラスは、指定 URI に対して要求を行うためにインスタンス化される <see cref="T:System.Net.WebRequest" /> を作成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-297">When overridden in a descendant class, gets the factory object derived from the <see cref="T:System.Net.IWebRequestCreate" /> class used to create the <see cref="T:System.Net.WebRequest" /> instantiated for making the request to the specified URI.</span></span></summary>
        <value><span data-ttu-id="4d663-298"><see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> メソッドによって返される派生 <see cref="T:System.Net.WebRequest" /> 型。</span><span class="sxs-lookup"><span data-stu-id="4d663-298">The derived <see cref="T:System.Net.WebRequest" /> type returned by the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="4d663-299">このプロパティを使用すると、アプリケーション<xref:System.Net.IWebRequestCreate>は、要求の作成に使用された派生ファクトリオブジェクトを特定できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-299">This property allows an application to determine which <xref:System.Net.IWebRequestCreate> derived factory object was used to create the request.</span></span> <span data-ttu-id="4d663-300">このオブジェクトは、 [WebRequestCreator](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))または[WebRequestCreator](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))のいずれかになりますが、から<xref:System.Net.IWebRequestCreate>派生したカスタムインスタンスである場合もあります。</span><span class="sxs-lookup"><span data-stu-id="4d663-300">This object may be [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) or [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)), but it may also be a custom instance derived from <xref:System.Net.IWebRequestCreate>.</span></span> <span data-ttu-id="4d663-301">これにより、アプリケーションは[!INCLUDE[silverlight](~/includes/silverlight-md.md)] [!INCLUDE[silverlight](~/includes/silverlight-md.md)] 、ブラウザーのホスト、クライアント、または一部のカスタムオブジェクトが、 <xref:System.Net.WebRequest>インスタンスの HTTP 要求と応答を処理するかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-301">This allows an application to determine whether the browser hosting [!INCLUDE[silverlight](~/includes/silverlight-md.md)], the [!INCLUDE[silverlight](~/includes/silverlight-md.md)] client, or some custom object handles HTTP requests and responses for the <xref:System.Net.WebRequest> instance.</span></span> <span data-ttu-id="4d663-302">メソッドを使用すると、特定の URI <xref:System.Net.WebRequest>に要求を行うときにインスタンス化される派生型をアプリケーションで構成できます。 <xref:System.Net.WebRequest.RegisterPrefix%2A></span><span class="sxs-lookup"><span data-stu-id="4d663-302">The <xref:System.Net.WebRequest.RegisterPrefix%2A> method allows an application to configure which derived <xref:System.Net.WebRequest> type will be instantiated when making a request to a specific URI.</span></span> <span data-ttu-id="4d663-303"><xref:System.Net.WebRequest>作成者は、通常、HTTP や HTTPS などの特定のプロトコルを処理するように登録されますが、サーバー上の特定のサーバーまたはパスへの要求を処理するように登録できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-303"><xref:System.Net.WebRequest> creators are typically registered to handle a specific protocol, such HTTP or HTTPS, but can be registered to handle a request to a specific server or path on a server.</span></span> <span data-ttu-id="4d663-304">これは、複数の派生<xref:System.Net.WebRequest>型で同じプロトコルの要求を処理できる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="4d663-304">This is useful when more than one derived <xref:System.Net.WebRequest> type can process requests for the same protocol.</span></span> <span data-ttu-id="4d663-305">以降[!INCLUDE[sil3_first](~/includes/sil3-first-md.md)]のランタイムでは、それぞれ異なる機能を持つ複数の HTTP ハンドラーがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4d663-305">The [!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] and later runtime supports multiple HTTP handlers each having different capabilities.</span></span> <span data-ttu-id="4d663-306">たとえば、WebRequestCreator の状態転送 (REST) を使用する web サービスでは、 [ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95))ハンドラーが必要になる場合がありますが、SOAP web サービスでは既定値[を使用できる場合があります。WebRequestCreator を参照](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95))してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-306">For example, a web service that uses Representational State Transfer (REST) might require the [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) handler while a SOAP web service might be able to use the default [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) handler.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-307">派生クラスでオーバーライドされると、インターネット リソースを使用して要求を認証するために使用されるネットワーク資格情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-307">When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</span></span></summary>
        <value><span data-ttu-id="4d663-308">要求に関連付けられた認証資格情報を格納する <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-308">An <see cref="T:System.Net.ICredentials" /> containing the authentication credentials associated with the request.</span></span> <span data-ttu-id="4d663-309">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4d663-309">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-310">プロパティ<xref:System.Net.WebRequest.Credentials%2A>は、インターネットリソースにアクセスするために必要な認証資格情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="4d663-310">The <xref:System.Net.WebRequest.Credentials%2A> property contains the authentication credentials required to access the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-311"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-311">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-312">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-312">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-313">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-313">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-314">次の例では<xref:System.Net.WebRequest.Credentials%2A> 、現在のユーザーの既定の資格情報を使用してプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-314">The following example sets the <xref:System.Net.WebRequest.Credentials%2A> property using the default credentials of the current user.</span></span> <span data-ttu-id="4d663-315">要求が行われると、このプロパティに格納されている資格情報がクライアントの検証に使用されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-315">When the request is made, credentials stored in this property are used to validate the client.</span></span> <span data-ttu-id="4d663-316">これは、 <xref:System.Net.WebRequest.UseDefaultCredentials%2A>プロパティをに`true`設定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="4d663-316">This is identical to setting the <xref:System.Net.WebRequest.UseDefaultCredentials%2A> property to `true`.</span></span>  
  
 [!code-cpp[NclWebRequestSimple#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#2)]
 [!code-csharp[NclWebRequestSimple#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#2)]
 [!code-vb[NclWebRequestSimple#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-317">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-317">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.HttpWebRequest.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-318">この要求の既定のキャッシュ ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-318">Gets or sets the default cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="4d663-319">他のポリシーが適用できない場合に、この要求で有効なキャッシュ ポリシーを指定する <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-319">A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> that specifies the cache policy in effect for this request when no other policy is applicable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-320">このポリシーは、次の条件に該当する場合にこの要求に使用されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-320">This policy is used for this request if the following conditions exist:</span></span>  
  
-   <span data-ttu-id="4d663-321">この要求に<xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>はプロパティが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="4d663-321">There is no <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property specified for this request.</span></span>  
  
-   <span data-ttu-id="4d663-322">コンピューターおよびアプリケーションの構成ファイルでは、この要求の作成に使用される Uniform Resource Identifier (URI) に適用できるキャッシュポリシーが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="4d663-322">The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</span></span>  
  
 <span data-ttu-id="4d663-323">キャッシュポリシーは、要求されたリソースをリソースホストコンピューターに送信するのではなく、キャッシュから取得できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="4d663-323">The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</span></span>  
  
 <span data-ttu-id="4d663-324">リソースのコピーは、リソースの応答ストリームが取得され、ストリームの末尾に読み取られる場合にのみ、キャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-324">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="4d663-325">そのため、同じリソースに対する別の要求では、この要求のキャッシュポリシーレベルに応じて、キャッシュされたコピーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-325">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-326">次のコード例は、Web 要求の既定のキャッシュポリシーを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4d663-326">The following code example demonstrates setting the default cache policy for Web requests.</span></span>  
  
 [!code-cpp[NCLSimpleCache#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#15)]
 [!code-csharp[NCLSimpleCache#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="4d663-327">ネットワークリソースへの無制限アクセス。</span><span class="sxs-lookup"><span data-stu-id="4d663-327">For unrestricted access to network resources.</span></span> <span data-ttu-id="4d663-328">関連付けられた列挙型:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="4d663-328">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy DefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.IWebProxy DefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultWebProxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::IWebProxy ^ DefaultWebProxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultWebProxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.DefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-329">グローバル HTTP プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-329">Gets or sets the global HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="4d663-330"><see cref="T:System.Net.IWebProxy" /> のインスタンスへのすべての呼び出しで使用される <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-330">An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-331">プロパティ<xref:System.Net.WebRequest.DefaultWebProxy%2A>は、グローバルプロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-331">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property gets or sets the global proxy.</span></span> <span data-ttu-id="4d663-332">プロパティ<xref:System.Net.WebRequest.DefaultWebProxy%2A>は、要求がプロキシをサポート<xref:System.Net.WebRequest>し、 <xref:System.Net.HttpWebRequest.Proxy%2A>プロパティを使用して明示的に設定されているプロキシがない場合に、すべてのインスタンスが使用する既定のプロキシを決定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-332">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property determines the default proxy that all <xref:System.Net.WebRequest> instances use if the request supports proxies and no proxy is set explicitly using the <xref:System.Net.HttpWebRequest.Proxy%2A> property.</span></span> <span data-ttu-id="4d663-333">プロキシは、現在および<xref:System.Net.FtpWebRequest> <xref:System.Net.HttpWebRequest>でサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4d663-333">Proxies are currently supported by <xref:System.Net.FtpWebRequest> and <xref:System.Net.HttpWebRequest>.</span></span>  
  
 <span data-ttu-id="4d663-334">プロパティ<xref:System.Net.WebRequest.DefaultWebProxy%2A>は、app.config ファイルからプロキシ設定を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4d663-334">The <xref:System.Net.WebRequest.DefaultWebProxy%2A> property reads proxy settings from the app.config file.</span></span> <span data-ttu-id="4d663-335">構成ファイルがない場合は、現在のユーザーの Internet Explorer (IE) プロキシ設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-335">If there is no config file, the current user's Internet Explorer (IE) proxy settings are used.</span></span>  
  
 <span data-ttu-id="4d663-336">プロパティが null に設定されている場合、 <xref:System.Net.WebRequest.Create%2A>メソッドまた<xref:System.Net.WebRequest>はメソッドによって<xref:System.Net.WebRequest.CreateDefault%2A>作成されたクラスの後続のすべてのインスタンスにはプロキシがありません。 <xref:System.Net.WebRequest.DefaultWebProxy%2A></span><span class="sxs-lookup"><span data-stu-id="4d663-336">If the <xref:System.Net.WebRequest.DefaultWebProxy%2A> property is set to null, all subsequent instances of the <xref:System.Net.WebRequest> class created by the <xref:System.Net.WebRequest.Create%2A> or <xref:System.Net.WebRequest.CreateDefault%2A> methods do not have a proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="4d663-337">グローバル HTTP プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-337">To get or set the global HTTP proxy.</span></span> <span data-ttu-id="4d663-338">関連付けられた列挙型:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="4d663-338">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="webRequest.EndGetRequestStream asyncResult" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream&#xA;override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="webRequest.EndGetRequestStream asyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="4d663-339">ストリームの保留中の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-339">An <see cref="T:System.IAsyncResult" /> that references a pending request for a stream.</span></span></param>
        <summary><span data-ttu-id="4d663-340">派生クラスでオーバーライドされると、インターネット リソースにデータを書き込むための <see cref="T:System.IO.Stream" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-340">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></summary>
        <returns><span data-ttu-id="4d663-341">データを書き込む <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-341">A <see cref="T:System.IO.Stream" /> to write data to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-342">メソッド<xref:System.Net.WebRequest.EndGetRequestStream%2A>は、 <xref:System.Net.WebRequest.BeginGetRequestStream%2A>メソッドによって開始された非同期ストリーム要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="4d663-342">The <xref:System.Net.WebRequest.EndGetRequestStream%2A> method completes an asynchronous stream request that was started by the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-343">ガベージコレクションのタイミングの問題を回避するには、を呼び出し<xref:System.IO.Stream.Close%2A> <xref:System.Net.WebRequest.EndGetResponse%2A>た後、によって<xref:System.Net.WebResponse.GetResponseStream%2A>返されたストリームに対してメソッドを呼び出すことによって、応答ストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="4d663-343">To avoid timing issues with garbage collection, be sure to close the response stream by calling the <xref:System.IO.Stream.Close%2A> method on the stream returned by <xref:System.Net.WebResponse.GetResponseStream%2A> after calling <xref:System.Net.WebRequest.EndGetResponse%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-344"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-344">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-345">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-345">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-346">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-346">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-347">次の例では、 <xref:System.Net.WebRequest.EndGetRequestStream%2A>を呼び出して要求ストリームを取得し、使用します。</span><span class="sxs-lookup"><span data-stu-id="4d663-347">The following example obtains and uses the request stream by calling the <xref:System.Net.WebRequest.EndGetRequestStream%2A>.</span></span> <span data-ttu-id="4d663-348">メソッド<xref:System.Net.WebRequest.EndGetRequestStream%2A>は、へ<xref:System.Net.WebRequest.BeginGetRequestStream%2A>の非同期呼び出しを完了します。</span><span class="sxs-lookup"><span data-stu-id="4d663-348">The <xref:System.Net.WebRequest.EndGetRequestStream%2A> method completes the asynchronous call to <xref:System.Net.WebRequest.BeginGetRequestStream%2A>.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-349">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-349">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="4d663-350">非同期要求を行う</span><span class="sxs-lookup"><span data-stu-id="4d663-350">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public abstract System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="webRequest.EndGetResponse asyncResult" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="webRequest.EndGetResponse asyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="4d663-351">応答に対する保留中の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-351">An <see cref="T:System.IAsyncResult" /> that references a pending request for a response.</span></span></param>
        <summary><span data-ttu-id="4d663-352">派生クラスでオーバーライドされると、<see cref="T:System.Net.WebResponse" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-352">When overridden in a descendant class, returns a <see cref="T:System.Net.WebResponse" />.</span></span></summary>
        <returns><span data-ttu-id="4d663-353">インターネット要求への応答を格納する <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-353">A <see cref="T:System.Net.WebResponse" /> that contains a response to the Internet request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-354">メソッド<xref:System.Net.WebRequest.EndGetResponse%2A>は、 <xref:System.Net.WebRequest.BeginGetResponse%2A>メソッドを使用して開始されたインターネットリソースに対する非同期要求を完了します。</span><span class="sxs-lookup"><span data-stu-id="4d663-354">The <xref:System.Net.WebRequest.EndGetResponse%2A> method completes an asynchronous request for an Internet resource that was started with the <xref:System.Net.WebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-355"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-355">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-356">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-356">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-357">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-357">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-358">次の例では<xref:System.Net.WebRequest.EndGetResponse%2A> 、を呼び出してターゲットリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="4d663-358">The following example calls the <xref:System.Net.WebRequest.EndGetResponse%2A> to retrieve the target resource.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#1)]
 [!code-csharp[WebRequest_BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#1)]
 [!code-vb[WebRequest_BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-359">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-359">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md"><span data-ttu-id="4d663-360">非同期要求を行う</span><span class="sxs-lookup"><span data-stu-id="4d663-360">Making Asynchronous Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webRequest.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="4d663-361">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-361">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="4d663-362">このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-362">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="4d663-363"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-363">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-364">に含まれる<xref:System.Runtime.Serialization.SerializationInfo>オブジェクトは、フォーマッタによって自動的に追跡およびシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-364">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStream : unit -&gt; System.IO.Stream&#xA;override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="webRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d663-365">派生クラスでオーバーライドされると、インターネット リソースにデータを書き込むための <see cref="T:System.IO.Stream" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-365">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></summary>
        <returns><span data-ttu-id="4d663-366">インターネット リソースにデータを書き込む <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-366">A <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-367">メソッド<xref:System.Net.WebRequest.GetRequestStream%2A>は、インターネットリソースにデータを送信する要求を開始し、 <xref:System.IO.Stream>インターネットリソースにデータを送信するためのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-367">The <xref:System.Net.WebRequest.GetRequestStream%2A> method initiates a request to send data to the Internet resource and returns a <xref:System.IO.Stream> instance for sending data to the Internet resource.</span></span>  
  
 <span data-ttu-id="4d663-368">メソッド<xref:System.Net.WebRequest.GetRequestStream%2A>は、への<xref:System.IO.Stream>同期アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="4d663-368">The <xref:System.Net.WebRequest.GetRequestStream%2A> method provides synchronous access to the <xref:System.IO.Stream>.</span></span> <span data-ttu-id="4d663-369">非同期アクセスの場合は、 <xref:System.Net.WebRequest.BeginGetRequestStream%2A>メソッド<xref:System.Net.WebRequest.EndGetRequestStream%2A>とメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="4d663-369">For asynchronous access, use the <xref:System.Net.WebRequest.BeginGetRequestStream%2A> and <xref:System.Net.WebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-370"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-370">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-371">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-371">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-372">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-372">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-373">次の例では<xref:System.Net.WebRequest.GetRequestStream%2A> 、メソッドを使用してストリームを取得し、ストリームにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4d663-373">The following example uses the <xref:System.Net.WebRequest.GetRequestStream%2A> method to obtain a stream and then writes data that stream.</span></span>  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-374">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-374">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="4d663-375">ネットワーク上でストリームを使用する</span><span class="sxs-lookup"><span data-stu-id="4d663-375">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRequestStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetRequestStreamAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webRequest.GetRequestStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d663-376">派生クラスでオーバーライドされると、インターネット リソースへのデータ書き込みの <see cref="T:System.IO.Stream" /> を非同期操作として返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-376">When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="4d663-377">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4d663-377">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-378">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="4d663-378">This operation will not block.</span></span> <span data-ttu-id="4d663-379">インターネットリソース<xref:System.Threading.Tasks.Task%601>にデータを書き込む<xref:System.IO.Stream>ためのが使用可能になると、返されたオブジェクトが完了します。</span><span class="sxs-lookup"><span data-stu-id="4d663-379">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the <xref:System.IO.Stream> for writing data to the Internet resource is available.</span></span>  
  
 <span data-ttu-id="4d663-380">を呼び出し<xref:System.Net.WebRequest.GetRequestStreamAsync%2A>た後、を呼び出す<xref:System.Net.WebRequest.GetResponseAsync%2A>前に、必ず要求ストリームを閉じてください。</span><span class="sxs-lookup"><span data-stu-id="4d663-380">After you call <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>, make sure you close the request stream before you call <xref:System.Net.WebRequest.GetResponseAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : unit -&gt; System.Net.WebResponse&#xA;override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="webRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d663-381">派生クラスでオーバーライドされると、インターネット要求への応答を返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-381">When overridden in a descendant class, returns a response to an Internet request.</span></span></summary>
        <returns><span data-ttu-id="4d663-382">インターネット要求への応答を格納する <see cref="T:System.Net.WebResponse" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-382">A <see cref="T:System.Net.WebResponse" /> containing the response to the Internet request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-383">メソッド<xref:System.Net.WebRequest.GetResponse%2A>は、インターネットリソースに要求を送信し、 <xref:System.Net.WebResponse>インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-383">The <xref:System.Net.WebRequest.GetResponse%2A> method sends a request to an Internet resource and returns a <xref:System.Net.WebResponse> instance.</span></span> <span data-ttu-id="4d663-384">要求がの呼び出し<xref:System.Net.WebRequest.GetRequestStream%2A>によって既に開始されている場合、メソッドは<xref:System.Net.WebRequest.GetResponse%2A>要求を完了し、応答を返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-384">If the request has already been initiated by a call to <xref:System.Net.WebRequest.GetRequestStream%2A>, the <xref:System.Net.WebRequest.GetResponse%2A> method completes the request and returns any response.</span></span>  
  
 <span data-ttu-id="4d663-385">メソッド<xref:System.Net.WebRequest.GetResponse%2A>は、への<xref:System.Net.WebResponse>同期アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="4d663-385">The <xref:System.Net.WebRequest.GetResponse%2A> method provides synchronous access to the <xref:System.Net.WebResponse>.</span></span> <span data-ttu-id="4d663-386">非同期アクセスの場合は、 <xref:System.Net.WebRequest.BeginGetResponse%2A>メソッド<xref:System.Net.WebRequest.EndGetResponse%2A>とメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="4d663-386">For asynchronous access, use the <xref:System.Net.WebRequest.BeginGetResponse%2A> and <xref:System.Net.WebRequest.EndGetResponse%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-387"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-387">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-388">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-388">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-389">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-389">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-390">WebException がスローされた場合は<xref:System.Net.WebException.Response%2A> 、 <xref:System.Net.WebException.Status%2A>例外のプロパティとプロパティを使用して、サーバーからの応答を確認します。</span><span class="sxs-lookup"><span data-stu-id="4d663-390">If a WebException is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-391">次の例では<xref:System.Net.WebRequest.Timeout%2A> 、プロパティを1万ミリ秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-391">The following example sets the <xref:System.Net.WebRequest.Timeout%2A> property to 10000 milliseconds.</span></span> <span data-ttu-id="4d663-392">リソースが返さ<xref:System.Net.WebException>れる前にタイムアウト期間が経過すると、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4d663-392">If the timeout period expires before the resource can be returned, a <xref:System.Net.WebException> is thrown.</span></span>  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-393">メソッドが派生クラスでオーバーライドされていないのに、そのメソッドへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-393">Any attempt is made to access the method, when the method is not overridden in a descendant class.</span></span></exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Net.WebResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebResponse&gt; GetResponseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsync () As Task(Of WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::WebResponse ^&gt; ^ GetResponseAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;&#xA;override this.GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;" Usage="webRequest.GetResponseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d663-394">派生クラスでオーバーライドされると、インターネット要求への応答を非同期操作として返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-394">When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="4d663-395">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4d663-395">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-396">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="4d663-396">This operation will not block.</span></span> <span data-ttu-id="4d663-397">返さ<xref:System.Threading.Tasks.Task%601>れたオブジェクトは、インターネット要求への応答が利用可能になると完了します。</span><span class="sxs-lookup"><span data-stu-id="4d663-397">The returned <xref:System.Threading.Tasks.Task%601> object will complete after a response to an Internet request is available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy GetSystemWebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy GetSystemWebProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetSystemWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemWebProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ GetSystemWebProxy();" />
      <MemberSignature Language="F#" Value="static member GetSystemWebProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebRequest.GetSystemWebProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d663-398">現在の偽装ユーザーの Internet Explorer の設定で構成されたプロキシを返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-398">Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.</span></span></summary>
        <returns><span data-ttu-id="4d663-399"><see cref="T:System.Net.IWebProxy" /> のインスタンスへのすべての呼び出しで使用される <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-399">An <see cref="T:System.Net.IWebProxy" /> used by every call to instances of <see cref="T:System.Net.WebRequest" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-400"><xref:System.Net.WebRequest.GetSystemWebProxy%2A>メソッドは、現在のユーザーの Internet Explorer (IE) プロキシ設定を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4d663-400"><xref:System.Net.WebRequest.GetSystemWebProxy%2A> method reads the current user's Internet Explorer (IE) proxy settings.</span></span> <span data-ttu-id="4d663-401">このプロセスには、自動的にプロキシ設定を検出するための IE オプション、自動構成スクリプトを使用する方法、プロキシサーバーの手動設定、および高度な手動プロキシサーバー設定が含まれます。</span><span class="sxs-lookup"><span data-stu-id="4d663-401">This process includes the IE options to automatically detect proxy settings, use an automatic configuration script, manual proxy server settings, and advanced manual proxy server settings.</span></span>  
  
 <span data-ttu-id="4d663-402">アプリケーションが複数のユーザーを偽装している場合は<xref:System.Net.WebRequest.GetSystemWebProxy%2A> 、メソッドを使用して、偽装されたユーザーごとにプロキシを取得できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-402">If your application is impersonating several users, you can use the <xref:System.Net.WebRequest.GetSystemWebProxy%2A> method to retrieve a proxy for each impersonated user.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="4d663-403">グローバル HTTP プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-403">To get or set the global HTTP proxy.</span></span> <span data-ttu-id="4d663-404">関連付けられた列挙型:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="4d663-404">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public abstract System.Net.WebHeaderCollection Headers { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Headers As WebHeaderCollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebRequest.Headers" />
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Headers As WebHeaderCollection" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-405">派生クラスでオーバーライドされると、要求に関連付けられたヘッダーの名前/値ペアのコレクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-405">When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</span></span></summary>
        <value><span data-ttu-id="4d663-406">要求に関連付けられたヘッダーの名前/値ペアを格納する <see cref="T:System.Net.WebHeaderCollection" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-406">A <see cref="T:System.Net.WebHeaderCollection" /> containing the header name/value pairs associated with this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-407">プロパティ<xref:System.Net.WebRequest.Headers%2A>は、インターネット<xref:System.Net.WebHeaderCollection>リソースに送信するヘッダー情報を格納しているインスタンスを格納します。</span><span class="sxs-lookup"><span data-stu-id="4d663-407">The <xref:System.Net.WebRequest.Headers%2A> property contains a <xref:System.Net.WebHeaderCollection> instance containing the header information to send to the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-408"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-408">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-409">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-409">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-410">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-410">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-411">次の例では、この要求に関連付けられているヘッダーの名前と値のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="4d663-411">The following example displays the header name/value pairs associated with this request.</span></span>  
  
 [!code-cpp[WebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Headers/CPP/webrequest_headers.cpp#1)]
 [!code-csharp[WebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Headers/CS/webrequest_headers.cs#1)]
 [!code-vb[WebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Headers/VB/webrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-412">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-412">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.Net.WebRequest.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-413">現在の要求に対する偽装レベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-413">Gets or sets the impersonation level for the current request.</span></span></summary>
        <value><span data-ttu-id="4d663-414"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値。</span><span class="sxs-lookup"><span data-stu-id="4d663-414">A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-415">偽装レベルによって、サーバーがクライアントの資格情報をどのように使用できるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-415">The impersonation level determines how the server can use the client's credentials.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public abstract string Method { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Method As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.WebRequest.Method" />
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-416">派生クラスでオーバーライドされると、要求で使用するプロトコル メソッドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-416">When overridden in a descendant class, gets or sets the protocol method to use in this request.</span></span></summary>
        <value><span data-ttu-id="4d663-417">要求で使用するプロトコル メソッド。</span><span class="sxs-lookup"><span data-stu-id="4d663-417">The protocol method to use in this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-418">派生クラス<xref:System.Net.WebRequest.Method%2A>でオーバーライドされると、この要求で使用する要求メソッドがプロパティに格納されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-418">When overridden in a descendant class, the <xref:System.Net.WebRequest.Method%2A> property contains the request method to use in this request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-419"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-419">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-420">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-420">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-421">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-421">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-422">次の例では<xref:System.Net.WebRequest.Method%2A> 、プロパティを post に設定して、要求がターゲットホストにデータをポストすることを示しています。</span><span class="sxs-lookup"><span data-stu-id="4d663-422">The following example sets the <xref:System.Net.WebRequest.Method%2A> property to POST to indicate that the request will post data to the target host.</span></span>  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-423">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-423">If the property is not overridden in a descendant class, any attempt is made to get or set the property.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="4d663-424">プロパティ<see cref="P:System.Net.WebRequest.Method" />は、実装されているプロトコルに対して任意の有効な要求メソッドを含むことができます。</span><span class="sxs-lookup"><span data-stu-id="4d663-424">The <see cref="P:System.Net.WebRequest.Method" /> property can contain any valid request method for the protocol implemented.</span></span> <span data-ttu-id="4d663-425">既定値は、プロトコル固有のプロパティの設定を必要としない既定の要求/応答トランザクションを提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d663-425">The default value must provide a default request/response transaction that does not require protocol-specific properties to be set.</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Method" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public virtual bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.WebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-426">派生クラスでオーバーライドされる場合、要求を事前認証するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-426">When overridden in a descendant class, indicates whether to pre-authenticate the request.</span></span></summary>
        <value><span data-ttu-id="4d663-427">事前認証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-427"><see langword="true" /> to pre-authenticate; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-428">最初の要求を除き、プロパティは<xref:System.Net.WebRequest.PreAuthenticate%2A> 、サーバーによるチャレンジを待機せずに、後続の要求で認証情報を送信するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="4d663-428">With the exception of the first request, the <xref:System.Net.WebRequest.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests without waiting to be challenged by the server.</span></span> <span data-ttu-id="4d663-429"><xref:System.Net.WebRequest>が<xref:System.Net.WebRequest.PreAuthenticate%2A> の場合、は認証チャレンジを待機してから認証情報を送信します。`false`</span><span class="sxs-lookup"><span data-stu-id="4d663-429">When <xref:System.Net.WebRequest.PreAuthenticate%2A> is `false`, the <xref:System.Net.WebRequest> waits for an authentication challenge before sending authentication information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-430"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-430">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-431">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-431">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-432">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-432">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-433">次の例では<xref:System.Net.WebRequest.PreAuthenticate%2A> 、プロパティ`true`をに設定<xref:System.Net.NetworkCredential>して、 <xref:System.Net.WebRequest.Credentials%2A>プロパティに格納されているがリソース要求と共に送信されるようにします。</span><span class="sxs-lookup"><span data-stu-id="4d663-433">The following example sets the <xref:System.Net.WebRequest.PreAuthenticate%2A> property to `true` so that the <xref:System.Net.NetworkCredential> stored in the <xref:System.Net.WebRequest.Credentials%2A> property will be sent to along with the resource request.</span></span>  
  
 [!code-cpp[WebRequest_PreAuthenticate#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CPP/webrequest_preauthenticate.cpp#1)]
 [!code-csharp[WebRequest_PreAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CS/webrequest_preauthenticate.cs#1)]
 [!code-vb[WebRequest_PreAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_PreAuthenticate/VB/webrequest_preauthenticate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-434">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-434">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-435">派生クラスでオーバーライドされると、インターネット リソースにアクセスするために使用するネットワーク プロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-435">When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</span></span></summary>
        <value><span data-ttu-id="4d663-436">インターネット リソースにアクセスするために使用する <see cref="T:System.Net.IWebProxy" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-436">The <see cref="T:System.Net.IWebProxy" /> to use to access the Internet resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-437">プロパティ<xref:System.Net.WebRequest.Proxy%2A>は、要求がインターネットリソースにアクセスするために使用するネットワークプロキシを識別します。</span><span class="sxs-lookup"><span data-stu-id="4d663-437">The <xref:System.Net.WebRequest.Proxy%2A> property identifies the network proxy that the request uses to access the Internet resource.</span></span> <span data-ttu-id="4d663-438">要求は、インターネットリソースに直接ではなく、プロキシサーバーを介して行われます。</span><span class="sxs-lookup"><span data-stu-id="4d663-438">The request is made through the proxy server rather than directly to the Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-439"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-439">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-440">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-440">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-441">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-441">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-442">次の例では、現在のネットワークプロキシアドレスを表示し、ユーザーが新しいネットワークプロキシアドレスとポート番号を割り当てることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="4d663-442">The following example displays the current network proxy address and allows the user to assign a new network proxy address and port number.</span></span>  
  
 [!code-cpp[WebRequest_Proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Proxy/CPP/webrequest_proxy.cpp#1)]
 [!code-csharp[WebRequest_Proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Proxy/CS/webrequest_proxy.cs#1)]
 [!code-vb[WebRequest_Proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Proxy/VB/webrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-443">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-443">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="P:System.Net.HttpWebRequest.Proxy" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPortableWebRequestCreator">
      <MemberSignature Language="C#" Value="public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPortableWebRequestCreator(class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPortableWebRequestCreator (creator As IWebRequestCreate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPortableWebRequestCreator(System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPortableWebRequestCreator : System.Net.IWebRequestCreate -&gt; unit" Usage="System.Net.WebRequest.RegisterPortableWebRequestCreator creator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="creator"><span data-ttu-id="4d663-444">登録する <see cref="T:System.Net.IWebRequestCreate" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4d663-444">The <see cref="T:System.Net.IWebRequestCreate" /> object to register.</span></span></param>
        <summary><span data-ttu-id="4d663-445"><see cref="T:System.Net.IWebRequestCreate" /> オブジェクトを登録します。</span><span class="sxs-lookup"><span data-stu-id="4d663-445">Register an <see cref="T:System.Net.IWebRequestCreate" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefix">
      <MemberSignature Language="C#" Value="public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegisterPrefix (prefix As String, creator As IWebRequestCreate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RegisterPrefix(System::String ^ prefix, System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPrefix : string * System.Net.IWebRequestCreate -&gt; bool" Usage="System.Net.WebRequest.RegisterPrefix (prefix, creator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="4d663-446"><see cref="T:System.Net.WebRequest" /> 派生クラスが処理する完全な URI または URI プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="4d663-446">The complete URI or URI prefix that the <see cref="T:System.Net.WebRequest" /> descendant services.</span></span></param>
        <param name="creator"><span data-ttu-id="4d663-447"><see cref="T:System.Net.WebRequest" /> が <see cref="T:System.Net.WebRequest" /> 派生クラスを作成するために呼び出す作成メソッド。</span><span class="sxs-lookup"><span data-stu-id="4d663-447">The create method that the <see cref="T:System.Net.WebRequest" /> calls to create the <see cref="T:System.Net.WebRequest" /> descendant.</span></span></param>
        <summary><span data-ttu-id="4d663-448">指定した URI 用の <see cref="T:System.Net.WebRequest" /> 派生クラスを登録します。</span><span class="sxs-lookup"><span data-stu-id="4d663-448">Registers a <see cref="T:System.Net.WebRequest" /> descendant for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="4d663-449">登録が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-449"><see langword="true" /> if registration is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-450">メソッド<xref:System.Net.WebRequest.RegisterPrefix%2A>は、 <xref:System.Net.WebRequest>子孫をサービス要求に登録します。</span><span class="sxs-lookup"><span data-stu-id="4d663-450">The <xref:System.Net.WebRequest.RegisterPrefix%2A> method registers <xref:System.Net.WebRequest> descendants to service requests.</span></span> <span data-ttu-id="4d663-451"><xref:System.Net.WebRequest>通常、子孫は、HTTP や FTP などの特定のプロトコルを処理するように登録されますが、サーバー上の特定のサーバーまたはパスへの要求を処理するように登録できます。</span><span class="sxs-lookup"><span data-stu-id="4d663-451"><xref:System.Net.WebRequest> descendants are typically registered to handle a specific protocol, such HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.</span></span>  
  
 <span data-ttu-id="4d663-452">登録済みの事前登録済みの予約の種類には、次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="4d663-452">The pre-registered reserve types already registered include the following:</span></span>  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 <span data-ttu-id="4d663-453">詳細については、 <xref:System.Net.WebRequest.Create%28System.String%29>メソッド<xref:System.Net.WebRequest.Create%28System.Uri%29>とメソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-453">For more information, see the <xref:System.Net.WebRequest.Create%28System.String%29> and <xref:System.Net.WebRequest.Create%28System.Uri%29> methods.</span></span>  
  
 <span data-ttu-id="4d663-454">重複するプレフィックスは使用できません。</span><span class="sxs-lookup"><span data-stu-id="4d663-454">Duplicate prefixes are not allowed.</span></span> <span data-ttu-id="4d663-455"><xref:System.Net.WebRequest.RegisterPrefix%2A>重複`false`するプレフィックスを登録しようとした場合は、を返します。</span><span class="sxs-lookup"><span data-stu-id="4d663-455"><xref:System.Net.WebRequest.RegisterPrefix%2A> returns `false` if an attempt is made to register a duplicate prefix.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-456">クラス<xref:System.Net.HttpWebRequest>は、既定で HTTP および HTTPS スキームのサービス要求に登録されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-456">The <xref:System.Net.HttpWebRequest> class is registered to service requests for HTTP and HTTPS schemes by default.</span></span> <span data-ttu-id="4d663-457">これらのスキーマに対し<xref:System.Net.WebRequest>て異なる子孫を登録しようとすると、失敗します。</span><span class="sxs-lookup"><span data-stu-id="4d663-457">Attempts to register a different <xref:System.Net.WebRequest> descendant for these schemes will fail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d663-458"><paramref name="prefix" /> は <see langword="null" /> です</span><span class="sxs-lookup"><span data-stu-id="4d663-458"><paramref name="prefix" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="4d663-459">- または -</span><span class="sxs-lookup"><span data-stu-id="4d663-459">-or-</span></span> 
 <span data-ttu-id="4d663-460"><paramref name="creator" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4d663-460"><paramref name="creator" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public abstract Uri RequestUri { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequestUri As Uri" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Uri ^ RequestUri { Uri ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="C#" Value="public virtual Uri RequestUri { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestUri As Uri" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-461">派生クラスでオーバーライドされると、要求に関連付けられたインターネット リソースの URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="4d663-461">When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</span></span></summary>
        <value><span data-ttu-id="4d663-462">要求に関連付けられているリソースを表す <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-462">A <see cref="T:System.Uri" /> representing the resource associated with the request</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-463">派生クラスでオーバーライド<xref:System.Net.WebRequest.RequestUri%2A> <xref:System.Uri>された場合、プロパティは、メソッド<xref:System.Net.WebRequest.Create%2A>が要求を作成するために使用するインスタンスを格納します。</span><span class="sxs-lookup"><span data-stu-id="4d663-463">When overridden in a descendant class, the <xref:System.Net.WebRequest.RequestUri%2A> property contains the <xref:System.Uri> instance that <xref:System.Net.WebRequest.Create%2A> method uses to create the request.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-464"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-464">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-465">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-465">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-466">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-466">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-467">次の例では<xref:System.Net.WebRequest.RequestUri%2A> 、プロパティをチェックして、最初に要求されたサイトを確認します。</span><span class="sxs-lookup"><span data-stu-id="4d663-467">The following example checks the <xref:System.Net.WebRequest.RequestUri%2A> property to determine the site originally requested.</span></span>  
  
 [!code-cpp[WebRequest_RequestUri1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_RequestUri1/CPP/webrequest_requesturi.cpp#1)]
 [!code-csharp[WebRequest_RequestUri1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_RequestUri1/CS/webrequest_requesturi.cs#1)]
 [!code-vb[WebRequest_RequestUri1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_RequestUri1/VB/webrequest_requesturi.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-468">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-468">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="4d663-469">
            <see cref="P:System.Net.WebRequest.RequestUri" />には、 <see cref="T:System.Uri" /> メソッドに渡された元のインスタンスが含まれている必要があります。<see cref="M:System.Net.WebRequest.Create(System.Uri)" /></span><span class="sxs-lookup"><span data-stu-id="4d663-469">
            <see cref="P:System.Net.WebRequest.RequestUri" /> must contain the original <see cref="T:System.Uri" /> instance passed to the <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> method.</span></span> <span data-ttu-id="4d663-470">プロトコルで要求を別の URI にリダイレクトして要求を処理できる場合、子孫は、実際に要求を処理する URI を格納するプロパティを提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4d663-470">If the protocol is able to redirect the request to a different URI to service the request, the descendant must provide a property to contain the URI that actually services the request</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.RequestUri" />
        <altmember cref="P:System.Net.HttpWebRequest.Address" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="4d663-471"><see cref="T:System.Net.WebRequest" /> のシリアル化されたデータを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-471">A <see cref="T:System.Runtime.Serialization.SerializationInfo" />, which holds the serialized data for the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="4d663-472">新しい <see cref="T:System.Net.WebRequest" /> に関連付けられているシリアル化ストリームの転送先を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-472">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream associated with the new <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="4d663-473">派生クラスでオーバーライドされる場合、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスに、<see cref="T:System.Net.WebRequest" /> をシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-473">When overridden in a descendant class, populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.WebRequest" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-474">インターフェイスが派生クラスでオーバーライドされていないのに、オブジェクトのシリアル化が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-474">An attempt is made to serialize the object, when the interface is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.WebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-475">要求がタイムアウトするまでのミリ秒単位の時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-475">Gets or sets the length of time, in milliseconds, before the request times out.</span></span></summary>
        <value><span data-ttu-id="4d663-476">要求がタイムアウトするまでのミリ秒単位の時間または要求がタイムアウトしないことを示す値 <see cref="F:System.Threading.Timeout.Infinite" />。既定値は、派生クラスによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="4d663-476">The length of time, in milliseconds, until the request times out, or the value <see cref="F:System.Threading.Timeout.Infinite" /> to indicate that the request does not time out. The default value is defined by the descendant class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-477">プロパティ<xref:System.Net.WebRequest.Timeout%2A>は、要求がタイムアウトしてを<xref:System.Net.WebException>スローするまでの時間の長さをミリ秒単位で示します。</span><span class="sxs-lookup"><span data-stu-id="4d663-477">The <xref:System.Net.WebRequest.Timeout%2A> property indicates the length of time, in milliseconds, until the request times out and throws a <xref:System.Net.WebException>.</span></span> <span data-ttu-id="4d663-478">プロパティ<xref:System.Net.WebRequest.Timeout%2A>は、 <xref:System.Net.WebRequest.GetResponse%2A>メソッドで行われた同期要求のみに影響します。</span><span class="sxs-lookup"><span data-stu-id="4d663-478">The <xref:System.Net.WebRequest.Timeout%2A> property affects only synchronous requests made with the <xref:System.Net.WebRequest.GetResponse%2A> method.</span></span> <span data-ttu-id="4d663-479">非同期要求をタイムアウトさせるには<xref:System.Net.WebRequest.Abort%2A> 、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="4d663-479">To time out asynchronous requests, use the <xref:System.Net.WebRequest.Abort%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d663-480"><xref:System.Net.WebRequest> クラス`abstract`はクラスです。</span><span class="sxs-lookup"><span data-stu-id="4d663-480">The <xref:System.Net.WebRequest> class is an `abstract` class.</span></span> <span data-ttu-id="4d663-481">実行時のインスタンス<xref:System.Net.WebRequest>の実際の動作は、 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>メソッドによって返される派生クラスによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4d663-481">The actual behavior of <xref:System.Net.WebRequest> instances at run time is determined by the descendant class returned by the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d663-482">既定値と例外の詳細については、「」 <xref:System.Net.HttpWebRequest>や<xref:System.Net.FileWebRequest>「」など、子孫クラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4d663-482">For more information about default values and exceptions, see the documentation for the descendant classes, such as <xref:System.Net.HttpWebRequest> and <xref:System.Net.FileWebRequest>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d663-483">次の例では<xref:System.Net.WebRequest.Timeout%2A> 、プロパティを1万ミリ秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-483">The following example sets the <xref:System.Net.WebRequest.Timeout%2A> property to 10000 milliseconds.</span></span> <span data-ttu-id="4d663-484">リソースが返さ<xref:System.Net.WebException>れる前にタイムアウト期間が経過すると、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4d663-484">If the timeout period expires before the resource can be returned, a <xref:System.Net.WebException> is thrown.</span></span>  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-485">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティの取得または設定が試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-485">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="4d663-486">子孫クラスは、フィールドが<see cref="T:System.Net.WebException" /> <see cref="P:System.Net.WebException.Status" />に<see cref="F:System.Net.WebExceptionStatus.Timeout" />設定されたをスローすることによってタイムアウトを通知します。</span><span class="sxs-lookup"><span data-stu-id="4d663-486">Descendant classes signal a timeout by throwing a <see cref="T:System.Net.WebException" /> with the <see cref="P:System.Net.WebException.Status" /> field set to <see cref="F:System.Net.WebExceptionStatus.Timeout" />.</span></span> <span data-ttu-id="4d663-487">が<see cref="P:System.Net.WebRequest.Timeout" /> に<see cref="F:System.Threading.Timeout.Infinite" />設定されている場合、派生クラスはタイムアウトしません。</span><span class="sxs-lookup"><span data-stu-id="4d663-487">When <see cref="P:System.Net.WebRequest.Timeout" /> is set to <see cref="F:System.Threading.Timeout.Infinite" /> the descendant class does not time out.</span></span></para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d663-488">派生クラスでオーバーライドされる場合、<see cref="T:System.Boolean" /> が要求と共に送信されるかどうかを制御する <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-488">When overridden in a descendant class, gets or sets a <see cref="T:System.Boolean" /> value that controls whether <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</span></span></summary>
        <value><span data-ttu-id="4d663-489">既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4d663-489"><see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4d663-490">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="4d663-490">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d663-491">この`true` オブジェクト<xref:System.Net.WebRequest>による要求が、サーバーから要求された場合に、現在ログオンしているユーザーの資格情報を使用して認証されるようにするには、このプロパティをに設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-491">Set this property to `true` when requests made by this <xref:System.Net.WebRequest> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="4d663-492">クライアントアプリケーションの場合、これはほとんどのシナリオで望ましい動作です。</span><span class="sxs-lookup"><span data-stu-id="4d663-492">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="4d663-493">ASP.NET アプリケーションなどの中間層アプリケーションでは、このプロパティを使用するのではなく、通常<xref:System.Net.WebRequest.Credentials%2A> 、要求の発行元のクライアントの資格情報にプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4d663-493">For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.WebRequest.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4d663-494">要求が送信された後で、このプロパティを設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="4d663-494">You attempted to set this property after the request was sent.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4d663-495">プロパティが派生クラスでオーバーライドされていないのに、そのプロパティへのアクセスが試行されました。</span><span class="sxs-lookup"><span data-stu-id="4d663-495">Any attempt is made to access the property, when the property is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
