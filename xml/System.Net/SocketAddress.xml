<Type Name="SocketAddress" FullName="System.Net.SocketAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9450cb79ab5f58542387491b72545105e08e82b0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30468296" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SocketAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.SocketAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAddress" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b3ca1-101">
        <see cref="T:System.Net.EndPoint" /> 派生クラスからシリアル化された情報を格納します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b3ca1-101">Stores serialized information from <see cref="T:System.Net.EndPoint" /> derived classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3ca1-102">基になるバッファーの最初の 2 バイトは予約されている、<xref:System.Net.Sockets.AddressFamily>列挙値。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-102">The first 2 bytes of the underlying buffer are reserved for the <xref:System.Net.Sockets.AddressFamily> enumerated value.</span></span> <span data-ttu-id="b3ca1-103">ときに、 <xref:System.Net.SocketAddress> 、シリアル化された格納に使用されます<xref:System.Net.IPEndPoint>、ポート番号の情報を格納する 3 番目と 4 番目のバイトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-103">When the <xref:System.Net.SocketAddress> is used to store a serialized <xref:System.Net.IPEndPoint>, the third and fourth bytes are used to store port number information.</span></span> <span data-ttu-id="b3ca1-104">次のバイトを使用して、IP アドレスを格納します。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-104">The next bytes are used to store the IP address.</span></span> <span data-ttu-id="b3ca1-105">インデックス位置を参照してこの基になるバイト バッファー内にあるすべての情報にアクセスすることができます。バイト バッファーは、0 から始まるインデックスを使用します。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-105">You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing.</span></span> <span data-ttu-id="b3ca1-106">使用することも、<xref:System.Net.SocketAddress.Family%2A>と<xref:System.Net.SocketAddress.Size%2A>を取得するプロパティ、<xref:System.Net.Sockets.AddressFamily>値と、バッファーのサイズをそれぞれします。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-106">You can also use the <xref:System.Net.SocketAddress.Family%2A> and <xref:System.Net.SocketAddress.Size%2A> properties to get the <xref:System.Net.Sockets.AddressFamily> value and the buffer size, respectively.</span></span> <span data-ttu-id="b3ca1-107">表示するには任意の文字列としてこの情報を使用して、<xref:System.Net.SocketAddress.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-107">To view any of this information as a string, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3ca1-108">次の例を使用する方法を示します<xref:System.Net.SocketAddress>のインスタンスをシリアル化する、<xref:System.Net.EndPoint>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-108">The following example demonstrates how to use <xref:System.Net.SocketAddress> to serialize an instance of the <xref:System.Net.EndPoint> class.</span></span> <span data-ttu-id="b3ca1-109">シリアル化、基になるバイト バッファーの後に、<xref:System.Net.SocketAddress>をすべて含む、<xref:System.Net.IPEndPoint>状態情報。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-109">After serialization, the underlying byte buffer of the <xref:System.Net.SocketAddress> contains all of the <xref:System.Net.IPEndPoint> state information.</span></span>  
  
 [!code-cpp[Classic SocketAddressExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SocketAddressExample/CPP/source.cpp#1)]
 [!code-csharp[Classic SocketAddressExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SocketAddressExample/CS/source.cs#1)]
 [!code-vb[Classic SocketAddressExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SocketAddressExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b3ca1-110">
            <see cref="T:System.Net.SocketAddress" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-110">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="b3ca1-111">
            <see cref="T:System.Net.Sockets.AddressFamily" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-111">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3ca1-112">指定したアドレス ファミリの <see cref="T:System.Net.SocketAddress" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-112">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class for the given address family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3ca1-113">このオーバー ロードでは、基になるバッファー サイズを 32 バイトに設定します。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-113">This overload sets the underlying buffer size to 32 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="b3ca1-114">
            <see cref="T:System.Net.Sockets.AddressFamily" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-114">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="b3ca1-115">基になるバッファーに割り当てるバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-115">The number of bytes to allocate for the underlying buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3ca1-116">指定したアドレス ファミリとバッファー サイズを使用して、<see cref="T:System.Net.SocketAddress" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-116">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class using the specified address family and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3ca1-117">このオーバー ロードを使用して、新しいインスタンスを作成する、<xref:System.Net.SocketAddress>基になるバッファー サイズが特定のクラスです。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-117">Use this overload to create a new instance of the <xref:System.Net.SocketAddress> class with a particular underlying buffer size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b3ca1-118">
            <paramref name="size" /> が 2 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-118">
              <paramref name="size" /> is less than 2.</span>
          </span>
          <span data-ttu-id="b3ca1-119">この 2 バイトは、<paramref name="family" /> を格納するために必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-119">These 2 bytes are needed to store <paramref name="family" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand">
          <span data-ttu-id="b3ca1-120">現在の <see cref="T:System.Object" /> と比較する <see langword="Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-120">The <see cref="T:System.Object" /> to compare with the current <see langword="Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3ca1-121">指定した <see langword="Object" /> が現在の <see langword="Object" /> と等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-121">Determines whether the specified <see langword="Object" /> is equal to the current <see langword="Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3ca1-122">指定した <see langword="true" /> が現在の <see langword="Object" /> と等しい場合は <see langword="Object" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-122">
              <see langword="true" /> if the specified <see langword="Object" /> is equal to the current <see langword="Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Family">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.AddressFamily Family { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily Family" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Family" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Family As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::AddressFamily Family { System::Net::Sockets::AddressFamily get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b3ca1-123">現在の <see cref="T:System.Net.Sockets.AddressFamily" /> の <see cref="T:System.Net.SocketAddress" /> 列挙値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-123">Gets the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value of the current <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b3ca1-124">
            <see cref="T:System.Net.Sockets.AddressFamily" /> 列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-124">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3ca1-125">このメソッドは、取得、<xref:System.Net.Sockets.AddressFamily>列挙値を現在のアドレス指定スキームを表す<xref:System.Net.SocketAddress>です。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-125">This method gets the <xref:System.Net.Sockets.AddressFamily> enumerated value that represents the addressing scheme of the current <xref:System.Net.SocketAddress>.</span></span> <span data-ttu-id="b3ca1-126">対応する文字列形式を表示するかどうかは<xref:System.Net.Sockets.AddressFamily>を使用して、<xref:System.Net.SocketAddress.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-126">If you want to view the corresponding string representation of <xref:System.Net.Sockets.AddressFamily>, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b3ca1-127">特定の型のハッシュ関数として機能し、ハッシュ アルゴリズムやハッシュ テーブルのようなデータ構造での使用に適しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-127">Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3ca1-128">現在の <see cref="T:System.Object" /> のハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-128">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int offset] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(offset As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int offset); void set(int offset, System::Byte value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="b3ca1-129">要求されている情報の配列インデックス要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-129">The array index element of the desired information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3ca1-130">基になるバッファーの指定したインデックス要素を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-130">Gets or sets the specified index element in the underlying buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b3ca1-131">基になるバッファーの指定したインデックス要素の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-131">The value of the specified index element in the underlying buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3ca1-132">このプロパティを取得または基になるバッファーで指定したバイトの位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-132">This property gets or sets the specified byte position in the underlying buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3ca1-133">呼び出すことを確認する<xref:System.Net.SocketAddress.Size%2A>基になるバッファー内の要素を参照する前にします。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-133">Be sure to call <xref:System.Net.SocketAddress.Size%2A> before referring to elements in the underlying buffer.</span></span> <span data-ttu-id="b3ca1-134">存在しないインデックスを参照すると、<xref:System.Net.SocketAddress>をスローする、<xref:System.IndexOutOfRangeException>です。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-134">Referring to an index that does not exist will cause the <xref:System.Net.SocketAddress> to throw an <xref:System.IndexOutOfRangeException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="b3ca1-135">指定したインデックスがバッファー内に存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-135">The specified index does not exist in the buffer.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.SocketAddress.Size" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b3ca1-136">
            <see cref="T:System.Net.SocketAddress" /> の基になるバッファー サイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-136">Gets the underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b3ca1-137">
            <see cref="T:System.Net.SocketAddress" /> の基になるバッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-137">The underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3ca1-138">このプロパティの基になるバッファーのサイズを取得、 <xref:System.Net.SocketAddress> (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-138">This property gets the underlying buffer size of the <xref:System.Net.SocketAddress> in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b3ca1-139">ソケット アドレスに関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-139">Returns information about the socket address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3ca1-140">
            <see cref="T:System.Net.SocketAddress" /> に関する情報を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3ca1-140">A string that contains information about the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3ca1-141"><xref:System.Net.SocketAddress.ToString%2A>メソッドを含む文字列を返します、<xref:System.Net.Sockets.AddressFamily>の基になるバッファーのサイズ、列挙値、<xref:System.Net.SocketAddress>構造、およびバッファーの残りの内容。</span><span class="sxs-lookup"><span data-stu-id="b3ca1-141">The <xref:System.Net.SocketAddress.ToString%2A> method returns a string that contains the <xref:System.Net.Sockets.AddressFamily> enumerated value, the size of the underlying buffer of the <xref:System.Net.SocketAddress> structure, and the remaining contents of the buffer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>