<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd06e30c8855583e2efdc360f33c2a01af00987f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="909ba-101">
        <see cref="T:System.Net.HttpListener" /> オブジェクトに対する受信 HTTP 要求を記述します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="909ba-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span>
      </span>
      <span data-ttu-id="909ba-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="909ba-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-103">によって処理されるときにクライアントが要求に、Uniform Resource Identifier ()、<xref:System.Net.HttpListener>オブジェクト、<xref:System.Net.HttpListener>提供、<xref:System.Net.HttpListenerContext>送信者、要求、およびクライアントに送信される応答に関する情報を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="909ba-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="909ba-104"><xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType>プロパティから返される、<xref:System.Net.HttpListenerRequest>要求を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="909ba-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="909ba-105"><xref:System.Net.HttpListenerRequest>オブジェクトには、要求などの要求に関する情報が含まれています。<xref:System.Net.HttpListenerRequest.HttpMethod%2A>文字列、<xref:System.Net.HttpListenerRequest.UserAgent%2A>文字列、および本文データの要求 (を参照してください、<xref:System.Net.HttpListenerRequest.InputStream%2A>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="909ba-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="909ba-106">要求に応答してを使用して、関連する応答を取得する必要があります、<xref:System.Net.HttpListenerContext.Response%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-107">次のコード例は、受信および応答するための方法を示します、<xref:System.Net.HttpListenerRequest>です。</span><span class="sxs-lookup"><span data-stu-id="909ba-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-108">クライアントが受け入れる MIME の種類を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-108">Gets the MIME types accepted by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-109">要求の <see langword="Accept" /> ヘッダーで指定されているタイプの名前、またはクライアント要求に <see langword="null" /> ヘッダーが含まれていない場合は <see langword="Accept" /> を格納している <see cref="T:System.String" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-110">`Accept`ヘッダーは、Multipurpose Internet Mail Extensions (MIME) の型名をスペースで区切られた文字列 (たとえば、 `image/jpeg`)、MIME の種類、クライアントはそのまま使用し、応答で処理する準備を示すです。</span><span class="sxs-lookup"><span data-stu-id="909ba-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="909ba-111">`*/*`エントリは、クライアントが任意の MIME 型を受け入れることを示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="909ba-112">詳細の詳細については、`Accept`ヘッダーで使用できる RFC 2616 を参照してください[ http://www.rfc-editor.org](http://www.rfc-editor.org/)です。</span><span class="sxs-lookup"><span data-stu-id="909ba-112">For a detailed description of the `Accept` header, see RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="909ba-113">要求ヘッダーの完全な一覧については、<xref:System.Net.HttpRequestHeader>列挙します。</span><span class="sxs-lookup"><span data-stu-id="909ba-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-114">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="909ba-115">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="909ba-116">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-116">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="909ba-117">このオブジェクトは、操作の完了時にコールバック デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-117">This object is passed to the callback delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="909ba-118">クライアントの X.509 v.3 証明書への非同期要求を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="909ba-119">操作のステータスを示す <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-120">クライアントから提供された <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> の問題を識別するエラー コードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-121">Windows エラー コードを格納している <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-122">このプロパティには、によって、Secure Channel (Schannel) セキュリティ サポート プロバイダー インターフェイス (SSPI)、証明書の検証に使用されるを返された Windows エラー コードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="909ba-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="909ba-123">Schannel の SSPI サポートに関する詳細については、マニュアルを参照して"を作成する、セキュリティで保護された接続を使用して Schannel"セキュリティで[ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。</span><span class="sxs-lookup"><span data-stu-id="909ba-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-124">次のコード例では、要求に有効な証明書が含まれているかどうかを確認するには、このプロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="909ba-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="909ba-125">
            <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> または <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> メソッドへの呼び出しによって、クライアント証明書がまだ初期化されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods</span>
          </span>
          <span data-ttu-id="909ba-126">または</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-126">-or -</span>
          </span>
          <span data-ttu-id="909ba-127">操作はまだ進行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-127">The operation is still in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-128">要求と共に送信されるデータに使用できるコンテンツ エンコーディングを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-128">Gets the content encoding that can be used with data sent with the request</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-129">
            <see cref="T:System.Text.Encoding" /> プロパティのデータへの使用に適した <see cref="P:System.Net.HttpListenerRequest.InputStream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-129">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-130"><xref:System.Text.Encoding>バイト シーケンスを文字セット (コード ページ) と文字をバイト シーケンスに変換するオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="909ba-130">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="909ba-131">このプロパティには、文字セット値が使用されます、`Content-Type`ヘッダー エンコード方法を判断します。</span><span class="sxs-lookup"><span data-stu-id="909ba-131">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="909ba-132">このプロパティを返しますのかどうかはその情報は使用できません、<xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="909ba-132">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-133">次のコード例では、使用方法を示します、<xref:System.Net.HttpListenerRequest.ContentEncoding%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-133">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-134">要求に含まれている本体データの長さを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-134">Gets the length of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-135">要求の <see langword="Content-Length" /> ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-135">The value from the request's <see langword="Content-Length" /> header.</span>
          </span>
          <span data-ttu-id="909ba-136">コンテンツの長さが不明な場合、この値は -1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-136">This value is -1 if the content length is not known.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-137">`Content-Length`ヘッダーが要求に付随する本文データの長さをバイト単位で表されます。</span><span class="sxs-lookup"><span data-stu-id="909ba-137">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="909ba-138">要求ヘッダーの完全な一覧については、<xref:System.Net.HttpRequestHeader>列挙します。</span><span class="sxs-lookup"><span data-stu-id="909ba-138">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-139">次のコード例では、<xref:System.Net.HttpListenerRequest.ContentLength64%2A>本文データの処理中にプロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-139">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-140">要求に含まれている本体データの MIME の種類を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-140">Gets the MIME type of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-141">要求の <see langword="Content-Type" /> ヘッダーのテキストを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-141">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-142">本文のデータの Multipurpose Internet Mail Extensions (MIME) の型を宣言、クライアントには、要求の本文データが含まれている場合、`Content-Type`ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="909ba-142">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="909ba-143">たとえば、Web フォームを使用して、データの既定の MIME タイプが返されます、`POST`メソッドは`application/x-www-form-urlencoded`します。</span><span class="sxs-lookup"><span data-stu-id="909ba-143">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="909ba-144">要求ヘッダーの完全な一覧については、<xref:System.Net.HttpRequestHeader>列挙および RFC 2616 で利用可能な[ http://www.rfc-editor.org](http://www.rfc-editor.org/)です。</span><span class="sxs-lookup"><span data-stu-id="909ba-144">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="909ba-145"><xref:System.Net.HttpListenerRequest.ContentType%2A>がある場合は null にない`Content-Type`要求のヘッダー。</span><span class="sxs-lookup"><span data-stu-id="909ba-145">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-146">次のコード例では、このプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-146">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-147">要求と共に送信されたクッキーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-147">Gets the cookies sent with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-148">要求に伴うクッキーを格納している <see cref="T:System.Net.CookieCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-148">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span>
          </span>
          <span data-ttu-id="909ba-149">要求にクッキーが含まれていない場合、このプロパティは空のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-149">This property returns an empty collection if the request does not contain cookies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-150">Cookie とは、ローカル (クライアント) コンピューターに格納されている Web サーバーから名前/値のテキスト データです。</span><span class="sxs-lookup"><span data-stu-id="909ba-150">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-151">次のコード例では、要求で送信されたクッキーの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-151">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="909ba-152">証明書への保留中の要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-152">The pending request for the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="909ba-153">クライアントの X.509 v.3 証明書への非同期要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-153">Ends an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="909ba-154">操作の開始時に返される <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-154">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="909ba-155">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-155">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="909ba-156">
            <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
            <paramref name="e." /> の呼び出しで、<paramref name="asyncResult" /> が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-156">
              <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="909ba-157">このメソッドは、<paramref name="asyncResult" /> で識別される操作に対して既に呼び出されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-157">This method was already called for the operation identified by <paramref name="asyncResult" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="909ba-158">クライアントの X.509 v.3 証明書を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-158">Retrieves the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="909ba-159">クライアントの X.509 v.3 証明書を格納している <see cref="N:System.Security.Cryptography.X509Certificates" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-159">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-160">このメソッドは、証明書を取得するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="909ba-160">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="909ba-161">クライアントの X.509 v.3 証明書を取得するために既に呼び出されているので、このメソッドに対して別の呼び出しを行うことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-161">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span>
          </span>
        </exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="909ba-162">クライアントの X.509 v.3 証明書を非同期操作として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-162">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="909ba-163">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-163">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="909ba-164">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-164">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="909ba-165">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、クライアントの X.509 v.3 証明書を含む <see cref="N:System.Security.Cryptography.X509Certificates" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-165">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-166">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="909ba-166">This operation will not block.</span></span> <span data-ttu-id="909ba-167">返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、証明書が取得されたときに、完了します。</span><span class="sxs-lookup"><span data-stu-id="909ba-167">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="909ba-168">クライアントの X.509 v.3 証明書を取得するには、このメソッドを呼び出すが進行中に、このメソッドに別の呼び出しを確立できません。</span><span class="sxs-lookup"><span data-stu-id="909ba-168">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-169">要求に関連付けられている本体データがあるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-169">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-170">要求に関連付けられている本体データがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-170">
              <see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-171">使用して、サーバーにデータを送信する要求、`POST`メソッドはなど、エンティティ本体を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="909ba-171">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-172">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-172">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-173">要求で送信されるヘッダーの名前と値のペアのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-173">Gets the collection of header name/value pairs sent in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-174">要求に含まれている HTTP ヘッダーを格納している <see cref="T:System.Net.WebHeaderCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-174">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-175">要求ヘッダーには、メタデータ情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="909ba-175">Request headers contain metadata information.</span></span> <span data-ttu-id="909ba-176">たとえば、ヘッダーは、サーバーをクライアントを参照するリソースの Uniform リソース識別子 (URI) を含めることができます、応答本文内のデータ型のクライアント、および、許容される MIME で使用されるユーザー エージェントの id。</span><span class="sxs-lookup"><span data-stu-id="909ba-176">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="909ba-177">要求ヘッダーの完全な一覧については、<xref:System.Net.HttpRequestHeader>列挙します。</span><span class="sxs-lookup"><span data-stu-id="909ba-177">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-178">次のコード例のすべての情報を表示する、指定された<xref:System.Net.WebHeaderCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="909ba-178">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-179">クライアントによって指定された HTTP メソッドを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-179">Gets the HTTP method specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-180">要求で使用されているメソッドを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-180">A <see cref="T:System.String" /> that contains the method used in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-181">HTTP メソッドは通常 GET または POST によっては、クライアントで必要とするアクションです。</span><span class="sxs-lookup"><span data-stu-id="909ba-181">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-182">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-182">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-183">クライアントから送信された本体データを格納しているストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-183">Gets a stream that contains the body data sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-184">要求の本体でクライアントから送信されたバイトを格納している読み取り可能な <see cref="T:System.IO.Stream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-184">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span>
          </span>
          <span data-ttu-id="909ba-185">要求と共にデータが送信されなかった場合、このプロパティは <see cref="F:System.IO.Stream.Null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-185">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-186">クライアントには、データが転送される場合 (たとえば、HTTP を使用して`POST`メソッド)、このメソッドによって返されるストリームには、そのデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="909ba-186">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909ba-187">要求を終了しても、このプロパティによって返されたストリームは閉じられません。</span><span class="sxs-lookup"><span data-stu-id="909ba-187">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="909ba-188">ストリームが不要になったときに呼び出すことで閉じる必要があります、<xref:System.IO.Stream.Close%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="909ba-188">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-189">次のコード例では、このプロパティを使用して、要求と共に送信されるデータの読み取りを示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-189">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="909ba-190">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="909ba-190">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="909ba-191">詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="909ba-191">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-192">この要求の送信元クライアントが認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-192">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-193">クライアントが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-193">
              <see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-194">アプリケーションが要求を使用してクライアント認証、<xref:System.Net.HttpListener.AuthenticationSchemes%2A>または<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-194">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="909ba-195">アプリケーションが受信されません、<xref:System.Net.HttpListenerContext>が正常に認証されていないクライアントからの要求。</span><span class="sxs-lookup"><span data-stu-id="909ba-195">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-196">次のコード例の値を表示する、<xref:System.Net.HttpListenerRequest.IsAuthenticated%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-196">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-197">要求がローカル コンピューターから送信されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-197">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-198">要求が、その要求を発行した <see cref="T:System.Net.HttpListener" /> オブジェクトと同じコンピューターから送信されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-198">
              <see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-199">アプリケーションは、このプロパティを使用して、要求は、ローカル コンピューターとは、特別な処理を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="909ba-199">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-200">次のコード例では、使用方法を示します、<xref:System.Net.HttpListenerRequest.IsLocal%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-200">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-201">要求の送信に使用された TCP 接続が SSL (Secure Sockets Layer) プロトコルを使用しているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-201">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-202">TCP 接続が SSL を使用している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-202">
              <see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-203">クライアントの要求を使用するには、セキュリティで保護された接続を要求するには、<xref:System.Uri.UriSchemeHttps>の代わりに<xref:System.Uri.UriSchemeHttp>です。</span><span class="sxs-lookup"><span data-stu-id="909ba-203">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="909ba-204">SSL を使用して接続を確立できない場合、クライアントが受信、<xref:System.Net.WebException>エラーに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="909ba-204">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-205">次のコード例では、使用方法を示します、<xref:System.Net.HttpListenerRequest.IsSecureConnection%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-205">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-206">TCP 接続が WebSocket 要求であったかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-207">
            <see cref="T:System.Boolean" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-207">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="909ba-208">TCP 接続が WebSocket 要求である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-208">
              <see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-209">クライアントが永続的な接続を要求しているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-209">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-210">接続を開いておく必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-210">
              <see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-211">場合は、HTTP クライアントとサーバーを短時間で複数回データを交換する、永続的な接続、通信速度を各メッセージ用の TCP 接続を開いたり、閉じたりするために必要なオーバーヘッドを回避することができます。</span><span class="sxs-lookup"><span data-stu-id="909ba-211">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="909ba-212">このプロパティの既定値は、http/1.1 を使用するクライアント、`true`です。</span><span class="sxs-lookup"><span data-stu-id="909ba-212">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-213">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-213">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-214">要求の転送先のサーバー IP アドレスおよびポート番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-214">Get the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-215">要求の送信先の IP アドレスを表す <see cref="T:System.Net.IPEndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-215">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-216">このプロパティは、これらのアドレスは方法に基づいて、要求に応答する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="909ba-216">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-217">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-217">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-218">要求元クライアントで使用されている HTTP のバージョンを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-218">Gets the HTTP version used by the requesting client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-219">クライアントの HTTP のバージョンを示す <see cref="T:System.Version" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-219">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-220">利用できるドキュメントのさまざまな HTTP バージョンの機能が指定されて[ http://www.rfc-editor.org](http://www.rfc-editor.org/)です。</span><span class="sxs-lookup"><span data-stu-id="909ba-220">The capabilities of different HTTP versions are specified in the documents available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-221">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-221">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-222">要求に含まれているクエリ文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-222">Gets the query string included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-223">要求の <see cref="T:System.Collections.Specialized.NameValueCollection" /> に含まれているクエリ データを格納している <see cref="P:System.Net.HttpListenerRequest.Url" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-223">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-224">URL をクエリの情報は、パス情報、疑問符 (?) で区切られます。</span><span class="sxs-lookup"><span data-stu-id="909ba-224">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="909ba-225">名前/値ペアは等号 (=) で区切られます。</span><span class="sxs-lookup"><span data-stu-id="909ba-225">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="909ba-226">1 つの文字列としてクエリのデータにアクセスするには、取得、<xref:System.Uri.Query%2A>からプロパティ値、<xref:System.Uri>によって返されるオブジェクト<xref:System.Net.HttpListenerRequest.Url%2A>です。</span><span class="sxs-lookup"><span data-stu-id="909ba-226">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909ba-227">等号 (=) なしのクエリ (例: [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) ) に追加されます、`null`キー、<xref:System.Collections.Specialized.NameValueCollection>です。</span><span class="sxs-lookup"><span data-stu-id="909ba-227">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-228">次のコード例では、使用方法を示します、<xref:System.Net.HttpListenerRequest.QueryString%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-228">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-229">クライアントによって要求された (ホストおよびポートを含まない) URL 情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-229">Gets the URL information (without the host and port) requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-230">この要求の生の URL を格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-230">A <see cref="T:System.String" /> that contains the raw URL for this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-231">生の URL は、次のドメイン情報の URL の一部として定義されます。</span><span class="sxs-lookup"><span data-stu-id="909ba-231">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="909ba-232">URL 文字列で`http://www.contoso.com/articles/recent.aspx`、生の URL は`/articles/recent.aspx`します。</span><span class="sxs-lookup"><span data-stu-id="909ba-232">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="909ba-233">生の URL には、存在する場合、クエリ文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="909ba-233">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="909ba-234">ホストとポートの情報を取得するを使用して、<xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-234">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-235">次のコード例では、使用方法を示します、<xref:System.Net.HttpListenerRequest.RawUrl%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-235">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-236">要求の発行元の IP アドレスおよびポート番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-236">Gets the client IP address and port number from which the request originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-237">要求の発行元の IP アドレスおよびポート番号を表す <see cref="T:System.Net.IPEndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-237">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="909ba-238">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-238">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-239">受信 HTTP 要求の要求 ID を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-239">Gets the request identifier of the incoming HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-240">HTTP 要求の ID を格納している <see cref="T:System.Guid" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-240">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-241">クライアントが要求を送信したサービス プロバイダー名 (SPN: Service Provider Name) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-241">Gets the Service Provider Name (SPN) that the client sent on the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-242">クライアントが要求を送信した SPN を格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-242">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-243">アプリケーションを使用して、<xref:System.Net.HttpListenerRequest.ServiceName%2A>プロパティをカスタム提供サービス名 (SPN) の検証を実行します。</span><span class="sxs-lookup"><span data-stu-id="909ba-243">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-244">クライアント要求の <see cref="T:System.Net.TransportContext" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-244">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-245">クライアント要求の <see cref="T:System.Net.TransportContext" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-245">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-246"><xref:System.Net.TransportContext>に対してチャネル バインディング トークン (CBT) を取得するプロパティを使用することができます、 <xref:System.Net.HttpListenerRequest> HTTPS を使用して送信されました。</span><span class="sxs-lookup"><span data-stu-id="909ba-246">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="909ba-247">アプリケーションを使用して、<xref:System.Net.TransportContext>ネイティブ Win32 への呼び出しを使用したカスタム認証を実行するプロパティ[AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021)関数。</span><span class="sxs-lookup"><span data-stu-id="909ba-247">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="909ba-248">アプリケーションが、これからチャネル バインディング トークン (CBT) を取得しようとしています。 場合<xref:System.Net.HttpListenerRequest.TransportContext%2A>プロパティを使用して、<xref:System.Net.TransportContext.GetChannelBinding%2A>メソッドおよび<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>は<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>、、<xref:System.Net.HttpListenerRequest>がスローされます<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="909ba-248">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="909ba-249"><xref:System.Net.HttpListenerRequest>よりも優先、<xref:System.Net.TransportContext.GetChannelBinding%2A>内部実装を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="909ba-249">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-250">クライアントによって要求された <see cref="T:System.Uri" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-250">Gets the <see cref="T:System.Uri" /> object requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-251">クライアントによって要求されたリソースを識別する <see cref="T:System.Uri" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-251">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-252"><xref:System.Net.HttpListenerRequest.Url%2A>プロパティをから利用可能なすべての情報を取得できるように、<xref:System.Uri>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="909ba-252">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="909ba-253">URI の要求の生のテキストのみを知っている必要がある場合は、使用を検討して、<xref:System.Net.HttpListenerRequest.RawUrl%2A>プロパティ代わりにします。</span><span class="sxs-lookup"><span data-stu-id="909ba-253">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="909ba-254"><xref:System.Net.HttpListenerRequest.Url%2A>プロパティが null 場合、<xref:System.Uri>クライアントから解析できませんでした。</span><span class="sxs-lookup"><span data-stu-id="909ba-254">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="909ba-255"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>プロパティを示す場合<xref:System.Net.HttpListener>変換された URI でパーセント エンコード値を変換し、その他の正規化手順は実行ではなく生のエスケープ解除された URI を使用します。</span><span class="sxs-lookup"><span data-stu-id="909ba-255">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="909ba-256">ときに、<xref:System.Net.HttpListener>インスタンスを介して要求を受け取ると、`http.sys`サービスによって提供される URI 文字列のインスタンス作成`http.sys`、として公開して、<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-256">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="909ba-257">`http.sys`サービスは 2 つの要求の URI 文字列を公開します。</span><span class="sxs-lookup"><span data-stu-id="909ba-257">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="909ba-258">生の URI</span><span class="sxs-lookup"><span data-stu-id="909ba-258">Raw URI</span></span>  
  
-   <span data-ttu-id="909ba-259">変換された URI</span><span class="sxs-lookup"><span data-stu-id="909ba-259">Converted URI</span></span>  
  
 <span data-ttu-id="909ba-260">生の URI は、<xref:System.Uri?displayProperty=nameWithType>の HTTP 要求の要求行で提供されます。</span><span class="sxs-lookup"><span data-stu-id="909ba-260">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="909ba-261">によって提供される生の URI `http.sys` 、上記で説明した要求は「/path/」です。</span><span class="sxs-lookup"><span data-stu-id="909ba-261">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="909ba-262">これは、ネットワーク経由で送信された HTTP 動詞の後に、文字列を表します。</span><span class="sxs-lookup"><span data-stu-id="909ba-262">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="909ba-263">`http.sys`サービスが HTTP 要求の行で提供される URI を使用して、要求で提供される情報から変換された URI を作成しに、元のサーバー要求を決定するホスト ヘッダーを転送する必要があります。</span><span class="sxs-lookup"><span data-stu-id="909ba-263">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="909ba-264">これは、一連の登録済み URI プレフィックスの要求からの情報を比較することによって行います。</span><span class="sxs-lookup"><span data-stu-id="909ba-264">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="909ba-265">これらの値を比較できるようにするには、するために、要求に正規化をいくつか行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="909ba-265">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="909ba-266">変換された URI 上のサンプルではようになります。</span><span class="sxs-lookup"><span data-stu-id="909ba-266">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="909ba-267">`http.sys`を組み合わせたものをサービス、<xref:System.Uri.Host%2A?displayProperty=nameWithType>変換された URI を作成する要求行の文字列とプロパティの値。</span><span class="sxs-lookup"><span data-stu-id="909ba-267">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="909ba-268">さらに、`http.sys`と<xref:System.Uri?displayProperty=nameWithType>クラスも、次の操作します。</span><span class="sxs-lookup"><span data-stu-id="909ba-268">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="909ba-269">エスケープを解除すべてパーセント エンコードされた値。</span><span class="sxs-lookup"><span data-stu-id="909ba-269">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="909ba-270">Utf-16 文字表記に非 ASCII 文字をパーセント エンコードに変換します。</span><span class="sxs-lookup"><span data-stu-id="909ba-270">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="909ba-271">Unicode 文字 (Unicode エンコーディング %uxxxx 形式を使用して) だけでなく utf-8 と ANSI や DBCS 文字はサポートされていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="909ba-271">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="909ba-272">パスの圧縮など、他の正規化の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="909ba-272">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="909ba-273">要求には、パーセントでエンコードされた値に使用されるエンコーディングに関する情報が含まれていない、ためには、パーセント エンコード値を解析するだけ、正しいエンコーディングを決定することはできません。</span><span class="sxs-lookup"><span data-stu-id="909ba-273">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="909ba-274">したがって`http.sys`プロセスを変更するための 2 つのレジストリ キーを提供します。</span><span class="sxs-lookup"><span data-stu-id="909ba-274">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="909ba-275">レジストリ キー</span><span class="sxs-lookup"><span data-stu-id="909ba-275">Registry Key</span></span>|<span data-ttu-id="909ba-276">既定値</span><span class="sxs-lookup"><span data-stu-id="909ba-276">Default Value</span></span>|<span data-ttu-id="909ba-277">説明</span><span class="sxs-lookup"><span data-stu-id="909ba-277">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="909ba-278">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="909ba-278">EnableNonUTF8</span></span>|<span data-ttu-id="909ba-279">1</span><span class="sxs-lookup"><span data-stu-id="909ba-279">1</span></span>|<span data-ttu-id="909ba-280">0 の場合、 `http.sys` UTF で 8 でエンコードされた Url のみを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="909ba-280">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="909ba-281">0 以外の場合`http.sys`も要求で ANSI でエンコードされたまたは DBCS でエンコードされた Url を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="909ba-281">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="909ba-282">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="909ba-282">FavorUTF8</span></span>|<span data-ttu-id="909ba-283">1</span><span class="sxs-lookup"><span data-stu-id="909ba-283">1</span></span>|<span data-ttu-id="909ba-284">0 以外の場合`http.sys`し、変換に失敗したし、EnableNonUTF8 が 0 でない場合に utf-8 として URL を先にデコードすると常に、Http.sys を ANSI または DBCS としてデコードしようとします。</span><span class="sxs-lookup"><span data-stu-id="909ba-284">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="909ba-285">0 の場合 (そして EnableNonUTF8 0 ではない)、`http.sys`場合は、その ANSI または DBCS; としてデコードする試行が成功しない、utf-8 の変換を試みます。</span><span class="sxs-lookup"><span data-stu-id="909ba-285">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="909ba-286">ときに<xref:System.Net.HttpListener>要求を受信して変換された URI を使用して`http.sys`への入力として、<xref:System.Net.HttpListenerRequest.Url%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-286">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="909ba-287">Uri の文字と数字以外の文字をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="909ba-287">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="909ba-288">例としては次の URI は、顧客の顧客情報の取得に使用される「1/3812」番号します。</span><span class="sxs-lookup"><span data-stu-id="909ba-288">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="909ba-289">Uri (%2f) で、パーセント エンコードのスラッシュを注意してください。</span><span class="sxs-lookup"><span data-stu-id="909ba-289">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="909ba-290">これは、ここでは、スラッシュ文字を表し、データはパス区切り記号ではないため、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="909ba-290">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="909ba-291">Uri のコンス トラクターに文字列を渡すことは、次の URI になります。</span><span class="sxs-lookup"><span data-stu-id="909ba-291">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="909ba-292">分割して、パスのセグメントに、次の要素の結果になります。</span><span class="sxs-lookup"><span data-stu-id="909ba-292">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="909ba-293">これは、要求の送信元の目的ではありません。</span><span class="sxs-lookup"><span data-stu-id="909ba-293">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="909ba-294">場合、<xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>プロパティが false に設定し、<xref:System.Net.HttpListener>要求を受信から変換された URI ではなく生の URI を使用して、`http.sys`への入力として、<xref:System.Net.HttpListenerRequest.Url%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-294">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-295">次のコード例では、使用方法を示します、<xref:System.Net.HttpListenerRequest.Url%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="909ba-295">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-296">クライアントをサーバーに導いたリソースの URI (Uniform Resource Identifier) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-296">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-297">要求の <see cref="T:System.Uri" /> ヘッダーのテキストが格納された <see cref="F:System.Net.HttpRequestHeader.Referer" /> オブジェクト。要求にヘッダーが含まれていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-297">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-298">クライアントには、要求された URI へのハイパーリンクが後に、その要求があります、`Referrer`ハイパーリンクが含まれているリソースの URI を識別するヘッダー。</span><span class="sxs-lookup"><span data-stu-id="909ba-298">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="909ba-299">クライアントが偽るまたは表示をしない、<xref:System.Net.HttpRequestHeader.Referer>ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="909ba-299">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="909ba-300">したがって、while、<xref:System.Net.HttpListenerRequest.UrlReferrer%2A>プロパティは、Web トラフィックの基本的な傾向の識別に役立ちます; 必要がありますいないとして使用する認証スキームの一部をデータへのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="909ba-300">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="909ba-301">要求ヘッダーの完全な一覧については、<xref:System.Net.HttpRequestHeader>列挙します。</span><span class="sxs-lookup"><span data-stu-id="909ba-301">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="909ba-302"><xref:System.Net.HttpListenerRequest.UrlReferrer%2A>がある場合は null にない`Referrer`要求のヘッダー場合や、`Referrer`ヘッダーは要求内に存在が、有効な解析されない<xref:System.Uri>です。</span><span class="sxs-lookup"><span data-stu-id="909ba-302">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-303">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-303">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-304">クライアントによって示されたユーザー エージェントを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-304">Gets the user agent presented by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-305">要求の <see langword="User-Agent" /> ヘッダーのテキストを格納している <see cref="T:System.String" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-305">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-306">`User-Agent`ヘッダーには通常の要求の生成に使用するソフトウェアの名前とバージョン番号を識別するテキストが含まれています。</span><span class="sxs-lookup"><span data-stu-id="909ba-306">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="909ba-307">要求ヘッダーの完全な一覧については、<xref:System.Net.HttpRequestHeader>列挙します。</span><span class="sxs-lookup"><span data-stu-id="909ba-307">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="909ba-308"><xref:System.Net.HttpListenerRequest.UserAgent%2A>がある場合は null にない`User-Agent`要求のヘッダー。</span><span class="sxs-lookup"><span data-stu-id="909ba-308">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-309">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-309">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-310">要求の転送先のサーバー IP アドレスおよびポート番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-310">Gets the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-311">ホスト アドレス情報を格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-311">A <see cref="T:System.String" /> that contains the host address information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-312">このプロパティによって返される情報はまた、<xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="909ba-312">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-313">次のコード例では、このプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-313">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-314">DNS 名とクライアントによって指定されたポート番号 (存在する場合) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-314">Gets the DNS name and, if provided, the port number specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-315">要求の <see langword="Host" /> ヘッダーのテキストを格納している <see cref="T:System.String" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-315">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-316">`Host`ヘッダーには、要求されたサーバーのホスト名が含まれています。 ポート番号を指定すると、場合をコロンで区切ってと (たとえば、 `www.contoso.com:8080`)。</span><span class="sxs-lookup"><span data-stu-id="909ba-316">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="909ba-317">このプロパティを使用して、要求で指定されたホスト名に応じた別の応答を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="909ba-317">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="909ba-318">要求ヘッダーの完全な一覧については、<xref:System.Net.HttpRequestHeader>列挙します。</span><span class="sxs-lookup"><span data-stu-id="909ba-318">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-319">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="909ba-319">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="909ba-320">応答への使用に適している自然言語を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-320">Gets the natural languages that are preferred for the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="909ba-321">要求の <see cref="T:System.String" /> ヘッダーで指定されている自然言語を格納した <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> 配列。クライアント要求に <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> ヘッダーが含まれていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="909ba-321">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909ba-322">詳細の詳細については、`Accept-Language`ヘッダーを参照してください RFC 2616 14.4 で利用可能な[ http://www.rfc-editor.org](http://www.rfc-editor.org/)です。</span><span class="sxs-lookup"><span data-stu-id="909ba-322">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="909ba-323">要求ヘッダーの完全な一覧については、<xref:System.Net.HttpRequestHeader>列挙します。</span><span class="sxs-lookup"><span data-stu-id="909ba-323">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909ba-324">次のコード例は、要求から言語を表示`Accept-Language`ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="909ba-324">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>