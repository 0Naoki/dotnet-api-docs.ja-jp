<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c36777eb52ffb7fb5628d102ca009f4b86723b4" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51906714" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8326a-101">単純なドメイン名解決機能を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8326a-101">Provides simple domain name resolution functionality.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-102"><xref:System.Net.Dns>クラスは、インターネット ドメイン ネーム システム (DNS) から特定のホストについての情報を取得する静的クラス。</span><span class="sxs-lookup"><span data-stu-id="8326a-102">The <xref:System.Net.Dns> class is a static class that retrieves information about a specific host from the Internet Domain Name System (DNS).</span></span>  
  
 <span data-ttu-id="8326a-103">インスタンスで、DNS クエリからのホスト情報が返されます、<xref:System.Net.IPHostEntry>クラス。</span><span class="sxs-lookup"><span data-stu-id="8326a-103">The host information from the DNS query is returned in an instance of the <xref:System.Net.IPHostEntry> class.</span></span> <span data-ttu-id="8326a-104">指定したホストに複数のエントリがある場合は、DNS データベースに<xref:System.Net.IPHostEntry>複数の IP アドレスとエイリアスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="8326a-104">If the specified host has more than one entry in the DNS database, <xref:System.Net.IPHostEntry> contains multiple IP addresses and aliases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-105">次の例では、ホスト www.contoso.com のについては、DNS データベースを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-105">The following example queries the DNS database for information on the host www.contoso.com.</span></span>  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="8326a-106">解決するホスト名または IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-106">The host name or IP address to resolve.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8326a-107">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-107">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8326a-108">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-108">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="8326a-109">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-109">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-110">指定したホストのインターネット プロトコル (IP) アドレスを非同期的に返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-110">Asynchronously returns the Internet Protocol (IP) addresses for the specified host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-111">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-111">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-112"><xref:System.Net.Dns.BeginGetHostAddresses%2A>メソッドは、ホスト名に関連付けられている IP アドレスの DNS サーバーを非同期的にクエリします。</span><span class="sxs-lookup"><span data-stu-id="8326a-112">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method asynchronously queries a DNS server for the IP addresses that are associated with a host name.</span></span> <span data-ttu-id="8326a-113">場合`hostNameOrAddress`IP アドレスは、このアドレスが DNS サーバーを照会することがなく返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-113">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-114">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-114">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-115">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-115">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="8326a-116">として空の文字列が渡された場合、`hostNameOrAddress`引数をこのメソッドは、ローカル ホストの IPv4 と IPv6 のアドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="8326a-116">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="8326a-117">非同期の<xref:System.Net.Dns.BeginGetHostAddresses%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Dns.EndGetHostAddresses%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-117">The asynchronous <xref:System.Net.Dns.BeginGetHostAddresses%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostAddresses%2A> method.</span></span> <span data-ttu-id="8326a-118">通常、メソッドは、によって呼び出される、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="8326a-118">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8326a-119">操作が完了するまで、このメソッドはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="8326a-119">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8326a-120">操作が完了するまでにブロックするを使用して、<xref:System.Net.Dns.GetHostAddresses%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-120">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostAddresses%2A> method.</span></span>  
  
 <span data-ttu-id="8326a-121">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8326a-121">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-122">
            <paramref name="hostNameOrAddress" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-122">
              <paramref name="hostNameOrAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8326a-123">
            <paramref name="hostNameOrAddress" /> の長さが 255 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-123">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-124">
            <paramref name="hostNameOrAddress" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-124">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-125">
            <paramref name="hostNameOrAddress" /> は無効な IP アドレスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-125">
              <paramref name="hostNameOrAddress" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-126">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-126">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-127">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-127">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="8326a-128">ホストの DNS 名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-128">The DNS name of the host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8326a-129">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-129">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="8326a-130">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-130">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="8326a-131">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-131">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-132">指定した DNS ホスト名についての <see cref="T:System.Net.IPHostEntry" /> 情報の非同期要求を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-132">Begins an asynchronous request for <see cref="T:System.Net.IPHostEntry" /> information about the specified DNS host name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-133">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-133">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-134">非同期の<xref:System.Net.Dns.BeginGetHostByName%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Dns.EndGetHostByName%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-134">The asynchronous <xref:System.Net.Dns.BeginGetHostByName%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostByName%2A> method.</span></span> <span data-ttu-id="8326a-135">通常、メソッドは、によって呼び出される、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="8326a-135">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8326a-136">操作が完了するまで、このメソッドはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="8326a-136">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8326a-137">操作が完了するまでにブロックするを使用して、<xref:System.Net.Dns.GetHostByName%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-137">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="8326a-138">詳細については、非同期プログラミング モデルを使用して、次を参照してください。 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-138">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-139">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-139">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-140">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-140">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-141">
            <paramref name="hostName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-141">
              <paramref name="hostName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-142">DNS クエリの実行中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-142">An error was encountered executing the DNS query.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-143">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-143">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-144">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-144">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">
          <span data-ttu-id="8326a-145">非同期プログラミングの概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-145">Asynchronous Programming Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8326a-146">ホスト名または IP アドレスを非同期的に <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-146">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="8326a-147">解決する IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-147">The IP address to resolve.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8326a-148">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-148">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="8326a-149">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-149">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="8326a-150">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-150">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-151">IP アドレスを非同期的に <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-151">Asynchronously resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-152">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-152">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-153"><xref:System.Net.Dns.BeginGetHostEntry%2A>メソッドは、DNS サーバーの IP アドレスと IP アドレスに関連付けられているエイリアスを非同期的にクエリします。</span><span class="sxs-lookup"><span data-stu-id="8326a-153">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method asynchronously queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="8326a-154">**注**このメンバーは、アプリケーションでネットワークのトレースを有効にした場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-154">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-155">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-155">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="8326a-156">非同期の<xref:System.Net.Dns.BeginGetHostEntry%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Dns.EndGetHostEntry%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-156">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="8326a-157">通常、メソッドは、によって呼び出される、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="8326a-157">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8326a-158">操作が完了するまで、このメソッドはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="8326a-158">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8326a-159">操作が完了するまでにブロックするを使用して、<xref:System.Net.Dns.GetHostEntry%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-159">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="8326a-160">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8326a-160">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-161">次のコード例では、<xref:System.Net.Dns.BeginGetHostEntry%2A>メソッドを解決するには、IP アドレスを<xref:System.Net.IPHostEntry>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="8326a-161">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-162">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-162">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-163">
            <paramref name="address" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-163">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-164">
            <paramref name="address" /> は無効な IP アドレスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-164">
              <paramref name="address" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-165">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-165">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-166">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-166">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="8326a-167">解決するホスト名または IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-167">The host name or IP address to resolve.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8326a-168">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-168">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="8326a-169">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-169">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="8326a-170">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-170">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-171">ホスト名または IP アドレスを非同期的に <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-171">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-172">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-172">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-173"><xref:System.Net.Dns.BeginGetHostEntry%2A>メソッドは、ホスト名に関連付けられている IP アドレスまたは IP アドレスの DNS サーバーを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-173">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="8326a-174">**注**このメンバーは、アプリケーションでネットワークのトレースを有効にした場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-174">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-175">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-175">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="8326a-176">非同期の<xref:System.Net.Dns.BeginGetHostEntry%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Dns.EndGetHostEntry%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-176">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="8326a-177">通常、メソッドは、によって呼び出される、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="8326a-177">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8326a-178">操作が完了するまで、このメソッドはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="8326a-178">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8326a-179">操作が完了するまでにブロックするを使用して、<xref:System.Net.Dns.GetHostEntry%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-179">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="8326a-180">詳細については、非同期プログラミング モデルを使用して、次を参照してください。 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-180">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-181">次のコード例では、<xref:System.Net.Dns.BeginGetHostEntry%2A>メソッドを解決するには、IP アドレスを<xref:System.Net.IPHostEntry>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="8326a-181">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-182">
            <paramref name="hostNameOrAddress" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-182">
              <paramref name="hostNameOrAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8326a-183">
            <paramref name="hostNameOrAddress" /> の長さが 255 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-183">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-184">
            <paramref name="hostNameOrAddress" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-184">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-185">
            <paramref name="hostNameOrAddress" /> は無効な IP アドレスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-185">
              <paramref name="hostNameOrAddress" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-186">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-186">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-187">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-187">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="8326a-188">ホストの DNS 名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-188">The DNS name of the host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8326a-189">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-189">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="8326a-190">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-190">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="8326a-191">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-191">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-192">非同期要求を開始して DNS ホスト名または IP アドレスを <see cref="T:System.Net.IPAddress" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-192">Begins an asynchronous request to resolve a DNS host name or IP address to an <see cref="T:System.Net.IPAddress" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-193">非同期要求を参照する <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-193">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-194">非同期の<xref:System.Net.Dns.BeginResolve%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Dns.EndResolve%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-194">The asynchronous <xref:System.Net.Dns.BeginResolve%2A> operation must be completed by calling the <xref:System.Net.Dns.EndResolve%2A> method.</span></span> <span data-ttu-id="8326a-195">通常、メソッドは、によって呼び出される、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="8326a-195">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8326a-196">操作が完了するまで、このメソッドはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="8326a-196">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8326a-197">操作が完了するまでにブロックするを使用して、<xref:System.Net.Dns.Resolve%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-197">To block until the operation is complete, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
 <span data-ttu-id="8326a-198">詳細については、非同期プログラミング モデルを使用して、次を参照してください。 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-198">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-199">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-199">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-200">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-201">次の例では<xref:System.Net.Dns.BeginResolve%2A>に DNS ホスト名を解決するのには、<xref:System.Net.IPAddress>します。</span><span class="sxs-lookup"><span data-stu-id="8326a-201">The following example uses <xref:System.Net.Dns.BeginResolve%2A> to resolve a DNS host name to an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-202">
            <paramref name="hostName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-202">
              <paramref name="hostName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-203">呼び出し元に、DNS 情報にアクセスするためのアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-203">The caller does not have permission to access DNS information.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-204">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-204">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-205">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-205">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">
          <span data-ttu-id="8326a-206">非同期プログラミングの概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-206">Asynchronous Programming Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8326a-207">
            <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-207">An <see cref="T:System.IAsyncResult" /> instance returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-208">DNS 情報の非同期要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-208">Ends an asynchronous request for DNS information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-209">
            <see cref="T:System.Net.IPAddress" /> の <paramref name="hostNameOrAddress" /> パラメーターで指定されたホストの IP アドレスを保持する <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-209">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host specified by the <paramref name="hostNameOrAddress" /> parameter of <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-210"><xref:System.Net.Dns.BeginGetHostAddresses%2A>メソッドは、ホスト名に関連付けられている IP アドレスの DNS サーバーを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-210">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="8326a-211">場合`hostNameOrAddress`IP アドレスは、このアドレスが DNS サーバーを照会することがなく返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-211">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 <span data-ttu-id="8326a-212">として空の文字列が渡された場合、`hostNameOrAddress`引数をこのメソッドは、ローカル ホストの IPv4 と IPv6 のアドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="8326a-212">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="8326a-213">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-213">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-214">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-214">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8326a-215">
            <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-215">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-216">DNS 情報の非同期要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-216">Ends an asynchronous request for DNS information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-217">ホストについての DNS 情報を格納する <see cref="T:System.Net.IPHostEntry" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-217">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-218">このメソッドはブロックするまで、操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="8326a-218">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8326a-219">この操作を同期的に実行するには、使用、<xref:System.Net.Dns.GetHostByName%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-219">To perform this operation synchronously, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="8326a-220">場合、<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>プロパティに設定されて`true`、<xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-220">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-221">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-221">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-222">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-222">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-223">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-223">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">
          <span data-ttu-id="8326a-224">非同期プログラミングの概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-224">Asynchronous Programming Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8326a-225">
            <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-225">An <see cref="T:System.IAsyncResult" /> instance returned by a call to an <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-226">DNS 情報の非同期要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-226">Ends an asynchronous request for DNS information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-227">ホストについてのアドレス情報を格納する <see cref="T:System.Net.IPHostEntry" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-227">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-228">このメソッドはブロックするまで、操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="8326a-228">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8326a-229"><xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-229">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="8326a-230">この操作を同期的に実行するには、使用、<xref:System.Net.Dns.GetHostEntry%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-230">To perform this operation synchronously, use a <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-231">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-231">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-232">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-232">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-233">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-233">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8326a-234">
            <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-234">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-235">DNS 情報の非同期要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-235">Ends an asynchronous request for DNS information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-236">ホストについての DNS 情報を格納する <see cref="T:System.Net.IPHostEntry" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-236">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-237">このメソッドはブロックするまで、操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="8326a-237">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8326a-238">場合、<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>に設定されている`true`、<xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-238">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="8326a-239">この操作を同期的に実行するには、使用、<xref:System.Net.Dns.Resolve%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-239">To perform this operation synchronously, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-240">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-240">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-241">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-241">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-242">次の例では、DNS ホスト情報の非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="8326a-242">The following example ends an asynchronous request for DNS host information.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-243">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-243">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">
          <span data-ttu-id="8326a-244">非同期プログラミングの概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-244">Asynchronous Programming Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="8326a-245">解決するホスト名または IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-245">The host name or IP address to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-246">指定したホストのインターネット プロトコル (IP: Internet Protocol) アドレスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-246">Returns the Internet Protocol (IP) addresses for the specified host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-247">
            <paramref name="hostNameOrAddress" /> パラメーターで指定されたホストの IP アドレスを保持する <see cref="T:System.Net.IPAddress" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-247">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-248"><xref:System.Net.Dns.GetHostAddresses%2A>メソッドは、ホスト名に関連付けられている IP アドレスの DNS のサブシステムをクエリします。</span><span class="sxs-lookup"><span data-stu-id="8326a-248">The <xref:System.Net.Dns.GetHostAddresses%2A> method queries the DNS subsystem for the IP addresses associated with a host name.</span></span> <span data-ttu-id="8326a-249">場合`hostNameOrAddress`IP アドレスは、このアドレスが DNS サーバーを照会することがなく返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-249">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>
  
 <span data-ttu-id="8326a-250">として空の文字列が渡された場合、`hostNameOrAddress`引数をこのメソッドは、ローカル ホストの IPv4 と IPv6 のアドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="8326a-250">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="8326a-251">IPv6 アドレスがの結果からフィルター処理、<xref:System.Net.Dns.GetHostAddresses%2A>メソッド、ローカル コンピューターに IPv6 がインストールされていない場合。</span><span class="sxs-lookup"><span data-stu-id="8326a-251">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostAddresses%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="8326a-252">その結果、空を取得することは<xref:System.Net.IPAddress>IPv6 の使用可能な場合の結果だけをインスタンス化、 `hostNameOrAddress`.parameter します。</span><span class="sxs-lookup"><span data-stu-id="8326a-252">As a result, it is possible to get back an empty <xref:System.Net.IPAddress> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-253">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-253">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-254">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-254">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-255">次のコード例では、<xref:System.Net.Dns.GetHostAddresses%2A>型の配列に IP アドレスを解決する方法を<xref:System.Net.IPAddress>します。</span><span class="sxs-lookup"><span data-stu-id="8326a-255">The following code example uses the <xref:System.Net.Dns.GetHostAddresses%2A> method to resolve an IP address to an array of type <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-256">
            <paramref name="hostNameOrAddress" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-256">
              <paramref name="hostNameOrAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8326a-257">
            <paramref name="hostNameOrAddress" /> の長さが 255 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-257">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-258">
            <paramref name="hostNameOrAddress" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-258">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-259">
            <paramref name="hostNameOrAddress" /> は無効な IP アドレスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-259">
              <paramref name="hostNameOrAddress" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-260">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-260">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-261">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-261">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="8326a-262">解決するホスト名または IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-262">The host name or IP address to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-263">指定したホストのインターネット プロトコル (IP) アドレスを非同期操作として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-263">Returns the Internet Protocol (IP) addresses for the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-264">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-264">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="8326a-265">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-265">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="8326a-266">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<paramref name="hostNameOrAddress" /> パラメーターで指定されたホストの IP アドレスを保持する <see cref="T:System.Net.IPAddress" /> 型の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-266">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-267">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="8326a-267">This operation will not block.</span></span> <span data-ttu-id="8326a-268">返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、`hostNameOrAddress`が解決されています。</span><span class="sxs-lookup"><span data-stu-id="8326a-268">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="8326a-269">このメソッドは、ホスト名に関連付けられている IP アドレスの DNS サーバーを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-269">This method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="8326a-270">場合`hostNameOrAddress`IP アドレスは、このアドレスが DNS サーバーを照会することがなく返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-270">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-271">
            <paramref name="hostNameOrAddress" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-271">
              <paramref name="hostNameOrAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8326a-272">
            <paramref name="hostNameOrAddress" /> の長さが 255 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-272">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-273">
            <paramref name="hostNameOrAddress" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-273">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-274">
            <paramref name="hostNameOrAddress" /> は無効な IP アドレスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-274">
              <paramref name="hostNameOrAddress" /> is an invalid IP address.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8326a-275">IP アドレスの DNS ホスト情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-275">Gets DNS host information for an IP address.</span>
          </span>
          <span data-ttu-id="8326a-276">これらのメソッドは今後使用しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-276">These methods are now obsolete.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="8326a-277">
            <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-277">An <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-278">指定した <see cref="T:System.Net.IPHostEntry" /> に対する <see cref="T:System.Net.IPAddress" /> インスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-278">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from the specified <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-279">
            <see cref="T:System.Net.IPHostEntry" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-279">An <see cref="T:System.Net.IPHostEntry" />.</span>
          </span>
          <span data-ttu-id="8326a-280">
            <see cref="T:System.Net.IPHostEntry" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-280">An <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8326a-281">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-281">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-282">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-282">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-283">次の例では、作成、<xref:System.Net.IPHostEntry>から、<xref:System.Net.IPAddress>します。</span><span class="sxs-lookup"><span data-stu-id="8326a-283">The following example creates a <xref:System.Net.IPHostEntry> from an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-284">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-284">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-285">
            <paramref name="address" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-285">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-286">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-286">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-287">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-287">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="8326a-288">IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-288">An IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-289">IP アドレスから <see cref="T:System.Net.IPHostEntry" /> インスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-289">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from an IP address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-290">
            <see cref="T:System.Net.IPHostEntry" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-290">An <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8326a-291">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-291">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-292">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-293">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-293">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-294">
            <paramref name="address" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-294">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8326a-295">
            <paramref name="address" /> が有効な IP アドレスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-295">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-296">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-296">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-297">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="8326a-298">ホストの DNS 名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-298">The DNS name of the host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-299">指定した DNS ホスト名の DNS 情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-299">Gets the DNS information for the specified DNS host name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-300">
            <paramref name="hostName" /> で指定したアドレスのホスト情報を格納する <see cref="T:System.Net.IPHostEntry" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-300">An <see cref="T:System.Net.IPHostEntry" /> object that contains host information for the address specified in <paramref name="hostName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-301"><xref:System.Net.Dns.GetHostByName%2A>メソッドは、インターネット DNS サーバーのホスト情報をクエリします。</span><span class="sxs-lookup"><span data-stu-id="8326a-301">The <xref:System.Net.Dns.GetHostByName%2A> method queries the Internet DNS server for host information.</span></span> <span data-ttu-id="8326a-302">ホスト名として空の文字列を渡すと、このメソッドは、ローカル コンピューターの標準的なホスト名を取得します。</span><span class="sxs-lookup"><span data-stu-id="8326a-302">If you pass an empty string as the host name, this method retrieves the standard host name for the local computer.</span></span>  
  
 <span data-ttu-id="8326a-303">DNS 情報を非同期アクセスを使用して、<xref:System.Net.Dns.BeginGetHostByName%2A>と<xref:System.Net.Dns.EndGetHostByName%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8326a-303">For asynchronous access to DNS information, use the <xref:System.Net.Dns.BeginGetHostByName%2A> and <xref:System.Net.Dns.EndGetHostByName%2A> methods.</span></span>  
  
 <span data-ttu-id="8326a-304">場合、<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>プロパティに設定されて`true`、<xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-304">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-305">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-305">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-306">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-306">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-307">次の例では、<xref:System.Net.Dns.GetHostByName%2A>指定の DNS ホスト名の DNS 情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="8326a-307">The following example uses the <xref:System.Net.Dns.GetHostByName%2A> method to get the DNS information for the specified DNS host name.</span></span>  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-308">
            <paramref name="hostName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-308">
              <paramref name="hostName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8326a-309">
            <paramref name="hostName" /> の長さが 255 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-309">The length of <paramref name="hostName" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-310">
            <paramref name="hostName" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-310">An error is encountered when resolving <paramref name="hostName" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-311">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-311">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-312">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-312">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8326a-313">ホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-313">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="8326a-314">IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-314">An IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-315">IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-315">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-316">
            <paramref name="address" /> で指定するホストについてのアドレス情報を格納する <see cref="T:System.Net.IPHostEntry" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-316">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-317"><xref:System.Net.Dns.GetHostEntry%2A>メソッドは、IP アドレスおよび IP アドレスに関連付けられているエイリアスを DNS サーバーを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-317">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="8326a-318">IPv6 アドレスがの結果からフィルター処理、<xref:System.Net.Dns.GetHostEntry%2A>メソッド、ローカル コンピューターに IPv6 がインストールされていない場合。</span><span class="sxs-lookup"><span data-stu-id="8326a-318">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="8326a-319">その結果、空を取得することは<xref:System.Net.IPHostEntry>IPv6 の使用可能な場合の結果だけをインスタンス化、`address`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="8326a-319">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="8326a-320"><xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-320">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-321">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-321">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-322">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-322">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  

## Examples  
 <span data-ttu-id="8326a-323">次のコード例では、<xref:System.Net.Dns.GetHostEntry%2A>メソッドを解決するには、IP アドレスを<xref:System.Net.IPHostEntry>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="8326a-323">The following code example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-324">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-324">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-325">
            <paramref name="address" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-325">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-326">
            <paramref name="address" /> は無効な IP アドレスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-326">
              <paramref name="address" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-327">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-327">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-328">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-328">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="8326a-329">解決するホスト名または IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-329">The host name or IP address to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-330">ホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-330">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-331">
            <paramref name="hostNameOrAddress" /> で指定するホストについてのアドレス情報を格納する <see cref="T:System.Net.IPHostEntry" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-331">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-332"><xref:System.Net.Dns.GetHostEntry%2A>メソッドは、ホスト名に関連付けられている IP アドレスまたは IP アドレスの DNS サーバーを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-332">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="8326a-333">として空の文字列が渡された場合、`hostNameOrAddress`引数をこのメソッドは、ローカル ホストの IPv4 と IPv6 のアドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="8326a-333">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="8326a-334">ホスト名が見つからない場合、 <xref:System.Net.Sockets.SocketException> 11001 (Windows Sockets エラー WSAHOST_NOT_FOUND) の値を持つ例外が返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-334">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="8326a-335">この例外は、DNS サーバーが応答しない場合に返されることができます。</span><span class="sxs-lookup"><span data-stu-id="8326a-335">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="8326a-336">この例外は、名前は、正式なホスト名またはエイリアス、またはクエリ対象のデータベースで見つからない場合にも返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-336">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="8326a-337"><xref:System.ArgumentException>場合にも例外が返されます、`hostNameOrAddress`パラメーターが含まれる<xref:System.Net.IPAddress.Any>または<xref:System.Net.IPAddress.IPv6Any>します。</span><span class="sxs-lookup"><span data-stu-id="8326a-337">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="8326a-338"><xref:System.Net.Dns.GetHostEntry%2A> IP のリテラル文字列が渡された場合は、メソッドで、`hostNameOrAddress`アプリケーションが、パラメーター、<xref:System.Net.IPHostEntry>プロパティ セットのすべてのインスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-338">The <xref:System.Net.Dns.GetHostEntry%2A> method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="8326a-339">これらのプロパティを含める、 <xref:System.Net.IPHostEntry.AddressList%2A>、 <xref:System.Net.IPHostEntry.Aliases%2A>、および<xref:System.Net.IPHostEntry.HostName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8326a-339">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="8326a-340">その結果の実装、<xref:System.Net.Dns.GetHostEntry%2A>メソッドは、IP の文字列リテラルが渡されるときに次の動作を示します。</span><span class="sxs-lookup"><span data-stu-id="8326a-340">As a result, the implementation of the <xref:System.Net.Dns.GetHostEntry%2A> method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="8326a-341">メソッドは、アドレスを解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="8326a-341">The method tries to parse the address.</span></span> <span data-ttu-id="8326a-342">場合、`hostNameOrAddress`パラメーターにリテラルには、有効な IP 文字列が含まれていますし、最初のフェーズが成功するとします。</span><span class="sxs-lookup"><span data-stu-id="8326a-342">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="8326a-343">IP 文字列リテラルの IP アドレスを使用して逆引き参照がホスト名を取得しようとしています。</span><span class="sxs-lookup"><span data-stu-id="8326a-343">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="8326a-344">この結果として設定されて、<xref:System.Net.IPHostEntry.HostName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8326a-344">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="8326a-345">この逆引き参照からのホスト名はすべて、可能な IP アドレスに関連付けられた名前および設定の取得にもう一度使用、<xref:System.Net.IPHostEntry.AddressList%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8326a-345">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="8326a-346">IPv4 の文字列リテラル、上記の 3 つすべての手順が成功があります。</span><span class="sxs-lookup"><span data-stu-id="8326a-346">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="8326a-347">実際に返される別のホストに属している IPv4 アドレスの DNS レコード古い可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8326a-347">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="8326a-348">手順 3 と失敗し、(は、IPv4 アドレスの DNS PTR レコードが IPv4 アドレスの DNS A レコードがありません) 例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8326a-348">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="8326a-349">Ipv6、上記の手順 2 が失敗する、ため、ほとんどの IPv6 環境で IPv6 アドレスの逆引き (PTR) レコードを登録しないでください。</span><span class="sxs-lookup"><span data-stu-id="8326a-349">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="8326a-350">このメソッドが文字列を返します、IPv6 で完全修飾ドメイン (FQDN) のホスト名としてリテラルように、<xref:System.Net.IPHostEntry.HostName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8326a-350">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="8326a-351"><xref:System.Net.Dns.GetHostAddresses%2A>メソッドには IP リテラルに関して動作が異なります。</span><span class="sxs-lookup"><span data-stu-id="8326a-351">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="8326a-352">1 つ目のステップが成功した場合 (正常に解析、IP アドレスとして)、アドレスがすぐに、結果として返されることです。</span><span class="sxs-lookup"><span data-stu-id="8326a-352">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="8326a-353">逆引き参照で試行することはありません。</span><span class="sxs-lookup"><span data-stu-id="8326a-353">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="8326a-354">IPv6 アドレスがの結果からフィルター処理、<xref:System.Net.Dns.GetHostEntry%2A>メソッド、ローカル コンピューターに IPv6 がインストールされていない場合。</span><span class="sxs-lookup"><span data-stu-id="8326a-354">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="8326a-355">その結果、空を取得することは<xref:System.Net.IPHostEntry>IPv6 の使用可能な場合の結果だけをインスタンス化、 `hostNameOrAddress`.parameter します。</span><span class="sxs-lookup"><span data-stu-id="8326a-355">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="8326a-356"><xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-356">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-357">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-357">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-358">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-358">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-359">次の例では、<xref:System.Net.Dns.GetHostEntry%2A>メソッドを解決するには、IP アドレスを<xref:System.Net.IPHostEntry>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="8326a-359">The following example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-360">
            <paramref name="hostNameOrAddress" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-360">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8326a-361">
            <paramref name="hostNameOrAddress" /> パラメーターの長さが 255 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-361">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-362">
            <paramref name="hostNameOrAddress" /> パラメーターを解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-362">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-363">
            <paramref name="hostNameOrAddress" /> パラメーターの IP アドレスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-363">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-364">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-364">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-365">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-365">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8326a-366">非同期操作としてホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-366">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="8326a-367">IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-367">An IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-368">非同期操作として IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-368">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-369">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-369">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="8326a-370">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-370">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="8326a-371">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<paramref name="address" />で指定されているホストに関するアドレス情報を含む <see cref="T:System.Net.IPHostEntry" /> インスタンスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-371">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-372">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="8326a-372">This operation will not block.</span></span> <span data-ttu-id="8326a-373">返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、`address`が解決されています。</span><span class="sxs-lookup"><span data-stu-id="8326a-373">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `address` has been resolved.</span></span>  
  
 <span data-ttu-id="8326a-374">このメソッドは、DNS サーバーの IP アドレスと IP アドレスに関連付けられているエイリアスを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-374">This method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="8326a-375">IPv6 アドレスは、ローカル コンピューターに IPv6 がインストールされていない場合、このメソッドの結果から除外されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-375">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="8326a-376">その結果、空を取得することは<xref:System.Net.IPHostEntry>IPv6 の使用可能な場合の結果だけをインスタンス化、`address`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="8326a-376">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="8326a-377"><xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-377">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-378">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-378">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-379">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-379">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-380">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-380">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-381">
            <paramref name="address" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-381">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-382">
            <paramref name="address" /> は無効な IP アドレスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-382">
              <paramref name="address" /> is an invalid IP address.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="8326a-383">解決するホスト名または IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-383">The host name or IP address to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-384">非同期操作としてホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-384">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-385">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-385">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="8326a-386">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-386">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="8326a-387">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<paramref name="hostNameOrAddress" />で指定されているホストに関するアドレス情報を含む <see cref="T:System.Net.IPHostEntry" /> インスタンスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-387">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-388">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="8326a-388">This operation will not block.</span></span> <span data-ttu-id="8326a-389">返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、`hostNameOrAddress`が解決されています。</span><span class="sxs-lookup"><span data-stu-id="8326a-389">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="8326a-390">このメソッドは、ホスト名に関連付けられている IP アドレスまたは IP アドレスの DNS サーバーを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-390">This method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="8326a-391">として空の文字列が渡された場合、`hostNameOrAddress`引数をこのメソッドは、ローカル ホストの IPv4 と IPv6 のアドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="8326a-391">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="8326a-392">ホスト名が見つからない場合、 <xref:System.Net.Sockets.SocketException> 11001 (Windows Sockets エラー WSAHOST_NOT_FOUND) の値を持つ例外が返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-392">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="8326a-393">この例外は、DNS サーバーが応答しない場合に返されることができます。</span><span class="sxs-lookup"><span data-stu-id="8326a-393">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="8326a-394">この例外は、名前は、正式なホスト名またはエイリアス、またはクエリ対象のデータベースで見つからない場合にも返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-394">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="8326a-395"><xref:System.ArgumentException>場合にも例外が返されます、`hostNameOrAddress`パラメーターが含まれる<xref:System.Net.IPAddress.Any>または<xref:System.Net.IPAddress.IPv6Any>します。</span><span class="sxs-lookup"><span data-stu-id="8326a-395">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="8326a-396">IP のリテラル文字列が渡された場合は、このメソッドで、`hostNameOrAddress`アプリケーションが、パラメーター、<xref:System.Net.IPHostEntry>プロパティ セットのすべてのインスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-396">This method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="8326a-397">これらのプロパティを含める、 <xref:System.Net.IPHostEntry.AddressList%2A>、 <xref:System.Net.IPHostEntry.Aliases%2A>、および<xref:System.Net.IPHostEntry.HostName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8326a-397">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="8326a-398">その結果、このメソッドの実装では、リテラル IP 文字列が渡されるときに、次の現象が発生します。</span><span class="sxs-lookup"><span data-stu-id="8326a-398">As a result, the implementation of this method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="8326a-399">メソッドは、アドレスを解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="8326a-399">The method tries to parse the address.</span></span> <span data-ttu-id="8326a-400">場合、`hostNameOrAddress`パラメーターにリテラルには、有効な IP 文字列が含まれていますし、最初のフェーズが成功するとします。</span><span class="sxs-lookup"><span data-stu-id="8326a-400">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="8326a-401">IP 文字列リテラルの IP アドレスを使用して逆引き参照がホスト名を取得しようとしています。</span><span class="sxs-lookup"><span data-stu-id="8326a-401">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="8326a-402">この結果として設定されて、<xref:System.Net.IPHostEntry.HostName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8326a-402">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="8326a-403">この逆引き参照からのホスト名はすべて、可能な IP アドレスに関連付けられた名前および設定の取得にもう一度使用、<xref:System.Net.IPHostEntry.AddressList%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8326a-403">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="8326a-404">IPv4 の文字列リテラル、上記の 3 つすべての手順が成功があります。</span><span class="sxs-lookup"><span data-stu-id="8326a-404">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="8326a-405">実際に返される別のホストに属している IPv4 アドレスの DNS レコード古い可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8326a-405">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="8326a-406">手順 3 と失敗し、(は、IPv4 アドレスの DNS PTR レコードが IPv4 アドレスの DNS A レコードがありません) 例外をスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8326a-406">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="8326a-407">Ipv6、上記の手順 2 が失敗する、ため、ほとんどの IPv6 環境で IPv6 アドレスの逆引き (PTR) レコードを登録しないでください。</span><span class="sxs-lookup"><span data-stu-id="8326a-407">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="8326a-408">このメソッドが文字列を返します、IPv6 で完全修飾ドメイン (FQDN) のホスト名としてリテラルように、<xref:System.Net.IPHostEntry.HostName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8326a-408">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="8326a-409"><xref:System.Net.Dns.GetHostAddresses%2A>メソッドには IP リテラルに関して動作が異なります。</span><span class="sxs-lookup"><span data-stu-id="8326a-409">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="8326a-410">1 つ目のステップが成功した場合 (正常に解析、IP アドレスとして)、アドレスがすぐに、結果として返されることです。</span><span class="sxs-lookup"><span data-stu-id="8326a-410">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="8326a-411">逆引き参照で試行することはありません。</span><span class="sxs-lookup"><span data-stu-id="8326a-411">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="8326a-412">IPv6 アドレスは、ローカル コンピューターに IPv6 がインストールされていない場合、このメソッドの結果から除外されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-412">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="8326a-413">その結果、空を取得することは<xref:System.Net.IPHostEntry>IPv6 の使用可能な場合の結果だけをインスタンス化、 `hostNameOrAddress`.parameter します。</span><span class="sxs-lookup"><span data-stu-id="8326a-413">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="8326a-414"><xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-414">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-415">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-415">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-416">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-416">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-417">
            <paramref name="hostNameOrAddress" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-417">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8326a-418">
            <paramref name="hostNameOrAddress" /> パラメーターの長さが 255 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-418">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-419">
            <paramref name="hostNameOrAddress" /> パラメーターを解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-419">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8326a-420">
            <paramref name="hostNameOrAddress" /> パラメーターの IP アドレスが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-420">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8326a-421">ローカル コンピューターのホスト名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-421">Gets the host name of the local computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-422">ローカル コンピューターの DNS ホスト名を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-422">A string that contains the DNS host name of the local computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8326a-423">次の例では、<xref:System.Net.Dns.GetHostName%2A>ローカル コンピューターのホスト名を取得します。</span><span class="sxs-lookup"><span data-stu-id="8326a-423">The following example uses the <xref:System.Net.Dns.GetHostName%2A> method to obtain the host name of the local computer.</span></span>  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-424">ローカル ホスト名を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-424">An error is encountered when resolving the local host name.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-425">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-425">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-426">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-426">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="8326a-427">DNS スタイルのホスト名、または IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-427">A DNS-style host name or IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8326a-428">DNS ホスト名または IP アドレスを <see cref="T:System.Net.IPHostEntry" /> インスタンスに解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-428">Resolves a DNS host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8326a-429">
            <paramref name="hostName" /> で指定するホストについてのアドレス情報を格納する <see cref="T:System.Net.IPHostEntry" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-429">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8326a-430"><xref:System.Net.Dns.Resolve%2A>メソッドは、ホスト名または IP アドレスに関連付けられている IP アドレスの DNS サーバーを照会します。</span><span class="sxs-lookup"><span data-stu-id="8326a-430">The <xref:System.Net.Dns.Resolve%2A> method queries a DNS server for the IP address associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="8326a-431">ときに`hostName`DNS スタイルのホスト名は複数の IP アドレスに関連付けられた、そのホスト名に解決される最初の IP アドレスのみが返されます。</span><span class="sxs-lookup"><span data-stu-id="8326a-431">When `hostName` is a DNS-style host name associated with multiple IP addresses, only the first IP address that resolves to that host name is returned.</span></span>  
  
 <span data-ttu-id="8326a-432">場合、<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>プロパティに設定されて`true`、<xref:System.Net.IPHostEntry.Aliases%2A>のプロパティ、<xref:System.Net.IPHostEntry>返されるインスタンスが、このメソッドによって設定されていないと、常に空になります。</span><span class="sxs-lookup"><span data-stu-id="8326a-432">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8326a-433">このメンバーは、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="8326a-433">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8326a-434">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="8326a-434">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8326a-435">次の例では、<xref:System.Net.Dns.Resolve%2A>メソッドを解決するには、IP アドレスを<xref:System.Net.IPHostEntry>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="8326a-435">The following example uses the <xref:System.Net.Dns.Resolve%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8326a-436">
            <paramref name="hostName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-436">
              <paramref name="hostName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8326a-437">
            <paramref name="hostName" /> の長さが 255 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-437">The length of <paramref name="hostName" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8326a-438">
            <paramref name="hostName" /> を解決するときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-438">An error is encountered when resolving <paramref name="hostName" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="8326a-439">DNS 情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-439">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="8326a-440">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8326a-440">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>