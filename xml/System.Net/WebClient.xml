<Type Name="WebClient" FullName="System.Net.WebClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49592ccff67aa36f2aeb8df20a7422809f161b6b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48617598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebClient : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClient extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClient&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClient : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClient = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>URI で識別されるリソースとの間でデータを送受信するための共通のメソッドが用意されています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient>クラスにデータを送信したり、任意のローカル、イントラネット、または URI で識別されるインターネット リソースからデータを受信する一般的な方法を提供します。  
  
 <xref:System.Net.WebClient>クラスで使用、<xref:System.Net.WebRequest>リソースへのアクセスを提供するクラス。 <xref:System.Net.WebClient> インスタンスがすべてのデータにアクセスできる<xref:System.Net.WebRequest>に子孫が登録されている、<xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=nameWithType>メソッド。  
  
> [!NOTE]
>  既定では、.NET Framework でサポートで始まる Uri に`http:`、 `https:`、 `ftp:`、および`file:`スキーム識別子。  
  
 次の表<xref:System.Net.WebClient>リソースにデータをアップロードする方法。  
  
|メソッド|説明|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenWrite%2A>|取得、<xref:System.IO.Stream>リソースにデータを送信するために使用します。|  
|<xref:System.Net.WebClient.OpenWriteAsync%2A>|取得、<xref:System.IO.Stream>呼び出し元のスレッドをブロックすることがなく、リソースにデータを送信するために使用します。|  
|<xref:System.Net.WebClient.UploadData%2A>|バイト配列をリソースに送信し、返します、<xref:System.Byte>のすべての応答を格納している配列。|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|送信、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなく、リソースへの配列。|  
|<xref:System.Net.WebClient.UploadFile%2A>|ローカル ファイルをリソースに送信し、返します、<xref:System.Byte>のすべての応答を格納している配列。|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|呼び出し元のスレッドをブロックすることがなく、リソースへのローカル ファイルを送信します。|  
|<xref:System.Net.WebClient.UploadValues%2A>|送信、<xref:System.Collections.Specialized.NameValueCollection>リソースを返す、<xref:System.Byte>のすべての応答を格納している配列。|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|送信、<xref:System.Collections.Specialized.NameValueCollection>リソースを返す、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなく、すべての応答を含む配列。|  
|<xref:System.Net.WebClient.UploadString%2A>|送信、<xref:System.String>呼び出し元のスレッドをブロックすることがなく、リソースにします。|  
|<xref:System.Net.WebClient.UploadStringAsync%2A>|送信、<xref:System.String>呼び出し元のスレッドをブロックすることがなく、リソースにします。|  
  
 次の表<xref:System.Net.WebClient>をリソースからデータをダウンロードする方法。  
  
|メソッド|説明|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenRead%2A>|リソースからデータを返します、<xref:System.IO.Stream>します。|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|呼び出し元のスレッドをブロックすることがなく、リソースからデータを返します。|  
|<xref:System.Net.WebClient.DownloadData%2A>|リソースからデータをダウンロードし、返します、<xref:System.Byte>配列。|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|リソースからデータをダウンロードし、返します、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなくの配列。|  
|<xref:System.Net.WebClient.DownloadFile%2A>|ローカル ファイルにリソースからデータをダウンロードします。|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|リソースからデータを呼び出し元のスレッドをブロックすることがなく、ローカル ファイルをダウンロードします。|  
|<xref:System.Net.WebClient.DownloadString%2A>|ダウンロード、<xref:System.String>からリソースを返します、<xref:System.String>します。|  
|<xref:System.Net.WebClient.DownloadStringAsync%2A>|ダウンロード、<xref:System.String>呼び出し元のスレッドをブロックすることがなく、リソースから。|  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 A<xref:System.Net.WebClient>インスタンスは、既定では省略可能な HTTP ヘッダーを送信しません。 ヘッダーを追加する必要があります、要求は、オプションのヘッダーを必要とする場合、<xref:System.Net.WebClient.Headers%2A>コレクション。 たとえば、応答内のクエリを保持する必要があります、ユーザー エージェント ヘッダーを追加します。 また、ユーザー エージェント ヘッダーが見つからない場合は、サーバーは 500 (Internal Server Error) を返す可能性があります。  
  
 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> 設定されている`true`で<xref:System.Net.WebClient>インスタンス。  
  
   
  
## Examples  
 次のコード例は、リソースの URI を使用、これを取得し、応答を表示します。  
  
 [!code-cpp[NCLWebClientUserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientUserAgent/CPP/useragent.cpp#1)]
 [!code-csharp[NCLWebClientUserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientUserAgent/CS/useragent.cs#1)]
 [!code-vb[NCLWebClientUserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientUserAgent/VB/useragent.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">要求された URI または要求をリダイレクトする任意の URI にアクセスします。 <see cref="F:System.Net.NetworkAccess.Connect" /> (関連する列挙体)</permission>
    <block subset="none" type="overrides">
      <para>派生クラスの基本クラス実装を呼び出す必要があります<see cref="T:System.Net.WebClient" />派生クラスを確実に期待どおりに動作します。</para>
    </block>
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <altmember cref="T:System.Net.HttpWebResponse" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.WebClient" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のコンス トラクターの新しいインスタンスを作成し、<xref:System.Net.WebClient>クラス。 既定の HTTP メソッドでは、GET を示します。 既定の FTP メソッドは、RETR です。 既定値 <xref:System.Net.WebClient.Encoding%2A> は <xref:System.Text.Encoding.Default%2A> です。 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> の既定値は `true` です。  
  
   
  
## Examples  
 次のコード例を作成、<xref:System.Net.WebClient>をインスタンス化し、オブジェクトを使用してサーバーからデータをダウンロードして、システム コンソールに表示するサーバーからデータをダウンロードしたり、ファイルに書き込むとフォームの値をサーバーにアップロードし、応答を受信します。  
  
 [!code-cpp[WebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient/CPP/webclient.cpp#1)]
 [!code-csharp[WebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient/CS/webclient.cs#1)]
 [!code-vb[WebClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient/VB/webclient.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReadStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebClient" /> インスタンスのインターネット リソースから読み取ったデータをバッファリングするかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Boolean" /> を返します。  
  
 インターネット リソースから受信したデータのバッファリングを有効にする場合は <see langword="true" />。バッファリングを無効にする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Net.WebClient.AllowReadStreamBuffering%2A>プロパティは`true`データがメモリにバッファリングができるようになりますが、アプリで読み取ることができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWriteStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebClient" /> インスタンスのインターネット リソースに書き込んだデータをバッファリングするかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Boolean" /> を返します。  
  
 インターネット リソースに書き込むデータのバッファリングを有効にする場合は <see langword="true" />。バッファリングを無効にする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Net.WebClient.AllowWriteStreamBuffering%2A>プロパティは`true`、大きなチャンクでインターネット リソースをより効率的に記述できますよう、データがメモリにバッファリングされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : string with get, set" Usage="System.Net.WebClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebClient" /> で作成された要求のベース URI を取得または設定します。</summary>
        <value>
          <see cref="T:System.String" /> で作成された要求のベース URI を格納する <see cref="T:System.Net.WebClient" />。ベース アドレスが指定されていない場合は <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.BaseAddress%2A>プロパティには、相対アドレスと組み合わせたベース URI が含まれています。 アップロードまたはデータをダウンロードするメソッドを呼び出すと、<xref:System.Net.WebClient>メソッドの呼び出しで指定する相対アドレスを持つオブジェクトがこのベース URI を結合します。 絶対 URI では、指定した場合<xref:System.Net.WebClient>使用しない、<xref:System.Net.WebClient.BaseAddress%2A>プロパティの値。  
  
 以前に設定を削除する値には、このプロパティを設定`null`または空の文字列 ("")。  
  
   
  
## Examples  
 次のコード例では、インターネット サーバーからデータをダウンロードし、コンソールに表示します。 前提としています、サーバーのアドレス (などhttp://www.contoso.com)に`hostUri`こと (/default.htm) などのリソースへのパスが`uriSuffix`します。  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#1)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#1)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> が無効な URI に設定されています。 この内部例外には、エラーの特定に役立つ情報が含まれている場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebClient.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebRequest" /> オブジェクトを使用してこの WebClient インスタンスが取得するリソースに対する、アプリケーションのキャッシュ ポリシーを取得または設定します。</summary>
        <value>アプリケーションのキャッシュ要件を表す <see cref="T:System.Net.Cache.RequestCachePolicy" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="webClient.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留中の非同期操作をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 操作が保留中の場合は、このメソッドを呼び出す<xref:System.Net.WebRequest.Abort%2A>基になる<xref:System.Net.WebRequest>します。  
  
 呼び出すと<xref:System.Net.WebClient.CancelAsync%2A>アプリケーションがあっても、操作に関連付けられている完了イベントを受信します。 たとえば、呼び出す<xref:System.Net.WebClient.CancelAsync%2A>をキャンセルする、<xref:System.Net.WebClient.DownloadStringAsync%2A>のイベント ハンドラーを指定した場合は、操作、<xref:System.Net.WebClient.DownloadStringCompleted>イベント、イベント ハンドラーが、操作が終了したこと通知を受信します。 操作が正常に完了するかどうかについては、確認、<xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>プロパティの基本クラスを<xref:System.Net.DownloadDataCompletedEventArgs>イベントのイベント ハンドラーに渡されるデータ オブジェクト。  
  
 非同期操作が進行中でない場合は、このメソッドは何もしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ホストに送信され、要求を認証するために使用されるネットワーク資格情報を取得または設定します。</summary>
        <value>要求に使用する認証資格情報を格納する <see cref="T:System.Net.ICredentials" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Credentials%2A>プロパティには、ホスト上のリソースにアクセスするために使用する認証資格情報が含まれています。 ほとんどのクライアント側のシナリオで使用する必要があります、 <xref:System.Net.CredentialCache.DefaultCredentials%2A>、現在ログオンしているユーザーの資格情報であります。 これを行うには、設定、<xref:System.Net.WebClient.UseDefaultCredentials%2A>プロパティを`true`このプロパティを設定する代わりにします。  
  
 場合、<xref:System.Net.WebClient>クラスは、ASP.NET アプリケーションなどの中間層アプリケーションで使用されている、 <xref:System.Net.CredentialCache.DefaultCredentials%2A> ASP ページ (サーバー側の資格情報) を実行しているアカウントに属しています。 通常、要求が行われる要因となったクライアントの資格情報をこのプロパティを設定します。  
  
 セキュリティ上の理由、自動的にリダイレクトに従うとき、リダイレクトの機能に含まれる使用する資格情報を格納、<xref:System.Net.CredentialCache>し、このプロパティに割り当てます。 このプロパティが自動的に設定されます`null`以外のものが含まれている場合、リダイレクト時に、<xref:System.Net.CredentialCache>します。 自動的に設定するこのプロパティの値を持つ`null`これらの条件下で、意図しない宛先に送信される資格情報を防止します。
  
## Examples  
 次のコード例では、要求を認証するのにユーザーのシステムの資格情報を使用します。  
  
 [!code-cpp[WebClientAuthentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClientAuthentication/CPP/webclientauth.cpp#1)]
 [!code-csharp[WebClientAuthentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClientAuthentication/CS/webclientauth.cs#1)]
 [!code-vb[WebClientAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClientAuthentication/VB/webclientauth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.WebRequest.Credentials" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した URI から <see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : string -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データのダウンロード元の URI。</param>
        <summary>指定した URI から <see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。</summary>
        <returns>ダウンロードされたリソースを格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadData%2A>メソッドで指定された URI を持つリソースのダウンロード、`address`パラメーター。 リソースのダウンロード中に、このメソッドはブロックします。 リソースをダウンロードして、サーバーの応答の待機中に実行を継続のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadDataAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、サーバーからデータを要求し、返されるデータを表示します。 前提としています`remoteUri`要求されたデータの有効な URI が含まれています。  
  
 [!code-cpp[WebClient_DownloadData#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadData/CPP/webclient_downloaddata.cpp#1)]
 [!code-csharp[WebClient_DownloadData#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadData/CS/webclient_downloaddata.cs#1)]
 [!code-vb[WebClient_DownloadData#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadData/VB/webclient_downloaddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
データのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドは、複数のスレッドで同時に呼び出されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As Uri) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : Uri -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Uri" /> オブジェクトによって表される、データのダウンロード元の URI。</param>
        <summary>指定した URI から <see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。</summary>
        <returns>ダウンロードされたリソースを格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadData%2A>メソッドで指定された URI を持つリソースのダウンロード、`address`パラメーター。 リソースのダウンロード中に、このメソッドはブロックします。 リソースをダウンロードして、サーバーの応答の待機中に実行を継続のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadDataAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 **注**このメンバーが、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>非同期操作として指定された URI から<see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri -&gt; unit" Usage="webClient.DownloadDataAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードする URI を格納している <see cref="T:System.Uri" />。</param>
        <summary>非同期操作として指定された URI から<see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドで指定された URI スキームに関連付けられているプロトコルの既定のメソッドを使用して、指定したリソースを取得する`address`します。 データは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期にダウンロードされます。  
  
 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。 リソースとブロックをダウンロードするには、サーバーの応答の待機中のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadData%2A>メソッド。 ダウンロードが完了したら、<xref:System.Net.WebClient.DownloadDataCompleted>イベントが発生します。 アプリケーションでは、通知を受信するには、このイベントを処理する必要があります。 ダウンロードされたデータが表示されます、<xref:System.Net.DownloadDataCompletedEventArgs.Result%2A>プロパティ。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadDataAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードする URI を格納している <see cref="T:System.Uri" />。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>非同期操作として指定された URI から<see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドで指定された URI スキームに関連付けられているプロトコルの既定のメソッドを使用して、指定したリソースを取得する`address`します。 データは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期にダウンロードされます。  
  
 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。 リソースとブロックをダウンロードするには、サーバーの応答の待機中のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadData%2A>メソッド。 ダウンロードが完了したら、<xref:System.Net.WebClient.DownloadDataCompleted>イベントが発生します。 アプリケーションでは、通知を受信するには、このイベントを処理する必要があります。 ダウンロードされたデータが表示されます、<xref:System.Net.DownloadDataCompletedEventArgs.Result%2A>プロパティ。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadDataCompleted As DownloadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadDataCompletedEventHandler ^ DownloadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " Usage="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のデータ ダウンロード操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、非同期のデータのダウンロード操作が完了するたびに、発生します。 非同期のデータのダウンロードが呼び出すことによって開始された、<xref:System.Net.WebClient.DownloadDataAsync%2A>メソッド。  
  
 <xref:System.Net.DownloadDataCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.DownloadDataCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#21](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#21)]
 [!code-csharp[NCLWebClientAsync#21](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#21)]
 [!code-vb[NCLWebClientAsync#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI から<see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI から<see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、ダウンロードされたリソースを含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、データ リソースをダウンロードしたら、完了します。  
  
 このメソッドで指定された URI スキームに関連付けられているプロトコルの既定のメソッドを使用して、指定したリソースの取得、`address`パラメーター。 データは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期にダウンロードされます。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 次のコード例では、サーバーからデータを要求し、返されるデータを表示します。 前提としています`remoteUri`要求されたデータの有効な URI が含まれています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI から<see cref="T:System.Byte" /> 配列としてリソースをダウンロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、ダウンロードされたリソースを含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、データ リソースをダウンロードしたら、完了します。  
  
 このメソッドで指定された URI スキームに関連付けられているプロトコルの既定のメソッドを使用して、指定したリソースの取得、`address`パラメーター。 データは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期にダウンロードされます。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 **注**このメンバーが、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した URI を持つリソースをローカル ファイルにダウンロードします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データのダウンロード元の URI。</param>
        <param name="fileName">データを受信するローカル ファイルの名前。</param>
        <summary>指定した URI を持つリソースをローカル ファイルにダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadFile%2A>メソッドがで指定された URI からローカル ファイルのデータをダウンロード、`address`パラメーター。 リソースのダウンロード中に、このメソッドはブロックします。 リソースをダウンロードして、サーバーの応答の待機中に実行を継続のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadFileAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ASP.NET ページなどの中間層アプリケーションでこのメソッドを使用する場合、アプリケーションを実行するアカウントにファイルにアクセスするためのアクセス許可がない場合にエラーを受け取ります。  
  
   
  
## Examples  
 次のコード例からファイルをダウンロードするhttp://www.contoso.comローカル ハード ドライブにします。  
  
 [!code-cpp[WebClient_DownloadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadFile/CPP/webclient_downloadfile.cpp#1)]
 [!code-csharp[WebClient_DownloadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadFile/CS/webclient_downloadfile.cs#1)]
 [!code-vb[WebClient_DownloadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadFile/VB/webclient_downloadfile.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="filename" /> は <see langword="null" /> または <see cref="F:System.String.Empty" /> です。  
  
- または - 
ファイルが存在しません。  
  
または、データのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドは、複数のスレッドで同時に呼び出されています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルの書き込みに<paramref name="fileName" />します。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.String" /> として指定した、データのダウンロード元の URI。</param>
        <param name="fileName">データを受信するローカル ファイルの名前。</param>
        <summary>指定した URI を持つリソースをローカル ファイルにダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadFile%2A>メソッドがで指定された URI からローカル ファイルのデータをダウンロード、`address`パラメーター。 リソースのダウンロード中に、このメソッドはブロックします。 リソースをダウンロードして、サーバーの応答の待機中に実行を継続のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadFileAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ASP.NET ページなどの中間層アプリケーションでこのメソッドを使用する場合、アプリケーションを実行するアカウントにファイルにアクセスするためのアクセス許可がない場合にエラーを受け取ります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="filename" /> は <see langword="null" /> または <see cref="F:System.String.Empty" /> です。  
  
- または - 
ファイルが存在しません。  
  
- または - 
データのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドは、複数のスレッドで同時に呼び出されています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルの書き込みに<paramref name="fileName" />します。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>非同期操作として、指定したリソースをローカル ファイルにダウンロードし、タスク オブジェクトを返します。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <param name="fileName">ローカル コンピューターに配置されるファイルの名前。</param>
        <summary>指定した URI を持つリソースをローカル ファイルにダウンロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドで指定された URI にリソースのダウンロード、`address`パラメーター。 ダウンロードしたファイルの名前は、ダウンロードが正常に完了すると、`fileName`ローカル コンピューター上です。 非同期的にスレッド プールから自動的に割り当てられているスレッド リソースを使用して、ファイルがダウンロードされます。 ファイルが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.DownloadFileCompleted>イベント。  
  
 このメソッドは、リソースのダウンロード中に、呼び出し元のスレッドをブロックしません。 ダウンロードが完了するを待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.DownloadFile%2A>メソッド。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ときに、このメソッドを使用して、ASP.NET ページで、ページの 実行アカウントがローカル ファイルにアクセスするためのアクセス許可を持たない場合にエラーを受け取ります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="fileName" /> によって指定されたローカルファイルは別のスレッドで使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string * obj -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <param name="fileName">ローカル コンピューターに配置されるファイルの名前。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定した URI を持つリソースをローカル ファイルにダウンロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドで指定された URI にリソースのダウンロード、`address`パラメーター。 ダウンロードしたファイルの名前は、ダウンロードが正常に完了すると、`fileName`ローカル コンピューター上です。 非同期的にスレッド プールから自動的に割り当てられているスレッド リソースを使用して、ファイルがダウンロードされます。 ファイルが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.DownloadFileCompleted>イベント。  
  
 このメソッドは、リソースのダウンロード中に、呼び出し元のスレッドをブロックしません。 ダウンロードが完了するを待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.DownloadFile%2A>メソッド。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ときに、このメソッドを使用して、ASP.NET ページで、ページの 実行アカウントがローカル ファイルにアクセスするためのアクセス許可を持たない場合にエラーを受け取ります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="fileName" /> によって指定されたローカルファイルは別のスレッドで使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ DownloadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のファイル ダウンロード操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、非同期のファイル ダウンロード操作が完了するたびに、発生します。 非同期のファイルのダウンロードが呼び出しによって開始された、<xref:System.Net.WebClient.DownloadFileAsync%2A>メソッド。  
  
 <xref:System.ComponentModel.AsyncCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.ComponentModel.AsyncCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースをローカル ファイルにダウンロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As String, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <param name="fileName">ローカル コンピューターに配置されるファイルの名前。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースをローカル ファイルにダウンロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task" /> を返します。  
  
非同期操作を表すタスク オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task>オブジェクトは、データ リソースをダウンロードしたら、完了します。  
  
 このメソッドで指定された URI にリソースのダウンロード、`address`パラメーター。 ダウンロードしたファイルの名前は、ダウンロードが正常に完了すると、`fileName`ローカル コンピューター上です。 非同期的にスレッド プールから自動的に割り当てられているスレッド リソースを使用して、ファイルがダウンロードされます。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ときに、このメソッドを使用して、ASP.NET ページで、ページの 実行アカウントがローカル ファイルにアクセスするためのアクセス許可を持たない場合にエラーを受け取ります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="fileName" /> によって指定されたローカルファイルは別のスレッドで使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As Uri, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <param name="fileName">ローカル コンピューターに配置されるファイルの名前。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースをローカル ファイルにダウンロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task" /> を返します。  
  
非同期操作を表すタスク オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task>オブジェクトは、データ リソースをダウンロードしたら、完了します。  
  
 このメソッドで指定された URI にリソースのダウンロード、`address`パラメーター。 ダウンロードしたファイルの名前は、ダウンロードが正常に完了すると、`fileName`ローカル コンピューター上です。 非同期的にスレッド プールから自動的に割り当てられているスレッド リソースを使用して、ファイルがダウンロードされます。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ときに、このメソッドを使用して、ASP.NET ページで、ページの 実行アカウントがローカル ファイルにアクセスするためのアクセス許可を持たない場合にエラーを受け取ります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="fileName" /> によって指定されたローカルファイルは別のスレッドで使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadProgressChanged As DownloadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadProgressChangedEventHandler ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " Usage="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期ダウンロード操作で、データの一部またはすべてが正常に転送された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、非同期のダウンロードの進行状況は、毎回が発生します。 次の方法のいずれかを使用してダウンロードが開始されたときに、このイベントが発生します。  
  
|メソッド|説明|  
|------------|-----------------|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|リソースからデータをダウンロードし、返します、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなくの配列。|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|リソースからデータを呼び出し元のスレッドをブロックすることがなく、ローカル ファイルをダウンロードします。|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|呼び出し元のスレッドをブロックすることがなく、リソースからデータを返します。|  
  
 <xref:System.Net.DownloadProgressChangedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.DownloadProgressChangedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
> [!NOTE]
>  サーバーは、ファイルのサイズを送信しなかったためパッシブ FTP ファイル転送を常に 0、進行状況が表示されます。 進行状況を表示することができますを変更する FTP 接続をアクティブにオーバーライドすることで、<xref:System.Net.WebClient.GetWebRequest%2A>仮想メソッド。  
  
```csharp  
internal class MyWebClient : WebClient
{  
    protected override WebRequest GetWebRequest(Uri address)
    {  
        FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  
        req.UsePassive = false;  
        return req;  
    }  
}  
```  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 次のコード例では、このイベントのハンドラーの実装を示します。  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>要求されたリソースを <see cref="T:System.String" /> としてダウンロードします。 ダウンロードするリソースは、URI を含む <see cref="T:System.String" /> として、または <see cref="T:System.Uri" /> として指定できます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : string -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードする URI を格納している <see cref="T:System.String" />。</param>
        <summary>要求されたリソースを <see cref="T:System.String" /> としてダウンロードします。 ダウンロードするリソースは、URI を含む <see cref="T:System.String" /> として指定します。</summary>
        <returns>要求されたリソースを格納する <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定したリソースを取得します。 メソッドに指定されたエンコーディングを使用して、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>をリソースに変換するプロパティ、<xref:System.String>します。 リソースのダウンロード中に、このメソッドはブロックします。 リソースをダウンロードして、サーバーの応答の待機中に実行を継続のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadStringAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、このメソッドの呼び出しを示しています。  
  
 [!code-cpp[NCLWebClientAsync#25](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#25)]
 [!code-csharp[NCLWebClientAsync#25](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#25)]
 [!code-vb[NCLWebClientAsync#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドは、複数のスレッドで同時に呼び出されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : Uri -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードする URI を格納している <see cref="T:System.Uri" /> オブジェクト。</param>
        <summary>要求されたリソースを <see cref="T:System.String" /> としてダウンロードします。 ダウンロードするリソースは、<see cref="T:System.Uri" /> として指定します。</summary>
        <returns>要求されたリソースを格納する <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定したリソースを取得します。 メソッドに指定されたエンコーディングを使用して、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>をリソースに変換するプロパティ、<xref:System.String>します。 リソースのダウンロード中に、このメソッドはブロックします。 リソースをダウンロードして、サーバーの応答の待機中に実行を継続のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadStringAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドは、複数のスレッドで同時に呼び出されています。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.String" /> または <see cref="T:System.Uri" /> として指定したリソースをダウンロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri -&gt; unit" Usage="webClient.DownloadStringAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードする URI を格納している <see cref="T:System.Uri" />。</param>
        <summary>
          <see cref="T:System.Uri" /> として指定したリソースをダウンロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リソースは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期にダウンロードされます。  
  
 このメソッドがで指定されたエンコーディングを使用、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>をリソースに変換するプロパティ、<xref:System.String>します。 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。 リソースとブロックをダウンロードするには、サーバーの応答の待機中に、使用、<xref:System.Net.WebClient.DownloadString%2A>メソッド。 ダウンロードが完了したら、<xref:System.Net.WebClient.DownloadStringCompleted>イベントが発生します。 アプリケーションでは、通知を受信するには、このイベントを処理する必要があります。 ダウンロードした文字列が表示されます、<xref:System.Net.DownloadStringCompletedEventArgs.Result%2A>プロパティ。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadStringAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードする URI を格納している <see cref="T:System.Uri" />。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定したリソースに指定した文字列をダウンロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リソースは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期にダウンロードされます。  
  
 このメソッドがで指定されたエンコーディングを使用、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>をリソースに変換するプロパティ、<xref:System.String>します。 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。 リソースとブロックをダウンロードするには、サーバーの応答の待機中に、使用、<xref:System.Net.WebClient.DownloadString%2A>メソッド。 ダウンロードが完了したら、<xref:System.Net.WebClient.DownloadStringCompleted>イベントが発生します。 アプリケーションでは、通知を受信するには、このイベントを処理する必要があります。 ダウンロードした文字列が表示されます、<xref:System.Net.DownloadStringCompletedEventArgs.Result%2A>プロパティ。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadStringCompleted As DownloadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadStringCompletedEventHandler ^ DownloadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " Usage="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のリソース ダウンロード操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、リソースを文字列としてダウンロードする非同期操作が完了するたびに、発生します。 これらの操作が呼び出しによって開始された、<xref:System.Net.WebClient.DownloadStringAsync%2A>メソッド。  
  
 <xref:System.Net.DownloadStringCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.DownloadStringCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#28](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#28)]
 [!code-csharp[NCLWebClientAsync#28](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#28)]
 [!code-vb[NCLWebClientAsync#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI から<see cref="T:System.String" /> としてリソースをダウンロードします。  これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI から<see cref="T:System.String" /> としてリソースをダウンロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、ダウンロードされたリソースを含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、データ リソースをダウンロードしたら、完了します。  リソースは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期にダウンロードされます。  
  
 このメソッドがで指定されたエンコーディングを使用、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>をリソースに変換するプロパティ、<xref:System.String>します。 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI から<see cref="T:System.String" /> としてリソースをダウンロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、ダウンロードされたリソースを含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、データ リソースをダウンロードしたら、完了します。 リソースは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期にダウンロードされます。  
  
 このメソッドがで指定されたエンコーディングを使用、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>をリソースに変換するプロパティ、<xref:System.String>します。 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Net.WebClient.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列のアップロードとダウンロードに使用する <see cref="T:System.Text.Encoding" /> を取得または設定します。</summary>
        <value>文字列のエンコードに使用する <see cref="T:System.Text.Encoding" />。 このプロパティの既定値は、<see cref="P:System.Text.Encoding.Default" /> によって返されるエンコーディングです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadString%2A>と<xref:System.Net.WebClient.UploadStringAsync%2A>メソッドに指定した文字列に変換するこのプロパティを使用して、<xref:System.Byte>配列、文字列をアップロードする前にします。 詳細については、次を参照してください。、<xref:System.Text.Encoding.GetBytes%2A>メソッド。  
  
 使用して、文字列がダウンロードされると、<xref:System.Net.WebClient.DownloadString%2A>または<xref:System.Net.WebClient.DownloadStringAsync%2A>メソッド、<xref:System.Net.WebClient>を使用して、 <xref:System.Text.Encoding> 、ダウンロードした変換をこれによって返される<xref:System.Byte>文字列の配列。 詳細については、次を参照してください。、<xref:System.Text.Encoding.GetString%2A>メソッド。  
  
   
  
## Examples  
 次のコード例では、このプロパティの値の設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRequest (address As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ address);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClient.GetWebRequest address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">要求するリソースを識別する <see cref="T:System.Uri" />。</param>
        <summary>指定したリソースの <see cref="T:System.Net.WebRequest" /> オブジェクトを返します。</summary>
        <returns>指定したリソースの新しい <see cref="T:System.Net.WebRequest" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは既存のコピー <xref:System.Net.WebClient.Headers%2A>、 <xref:System.Net.WebClient.Credentials%2A>、新しく作成してメソッドを<xref:System.Net.WebRequest>オブジェクト。  
  
 継承するクラスでのみ、このメソッドを呼び出せる<xref:System.Net.WebClient>します。 基になる継承先がアクセスできるようにする提供されている<xref:System.Net.WebRequest>オブジェクト。 派生クラスの基本クラス実装を呼び出す必要があります<xref:System.Net.WebClient.GetWebRequest%2A>メソッドが期待どおりに動作を確認します。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#1)]
 [!code-csharp[NCLCustomWebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した <see cref="T:System.Net.WebResponse" /> の <see cref="T:System.Net.WebRequest" /> を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">応答の取得に使用する <see cref="T:System.Net.WebRequest" />。</param>
        <summary>指定した <see cref="T:System.Net.WebResponse" /> の <see cref="T:System.Net.WebRequest" /> を返します。</summary>
        <returns>指定した <see cref="T:System.Net.WebResponse" /> の応答を格納している <see cref="T:System.Net.WebRequest" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって返されるオブジェクトが呼び出すことによって取得、<xref:System.Net.WebRequest.GetResponse%2A>メソッドを指定した<xref:System.Net.WebRequest>オブジェクト。  
  
 継承するクラスでのみ、このメソッドを呼び出せる<xref:System.Net.WebClient>します。 基になる継承先がアクセスできるようにする提供されている<xref:System.Net.WebResponse>オブジェクト。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#2)]
 [!code-csharp[NCLCustomWebClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">応答の取得に使用する <see cref="T:System.Net.WebRequest" />。</param>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> の以前の呼び出しから取得した <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> オブジェクト。</param>
        <summary>指定した <see cref="T:System.Net.WebResponse" /> を使用して、指定した <see cref="T:System.Net.WebRequest" /> の <see cref="T:System.IAsyncResult" /> を返します。</summary>
        <returns>指定した <see cref="T:System.Net.WebResponse" /> の応答を格納している <see cref="T:System.Net.WebRequest" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって返されるオブジェクトが呼び出すことによって取得、<xref:System.Net.WebRequest.EndGetResponse%2A>メソッドを指定した<xref:System.Net.WebRequest>オブジェクト。  
  
 継承するクラスでのみ、このメソッドを呼び出せる<xref:System.Net.WebClient>します。 基になる継承先がアクセスできるようにする提供されている<xref:System.Net.WebResponse>オブジェクト。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#3)]
 [!code-csharp[NCLCustomWebClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebClient.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求に関連付けられているヘッダーの名前/値ペアのコレクションを取得または設定します。</summary>
        <value>要求に関連付けられているヘッダーの名前/値ペアを格納する <see cref="T:System.Net.WebHeaderCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Headers%2A>プロパティが含まれています、<xref:System.Net.WebHeaderCollection>プロトコル ヘッダーを含むインスタンスを<xref:System.Net.WebClient>要求と共に送信します。  
  
 一部の共通ヘッダーが制限されていると、システムによって保護されているとできません設定または変更でと見なされます、<xref:System.Net.WebHeaderCollection>オブジェクト。 でこれらの制限付きヘッダーのいずれかを設定すると、<xref:System.Net.WebHeaderCollection>オブジェクトに関連付けられている、<xref:System.Net.WebClient>オブジェクトを送信しようとしました。 後で例外がスローされます、<xref:System.Net.WebClient>要求。  
  
 システムによって保護されている制限付きヘッダーでは、含めるは、次のようではありません。  
  
-   日付  
  
-   ホスト  
  
 さらに、その他のいくつかのヘッダーも制限を使用する場合、<xref:System.Net.WebClient>オブジェクト。 これらの制限付きヘッダーでは、含めるは、以下に制限はありません。  
  
-   そのまま使用します。  
  
-   接続  
  
-   コンテンツの長さ  
  
-   予想される (に値を設定すると"100-続行"  
  
-   場合の変更-以降  
  
-   範囲  
  
-   転送エンコード  
  
 <xref:System.Net.HttpWebRequest>クラス上のヘッダーの一部を設定するためのプロパティがあります。 アプリケーションがこれらのヘッダーを設定する必要がある場合、<xref:System.Net.HttpWebRequest>の代わりにクラスを使用する必要があります、<xref:System.Net.WebRequest>クラス。  
  
 Web サーバーおよびキャッシュ可能性がありますを変更または Web 要求にヘッダーを追加するために、ヘッダーの値を変更せずが残ることを想定する必要があります。  
  
   
  
## Examples  
 次のコード例では、 <xref:System.Net.WebClient.Headers%2A> HTTP に設定するコレクション`Content-Type`ヘッダーを`application/x-www-form-urlencoded,`投稿にデータを形成するサーバーの接続に通知します。  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.Headers" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Net.WebClient.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web 要求を処理中かどうかを取得します。</summary>
        <value>Web 要求を現在処理している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadDataCompleted (e As DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadDataCompleted(System::Net::DownloadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.DownloadDataCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.DownloadDataCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.DownloadDataCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください[クラスへのイベント。](~/docs/standard/events/index.md)  
  
 <xref:System.Net.WebClient.OnDownloadDataCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#4)]
 [!code-csharp[NCLCustomWebClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadFileCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadFileCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.DownloadFileCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.DownloadFileCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnDownloadFileCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#5)]
 [!code-csharp[NCLCustomWebClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadProgressChanged (e As DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadProgressChanged(System::Net::DownloadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit&#xA;override this.OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnDownloadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.DownloadProgressChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.DownloadProgressChanged>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnDownloadProgressChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#12)]
 [!code-csharp[NCLCustomWebClient#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadStringCompleted (e As DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadStringCompleted(System::Net::DownloadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.DownloadStringCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.DownloadStringCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnDownloadStringCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#6)]
 [!code-csharp[NCLCustomWebClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenReadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenReadCompleted (e As OpenReadCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenReadCompleted(System::Net::OpenReadCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit&#xA;override this.OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenReadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.OpenReadCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.OpenReadCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.OpenReadCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnOpenReadCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#7)]
 [!code-csharp[NCLCustomWebClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenWriteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenWriteCompleted (e As OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenWriteCompleted(System::Net::OpenWriteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit&#xA;override this.OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenWriteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.OpenWriteCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnOpenWriteCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#8)]
 [!code-csharp[NCLCustomWebClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadDataCompleted (e As UploadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadDataCompleted(System::Net::UploadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit&#xA;override this.OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.UploadDataCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.UploadDataCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.UploadDataCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnUploadDataCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#9)]
 [!code-csharp[NCLCustomWebClient#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadFileCompleted (e As UploadFileCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadFileCompleted(System::Net::UploadFileCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit&#xA;override this.OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.UploadFileCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.UploadFileCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.UploadFileCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnUploadFileCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#10)]
 [!code-csharp[NCLCustomWebClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadProgressChanged (e As UploadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadProgressChanged(System::Net::UploadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit&#xA;override this.OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnUploadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.UploadProgressChangedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.UploadProgressChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.UploadProgressChanged>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnUploadProgressChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#13)]
 [!code-csharp[NCLCustomWebClient#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#13)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadStringCompleted (e As UploadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadStringCompleted(System::Net::UploadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit&#xA;override this.OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.UploadStringCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.UploadStringCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.UploadStringCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnUploadStringCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#11)]
 [!code-csharp[NCLCustomWebClient#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadValuesCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadValuesCompleted (e As UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadValuesCompleted(System::Net::UploadValuesCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit&#xA;override this.OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadValuesCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.UploadValuesCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.UploadValuesCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできる場合にタスクの追加を実行するメソッド、<xref:System.Net.WebClient.UploadValuesCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Net.WebClient.OnUploadValuesCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生したクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>します。  
  
 [!code-cpp[NCLCustomWebClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#14)]
 [!code-csharp[NCLCustomWebClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStreamClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStreamClosed(class System.Net.WriteStreamClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStreamClosed (e As WriteStreamClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStreamClosed(System::Net::WriteStreamClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit&#xA;override this.OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit" Usage="webClient.OnWriteStreamClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Net.WriteStreamClosedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.WebClient.WriteStreamClosed" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRead">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した URI を持つリソースからダウンロードしたデータの読み取り可能ストリームを開きます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : string -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.String" /> として指定した、データのダウンロード元の URI。</param>
        <summary>
          <see cref="T:System.String" /> として指定した URI を持つリソースからダウンロードしたデータの読み取り可能なストリームを開きます。</summary>
        <returns>リソースからデータを読み取るために使用する <see cref="T:System.IO.Stream" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenRead%2A>メソッドを作成、<xref:System.IO.Stream>によって指定されるリソースの内容を読み取るために使用されるインスタンス、`address`パラメーター。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenReadAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは`null`に追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終わったら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例がで識別されるリソースを開きます`uriString`システム コンソールで、結果を表示します。 なお、<xref:System.IO.Stream>によって返される<xref:System.Net.WebClient.OpenRead%2A>データが読み取られたときに閉じられます。  
  
 [!code-cpp[WebClient_OpenRead#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenRead/CPP/webclient_openread.cpp#1)]
 [!code-csharp[WebClient_OpenRead#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenRead/CS/webclient_openread.cs#1)]
 [!code-vb[WebClient_OpenRead#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenRead/VB/webclient_openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
データのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : Uri -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Uri" /> として指定した、データのダウンロード元の URI。</param>
        <summary>
          <see cref="T:System.Uri" /> として指定した URI を持つリソースからダウンロードしたデータの読み取り可能なストリームを開きます。</summary>
        <returns>リソースからデータを読み取るために使用する <see cref="T:System.IO.Stream" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenRead%2A>メソッドを作成、<xref:System.IO.Stream>によって指定されるリソースの内容を読み取るために使用されるインスタンス、`address`パラメーター。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenReadAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは`null`に追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終わったら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 **注**このメンバーが、アプリケーションでネットワークのトレースを有効にすると、トレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
データのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したリソースを格納している読み取り可能なストリームを開きます。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri -&gt; unit" Usage="webClient.OpenReadAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">取得するリソースの URI。</param>
        <summary>指定したリソースを格納している読み取り可能なストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのアクセスに使用されるインスタンス、`address`パラメーター。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得されます。 ストリームが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenReadCompleted>イベント。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中にブロックを使用して、<xref:System.Net.WebClient.OpenReadAsync%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたリソースの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは`null`に追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> とアドレスを組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri * obj -&gt; unit" Usage="webClient.OpenReadAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">取得するリソースの URI。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定したリソースを格納している読み取り可能なストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのアクセスに使用されるインスタンス、`address`パラメーター。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得されます。 ストリームが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenReadCompleted>イベント。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中にブロックを使用して、<xref:System.Net.WebClient.OpenRead%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたリソースの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは`null`に追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> とアドレスを組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenReadCompletedEventHandler OpenReadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenReadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenReadCompleted As OpenReadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenReadCompletedEventHandler ^ OpenReadCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " Usage="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenReadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リソースを格納しているストリームを開く非同期操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、リソースを含むストリームを開く非同期操作が完了するたびに、発生します。 これらの操作が呼び出しによって開始された、<xref:System.Net.WebClient.OpenReadAsync%2A>メソッド。  
  
 <xref:System.Net.OpenReadCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.OpenReadCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#30](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#30)]
 [!code-csharp[NCLWebClientAsync#30](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#30)]
 [!code-vb[NCLWebClientAsync#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースを含む読み取り可能なストリームを開きます。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">取得するリソースの URI。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースを含む読み取り可能なストリームを開きます。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、リソースからのデータの読み取りに使用される <see cref="T:System.IO.Stream" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ リソースに読み取り可能なストリームが開かれています。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのアクセスに使用されるインスタンス、`address`パラメーター。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたリソースの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは`null`に追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> とアドレスを組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">取得するリソースの URI。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースを含む読み取り可能なストリームを開きます。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、リソースからのデータの読み取りに使用される <see cref="T:System.IO.Stream" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ リソースに読み取り可能なストリームが開かれています。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのアクセスに使用されるインスタンス、`address`パラメーター。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたリソースの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは`null`に追加されます`address`します。  
  
 このメソッドでは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> とアドレスを組み合わせて形成された URI が無効です。  
  
- または - 
リソースのダウンロード中にエラーが発生しました。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWrite">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した URI を持つリソースへデータを書き込むストリームを開きます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <summary>指定したリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns>リソースにデータを書き込むために使用する <see cref="T:System.IO.Stream" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A>メソッドがリソースにデータを送信するために使用する書き込み可能なストリームを返します。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例は、コマンドラインからデータを読み取り、使用して<xref:System.Net.WebClient.OpenWrite%2A>データを書き込むためのストリームを取得します。 なお、<xref:System.IO.Stream>によって返される<xref:System.Net.WebClient.OpenWrite%2A>データが送信された後に終了します。  
  
 [!code-cpp[WebClient_OpenWrite2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite2/CPP/webclient_openwrite2.cpp#1)]
 [!code-csharp[WebClient_OpenWrite2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite2/CS/webclient_openwrite2.cs#1)]
 [!code-vb[WebClient_OpenWrite2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite2/VB/webclient_openwrite2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <summary>指定したリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns>リソースにデータを書き込むために使用する <see cref="T:System.IO.Stream" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A>メソッドがリソースにデータを送信するために使用する書き込み可能なストリームを返します。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <summary>指定したメソッドを使用して、指定したリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns>リソースにデータを書き込むために使用する <see cref="T:System.IO.Stream" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A>メソッドがリソースにデータを送信するために使用する書き込み可能なストリームを返します。 指定されたメソッドを使用して基になる要求が行われた、`method`パラメーター。 データは、ストリームを閉じるときに、サーバーに送信されます。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッド。  
  
 場合、`method`パラメーターが認識されないサーバーによって、基になるプロトコル クラスがどうなるかを判断するメソッドを指定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対アドレスを指定しない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例は、コマンドラインからデータを読み取り、使用して<xref:System.Net.WebClient.OpenWrite%2A>データの書き込みに使用されるストリームを取得します。 なお、<xref:System.IO.Stream>によって返される<xref:System.Net.WebClient.OpenWrite%2A>データを送信して閉じる必要があります。  
  
 [!code-cpp[WebClient_OpenWrite#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite/CPP/webclient_openwrite.cpp#1)]
 [!code-csharp[WebClient_OpenWrite#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite/CS/webclient_openwrite.cs#1)]
 [!code-vb[WebClient_OpenWrite#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite/VB/webclient_openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <summary>指定したメソッドを使用して、指定したリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns>リソースにデータを書き込むために使用する <see cref="T:System.IO.Stream" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A>メソッドがリソースにデータを送信するために使用する書き込み可能なストリームを返します。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したリソースにデータを書き込むためのストリームを開きます。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri -&gt; unit" Usage="webClient.OpenWriteAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <summary>指定したリソースにデータを書き込むためのストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースにデータを送信するために使用する書き込み可能なストリームを取得します。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得します。 ストリームが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenWriteCompleted>イベント。 スレッドがブロックする要求が送信されるまで、ストリームを閉じるときに`address`して応答を受信します。  
  
 このメソッドは、ストリームが開いているときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.OpenWrite%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string -&gt; unit" Usage="webClient.OpenWriteAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <summary>指定したリソースにデータを書き込むためのストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースにデータを送信するために使用する書き込み可能なストリームを取得します。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得します。 ストリームが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenWriteCompleted>イベント。 スレッドがブロックする要求が送信されるまで、ストリームを閉じるときに`address`して応答を受信します。  
  
 このメソッドは、ストリームが開いているときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.OpenWrite%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string * obj -&gt; unit" Usage="webClient.OpenWriteAsync (address, method, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定したメソッドを使用して、指定したリソースにデータを書き込むためのストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースにデータを送信するために使用する書き込み可能なストリームを取得します。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に取得します。 ストリームが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenWriteCompleted>イベント。 ストリームの内容は、ストリームを閉じるときに、サーバーに送信されます。  
  
 場合、`method`パラメーターが認識されないサーバーによって、基になるプロトコル クラスがどうなるかを判断するメソッドを指定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 このメソッドは、ストリームが開いているときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.OpenWrite%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenWriteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenWriteCompleted As OpenWriteCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenWriteCompletedEventHandler ^ OpenWriteCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " Usage="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenWriteCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リソースにデータを書き込むためにストリームを開く非同期操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、リソースへのデータの送信に使用されるストリームを開く非同期操作が完了するたびに、発生します。 これらの操作が呼び出しによって開始された、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッド。  
  
 <xref:System.Net.OpenWriteCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.OpenWriteCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#14)]
 [!code-csharp[NCLWebClientAsync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#14)]
 [!code-vb[NCLWebClientAsync#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースにデータを書き込むストリームを開きます。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースにデータを書き込むストリームを開きます。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、リソースへのデータの書き込みに使用される <see cref="T:System.IO.Stream" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ リソースに書き込み可能なストリームが開かれています。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのデータの書き込みに使用されるインスタンス、`address`パラメーター。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースにデータを書き込むストリームを開きます。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、リソースへのデータの書き込みに使用される <see cref="T:System.IO.Stream" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ リソースに書き込み可能なストリームが開かれています。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのデータの書き込みに使用されるインスタンス、`address`パラメーター。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースにデータを書き込むストリームを開きます。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、リソースへのデータの書き込みに使用される <see cref="T:System.IO.Stream" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ リソースに書き込み可能なストリームが開かれています。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのデータの書き込みに使用されるインスタンス、`address`パラメーター。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 場合、`method`パラメーターが認識されないサーバーによって、基になるプロトコル クラスがどうなるかを判断するメソッドを指定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースにデータを書き込むストリームを開きます。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、リソースへのデータの書き込みに使用される <see cref="T:System.IO.Stream" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ リソースに書き込み可能なストリームが開かれています。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのデータの書き込みに使用されるインスタンス、`address`パラメーター。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 場合、`method`パラメーターが認識されないサーバーによって、基になるプロトコル クラスがどうなるかを判断するメソッドを指定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebClient.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.WebClient" /> オブジェクトが使用するプロキシを取得または設定します。</summary>
        <value>要求の送信に使用する <see cref="T:System.Net.IWebProxy" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Proxy%2A>プロパティを識別、<xref:System.Net.IWebProxy>これの代わりに、リモート サーバーと通信するインスタンス<xref:System.Net.WebClient>オブジェクト。 プロキシは、構成ファイルと、Internet Explorer のローカル エリア ネットワークの設定を使用して、システムによって設定されます。 プロキシを使用しないことを指定するには、設定、<xref:System.Net.WebClient.Proxy%2A>プロパティを`null`します。  
  
 自動プロキシ検出については、次を参照してください。[自動プロキシ検出](~/docs/framework/network-programming/automatic-proxy-detection.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Net.WebClient.Proxy" /> が <see langword="null" /> に設定されます。</exception>
        <permission cref="T:System.Net.WebPermission">制限はありません。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Net.HttpWebResponse" />
        <altmember cref="T:System.Net.FtpWebRequest" />
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
        <altmember cref="T:System.Net.WebProxy" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); void set(System::Collections::Specialized::NameValueCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection with get, set" Usage="System.Net.WebClient.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求に関連付けられているクエリの名前/値ペアのコレクションを取得または設定します。</summary>
        <value>要求に関連付けられているクエリの名前/値ペアを格納する <see cref="T:System.Collections.Specialized.NameValueCollection" />。 要求に関連付けられているペアがない場合、この値は空の <see cref="T:System.Collections.Specialized.NameValueCollection" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.QueryString%2A>プロパティが含まれています、<xref:System.Collections.Specialized.NameValueCollection>クエリ文字列として URI に追加されている名前/値ペアを格納しているインスタンス。 内容、<xref:System.Net.WebClient.QueryString%2A>プロパティには疑問符 (?) が付いて名前/値ペアで区切りを互いからアンパサンド (&)。  
  
   
  
## Examples  
 次のコード例は、コマンドラインからのユーザー入力を受け取るし、ビルドを<xref:System.Collections.Specialized.NameValueCollection>に割り当てられた、<xref:System.Net.WebClient.QueryString%2A>プロパティ。 応答、サーバーからダウンロードをローカル ファイルにします。  
  
 [!code-cpp[WebClient_QueryString#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_QueryString/CPP/webclient_querystring.cpp#1)]
 [!code-csharp[WebClient_QueryString#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_QueryString/CS/webclient_querystring.cs#1)]
 [!code-vb[WebClient_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_QueryString/VB/webclient_querystring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaders">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection ResponseHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection ResponseHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.ResponseHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseHeaders As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ ResponseHeaders { System::Net::WebHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResponseHeaders : System.Net.WebHeaderCollection" Usage="System.Net.WebClient.ResponseHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>応答に関連付けられているヘッダーの名前/値ペアのコレクションを取得します。</summary>
        <value>応答に関連付けられているヘッダーの名前/値ペアを格納する <see cref="T:System.Net.WebHeaderCollection" />。応答が受信されない場合は、<see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.ResponseHeaders%2A>プロパティが含まれています、<xref:System.Net.WebHeaderCollection>ヘッダー情報を含むインスタンス、<xref:System.Net.WebClient>で応答を受信します。  
  
   
  
## Examples  
 次のコード例をダウンロードし、表示、<xref:System.Net.WebClient.ResponseHeaders%2A>サーバーによって返されます。  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#2)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#2)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した URI を持つリソースへデータ バッファーをアップロードします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>URI で識別されたリソースへデータ バッファーをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A>メソッドは、リソースにデータ バッファーを送信します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。 基になる要求は、サーバーによって認識されない、基になるプロトコル クラスはどうなるかを決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 <xref:System.Net.WebClient.UploadData%2A>メソッドのコンテンツを送信する`data`エンコードなしでサーバーにします。 データのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例をコンソールから入力した文字列の変換、<xref:System.Byte>配列し、指定したサーバーを使用して、先の配列を投稿<xref:System.Net.WebClient.UploadData%2A>します。 サーバーからの応答がコンソールに表示されます。  
  
 [!code-cpp[WebClient_UpLoadData2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData2/CPP/webclient_uploaddata2.cpp#1)]
 [!code-csharp[WebClient_UpLoadData2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData2/CS/webclient_uploaddata2.cs#1)]
 [!code-vb[WebClient_UpLoadData2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData2/VB/webclient_uploaddata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="data" /> は <see langword="null" />です。  
  
- または - 
データの送信中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>URI で識別されたリソースへデータ バッファーをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A>メソッドは、リソースにデータ バッファーを送信します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。 基になる要求は、サーバーによって認識されない、基になるプロトコル クラスはどうなるかを決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 <xref:System.Net.WebClient.UploadData%2A>メソッドのコンテンツを送信する`data`エンコードなしでサーバーにします。 データのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="data" /> は <see langword="null" />です。  
  
- または - 
データの送信中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>指定したメソッドを使用して、指定したリソースにデータ バッファーをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A>メソッドで指定された HTTP メソッドを使用してリソースにデータ バッファーを送信する、`method`パラメーター、サーバーからの応答を返します。 データのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッド。  
  
 <xref:System.Net.WebClient.UploadData%2A>メソッドのコンテンツを送信する`data`エンコードなしでサーバーにします。  
  
 場合、`method`パラメーターが認識されないサーバーによって、基になるプロトコル クラスが発生する内容を決定する動詞を指定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例をバイト配列に、コンソールからの入力文字列に変換しを使用して、指定したサーバーに配列<xref:System.Net.WebClient.UploadData%2A>します。 サーバーからの応答がコンソールに表示されます。  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="data" /> は <see langword="null" />です。  
  
- または - 
データのアップロード中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>指定したメソッドを使用して、指定したリソースにデータ バッファーをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A>メソッドで指定された HTTP メソッドを使用してリソースにデータ バッファーを送信する、`method`パラメーター、サーバーからの応答を返します。 データのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッド。  
  
 <xref:System.Net.WebClient.UploadData%2A>メソッドのコンテンツを送信する`data`エンコードなしでサーバーにします。  
  
 場合、`method`パラメーターが認識されないサーバーによって、基になるプロトコル クラスが発生する内容を決定する動詞を指定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="data" /> は <see langword="null" />です。  
  
- または - 
データのアップロード中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>URI で識別されたリソースへデータ バッファーをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>POST メソッドを使用して、URI で識別されたリソースにデータ バッファーをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。 データのアップロードが完了したら通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.UploadDataCompleted>イベント。  
  
 このメソッドは、データの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にデータとブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadData%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>指定されたメソッドを使用して、URI で指定されたリソースにデータ バッファーをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。 データのアップロードが完了したら通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.UploadDataCompleted>イベント。  
  
 このメソッドは、データの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にデータとブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadData%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] * obj -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定されたメソッドと識別トークンを使用して、URI で指定されたリソースにデータ バッファーをアップロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。 データのアップロードが完了したら通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.UploadDataCompleted>イベント。  
  
 このメソッドは、データの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にデータとブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadData%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadDataCompletedEventHandler UploadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadDataCompleted As UploadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadDataCompletedEventHandler ^ UploadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " Usage="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のデータ アップロード操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、非同期のデータ アップロード操作が完了するたびに、発生します。 非同期データ アップロードは呼び出すことによって、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッド。  
  
 <xref:System.Net.UploadDataCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.UploadDataCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#36](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#36)]
 [!code-csharp[NCLWebClientAsync#36](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#36)]
 [!code-vb[NCLWebClientAsync#36](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI への<see cref="T:System.Byte" /> 配列を含むデータ バッファーをアップロードします。  これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI への<see cref="T:System.Byte" /> 配列を含むデータ バッファーをアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、データ バッファーがアップロードされたときにリソースから受け取った応答本体を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、リソースにデータ バッファーがアップロードされました。  
  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI への<see cref="T:System.Byte" /> 配列を含むデータ バッファーをアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、データ バッファーがアップロードされたときにリソースから受け取った応答本体を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、リソースにデータ バッファーがアップロードされました。  
  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI への<see cref="T:System.Byte" /> 配列を含むデータ バッファーをアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、データ バッファーがアップロードされたときにリソースから受け取った応答本体を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、リソースにデータ バッファーがアップロードされました。  
  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信するリソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定された URI への<see cref="T:System.Byte" /> 配列を含むデータ バッファーをアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、データ バッファーがアップロードされたときにリソースから受け取った応答本体を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、リソースにデータ バッファーがアップロードされました。  
  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した URI を持つリソースへローカル ファイルをアップロードします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 ftp://localhost/samplefile.txt など。</param>
        <param name="fileName">リソースに送信するファイル。 "samplefile.txt" など。</param>
        <summary>指定した URI を持つリソースへ指定したローカル ファイルをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A>メソッドは、ローカル ファイルをリソースに送信します。 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
 ファイルのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッド。  
  
 `POST`メソッドは、HTTP によって定義されます。 基になる要求が HTTP を使用しない場合、`POST`が認識されないサーバーによって、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例を使用して指定された URI に指定されたファイルをアップロードする<xref:System.Net.WebClient.UploadFile%2A>します。 サーバーによって返されるすべての応答がコンソールに表示されます。  
  
 [!code-cpp[WebClient_UpLoadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile/CPP/webclient_uploadfile.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile/CS/webclient_uploadfile.cs#1)]
 [!code-vb[WebClient_UpLoadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile/VB/webclient_uploadfile.vb#1)]  
  
 次のコード例がポストされたファイルを受け入れることができる、ASP.NET ページを表示しで使用に適しています、<xref:System.Net.WebClient.UploadFile%2A>メソッド。 ページは、Web サーバー上に存在する必要があります。 そのアドレスの値を提供する、`address`のパラメーター、<xref:System.Net.WebClient.UploadFile%2A>メソッド。  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字が含まれています。または、fileName が存在しません。  
  
- または - 
ファイルのアップロード中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 ftp://localhost/samplefile.txt など。</param>
        <param name="fileName">リソースに送信するファイル。 "samplefile.txt" など。</param>
        <summary>指定した URI を持つリソースへ指定したローカル ファイルをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A>メソッドは、ローカル ファイルをリソースに送信します。 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
 ファイルのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッド。  
  
 `POST`メソッドは、HTTP によって定義されます。 基になる要求が HTTP を使用しない場合、`POST`が認識されないサーバーによって、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字が含まれています。または、fileName が存在しません。  
  
- または - 
ファイルのアップロード中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。</param>
        <param name="method">リソースにファイルを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <summary>指定したメソッドを使用して、指定したリソースに指定したローカル ファイルをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アドレスは、HTTP リソースを指定する場合、<xref:System.Net.WebClient.UploadFile%2A>メソッドで指定された HTTP メソッドを使用してリソースにローカル ファイルを送信する、`method`パラメーターをサーバーからの応答を返します。 ファイルのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッド。  
  
 場合、`method`パラメーター指定の動詞がサーバーで認識されませんが、または`address`リソース、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例を使用して指定された URI に指定されたファイルをアップロードする<xref:System.Net.WebClient.UploadFile%2A>します。 サーバーによって返されるすべての応答がコンソールに表示されます。  
  
 [!code-cpp[WebClient_UpLoadFile2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CPP/webclient_uploadfile2.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CS/webclient_uploadfile2.cs#1)]
 [!code-vb[WebClient_UpLoadFile2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile2/VB/webclient_uploadfile2.vb#1)]  
  
 次のコード例がポストされたファイルを受け入れることができる、ASP.NET ページを表示しで使用に適しています、<xref:System.Net.WebClient.UploadFile%2A>メソッド。 ページは、Web サーバー上に存在する必要があります。 そのアドレスの値を提供する、`address`のパラメーター、<xref:System.Net.WebClient.UploadFile%2A>メソッド。  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字が含まれています。または、fileName が存在しません。  
  
- または - 
ファイルのアップロード中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。</param>
        <param name="method">リソースにファイルを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <summary>指定したメソッドを使用して、指定したリソースに指定したローカル ファイルをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アドレスは、HTTP リソースを指定する場合、<xref:System.Net.WebClient.UploadFile%2A>メソッドで指定された HTTP メソッドを使用してリソースにローカル ファイルを送信する、`method`パラメーターをサーバーからの応答を返します。 ファイルのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッド。  
  
 場合、`method`パラメーター指定の動詞がサーバーで認識されませんが、または`address`リソース、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字が含まれています。または、fileName が存在しません。  
  
- または - 
ファイルのアップロード中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したリソースに指定したローカル ファイルをアップロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string -&gt; unit" Usage="webClient.UploadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <summary>POST メソッドを使用して、指定したリソースに指定したローカル ファイルをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 ファイルのアップロードが完了したら通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.UploadFileCompleted>イベント。  
  
 このメソッドは、ファイルの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にファイルとブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFile%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字を含んでいます。または、指定したファイルへのパスが見つかりません。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <summary>POST メソッドを使用して、指定したリソースに指定したローカル ファイルをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 ファイルのアップロードが完了したら通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.UploadFileCompleted>イベント。  
  
 このメソッドは、ファイルの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にファイルとブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFile%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字を含んでいます。または、指定したファイルへのパスが見つかりません。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>POST メソッドを使用して、指定したリソースに指定したローカル ファイルをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 ファイルのアップロードが完了したら通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.UploadFileCompleted>イベント。  
  
 このメソッドは、ファイルの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にファイルとブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFile%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字を含んでいます。または、指定したファイルへのパスが見つかりません。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadFileCompletedEventHandler UploadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadFileCompleted As UploadFileCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadFileCompletedEventHandler ^ UploadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " Usage="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadFileCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のファイル アップロード操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、非同期のファイルのアップロード操作が完了するたびに、発生します。 非同期のファイルのアップロードが呼び出しによって開始された、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッド。  
  
 <xref:System.Net.UploadFileCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.UploadFileCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたローカル ファイルをリソースにアップロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="fileName">リソースに送信するローカル ファイル。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたローカル ファイルをリソースにアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、ファイルがアップロードされたときにリソースから受け取った応答本体を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、リソースにファイルがアップロードされた後に完了します。 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字を含んでいます。または、指定したファイルへのパスが見つかりません。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="fileName">リソースに送信するローカル ファイル。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたローカル ファイルをリソースにアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、ファイルがアップロードされたときにリソースから受け取った応答本体を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、リソースにファイルがアップロードされた後に完了します。 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字を含んでいます。または、指定したファイルへのパスが見つかりません。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="fileName">リソースに送信するローカル ファイル。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたローカル ファイルをリソースにアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、ファイルがアップロードされたときにリソースから受け取った応答本体を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、リソースにファイルがアップロードされた後に完了します。 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 既定では、このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字を含んでいます。または、指定したファイルへのパスが見つかりません。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 <see langword="null" /> の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="fileName">リソースに送信するローカル ファイル。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたローカル ファイルをリソースにアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、ファイルがアップロードされたときにリソースから受け取った応答本体を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、リソースにファイルがアップロードされた後に完了します。 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 既定では、このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="fileName" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、無効な文字を含んでいます。または、指定したファイルへのパスが見つかりません。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="multipart" /> で始まっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadProgressChangedEventHandler UploadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadProgressChanged As UploadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadProgressChangedEventHandler ^ UploadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " Usage="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期アップロード操作で、データの一部またはすべてが正常に送信された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、非同期のアップロードの進行状況は、毎回が発生します。 次の方法のいずれかを使用してアップロードが開始されたときに、このイベントが発生します。  
  
|メソッド|説明|  
|------------|-----------------|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|送信、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなく、リソースへの配列。|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|呼び出し元のスレッドをブロックすることがなく、リソースへのローカル ファイルを送信します。|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|送信、<xref:System.Collections.Specialized.NameValueCollection>リソースを返す、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなく、すべての応答を含む配列。|  
  
 <xref:System.Net.UploadProgressChangedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.UploadProgressChangedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 次のコード例では、このイベントのハンドラーの実装を示します。  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したリソースに指定した文字列をアップロードします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>POST メソッドを使用して、指定したリソースに指定した文字列をアップロードします。</summary>
        <returns>サーバーが送信した応答を格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 このメソッドは、文字列の送信中にブロックします。 文字列を送信し、サーバーの応答の待機中に実行を継続してのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、このメソッドの呼び出しを示しています。  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>POST メソッドを使用して、指定したリソースに指定した文字列をアップロードします。</summary>
        <returns>サーバーが送信した応答を格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 このメソッドは、文字列の送信中にブロックします。 文字列を送信し、サーバーの応答の待機中に実行を継続してのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、および`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 この URI は、<c>method</c> メソッドで送信される要求を受け入れることができるリソースを示している必要があります。</param>
        <param name="method">リソースに文字列を送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>指定したメソッドを使用して、指定したリソースに指定した文字列をアップロードします。</summary>
        <returns>サーバーが送信した応答を格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 このメソッドは、文字列の送信中にブロックします。 文字列を送信し、サーバーの応答の待機中に実行を継続してのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、このメソッドの呼び出しを示しています。  
  
 [!code-cpp[NCLWebClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#2)]
 [!code-csharp[NCLWebClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#2)]
 [!code-vb[NCLWebClientAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 この URI は、<c>method</c> メソッドで送信される要求を受け入れることができるリソースを示している必要があります。</param>
        <param name="method">リソースに文字列を送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>指定したメソッドを使用して、指定したリソースに指定した文字列をアップロードします。</summary>
        <returns>サーバーが送信した応答を格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 このメソッドは、文字列の送信中にブロックします。 文字列を送信し、サーバーの応答の待機中に実行を継続してのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したリソースに指定した文字列をアップロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string -&gt; unit" Usage="webClient.UploadStringAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>指定したリソースに指定した文字列をアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへの文字列を送信します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 イベント ハンドラーを追加する文字列のアップロードが完了したら通知を受信する、<xref:System.Net.WebClient.UploadStringCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、文字列とブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadString%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="method">リソースにファイルを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>指定したリソースに指定した文字列をアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへの文字列を送信します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 イベント ハンドラーを追加する文字列のアップロードが完了したら通知を受信する、<xref:System.Net.WebClient.UploadStringCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、文字列とブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadString%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="method">リソースにファイルを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">アップロードする文字列。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定したリソースに指定した文字列をアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへの文字列を送信します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 イベント ハンドラーを追加する文字列のアップロードが完了したら通知を受信する、<xref:System.Net.WebClient.UploadStringCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、文字列とブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadString%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadStringCompletedEventHandler UploadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadStringCompleted As UploadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadStringCompletedEventHandler ^ UploadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " Usage="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期の文字列アップロード操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、非同期の文字列アップロード操作が完了するたびに、発生します。 非同期の文字列アップロードは呼び出すことによって、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッド。  
  
 <xref:System.Net.UploadStringCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.UploadStringCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#38](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#38)]
 [!code-csharp[NCLWebClientAsync#38](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#38)]
 [!code-vb[NCLWebClientAsync#38](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースに指定された文字列をアップロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースに指定された文字列をアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、サーバーから送信された応答を含む <see cref="T:System.String" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、文字列がリソースにアップロードされた後、完了します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 このメソッドは、文字列の送信中にブロックします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースに指定された文字列をアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、サーバーから送信された応答を含む <see cref="T:System.String" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、文字列がリソースにアップロードされた後、完了します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 このメソッドは、文字列の送信中にブロックします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="method">リソースにファイルを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースに指定された文字列をアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、サーバーから送信された応答を含む <see cref="T:System.String" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、文字列がリソースにアップロードされた後、完了します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 このメソッドは、文字列の送信中にブロックします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合、この URI は POST メソッドを使用して送信される要求を受け入れることができるリソース (スクリプトや ASP ページなど) を識別するものであることが必要です。</param>
        <param name="method">リソースにファイルを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定されたリソースに指定された文字列をアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、サーバーから送信された応答を含む <see cref="T:System.String" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、文字列がリソースにアップロードされた後、完了します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 このメソッドは、文字列の送信中にブロックします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValues">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した URI を持つリソースへ名前/値コレクションをアップロードします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>指定した URI で識別されるリソースに指定した名前/値コレクションをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A>メソッド送信、<xref:System.Collections.Specialized.NameValueCollection>サーバーにします。 データのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッド。  
  
 基になる要求は、サーバーによって認識されない、基になるプロトコル クラスはどうなるかを決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 Content-type ヘッダーが場合`null`、<xref:System.Net.WebClient.UploadValues%2A>メソッドが"application/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例 (名前、年齢、およびアドレス) のユーザーから情報を収集し、値を使用してサーバーをポスト<xref:System.Net.WebClient.UploadValues%2A>します。 サーバーからの応答がコンソールに表示されます。  
  
 [!code-cpp[WebClient_UploadValues#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues/CPP/webclient_uploadvalues.cpp#1)]
 [!code-csharp[WebClient_UploadValues#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues/CS/webclient_uploadvalues.cs#1)]
 [!code-vb[WebClient_UploadValues#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues/VB/webclient_uploadvalues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="data" /> は <see langword="null" />です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="null" /> または "application/x-www-form-urlencoded" ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>指定した URI で識別されるリソースに指定した名前/値コレクションをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A>メソッド送信、<xref:System.Collections.Specialized.NameValueCollection>サーバーにします。 データのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッド。  
  
 基になる要求は、サーバーによって認識されない、基になるプロトコル クラスはどうなるかを決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 Content-type ヘッダーが場合`null`、<xref:System.Net.WebClient.UploadValues%2A>メソッドが"application/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="data" /> は <see langword="null" />です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="null" /> または "application/x-www-form-urlencoded" ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。</param>
        <param name="method">リソースにファイルを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>指定したメソッドを使用して、指定した URI で識別されるリソースに指定した名前/値コレクションをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A>メソッド送信、<xref:System.Collections.Specialized.NameValueCollection>で指定されたメソッドを使用してリソースに、`method`パラメーターをサーバーからの応答を返します。 データのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッド。  
  
 場合、`Content-type`ヘッダーが`null`、<xref:System.Net.WebClient.UploadValues%2A>メソッドに設定`application/x-www-form-urlencoded`します。  
  
 場合、`method`パラメーターが認識されないサーバーによって、基になるプロトコル クラスが発生する内容を決定する動詞を指定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例 (名前、年齢、およびアドレス) のユーザーから情報を収集し、値を使用してサーバーをポスト<xref:System.Net.WebClient.UploadValues%2A>します。 サーバーからの応答がコンソールに表示されます。  
  
 [!code-cpp[WebClient_UploadValues2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues2/CPP/webclient_uploadvalues2.cpp#1)]
 [!code-csharp[WebClient_UploadValues2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues2/CS/webclient_uploadvalues2.cs#1)]
 [!code-vb[WebClient_UploadValues2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues2/VB/webclient_uploadvalues2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="data" /> は <see langword="null" />です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダー値が <see langword="null" /> ではなく、<see langword="application/x-www-form-urlencoded" /> でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。</param>
        <param name="method">リソースにファイルを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>指定したメソッドを使用して、指定した URI で識別されるリソースに指定した名前/値コレクションをアップロードします。</summary>
        <returns>リソースからの応答の本文を格納している <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A>メソッド送信、<xref:System.Collections.Specialized.NameValueCollection>で指定されたメソッドを使用してリソースに、`method`パラメーターをサーバーからの応答を返します。 データのアップロード中に、このメソッドはブロックします。 サーバーの応答の待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッド。  
  
 場合、`Content-type`ヘッダーが`null`、<xref:System.Net.WebClient.UploadValues%2A>メソッドに設定`application/x-www-form-urlencoded`します。  
  
 場合、`method`パラメーターが認識されないサーバーによって、基になるプロトコル クラスが発生する内容を決定する動詞を指定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="data" /> は <see langword="null" />です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダー値が <see langword="null" /> ではなく、<see langword="application/x-www-form-urlencoded" /> でもありません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した URI で識別されるリソースに指定した名前/値コレクションをアップロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。 この URI は、既定のメソッドを使用して送信される要求を受け入れることができるリソースを識別するものであることが必要です。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>指定した URI で識別されるリソースに指定した名前/値コレクションのデータをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへの文字列を送信します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 このメソッドでは、文字列をアップロードする前に変換して、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティ。 イベント ハンドラーを追加する文字列のアップロードが完了したら通知を受信する、<xref:System.Net.WebClient.UploadStringCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、文字列とブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadString%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。 この URI は、<c>method</c> メソッドで送信される要求を受け入れることができるリソースを示している必要があります。</param>
        <param name="method">リソースに文字列を送信するために使用するメソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>指定したメソッドを使用して、指定した URI で識別されるリソースに、指定した名前/値コレクションのデータをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドに含まれるデータの送信、<xref:System.Collections.Specialized.NameValueCollection>を`address`リソース。 このメソッドを使用して、フォーム データを処理するための URI に送信します。 メディアの種類が url エンコード フォーム; を使用してデータを送信します。Content-type ヘッダーの値は、"application/x-www-form-urlencoded"に設定する必要があります。 ヘッダーは、既定で正しく設定されています。 <xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドをスローする<xref:System.Net.WebException>が別のコンテンツ タイプ ヘッダー値セットでは、このメソッドを呼び出す場合、<xref:System.Net.WebClient.Headers%2A>コレクション。  
  
 場合、`method`メソッドが認識されないサーバーによって、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 <xref:System.Collections.Specialized.NameValueCollection>スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 アップロード操作の完了時に通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadValuesCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、文字列とブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadValues%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空でないに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection * obj -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。 この URI は、<c>method</c> メソッドで送信される要求を受け入れることができるリソースを示している必要があります。</param>
        <param name="method">リソースに文字列を送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定したメソッドを使用して、指定した URI で識別されるリソースに、指定した名前/値コレクションのデータをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしません。また、呼び出し元は、操作の完了時に呼び出されるメソッドにオブジェクトを渡すことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドに含まれるデータの送信、<xref:System.Collections.Specialized.NameValueCollection>を`address`リソース。 このメソッドを使用して、フォーム データを処理するための URI に送信します。 メディアの種類が url エンコード フォーム; を使用してデータを送信します。Content-type ヘッダーの値は、"application/x-www-form-urlencoded"に設定する必要があります。 ヘッダーは、既定で正しく設定されています。 <xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドをスローする<xref:System.Net.WebException>が別のコンテンツ タイプ ヘッダー値セットでは、このメソッドを呼び出す場合、<xref:System.Net.WebClient.Headers%2A>コレクション。  
  
 場合、`method`メソッドが認識されないサーバーによって、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 <xref:System.Collections.Specialized.NameValueCollection>スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 アップロード操作の完了時に通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadValuesCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、文字列とブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadValues%2A>メソッド。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空でないに追加されます`address`します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadValuesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadValuesCompleted As UploadValuesCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadValuesCompletedEventHandler ^ UploadValuesCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " Usage="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadValuesCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>名前/値コレクションの非同期アップロードの完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、非同期のアップロードのたびに、<xref:System.Collections.Specialized.NameValueCollection>オブジェクトのデータが完了します。 これらのアップロードは呼び出すことによって、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッド。  
  
 <xref:System.Net.UploadValuesCompletedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.UploadValuesCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>タスク オブジェクトを使用した非同期操作として指定した URI で識別されるリソースに、指定した名前/値コレクションをアップロードします。 これらのメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定した URI で識別されるリソースに、指定した名前/値コレクションをアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、サーバーから送信された応答を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、名前/値コレクションがリソースにアップロードされた後に完了します。 名前/値コレクションは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 基になる要求は、サーバーによって認識されない、基になるプロトコル クラスはどうなるかを決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 Content-type ヘッダーが場合`null`、このメソッドが"application/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="null" /> または "application/x-www-form-urlencoded" ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定した URI で識別されるリソースに、指定した名前/値コレクションをアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、サーバーから送信された応答を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、名前/値コレクションがリソースにアップロードされた後に完了します。 名前/値コレクションは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 基になる要求は、サーバーによって認識されない、基になるプロトコル クラスはどうなるかを決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 Content-type ヘッダーが場合`null`、このメソッドが"application/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
<see langword="Content-type" /> ヘッダー値が <see langword="null" /> ではなく、<see langword="application/x-www-form-urlencoded" /> でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。</param>
        <param name="method">リソースにコレクションを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定した URI で識別されるリソースに、指定した名前/値コレクションをアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、サーバーから送信された応答を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、名前/値コレクションがリソースにアップロードされた後に完了します。 名前/値コレクションは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 基になる要求は、サーバーによって認識されない、基になるプロトコル クラスはどうなるかを決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 Content-type ヘッダーが場合`null`、このメソッドが"application/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="null" /> または "application/x-www-form-urlencoded" ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信するリソースの URI。</param>
        <param name="method">リソースにコレクションを送信するために使用する HTTP メソッド。 null の場合、http の既定値は POST、ftp の既定値は STOR です。</param>
        <param name="data">リソースに送信する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>タスク オブジェクトを使用した非同期操作として指定した URI で識別されるリソースに、指定した名前/値コレクションをアップロードします。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、サーバーから送信された応答を含む <see cref="T:System.Byte" /> 配列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、名前/値コレクションがリソースにアップロードされた後に完了します。 名前/値コレクションは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して、完了していない非同期操作をキャンセルすることができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッド。  
  
 基になる要求は、サーバーによって認識されない、基になるプロトコル クラスはどうなるかを決定します。 通常、<xref:System.Net.WebException>がスローされ、<xref:System.Net.WebException.Status%2A>プロパティをエラーを示す設定。  
  
 Content-type ヘッダーが場合`null`、このメソッドが"application/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは空の文字列ではありませんに追加されます`address`します。  
  
 このメソッドは、FTP リソースをアップロードするのに STOR コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> および <paramref name="address" /> を組み合わせて形成された URI が無効です。  
  
- または - 
 <paramref name="method" /> を使用してコンテンツを送信することはできません。  
  
- または - 
リソースをホストしているサーバーから応答がありませんでした。  
  
- または - 
ストリームのオープン中にエラーが発生しました。  
  
- または - 
<see langword="Content-type" /> ヘッダーが <see langword="null" /> または "application/x-www-form-urlencoded" ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Boolean" /> が要求と共に送信されるかどうかを制御する <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 値を取得または設定します。</summary>
        <value>既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定`true`この要求を行ったとき<xref:System.Net.WebClient>オブジェクト認証が必要で、サーバーから要求された場合、現在ログオンしているユーザーの既定の資格情報を使用しています。 クライアント アプリケーションは、これはほとんどのシナリオでは、目的の動作です。 設定する通常、このプロパティを使用する代わりに、ASP.NET アプリケーションなどの中間層アプリケーションの<xref:System.Net.WebClient.Credentials%2A>プロパティを要求が行われる要因となったクライアントの資格情報。  
  
   
  
## Examples  
 次のコード例では、このプロパティの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#3)]
 [!code-csharp[NCLWebClientAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#3)]
 [!code-vb[NCLWebClientAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamClosed">
      <MemberSignature Language="C#" Value="public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.WriteStreamClosedEventHandler WriteStreamClosed" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.WriteStreamClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WriteStreamClosed As WriteStreamClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::WriteStreamClosedEventHandler ^ WriteStreamClosed;" />
      <MemberSignature Language="F#" Value="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " Usage="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WriteStreamClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>書き込みストリームを使ってリソースにデータを書き込むための非同期操作が終了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントには、毎回の書き込みストリームを使用してリソースにデータを書き込むために使用する非同期操作の終了が発生します。 これらの操作が呼び出しの結果として、<xref:System.Net.WebClient.OpenWriteTaskAsync%2A>メソッド。  
  
 <xref:System.Net.WriteStreamClosedEventHandler>はこのイベントのデリゲートです。 <xref:System.Net.WriteStreamClosedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>