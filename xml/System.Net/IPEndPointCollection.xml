<Type Name="IPEndPointCollection" FullName="System.Net.IPEndPointCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fdc5ca2cb97d8b0a8482bdf56c3fae0d37186104" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70717407" /></Metadata><TypeSignature Language="C#" Value="public class IPEndPointCollection : System.Collections.ObjectModel.Collection&lt;System.Net.IPEndPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IPEndPointCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Net.IPEndPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Net.IPEndPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class IPEndPointCollection&#xA;Inherits Collection(Of IPEndPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPEndPointCollection : System::Collections::ObjectModel::Collection&lt;System::Net::IPEndPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type IPEndPointCollection = class&#xA;    inherit Collection&lt;IPEndPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Net.IPEndPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Net.IPEndPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ネットワーク エンドポイントを <see cref="T:System.Net.IPEndPoint" /> オブジェクトとして格納するために使用されるコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスは、 <xref:System.Collections.ObjectModel.Collection%601?displayProperty=nameWithType>クラスから派生します。 <xref:System.Net.IPEndPointCollection>  
  
 クラス<xref:System.Net.IPEndPoint>には、ホスト、およびホスト上のサービスに接続するためにアプリケーションが必要とするローカルまたはリモートのポート情報が含まれています。 サービスのホストの IP アドレスとポート番号を組み合わせることにより、 <xref:System.Net.IPEndPoint>クラスはサービスへのコネクションポイントを形成します。  
  
 クラスは、 <xref:System.Net.PeerToPeer?displayProperty=nameWithType>名前空間のクラスによって使用されます。 <xref:System.Net.IPEndPointCollection>  
  
 ]]></format>
    </remarks>
    <threadsafe>パブリック静的 (Visual Basic では<see langword="Shared" />) なこの型のメンバーはスレッド セーフです インスタンス メンバーの場合は、スレッド セーフであるとは限りません。  
  
は<see cref="T:System.Net.IPEndPointCollection" /> 、コレクションが変更されていない限り、複数のリーダーを同時にサポートできます。 それでも、コレクションを列挙することは、本質的にはスレッドセーフなプロシージャではありません。 列挙処理でスレッド セーフを確保するために、列挙処理が終わるまでコレクションをロックできます。 コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPointCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPointCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.IPEndPointCollection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Net.IPEndPoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Net.IPEndPoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Net::IPEndPoint ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Net.IPEndPoint -&gt; unit" Usage="iPEndPointCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="index"><paramref name="item" /> を挿入する位置の、0 から始まるインデックス。</param>
        <param name="item">挿入する <see cref="T:System.Net.IPEndPoint" /> オブジェクト。 参照型の場合は <see langword="null" /> の値を使用できます。</param>
        <summary><see cref="T:System.Net.IPEndPoint" /> の指定のインデックス位置に <see cref="T:System.Net.IPEndPointCollection" /> 要素を挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IPEndPointCollection>は、有効`null`な値としてを受け入れません。 <xref:System.Net.IPEndPointCollection>重複する要素を許可します。  
  
 が`index` `item`内の項目の現在の数と等しい場合は、の<xref:System.Net.IPEndPointCollection>末尾にが追加されます。 <xref:System.Net.IPEndPointCollection>  
  
 このメソッドは O(`n`) 操作です。`n`は <xref:System.Collections.ObjectModel.Collection%601.Count%2A?displayProperty=nameWithType> です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> パラメーターが 0 未満です。 
- または - 
<paramref name="index" /> パラメーターが <see cref="T:System.Net.IPEndPointCollection" /> 内の現在の項目数を超える値です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Net.IPEndPoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Net.IPEndPoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Net::IPEndPoint ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Net.IPEndPoint -&gt; unit" Usage="iPEndPointCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="index">置き換える要素の 0 から始まるインデックス番号。</param>
        <param name="item">指定したインデックス位置に存在する要素の新しい <see cref="T:System.Net.IPEndPoint" /> 値。 参照型の場合は <see langword="null" /> の値を使用できます。</param>
        <summary>指定したインデックス位置にある <see cref="T:System.Net.IPEndPoint" /> 要素を置き換えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IPEndPointCollection>は、有効`null`な値としてを受け入れません。 <xref:System.Net.IPEndPointCollection>重複する要素を許可します。  
  
 このメソッドは、O(1) 操作です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> パラメーターが 0 未満です。 
または 
<paramref name="index" /> パラメーターが <see cref="T:System.Net.IPEndPointCollection" /> 内の現在の項目数を超える値です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
