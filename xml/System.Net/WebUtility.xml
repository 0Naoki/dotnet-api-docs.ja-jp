<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00077ce3265b7c9b8c9786ed662a0c1ce1775cb1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449476" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dedce-101">Web 要求を処理する際、URL のエンコーディングおよびデコーディングのメソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dedce-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-102"><xref:System.Web.HttpUtility>クラスには、エンコードとデコード HTML エンコード文字列で使用するためのユーティリティ メソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="dedce-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="dedce-103"><xref:System.Uri?displayProperty=nameWithType>クラスは、メソッドと同様の目的に使用できるプロパティも含まれます。</span><span class="sxs-lookup"><span data-stu-id="dedce-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dedce-104">HTTP での転送用に HTML でエンコードされた文字列をデコードされた文字列に変換します。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dedce-105">デコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-105">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dedce-106">HTTP での転送用に HTML でエンコードされた文字列をデコードされた文字列に変換します。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dedce-107">デコード後の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-107">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-108">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dedce-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dedce-109">HTML エンコーディングは、HTML では使用できない文字エン ティティに変換します。HTML デコード、エンコードを反転します。</span><span class="sxs-lookup"><span data-stu-id="dedce-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="dedce-110">文字のテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`&lt;`と`&gt;`HTTP 伝送用です。</span><span class="sxs-lookup"><span data-stu-id="dedce-110">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="dedce-111">場合、`value`パラメーターが`null`、返されるのデコードされた文字列は`null`します。</span><span class="sxs-lookup"><span data-stu-id="dedce-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="dedce-112">場合、`value`パラメーターは空の文字列、返されるのデコードされた文字列が空の文字列。</span><span class="sxs-lookup"><span data-stu-id="dedce-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dedce-113">デコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-113">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="dedce-114">
            <see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dedce-115">HTML エンコードされた文字列を、デコードされた文字列に変換し、デコードされたその文字列を <see cref="T:System.IO.TextWriter" /> 出力ストリームに送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-116">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dedce-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dedce-117">HTML エンコーディングは、HTML では使用できない文字エン ティティに変換します。HTML デコード、エンコードを反転します。</span><span class="sxs-lookup"><span data-stu-id="dedce-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="dedce-118">文字のテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`&lt;`と`&gt;`HTTP 伝送用です。</span><span class="sxs-lookup"><span data-stu-id="dedce-118">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dedce-119">
            <paramref name="output" /> パラメーターが <see langword="null" /> でない場合、<paramref name="value" /> パラメーターは <see langword="null" /> にできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dedce-120">文字列を HTML エンコードされた文字列に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-120">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dedce-121">エンコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-121">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dedce-122">文字列を HTML エンコードされた文字列に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-122">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dedce-123">エンコードされた文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-123">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-124">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dedce-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dedce-125">HTML エンコーディングは、HTML では使用できない文字エン ティティに変換します。HTML デコード、エンコードを反転します。</span><span class="sxs-lookup"><span data-stu-id="dedce-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="dedce-126">文字のテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`&lt;`と`&gt;`HTTP 伝送用です。</span><span class="sxs-lookup"><span data-stu-id="dedce-126">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="dedce-127">場合、`value`パラメーターが`null`、返される、エンコードされた文字列は`null`します。</span><span class="sxs-lookup"><span data-stu-id="dedce-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="dedce-128">場合、`value`パラメーターは空の文字列、返される、エンコードされた文字列が空の文字列。</span><span class="sxs-lookup"><span data-stu-id="dedce-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dedce-129">エンコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-129">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="dedce-130">
            <see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dedce-131">文字列を HTML エンコードされた文字列に変換し、出力の <see cref="T:System.IO.TextWriter" /> ストリームとして出力を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-132">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dedce-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dedce-133">HTML エンコーディングは、HTML では使用できない文字エン ティティに変換します。HTML デコード、エンコードを反転します。</span><span class="sxs-lookup"><span data-stu-id="dedce-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="dedce-134">文字のテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`&lt;`と`&gt;`HTTP 伝送用です。</span><span class="sxs-lookup"><span data-stu-id="dedce-134">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dedce-135">
            <paramref name="output" /> パラメーターが <see langword="null" /> でない場合、<paramref name="value" /> パラメーターは <see langword="null" /> にできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="dedce-136">デコード対象となる URL エンコードされた文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-136">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dedce-137">URL での転送用にエンコードされた文字列をデコードされた文字列に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dedce-138">デコード後の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-138">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-139">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dedce-139">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dedce-140">URL エンコードには、等価の 16 進数のエスケープ シーケンスに、URL で許可されていない文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="dedce-140">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="dedce-141"><xref:System.Net.WebUtility.UrlEncode%2A>メソッドは、URL でエンコードされた文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="dedce-141">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="dedce-142">URL デコードすると、対応する ASCII 文字の値を 16 進数のエスケープ シーケンスが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="dedce-142">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="dedce-143">たとえば、URL でエンコードされたテキストのブロックに埋め込まれているときに、エスケープ シーケンス`%3c`と`%3e`文字には、デコード`<`と`>`します。</span><span class="sxs-lookup"><span data-stu-id="dedce-143">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="dedce-144">デコード対象となる URL エンコードされた <see cref="T:System.Byte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-144">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="dedce-145">デコードする <see cref="T:System.Byte" /> 配列の先頭からのオフセット (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-145">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dedce-146">
            <see cref="T:System.Byte" /> の配列からデコードするバイト数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-146">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dedce-147">URL 内で伝送する目的でエンコードされたバイト配列を、デコードされたバイト配列に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-147">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dedce-148">デコードされた <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-148">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-149">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dedce-149">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dedce-150">URL エンコードには、等価の 16 進数のエスケープ シーケンスに、URL で許可されていない文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="dedce-150">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="dedce-151"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A>メソッドは、URL でエンコードされたバイト配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="dedce-151">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="dedce-152">URL デコードすると、対応する ASCII 文字の値を 16 進数のエスケープ シーケンスが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="dedce-152">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="dedce-153">たとえば、URL でエンコードされたテキストのブロックに埋め込まれているときに、エスケープ シーケンス`%3c`と`%3e`文字には、デコード`<`と`>`します。</span><span class="sxs-lookup"><span data-stu-id="dedce-153">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dedce-154">URL エンコードするテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-154">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dedce-155">テキスト文字列を URL エンコードされた文字列に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-155">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dedce-156">URL エンコードされた文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-156">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-157">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dedce-157">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dedce-158">URL エンコードには、文字エン ティティの 16 進数のエスケープ シーケンスで構成されると、URL で許可されていない文字が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="dedce-158">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="dedce-159">変換後の文字列は、utf-8 形式に準拠するいると想定されます。</span><span class="sxs-lookup"><span data-stu-id="dedce-159">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="dedce-160">URL エンコードには、アルファベット、数字、および次の区切り文字を除くすべての文字コードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="dedce-160">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="dedce-161">`-` (マイナス記号)</span><span class="sxs-lookup"><span data-stu-id="dedce-161">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="dedce-162">`_` (アンダー スコア)</span><span class="sxs-lookup"><span data-stu-id="dedce-162">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="dedce-163">`.` (ピリオド)</span><span class="sxs-lookup"><span data-stu-id="dedce-163">`.` (period)</span></span>  
  
-   <span data-ttu-id="dedce-164">`!` (感嘆符)</span><span class="sxs-lookup"><span data-stu-id="dedce-164">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="dedce-165">`*` (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="dedce-165">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="dedce-166">`(` `)` (かっこと右かっこ)</span><span class="sxs-lookup"><span data-stu-id="dedce-166">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="dedce-167">文字、URL で送信されるテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`%3c`と`%3e`します。</span><span class="sxs-lookup"><span data-stu-id="dedce-167">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="dedce-168"><xref:System.Net.WebUtility.UrlDecode%2A>メソッドは、エンコードを反転させます。</span><span class="sxs-lookup"><span data-stu-id="dedce-168">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dedce-169">URL エンコードする <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-169">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="dedce-170">エンコードする <see cref="T:System.Byte" /> 配列の先頭からのオフセット (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-170">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dedce-171">
            <see cref="T:System.Byte" /> の配列からエンコードするバイト数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-171">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dedce-172">バイト配列を URL エンコードされたバイト配列に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-172">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dedce-173">エンコードされた <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dedce-173">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dedce-174">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dedce-174">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dedce-175">URL エンコードには、文字エン ティティの 16 進数のエスケープ シーケンスで構成されると、URL で許可されていない文字が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="dedce-175">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="dedce-176">変換後の文字列は、utf-8 形式に準拠するいると想定されます。</span><span class="sxs-lookup"><span data-stu-id="dedce-176">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="dedce-177">URL エンコードには、アルファベット、数字、および次の区切り文字を除くすべての文字コードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="dedce-177">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="dedce-178">`-` (マイナス記号)</span><span class="sxs-lookup"><span data-stu-id="dedce-178">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="dedce-179">`_` (アンダー スコア)</span><span class="sxs-lookup"><span data-stu-id="dedce-179">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="dedce-180">`.` (ピリオド)</span><span class="sxs-lookup"><span data-stu-id="dedce-180">`.` (period)</span></span>  
  
-   <span data-ttu-id="dedce-181">`!` (感嘆符)</span><span class="sxs-lookup"><span data-stu-id="dedce-181">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="dedce-182">`*` (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="dedce-182">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="dedce-183">`'` (一重引用符)</span><span class="sxs-lookup"><span data-stu-id="dedce-183">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="dedce-184">`(` `)` (かっこと右かっこ)</span><span class="sxs-lookup"><span data-stu-id="dedce-184">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="dedce-185">文字、URL で送信されるテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`%3c`と`%3e`します。</span><span class="sxs-lookup"><span data-stu-id="dedce-185">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="dedce-186"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A>メソッドは、エンコードを反転させます。</span><span class="sxs-lookup"><span data-stu-id="dedce-186">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>