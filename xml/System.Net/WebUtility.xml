<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="897921efe400b6b55c24d5ca77b0f8414c09c181" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51912785" /></Metadata><TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="531a9-101">Web 要求を処理する際、URL のエンコーディングおよびデコーディングのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="531a9-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-102"><xref:System.Web.HttpUtility>クラスには、エンコードとデコード HTML エンコード文字列で使用するためのユーティリティ メソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="531a9-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="531a9-103"><xref:System.Uri?displayProperty=nameWithType>クラスは、メソッドと同様の目的に使用できるプロパティも含まれます。</span><span class="sxs-lookup"><span data-stu-id="531a9-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="531a9-104">方法: 文字列に HTML エンコーディングを適用することで Web アプリケーションでのスクリプトによる攻略から保護します。</span><span class="sxs-lookup"><span data-stu-id="531a9-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="531a9-105">HTTP での転送用に HTML でエンコードされた文字列をデコードされた文字列に変換します。 </span><span class="sxs-lookup"><span data-stu-id="531a9-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="531a9-106">デコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-106">The string to decode.</span></span></param>
        <summary><span data-ttu-id="531a9-107">HTTP での転送用に HTML でエンコードされた文字列をデコードされた文字列に変換します。 </span><span class="sxs-lookup"><span data-stu-id="531a9-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="531a9-108">デコード後の文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-108">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-109">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="531a9-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="531a9-110">HTML エンコーディングは、HTML では使用できない文字エン ティティに変換します。HTML デコード、エンコードを反転します。</span><span class="sxs-lookup"><span data-stu-id="531a9-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="531a9-111">文字のテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`&lt;`と`&gt;`HTTP 伝送用です。</span><span class="sxs-lookup"><span data-stu-id="531a9-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="531a9-112">場合、`value`パラメーターが`null`、返されるのデコードされた文字列は`null`します。</span><span class="sxs-lookup"><span data-stu-id="531a9-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="531a9-113">場合、`value`パラメーターは空の文字列、返されるのデコードされた文字列が空の文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="531a9-114">デコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-114">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="531a9-115">出力の <see cref="T:System.IO.TextWriter" /> ストリーム。</span><span class="sxs-lookup"><span data-stu-id="531a9-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="531a9-116">HTML エンコードされた文字列をデコードされた文字列に変換し、デコードされた文字列を <see cref="T:System.IO.TextWriter" /> 出力ストリームに送信します。</span><span class="sxs-lookup"><span data-stu-id="531a9-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-117">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="531a9-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="531a9-118">HTML エンコーディングは、HTML では使用できない文字エン ティティに変換します。HTML デコード、エンコードを反転します。</span><span class="sxs-lookup"><span data-stu-id="531a9-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="531a9-119">文字のテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`&lt;`と`&gt;`HTTP 伝送用です。</span><span class="sxs-lookup"><span data-stu-id="531a9-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="531a9-120"><paramref name="output" /> パラメーターが <see langword="null" /> でない場合、<paramref name="value" /> パラメーターは <see langword="null" /> にできません。</span><span class="sxs-lookup"><span data-stu-id="531a9-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="531a9-121">文字列を HTML エンコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="531a9-121">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="531a9-122">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-122">The string to encode.</span></span></param>
        <summary><span data-ttu-id="531a9-123">文字列を HTML エンコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="531a9-123">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="531a9-124">エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-124">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-125">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="531a9-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="531a9-126">HTML エンコーディングは、HTML では使用できない文字エン ティティに変換します。HTML デコード、エンコードを反転します。</span><span class="sxs-lookup"><span data-stu-id="531a9-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="531a9-127">文字のテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`&lt;`と`&gt;`HTTP 伝送用です。</span><span class="sxs-lookup"><span data-stu-id="531a9-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="531a9-128">場合、`value`パラメーターが`null`、返される、エンコードされた文字列は`null`します。</span><span class="sxs-lookup"><span data-stu-id="531a9-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="531a9-129">場合、`value`パラメーターは空の文字列、返される、エンコードされた文字列が空の文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="531a9-130">方法: 文字列に HTML エンコーディングを適用することで Web アプリケーションでのスクリプトによる攻略から保護します。</span><span class="sxs-lookup"><span data-stu-id="531a9-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="531a9-131">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-131">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="531a9-132"><see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="531a9-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="531a9-133">文字列を HTML エンコードされた文字列に変換し、出力の <see cref="T:System.IO.TextWriter" /> ストリームとして出力を返します。</span><span class="sxs-lookup"><span data-stu-id="531a9-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-134">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="531a9-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="531a9-135">HTML エンコーディングは、HTML では使用できない文字エン ティティに変換します。HTML デコード、エンコードを反転します。</span><span class="sxs-lookup"><span data-stu-id="531a9-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="531a9-136">文字のテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`&lt;`と`&gt;`HTTP 伝送用です。</span><span class="sxs-lookup"><span data-stu-id="531a9-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="531a9-137"><paramref name="output" /> パラメーターが <see langword="null" /> でない場合、<paramref name="value" /> パラメーターは <see langword="null" /> にできません。</span><span class="sxs-lookup"><span data-stu-id="531a9-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="531a9-138">方法: 文字列に HTML エンコーディングを適用することで Web アプリケーションでのスクリプトによる攻略から保護します。</span><span class="sxs-lookup"><span data-stu-id="531a9-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="531a9-139">デコード対象となる URL エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-139">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="531a9-140">URL での転送用にエンコードされた文字列をデコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="531a9-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="531a9-141">デコード後の文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-141">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-142">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="531a9-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="531a9-143">URL エンコードには、等価の 16 進数のエスケープ シーケンスに、URL で許可されていない文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="531a9-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="531a9-144"><xref:System.Net.WebUtility.UrlEncode%2A>メソッドは、URL でエンコードされた文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="531a9-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="531a9-145">URL デコードすると、対応する ASCII 文字の値を 16 進数のエスケープ シーケンスが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="531a9-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="531a9-146">たとえば、URL でエンコードされたテキストのブロックに埋め込まれているときに、エスケープ シーケンス`%3c`と`%3e`文字には、デコード`<`と`>`します。</span><span class="sxs-lookup"><span data-stu-id="531a9-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="531a9-147">デコード対象となる URL エンコードされた <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="531a9-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="531a9-148">デコードする <see cref="T:System.Byte" /> 配列の先頭からのオフセット (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="531a9-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="531a9-149"><see cref="T:System.Byte" /> の配列からデコードするバイト数です。</span><span class="sxs-lookup"><span data-stu-id="531a9-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="531a9-150">URL 内で伝送する目的でエンコードされたバイト配列を、デコードされたバイト配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="531a9-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="531a9-151">デコードされた <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="531a9-151">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-152">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="531a9-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="531a9-153">URL エンコードには、等価の 16 進数のエスケープ シーケンスに、URL で許可されていない文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="531a9-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="531a9-154"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A>メソッドは、URL でエンコードされたバイト配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="531a9-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="531a9-155">URL デコードすると、対応する ASCII 文字の値を 16 進数のエスケープ シーケンスが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="531a9-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="531a9-156">たとえば、URL でエンコードされたテキストのブロックに埋め込まれているときに、エスケープ シーケンス`%3c`と`%3e`文字には、デコード`<`と`>`します。</span><span class="sxs-lookup"><span data-stu-id="531a9-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="531a9-157">URL エンコードするテキスト。</span><span class="sxs-lookup"><span data-stu-id="531a9-157">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="531a9-158">テキスト文字列を URL エンコードされた文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="531a9-158">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="531a9-159">URL エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="531a9-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-160">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="531a9-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="531a9-161">URL エンコードには、文字エン ティティの 16 進数のエスケープ シーケンスで構成されると、URL で許可されていない文字が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="531a9-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="531a9-162">変換後の文字列は、utf-8 形式に準拠するいると想定されます。</span><span class="sxs-lookup"><span data-stu-id="531a9-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="531a9-163">URL エンコードには、アルファベット、数字、および次の区切り文字を除くすべての文字コードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="531a9-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="531a9-164">`-` (マイナス記号)</span><span class="sxs-lookup"><span data-stu-id="531a9-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="531a9-165">`_` (アンダー スコア)</span><span class="sxs-lookup"><span data-stu-id="531a9-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="531a9-166">`.` (ピリオド)</span><span class="sxs-lookup"><span data-stu-id="531a9-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="531a9-167">`!` (感嘆符)</span><span class="sxs-lookup"><span data-stu-id="531a9-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="531a9-168">`*` (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="531a9-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="531a9-169">`(` `)` (かっこと右かっこ)</span><span class="sxs-lookup"><span data-stu-id="531a9-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="531a9-170">文字、URL で送信されるテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`%3c`と`%3e`します。</span><span class="sxs-lookup"><span data-stu-id="531a9-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="531a9-171"><xref:System.Net.WebUtility.UrlDecode%2A>メソッドは、エンコードを反転させます。</span><span class="sxs-lookup"><span data-stu-id="531a9-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="531a9-172">URL エンコードする <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="531a9-172">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="531a9-173">エンコードする <see cref="T:System.Byte" /> 配列の先頭からのオフセット (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="531a9-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="531a9-174"><see cref="T:System.Byte" /> の配列からエンコードするバイト数です。</span><span class="sxs-lookup"><span data-stu-id="531a9-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="531a9-175">バイト配列を URL エンコードされたバイト配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="531a9-175">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="531a9-176">エンコードされた <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="531a9-176">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a9-177">HTTP ストリームで空白および句読点などの文字が渡された場合、受信側で誤って解釈される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="531a9-177">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="531a9-178">URL エンコードには、文字エン ティティの 16 進数のエスケープ シーケンスで構成されると、URL で許可されていない文字が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="531a9-178">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="531a9-179">変換後の文字列は、utf-8 形式に準拠するいると想定されます。</span><span class="sxs-lookup"><span data-stu-id="531a9-179">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="531a9-180">URL エンコードには、アルファベット、数字、および次の区切り文字を除くすべての文字コードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="531a9-180">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="531a9-181">`-` (マイナス記号)</span><span class="sxs-lookup"><span data-stu-id="531a9-181">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="531a9-182">`_` (アンダー スコア)</span><span class="sxs-lookup"><span data-stu-id="531a9-182">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="531a9-183">`.` (ピリオド)</span><span class="sxs-lookup"><span data-stu-id="531a9-183">`.` (period)</span></span>  
  
-   <span data-ttu-id="531a9-184">`!` (感嘆符)</span><span class="sxs-lookup"><span data-stu-id="531a9-184">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="531a9-185">`*` (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="531a9-185">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="531a9-186">`'` (一重引用符)</span><span class="sxs-lookup"><span data-stu-id="531a9-186">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="531a9-187">`(` `)` (かっこと右かっこ)</span><span class="sxs-lookup"><span data-stu-id="531a9-187">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="531a9-188">文字、URL で送信されるテキストのブロックに埋め込まれている場合など、`<`と`>`としてエンコードされます`%3c`と`%3e`します。</span><span class="sxs-lookup"><span data-stu-id="531a9-188">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="531a9-189"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A>メソッドは、エンコードを反転させます。</span><span class="sxs-lookup"><span data-stu-id="531a9-189">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>