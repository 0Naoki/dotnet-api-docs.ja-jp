<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListener.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d338e721b028cce5bc0cb16416723f530a1ed165.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d338e721b028cce5bc0cb16416723f530a1ed165</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>Provides a simple, programmatically controlled HTTP protocol listener.</source>
          <target state="translated">単純で、プログラムによって制御できる HTTP プロトコル リスナーを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>クラス、HTTP 要求に応答する単純な HTTP プロトコル リスナーを作成することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The listener is active for the lifetime of the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object and runs within your application with its permissions.</source>
          <target state="translated">有効期間は、リスナーはアクティブ、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクトとそのアクセス許可を使用してアプリケーション内で実行されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To use <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, create a new instance of the class using the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> constructor and use the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph> should process.</source>
          <target state="translated">使用する<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>を使用して、クラスの新しいインスタンスを作成、<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>コンス トラクターと使用、<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>プロパティ (Uniform Resource Identifier) プレフィックスを指定する文字列を保持するコレクションにアクセスするために、<ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph>処理する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</source>
          <target state="translated">URI のプレフィックス文字列は、スキーム (http または https)、ホスト、任意のポート、および省略可能なパスで構成されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An example of a complete prefix string is <bpt id="p1">*</bpt><ph id="ph1">http://www.contoso.com:8080/customerData/</ph><ept id="p1">*</ept>.</source>
          <target state="translated">完全なプレフィックス文字列の例は<bpt id="p1">*</bpt> <ph id="ph1">http://www.contoso.com:8080/customerData/</ph><ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Prefixes must end in a forward slash ("/").</source>
          <target state="translated">プレフィックスは、スラッシュ (「/」) で終了する必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object with the prefix that most closely matches a requested URI responds to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>要求 URI に最も一致するプレフィックスを持つオブジェクトが要求に応答します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Multiple <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objects cannot add the same prefix; a <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exception is thrown if a <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> adds a prefix that is already in use.</source>
          <target state="translated">複数<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクトが同一のプレフィックスを追加できません;<ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>例外がスローされます、<ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph>で使用されるプレフィックスは既にを追加します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>When a port is specified, the host element can be replaced with "<ph id="ph1">\*</ph>" to indicate that the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> accepts requests sent to the port if the requested URI does not match any other prefix.</source>
          <target state="translated">ホストの要素を置き換えることが、ポートを指定すると、"<ph id="ph1">\*</ph>"ことを示す、<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>要求された URI が他のプレフィックスと一致しない場合、ポートに送信された要求を受け入れます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the prefix is <bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>:8080/<ept id="p1">*</ept>.</source>
          <target state="translated">たとえば、すべての要求を受信するポート 8080 が要求された URI がいずれかで処理されないときに送信<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>、プレフィックスは<bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>: 8080/<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, to specify that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> accepts all requests sent to a port, replace the host element with the "+" character.</source>
          <target state="translated">同様に、ことを指定する、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>ポートに送信されたすべての要求を受け付ける「+」文字で、ホストの要素を置き換えます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</source>
          <target state="translated">For example, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The "<ph id="ph1">\*</ph>" and "+" characters can be present in prefixes that include paths.</source>
          <target state="translated">"<ph id="ph1">\*</ph>"と「+」文字のパスを含むプレフィックスに使用できます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">.NET Core 2.0 または Windows 10 での .NET Framework 4.6 から始めてで管理されている URI プレフィックスでサブドメインをワイルドカードはサポートされて、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To specify a wildcard subdomain, use the "<ph id="ph1">\*</ph>" character as part of the hostname in a URI prefix.</source>
          <target state="translated">ワイルドカードのサブドメインを指定する、"<ph id="ph1">\*</ph>"URI プレフィックスのホスト名の一部として文字です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>.</source>
          <target state="translated">たとえば、 <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Pass this as the argument to the <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">引数として渡す、<ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>.</source>
          <target state="translated">.NET Core 2.0 または Windows 10 以外の .NET Framework 4.6 の時点でこの動作します。以前のバージョンが生成されます、<ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>:8080/<ept id="p1">*</ept> and <bpt id="p2">*</bpt><ph id="ph2">http://+:8080</ph><ept id="p2">*</ept>) should <bpt id="p3">**</bpt>not<ept id="p3">**</ept> be used.</source>
          <target state="translated">最上位のワイルドカードのバインディング (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>: 8080/<ept id="p1">*</ept>と<bpt id="p2">*</bpt> <ph id="ph2">http://+:8080</ph> <ept id="p2">*</ept>) する必要があります<bpt id="p3">**</bpt>いない<ept id="p3">**</ept>使用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings can open up your app to security vulnerabilities.</source>
          <target state="translated">最上位のワイルドカードのバインドは、セキュリティの脆弱性に対してアプリを切り開くことができます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This applies to both strong and weak wildcards.</source>
          <target state="translated">これは、強力と脆弱の両方のワイルドカードに適用されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use explicit host names rather than wildcards.</source>
          <target state="translated">ワイルドカードではなく、明示的なホスト名を使用します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Subdomain wildcard binding (for example, <ph id="ph1">`*.mysub.com`</ph>) doesn't have this security risk if you control the entire parent domain (as opposed to <ph id="ph2">`*.com`</ph>, which is vulnerable).</source>
          <target state="translated">全体の親ドメインを制御する場合、サブドメイン ワイルドカード バインド (たとえば、<ph id="ph1">`*.mysub.com`</ph>) にこのセキュリティ リスクはありません (脆弱である <ph id="ph2">`*.com`</ph> とは対照的)。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>rfc7230 section-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept> for more information.</source>
          <target state="translated">詳細については、<bpt id="p1">[</bpt>rfc7230 セクション-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept> を参照してください。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To begin listening for requests from clients, add the URI prefixes to the collection and call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">クライアントからの要求のリッスンを開始するには、呼び出し、コレクションに URI プレフィックスを追加、<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> offers both synchronous and asynchronous models for processing client requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> クライアント要求を処理するための同期および非同期の両方のモデルを提供します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Requests and their associated responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method or its asynchronous counterparts, the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods.</source>
          <target state="translated">要求とその関連付けられた応答を使用してアクセス、<ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph>によって返されるオブジェクト、<ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>メソッドまたは対応する非同期、<ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>と<ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</source>
          <target state="translated">同期のモデルは、一度に 1 つの要求を処理する場合と、クライアントの要求の待機中に、アプリケーションをブロックする場合に適しています。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the synchronous model, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method, which waits for a client to send a request.</source>
          <target state="translated">同期モデルを使用して、呼び出し、<ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>メソッドで、クライアントが要求を送信するを待機します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The method returns an <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object to you for processing when one occurs.</source>
          <target state="translated">このメソッドを返します、<ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph>が発生するときに 1 つを処理するオブジェクトします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</source>
          <target state="translated">モデルより複雑な非同期、独自の実行スレッドで処理が要求や各要求の待機中に、アプリはブロックされません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify an application-defined method to be called for each incoming request.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>受信要求ごとに呼び出されるアプリケーション定義のメソッドを指定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Within that method, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method to obtain the request, process it, and respond.</source>
          <target state="translated">そのメソッドの呼び出し、<ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>要求を取得する、処理、および対応するメソッド。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In either model, incoming requests are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objects.</source>
          <target state="translated">どちらのモデルでは、受信要求を使用してアクセス、<ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph>によって表されるプロパティであり、<ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> objects.</source>
          <target state="translated">同様に、応答を使用してアクセス、<ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph>によって表されるプロパティであり、<ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>These objects share some functionality with the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph> objects, but the latter objects cannot be used in conjunction with <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> because they implement client, not server, behaviors.</source>
          <target state="translated">これらのオブジェクトの一部の機能を共有する、<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>と<ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph>オブジェクトではなく、後者のオブジェクトを組み合わせて使用することはできません<ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph>クライアント、ありませんサーバー、動作を実装しているためです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> can require client authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>クライアント認証を要求できます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</source>
          <target state="translated">、認証を使用する特定の方式は、いずれかを指定するか、使用するスキームを決定するデリゲートを指定できます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You must require some form of authentication to obtain information about the client's identity.</source>
          <target state="translated">クライアントの id に関する情報を取得する認証の何らかの形式を要求する必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> properties.</source>
          <target state="translated">詳細については、次を参照してください。、 <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you create an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> using https, you must select a Server Certificate for that listener.</source>
          <target state="translated">作成する場合、 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> https を使用する必要がありますサーバー証明書を選択そのリスナーです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>このクエリ<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>は接続の予期しない終了で失敗します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</source>
          <target state="translated">ネットワーク シェル (netsh.exe) を使用して、サーバー証明書とその他のリスナー オプションを構成できます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>Network Shell (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept> for more details.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt>ネットワーク シェル (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept>詳細についてはします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The executable began shipping with Windows Server 2008 and Windows Vista.</source>
          <target state="translated">実行可能ファイルは、Windows Server 2008 および Windows Vista での配布を開始しました。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you specify multiple authentication schemes for the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the listener will challenge clients in the following order: <ph id="ph2">`Negotiate`</ph>, <ph id="ph3">`NTLM`</ph>, <ph id="ph4">`Digest`</ph>, and then <ph id="ph5">`Basic`</ph>.</source>
          <target state="translated">複数の認証スキームを指定する場合、 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>、リスナーは、次の順序でクライアントをチャレンジ: <ph id="ph2">`Negotiate`</ph>、 <ph id="ph3">`NTLM`</ph>、 <ph id="ph4">`Digest`</ph>、し<ph id="ph5">`Basic`</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Before using the instance returned by this constructor, you must invoke its <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">このコンス トラクターによって返されるインスタンスを使用する前に呼び出す必要があります、<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>を新規作成するコンス トラクター<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For the complete example, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class topic.</source>
          <target state="translated">完全な例については、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>クラスに関するトピック。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>This class cannot be used on the current operating system.</source>
          <target state="translated">このクラスは、現在のオペレーティング システムでは使用できません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</source>
          <target state="translated">このクラスのインスタンスを使用するには、Windows Server 2003 または Windows XP SP2 以降が必要です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Note: This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">注: このメンバーは、アプリケーションでネットワーク トレースを有効にする場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Abort">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object immediately, discarding all currently queued requests.</source>
          <target state="translated">すぐに <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> オブジェクトをシャットダウンし、現在キューに置かれているすべての要求を破棄します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This method disposes of all resources held by this listener.</source>
          <target state="translated">このメソッドは、このリスナーで保持されているすべてのリソースを破棄します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">保留中の要求が完了することができます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>After calling this method, you will receive an <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> if you attempt to use this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出した後に表示されます、<ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph>これを使用しようとすると<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">次のコード例では、このメソッドを呼び出すことを示します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>Gets or sets the scheme used to authenticate clients.</source>
          <target state="translated">クライアントの認証に使用する方式を取得または設定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> enumeration values that indicates how clients are to be authenticated.</source>
          <target state="translated">クライアントの認証方法を示す <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> 列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> uses the specified scheme to authenticate all incoming requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>指定されたスキームを使用してすべての着信要求を認証します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming client request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticates the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>場合にのみ、メソッドは、受信クライアント要求を返す、<ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph>が正常に要求を認証します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>You can interrogate the identity of a successfully authenticated client by using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">使用して正常に認証されたクライアントの id を問い合わせることができます、<ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>If you want an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph> property), you must implement a method that chooses the authentication scheme.</source>
          <target state="translated">場合は、 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 、受け取った要求の特性に基づいて、異なる認証メカニズムを使用するオブジェクト (たとえば、要求の<ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph>プロパティ)、認証スキームを選択するメソッドを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>For instructions about how to do this, see the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property documentation.</source>
          <target state="translated">これを行う方法については、次を参照してください。、<ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph>プロパティの説明。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">ダイジェストを有効にするには、このプロパティを設定するには、NTLM、またはネゴシエートが必要です、 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>、<ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property to specify an authentication scheme.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>プロパティの認証方式を指定します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトは閉じられました。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>Gets or sets the delegate called to determine the protocol used to authenticate clients.</source>
          <target state="translated">クライアントの認証に使用するプロトコルを確認するために呼び出されるデリゲートを取得または設定します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> delegate that invokes the method used to select an authentication protocol.</source>
          <target state="translated">認証プロトコルの選択に使用されるメソッドを呼び出す <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If you want the same authentication protocol to be used for all requests handled by a particular instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, you do not need to set this property.</source>
          <target state="translated">場合は、同じ認証プロトコルの特定のインスタンスによって処理されるすべての要求に使用する<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>、このプロパティを設定する必要はありません。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To specify a protocol to be used for all client requests, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property.</source>
          <target state="translated">すべてのクライアント要求に使用するプロトコルを指定するには、<ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If the client has not specified authentication information in its headers, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</source>
          <target state="translated">クライアントがそのヘッダー内に認証情報が指定されていない場合、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>を決定する、存在する場合、プロトコル、クライアントの認証を使用して認証されていない受信要求ごとに指定されたデリゲートを呼び出します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticated the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>メソッドが、着信要求場合にのみを返す、<ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph>要求を正常に認証します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If a request cannot be authenticated, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> automatically sends back a 401 response.</source>
          <target state="translated">要求を認証できない場合、 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 401 応答を送信が自動的にバックアップします。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>You can get the identity of a successfully authenticated client using the <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">使用して正常に認証されたクライアントの id を取得することができます、<ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph> property).</source>
          <target state="translated">アプリケーション固有のメソッドに認証プロトコルの選択を委任することのインスタンスを作成する場合に役立ちます。 <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 、受け取った要求の特性に応じて、別の認証プロトコルを使用して (たとえば、要求の<ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph>プロパティ)。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">ダイジェストを有効にするには、このプロパティを設定するには、NTLM、またはネゴシエートが必要です、 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>、<ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">次のコード例では、このプロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example provides an implementation of a method invoked by an <ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> delegate.</source>
          <target state="translated">次のコード例は、によって呼び出されるメソッドの実装を提供する<ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトは閉じられました。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when a client request is available.</source>
          <target state="translated">クライアント要求が使用可能なときに呼び出すメソッドを参照する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">操作に関する情報を格納するユーザー定義のオブジェクト。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">このオブジェクトは、操作の完了時に<bpt id="p1">&lt;c&gt;</bpt>コールバック<ept id="p1">&lt;/c&gt;</ept> デリゲートに渡されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Begins asynchronously retrieving an incoming request.</source>
          <target state="translated">受信要求の非同期の取得を開始します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">非同期操作のステータスを示す <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method begins an asynchronous (non-blocking) call to receive incoming client requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>メソッドは、受信クライアント要求を受信する非同期 (非ブロッキング) 呼び出しを開始します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">このメソッドを呼び出す前に呼び出す必要があります、<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>メソッドのために、URI 文字列を追加することでリッスンするには、少なくとも 1 つの (Uniform Resource Identifier) プレフィックスを追加し、<ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>によって返される、<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The asynchronous operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">呼び出して、非同期操作を完了する必要があります、<ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">通常、このメソッドはによって、<ph id="ph1">`callback`</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するにはブロックされません。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>To get an incoming request and block until the operation completes, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method.</source>
          <target state="translated">操作が完了するまでに、入力方向の要求とブロックを取得する、<ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">詳細については、非同期プログラミング モデルを使用して、次を参照してください<bpt id="p1">[</bpt>同期のメソッドを非同期に呼び出す。<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify a callback method that will handle incoming client requests.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>着信クライアント要求を処理するコールバック メソッドを指定します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example implements a callback method.</source>
          <target state="translated">次のコード例では、コールバック メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 関数呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">例外の <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> プロパティを調べて、例外の原因を確認します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">このオブジェクトが開始されていないか、現在停止されています。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is closed.</source>
          <target state="translated">オブジェクトが閉じています。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Close">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> をシャットダウンします。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>After calling this method, you can no longer use the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">このメソッドを呼び出した後、使用できなくなります、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>To temporarily pause an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method.</source>
          <target state="translated">一時的に停止する<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクトを使用して、<ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This method shut downs the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object without processing queued requests.</source>
          <target state="translated">このメソッドがシャット ダウン、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>キューに置かれた要求を処理することがなくオブジェクト。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">保留中の要求が完了することができます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">次のコード例では、このメソッドを呼び出すことを示します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</source>
          <target state="translated">登録済みプレフィックスによって決定される既定のサービス プロバイダー名 (SPN: Service Provider Name) の一覧を取得します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph> that contains a list of SPNs.</source>
          <target state="translated">SPN の一覧を格納している <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph>プロパティは拡張保護を提供する統合 Windows 認証で使用します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The list of SPNs is initialized from the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property when accessed and cleared when new prefixes are added to the <ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Spn のリストが初期化される、<ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>プロパティ アクセスし、する新しいプレフィックスが追加されると、クリア、<ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used if an application doesn't set the <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph> property on its extended protection policy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph>プロパティには、アプリケーションが設定されていない場合、使用、<ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph>拡張保護ポリシーのプロパティです。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> that is retrieved with the <ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is built from the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph>で取得した、<ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph>からプロパティを構築、<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>次の規則に従ってプロパティ。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "<ph id="ph1">\*</ph>" but restricted to a specific local interface), the following SPN is added:</source>
          <target state="translated">場合は、ホスト名が「+」、"*"、または IPv4 または IPv6 リテラル (に相当"<ph id="ph1">\*</ph>"特定のローカル インターフェイスには制限付き)、次の SPN が追加されます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name of the computer.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> さらに、コンピューターの完全修飾ドメイン名。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>).</source>
          <target state="translated">DNS を使用して、完全修飾ドメイン名を解決しようとは、ホスト名にドット (ドメインまたはサブドメイン) が含まれていない場合 (によって使用される動作は同じ<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the fully-qualified domain name can be resolved, the following SPNs are added:</source>
          <target state="translated">完全修飾ドメイン名を解決できる場合は、次のような Spn が追加されます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname (the short name).</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> さらに、ホスト名 (短い名前)。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name for the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> さらに、ホスト名の完全修飾ドメイン名。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</source>
          <target state="translated">ホスト名には (ドメインまたはサブドメイン) をドットが含まれています、完全修飾ドメイン名を解決できない場合は、以下の SPN が追加されます。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> さらに、ホスト名。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains dots (domains or subdomains), the following SPN is added:</source>
          <target state="translated">ホスト名にドット (ドメインまたはサブドメイン) が含まれている場合は、以下の SPN が追加されます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> さらに、ホスト名。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph>プロパティは、カスタム リストが指定されていない場合、認証に使用される既定の Spn の一覧を確認するアプリケーションで使用できます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If other SPNs are needed, an application can add them using one of the <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph> methods.</source>
          <target state="translated">アプリケーションがのいずれかでを追加できる他の Spn が必要な場合は、<ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</source>
          <target state="translated">拡張保護を使用してこれを偽装することができますので、要求された URL に基づくポリシー意思決定を行うときに、安全ではありません。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Rather, applications should rely on the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> properties to make such policy decisions.</source>
          <target state="translated">代わりに、アプリケーションが依存して、<ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph>このようなポリシーを決定するプロパティです。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that was obtained when the asynchronous operation was started.</source>
          <target state="translated">非同期操作の開始時に取得した <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Completes an asynchronous operation to retrieve an incoming client request.</source>
          <target state="translated">受信クライアント要求を取得する非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents the client request.</source>
          <target state="translated">クライアント要求を表す <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object that contains an incoming client request and its associated response.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>メソッドは、通常を取得する、デリゲートによって呼び出されてアプリケーション定義のコールバック メソッド内で、<ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph>受信クライアント要求とその関連する応答を含むオブジェクト。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This method completes an operation previously started by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、以前の呼び出しによって開始された操作を完了すると、<ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">操作が完了していない場合、このメソッドはそれまでブロックします。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method requires the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object, this object is typically passed into a callback method by using the state object passed into the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">呼び出すため、<ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>メソッドが必要な<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクトをこのオブジェクトは、通常に渡されたでコールバック メソッドに渡される状態オブジェクトを使用して、<ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>You can obtain this state object by using the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">`asyncResult`</ph> object.</source>
          <target state="translated">使用してこの状態オブジェクトを取得することができます、<ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph>のプロパティ、<ph id="ph2">`asyncResult`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">詳細については、非同期プログラミング モデルを使用して、次を参照してください<bpt id="p1">[</bpt>同期のメソッドを非同期に呼び出す。<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The following code example shows the implementation of a callback method that calls the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例が呼び出すコールバック メソッドの実装を示しています、<ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not obtained by calling the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> を <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph> メソッドの呼び出しで取得できませんでした。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> method was already called for the specified <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> メソッドは、既に指定された <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> オブジェクトに対して呼び出されています。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This object is closed.</source>
          <target state="translated">オブジェクトが閉じています。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>Get or set the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for extended protection for a session.</source>
          <target state="translated">セッションの拡張保護に使用する <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated">拡張保護に使用するポリシーを指定する <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph>プロパティは拡張保護を提供する統合 Windows 認証で使用します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph>プロパティでは、全体の拡張保護ポリシーの構成<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>セッションです。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy for each individual request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph>プロパティが個々 の要求の拡張保護ポリシーの構成を使用します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> プロパティは <ph id="ph2">`null`</ph> である必要があります。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>インスタンスが 1 つを使用する必要がある場合に、独自の TLS セッションから直接、チャネル バインディング トークン (CBT) を取得します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property was not <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> プロパティを設定しようとしましたが、<ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> プロパティは <ph id="ph3">&lt;see langword="null" /&gt;</ph> ではありませんでした。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> プロパティを <ph id="ph2">&lt;see langword="null" /&gt;</ph> に設定しようとしました。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> メソッドを呼び出した後で <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> プロパティを設定しようとしました。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>This object is closed.</source>
          <target state="translated">オブジェクトが閉じています。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> property was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> プロパティが、拡張保護をサポートしていないプラットフォーム上で <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> に設定されました。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>Get or set the delegate called to determine the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for each request.</source>
          <target state="translated">各要求に使用する <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> を決定するために呼び出すデリゲートを取得または設定します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated">拡張保護に使用するポリシーを指定する <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph>プロパティは拡張保護を提供する統合 Windows 認証で使用します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph>プロパティでは、全体の拡張保護ポリシーの構成<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>セッションです。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy per individual request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph>プロパティが個々 の要求ごとに、拡張保護ポリシーの構成を使用します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> プロパティは <ph id="ph2">`null`</ph> である必要があります。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>インスタンスが 1 つを使用する必要がある場合に、独自の TLS セッションから直接、チャネル バインディング トークン (CBT) を取得します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>For each request, the delegate can choose the settings that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance will use to provide extended protection.</source>
          <target state="translated">要求ごとに、デリゲートを選択できます、設定を<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>インスタンスを使用して拡張保護を提供します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>If a delegate returns <ph id="ph1">`null`</ph> for this property, this represents a <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> which the <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">デリゲートを返す場合<ph id="ph1">`null`</ph>このプロパティは、これを表します、<ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph>を<ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph>プロパティに設定<ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property must be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> プロパティを設定しようとしましたが、<ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="null" /&gt;</ph> である必要があります。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> プロパティを <ph id="ph2">&lt;see langword="null" /&gt;</ph> に設定しようとしました。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> メソッドを呼び出した後で <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> プロパティを設定しようとしました。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>This object is closed.</source>
          <target state="translated">オブジェクトが閉じています。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property on a platform that does not support extended protection.</source>
          <target state="translated">拡張保護をサポートしていないプラットフォームで <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> プロパティを設定しようとしました。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Waits for an incoming request and returns when one is received.</source>
          <target state="translated">受信要求を待機し、受信するとその要求を返します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">クライアント要求を表す <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">このメソッドを呼び出す前に呼び出す必要があります、<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>メソッドのために、URI 文字列を追加することでリッスンするには、少なくとも 1 つの URI プレフィックスを追加し、<ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>によって返される、<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">プレフィックスの詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This method blocks while waiting for an incoming request.</source>
          <target state="translated">このメソッドは、受信要求の待機中にブロックしています。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">アプリケーションがブロックされないように、非同期的に (別のスレッド) で処理される着信要求を実行する場合に、使用、<ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">次のコード例では、このメソッドを呼び出すことを示します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 関数呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">例外の <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> プロパティを調べて、例外の原因を確認します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">このオブジェクトが開始されていないか、現在停止されています。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> に、応答対象の URI (Uniform Resource Identifier) がありません。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object is closed.</source>
          <target state="translated">オブジェクトが閉じています。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Waits for an incoming request as an asynchronous operation.</source>
          <target state="translated">非同期操作として受信要求を待ちます。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns an <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">タスク オブジェクトの <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> プロパティは、クライアント要求を表す <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the incoming request has been received.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>オブジェクトは、入力方向の要求を受け取ったときに完了します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">このメソッドを呼び出す前に呼び出す必要があります、<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>メソッドのために、URI 文字列を追加することでリッスンするには、少なくとも 1 つの URI プレフィックスを追加し、<ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>によって返される、<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">プレフィックスの詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether your application receives exceptions that occur when an <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> sends the response to the client.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> がクライアントに応答を送信したときに発生する例外をアプリケーションで受信するかどうかを指定する <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> should not return exceptions that occur when sending the response to the client; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> が、クライアントに応答を送信したときに発生する例外を返さない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Set this property to <ph id="ph1">`true`</ph> if your application does not require that a response is successfully sent to each client.</source>
          <target state="translated">このプロパティを設定<ph id="ph1">`true`</ph>かどうか、アプリケーションに必要ありません、応答が各クライアントに正常に送信されることです。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">次のコード例では、このプロパティの設定を示しています。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトは閉じられました。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsListening">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> has been started.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> が開始されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> was started; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> が開始されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>To start an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">開始する、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>を呼び出し、<ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>The following code example demonstrates using this property to determine the listening state of an instance.</source>
          <target state="translated">次のコード例では、このプロパティを使用して、インスタンスの待機状態を確認するを示します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsSupported">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> can be used with the current operating system.</source>
          <target state="translated">現在のオペレーティング システムで <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> を使用できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> is supported; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> がサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</source>
          <target state="translated">このクラスは、Windows XP SP2 または Windows Server 2003 オペレーティング システムを実行しているコンピューターでのみ使用できます。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph> property to detect whether an <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object can be used with the current operating system.</source>
          <target state="translated">使用を次のコード例に示します、<ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph>プロパティを検出するかどうか、<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクトは、現在のオペレーティング システムで使用できます。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>Gets the Uniform Resource Identifier (URI) prefixes handled by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> オブジェクトによって処理される URI (Uniform Resource Identifier) プレフィックスを取得します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> that contains the URI prefixes that this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object is configured to handle.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> オブジェクトで処理するように構成されている URI プレフィックスが格納された <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The prefixes are in canonical form.</source>
          <target state="translated">プレフィックスは、正規の形式です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">プレフィックスの詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to obtain and print the URI prefixes that are handled.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>プロパティを取得し、処理される URI プレフィックスを印刷します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトは閉じられました。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>Gets or sets the realm, or resource partition, associated with this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> オブジェクトに関連付けられているレルム (リソース パーティション) を取得または設定します。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that contains the name of the realm associated with the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> オブジェクトに関連付けられているレルムの名前が格納された <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</source>
          <target state="translated">サーバーでは、レルムを使用して; の保護されたリソースをパーティション分割各パーティションには、独自の認証方式と承認データベースを持つことができます。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Realms are used only for basic and digest authentication.</source>
          <target state="translated">レルムは、基本認証およびダイジェスト認証だけに使用されます。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>After a client successfully authenticates, the authentication is valid for all resources in a given realm.</source>
          <target state="translated">クライアントが正常に認証されると、その認証は特定のレルムのすべてのリソースに対して有効となります。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>For a detailed description of realms, see RFC 2617 at <bpt id="p1">[</bpt><ph id="ph1">http://www.ietf.org</ph><ept id="p1">](http://www.ietf.org)</ept>.</source>
          <target state="translated">レルムの詳細についてでの RFC 2617 を参照してください。 <bpt id="p1">[</bpt> <ph id="ph1">http://www.ietf.org</ph><ept id="p1">](http://www.ietf.org)</ept>です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>An instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> has only one associated realm.</source>
          <target state="translated">インスタンス<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>が関連付けられている領域の 1 つだけです。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>The following code example demonstrates setting the <ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例は、設定を示します、<ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトは閉じられました。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Allows this instance to receive incoming requests.</source>
          <target state="translated">このインスタンスが受信要求を受信できるようにします。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This method must be called before you call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">呼び出す前に、このメソッドを呼び出す必要があります、<ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>After you have started an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop it.</source>
          <target state="translated">起動した後、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクトを使用する、<ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph>メソッドを停止します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>If this listener instance uses https, you must install and select a Server Certificate.</source>
          <target state="translated">このリスナー インスタンスは、https を使用する場合をインストールして、サーバー証明書を選択する必要があります。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>このクエリ<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>は接続の予期しない終了で失敗します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>You can configure Server Certificates and other listener options by using HttpCfg.exe.</source>
          <target state="translated">HttpCfg.exe を使用して、サーバー証明書とその他のリスナー オプションを構成できます。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph><ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept> for more details.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph> <ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept>詳細についてはします。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to begin processing incoming requests.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>メソッドを受信した要求の処理を開始します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 関数呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">例外の <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> プロパティを調べて、例外の原因を確認します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>This object is closed.</source>
          <target state="translated">オブジェクトが閉じています。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>Causes this instance to stop receiving incoming requests.</source>
          <target state="translated">このインスタンスの受信要求の受信を停止します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">このインスタンスは既に停止されている場合は、このメソッドを呼び出しても効果はありません。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>After you have stopped an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to restart it.</source>
          <target state="translated">停止した後、<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>オブジェクトを使用する、<ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>再起動する方法です。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop processing incoming requests.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph>メソッドの受信要求の処理を停止します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトは閉じられました。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Releases the resources held by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> オブジェクトに保持されているリソースを解放します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Applications should use the <ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph> method instead of calling this method.</source>
          <target state="translated">アプリケーションを使用する必要があります、<ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph>代わりに、このメソッドを呼び出すメソッド。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> インスタンスのタイムアウト マネージャーです。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> インスタンスのタイムアウト マネージャーです。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager defines the connection timeout limits for this <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance.</source>
          <target state="translated">タイムアウト マネージャーは、この接続のタイムアウト制限を定義<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</source>
          <target state="translated">NTLM が使用されているときに、同じ TCP (Transmission Control Protocol) 接続を使用した別の要求を認証する必要があるかどうかを制御する <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> of the first request will be used for subsequent requests on the same connection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">最初の要求の <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> が同じ接続でなされる後続の要求に使用される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When this property is set to <ph id="ph1">`true`</ph> and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) of the initial request.</source>
          <target state="translated">このプロパティを設定すると<ph id="ph1">`true`</ph>NTLM を使用して特定の TCP 接続での最初の要求が認証されると、認証情報を使用して同じ TCP 接続の後続の要求が処理されます (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) 最初の要求。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This property has no effect when NTLM is not the authentication protocol.</source>
          <target state="translated">NTLM が認証プロトコルではない場合、このプロパティは無効です。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</source>
          <target state="translated">Negotiate 認証プロトコルとして指定すると、NTLM が認証に使用される実際のプロトコルである場合にのみ、このプロパティは、特殊効果を持ちます。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>While setting this property to <ph id="ph1">`true`</ph> increases performance because the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</source>
          <target state="translated">このプロパティを設定中に<ph id="ph1">`true`</ph>ためパフォーマンスが向上、<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>いない送信追加の NTLM 認証チャレンジには、認証情報を提供するすべての要求を必要としないでセキュリティ上のリスクがあります。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>You must determine whether the increase in performance is worth this risk.</source>
          <target state="translated">パフォーマンスの向上がリスクよりも重要であるかどうかを判断する必要があります。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">次のコード例では、このプロパティの設定を示しています。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトは閉じられました。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>